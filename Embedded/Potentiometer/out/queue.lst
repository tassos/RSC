ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"queue.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150303 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I config -I system -I core -I drivers -I FreeRTOS
  18              	@ -I FreeRTOS/include -I FreeRTOS/portable/GCC/ARM_CM3 -I FreeRTOS/portable
  19              	@ -I tasks/rc_task_leds -I tasks/rc_task_pot -I modules/rc_leds
  20              	@ -I modules/rc_pot -I drivers/rc_system -I drivers/rc_gpio
  21              	@ -I drivers/rc_uart -I drivers/rc_pinsel -I drivers/rc_timer
  22              	@ -I drivers/rc_adc -imultilib armv7-m
  23              	@ -iprefix c:\gnu tools arm embedded\4.9 2015q1\bin\../lib/gcc/arm-none-eabi/4.9.3/
  24              	@ -isysroot c:\gnu tools arm embedded\4.9 2015q1\bin\../arm-none-eabi
  25              	@ -MD out/queue.d -MF out/queue.d -MP -MQ out/queue.o -D__USES_INITFINI__
  26              	@ FreeRTOS/queue.c -mcpu=cortex-m3 -mthumb -auxbase-strip out/queue.o -g
  27              	@ -ggdb3 -O0 -Wall -Wstrict-prototypes -Wextra -std=gnu90
  28              	@ -ffunction-sections -fdata-sections -fverbose-asm
  29              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec -fcommon
  30              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  31              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  32              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  33              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  34              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  35              	@ -fleading-underscore -flifetime-dse -fmath-errno -fmerge-debug-strings
  36              	@ -fpeephole -fprefetch-loop-arrays -freg-struct-return
  37              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  38              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  39              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  40              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  42              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  43              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  47              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  48              	@ -mvectorize-with-neon-quad
  49              	
  50              		.text
  51              	.Ltext0:
  52              		.cfi_sections	.debug_frame
  53              		.comm	xQueueRegistry,80,4
  54              		.section	.text.xQueueGenericReset,"ax",%progbits
  55              		.align	2
  56              		.global	xQueueGenericReset
  57              		.thumb
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 2


  58              		.thumb_func
  59              		.type	xQueueGenericReset, %function
  60              	xQueueGenericReset:
  61              	.LFB1:
  62              		.file 1 "FreeRTOS/queue.c"
   1:FreeRTOS/queue.c **** /*
   2:FreeRTOS/queue.c ****     FreeRTOS V8.1.2 - Copyright (C) 2014 Real Time Engineers Ltd.
   3:FreeRTOS/queue.c ****     All rights reserved
   4:FreeRTOS/queue.c **** 
   5:FreeRTOS/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/queue.c **** 
   7:FreeRTOS/queue.c ****     ***************************************************************************
   8:FreeRTOS/queue.c ****      *                                                                       *
   9:FreeRTOS/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:FreeRTOS/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:FreeRTOS/queue.c ****      *    platform software that has become a de facto standard.             *
  12:FreeRTOS/queue.c ****      *                                                                       *
  13:FreeRTOS/queue.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:FreeRTOS/queue.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:FreeRTOS/queue.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:FreeRTOS/queue.c ****      *                                                                       *
  17:FreeRTOS/queue.c ****      *    Thank you!                                                         *
  18:FreeRTOS/queue.c ****      *                                                                       *
  19:FreeRTOS/queue.c ****     ***************************************************************************
  20:FreeRTOS/queue.c **** 
  21:FreeRTOS/queue.c ****     This file is part of the FreeRTOS distribution.
  22:FreeRTOS/queue.c **** 
  23:FreeRTOS/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:FreeRTOS/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:FreeRTOS/queue.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:FreeRTOS/queue.c **** 
  27:FreeRTOS/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  28:FreeRTOS/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  29:FreeRTOS/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  30:FreeRTOS/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  31:FreeRTOS/queue.c **** 
  32:FreeRTOS/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:FreeRTOS/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:FreeRTOS/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:FreeRTOS/queue.c ****     link: http://www.freertos.org/a00114.html
  36:FreeRTOS/queue.c **** 
  37:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  38:FreeRTOS/queue.c **** 
  39:FreeRTOS/queue.c ****     ***************************************************************************
  40:FreeRTOS/queue.c ****      *                                                                       *
  41:FreeRTOS/queue.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:FreeRTOS/queue.c ****      *    not run, what could be wrong?"                                     *
  43:FreeRTOS/queue.c ****      *                                                                       *
  44:FreeRTOS/queue.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:FreeRTOS/queue.c ****      *                                                                       *
  46:FreeRTOS/queue.c ****     ***************************************************************************
  47:FreeRTOS/queue.c **** 
  48:FreeRTOS/queue.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:FreeRTOS/queue.c ****     license and Real Time Engineers Ltd. contact details.
  50:FreeRTOS/queue.c **** 
  51:FreeRTOS/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:FreeRTOS/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 3


  53:FreeRTOS/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:FreeRTOS/queue.c **** 
  55:FreeRTOS/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:FreeRTOS/queue.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:FreeRTOS/queue.c ****     licenses offer ticketed support, indemnification and middleware.
  58:FreeRTOS/queue.c **** 
  59:FreeRTOS/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:FreeRTOS/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  61:FreeRTOS/queue.c ****     mission critical applications that require provable dependability.
  62:FreeRTOS/queue.c **** 
  63:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  64:FreeRTOS/queue.c **** */
  65:FreeRTOS/queue.c **** 
  66:FreeRTOS/queue.c **** #include <stdlib.h>
  67:FreeRTOS/queue.c **** #include <string.h>
  68:FreeRTOS/queue.c **** 
  69:FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  70:FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  71:FreeRTOS/queue.c **** task.h is included from an application file. */
  72:FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  73:FreeRTOS/queue.c **** 
  74:FreeRTOS/queue.c **** #include "FreeRTOS.h"
  75:FreeRTOS/queue.c **** #include "task.h"
  76:FreeRTOS/queue.c **** #include "queue.h"
  77:FreeRTOS/queue.c **** 
  78:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  79:FreeRTOS/queue.c **** 	#include "croutine.h"
  80:FreeRTOS/queue.c **** #endif
  81:FreeRTOS/queue.c **** 
  82:FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  83:FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  84:FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  85:FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
  86:FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  87:FreeRTOS/queue.c **** 
  88:FreeRTOS/queue.c **** 
  89:FreeRTOS/queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  90:FreeRTOS/queue.c **** #define queueUNLOCKED					( ( BaseT_t ) -1 )
  91:FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseT_t ) 0 )
  92:FreeRTOS/queue.c **** 
  93:FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  94:FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  95:FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  96:FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  97:FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  98:FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  99:FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
 100:FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
 101:FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
 102:FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
 103:FreeRTOS/queue.c **** structure member). */
 104:FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
 105:FreeRTOS/queue.c **** #define uxQueueType						pcHead
 106:FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 107:FreeRTOS/queue.c **** 
 108:FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 109:FreeRTOS/queue.c **** zero. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 4


 110:FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )
 111:FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickT_t ) 0U )
 112:FreeRTOS/queue.c **** 
 113:FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
 114:FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 115:FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
 116:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 117:FreeRTOS/queue.c **** #else
 118:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 119:FreeRTOS/queue.c **** #endif
 120:FreeRTOS/queue.c **** 
 121:FreeRTOS/queue.c **** /*
 122:FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
 123:FreeRTOS/queue.c ****  * Items are queued by copy, not reference.
 124:FreeRTOS/queue.c ****  */
 125:FreeRTOS/queue.c **** typedef struct QueueDefinition
 126:FreeRTOS/queue.c **** {
 127:FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 128:FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 129:FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 130:FreeRTOS/queue.c **** 
 131:FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 132:FreeRTOS/queue.c **** 	{
 133:FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 134:FreeRTOS/queue.c **** 		UBaseT_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex has 
 135:FreeRTOS/queue.c **** 	} u;
 136:FreeRTOS/queue.c **** 
 137:FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 138:FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 139:FreeRTOS/queue.c **** 
 140:FreeRTOS/queue.c **** 	volatile UBaseT_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 141:FreeRTOS/queue.c **** 	UBaseT_t uxLength;			/*< The length of the queue defined as the number of items it will hold, not 
 142:FreeRTOS/queue.c **** 	UBaseT_t uxItemSize;			/*< The size of each items that the queue will hold. */
 143:FreeRTOS/queue.c **** 
 144:FreeRTOS/queue.c **** 	volatile BaseT_t xRxLock;	/*< Stores the number of items received from the queue (removed from the
 145:FreeRTOS/queue.c **** 	volatile BaseT_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the qu
 146:FreeRTOS/queue.c **** 
 147:FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 148:FreeRTOS/queue.c **** 		UBaseT_t uxQueueNumber;
 149:FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 150:FreeRTOS/queue.c **** 	#endif
 151:FreeRTOS/queue.c **** 
 152:FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 153:FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 154:FreeRTOS/queue.c **** 	#endif
 155:FreeRTOS/queue.c **** 
 156:FreeRTOS/queue.c **** } xQUEUE;
 157:FreeRTOS/queue.c **** 
 158:FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 159:FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 160:FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 161:FreeRTOS/queue.c **** 
 162:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 163:FreeRTOS/queue.c **** 
 164:FreeRTOS/queue.c **** /*
 165:FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 166:FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 5


 167:FreeRTOS/queue.c ****  */
 168:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 169:FreeRTOS/queue.c **** 
 170:FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 171:FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 172:FreeRTOS/queue.c **** 	more user friendly. */
 173:FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 174:FreeRTOS/queue.c **** 	{
 175:FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 176:FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 177:FreeRTOS/queue.c **** 	} xQueueRegistryItem;
 178:FreeRTOS/queue.c **** 
 179:FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 180:FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 181:FreeRTOS/queue.c **** 	debuggers. */
 182:FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 183:FreeRTOS/queue.c **** 
 184:FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 185:FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 186:FreeRTOS/queue.c **** 	array position being vacant. */
 187:FreeRTOS/queue.c **** 	QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 188:FreeRTOS/queue.c **** 
 189:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 190:FreeRTOS/queue.c **** 
 191:FreeRTOS/queue.c **** /*
 192:FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 193:FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 194:FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 195:FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 196:FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 197:FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 198:FreeRTOS/queue.c ****  */
 199:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 200:FreeRTOS/queue.c **** 
 201:FreeRTOS/queue.c **** /*
 202:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 203:FreeRTOS/queue.c ****  *
 204:FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 205:FreeRTOS/queue.c ****  */
 206:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 207:FreeRTOS/queue.c **** 
 208:FreeRTOS/queue.c **** /*
 209:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 210:FreeRTOS/queue.c ****  *
 211:FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 212:FreeRTOS/queue.c ****  */
 213:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 214:FreeRTOS/queue.c **** 
 215:FreeRTOS/queue.c **** /*
 216:FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 217:FreeRTOS/queue.c ****  * back of the queue.
 218:FreeRTOS/queue.c ****  */
 219:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
 220:FreeRTOS/queue.c **** 
 221:FreeRTOS/queue.c **** /*
 222:FreeRTOS/queue.c ****  * Copies an item out of a queue.
 223:FreeRTOS/queue.c ****  */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 6


 224:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 225:FreeRTOS/queue.c **** 
 226:FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 227:FreeRTOS/queue.c **** 	/*
 228:FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 229:FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 230:FreeRTOS/queue.c **** 	 */
 231:FreeRTOS/queue.c **** 	static BaseT_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseT_t xCopyPosit
 232:FreeRTOS/queue.c **** #endif
 233:FreeRTOS/queue.c **** 
 234:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 235:FreeRTOS/queue.c **** 
 236:FreeRTOS/queue.c **** /*
 237:FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:FreeRTOS/queue.c ****  * accessing the queue event lists.
 239:FreeRTOS/queue.c ****  */
 240:FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 241:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 242:FreeRTOS/queue.c **** 	{														\
 243:FreeRTOS/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 244:FreeRTOS/queue.c **** 		{													\
 245:FreeRTOS/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 246:FreeRTOS/queue.c **** 		}													\
 247:FreeRTOS/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 248:FreeRTOS/queue.c **** 		{													\
 249:FreeRTOS/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 250:FreeRTOS/queue.c **** 		}													\
 251:FreeRTOS/queue.c **** 	}														\
 252:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 253:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 254:FreeRTOS/queue.c **** 
 255:FreeRTOS/queue.c **** BaseT_t xQueueGenericReset( QueueHandle_t xQueue, BaseT_t xNewQueue )
 256:FreeRTOS/queue.c **** {
  63              		.loc 1 256 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 16
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 80B5     		push	{r7, lr}	@
  68              		.cfi_def_cfa_offset 8
  69              		.cfi_offset 7, -8
  70              		.cfi_offset 14, -4
  71 0002 84B0     		sub	sp, sp, #16	@,,
  72              		.cfi_def_cfa_offset 24
  73 0004 00AF     		add	r7, sp, #0	@,,
  74              		.cfi_def_cfa_register 7
  75 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
  76 0008 3960     		str	r1, [r7]	@ xNewQueue, xNewQueue
 257:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  77              		.loc 1 257 0
  78 000a 7B68     		ldr	r3, [r7, #4]	@ tmp129, xQueue
  79 000c FB60     		str	r3, [r7, #12]	@ tmp129, pxQueue
 258:FreeRTOS/queue.c **** 
 259:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
  80              		.loc 1 259 0
  81 000e FB68     		ldr	r3, [r7, #12]	@ tmp130, pxQueue
  82 0010 002B     		cmp	r3, #0	@ tmp130,
  83 0012 02D1     		bne	.L2	@,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 7


  84              		.loc 1 259 0 is_stmt 0 discriminator 1
  85 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
  86              	.L3:
  87 0018 FEE7     		b	.L3	@
  88              	.L2:
 260:FreeRTOS/queue.c **** 
 261:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  89              		.loc 1 261 0 is_stmt 1
  90 001a FFF7FEFF 		bl	vPortEnterCritical	@
 262:FreeRTOS/queue.c **** 	{
 263:FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  91              		.loc 1 263 0
  92 001e FB68     		ldr	r3, [r7, #12]	@ tmp131, pxQueue
  93 0020 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
  94 0022 FB68     		ldr	r3, [r7, #12]	@ tmp132, pxQueue
  95 0024 DB6B     		ldr	r3, [r3, #60]	@ D.5941, pxQueue_2->uxLength
  96 0026 F968     		ldr	r1, [r7, #12]	@ tmp133, pxQueue
  97 0028 096C     		ldr	r1, [r1, #64]	@ D.5941, pxQueue_2->uxItemSize
  98 002a 01FB03F3 		mul	r3, r1, r3	@ D.5941, D.5941, D.5941
  99 002e 1A44     		add	r2, r2, r3	@ D.5940, D.5941
 100 0030 FB68     		ldr	r3, [r7, #12]	@ tmp134, pxQueue
 101 0032 5A60     		str	r2, [r3, #4]	@ D.5940, pxQueue_2->pcTail
 264:FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 102              		.loc 1 264 0
 103 0034 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxQueue
 104 0036 0022     		movs	r2, #0	@ tmp136,
 105 0038 9A63     		str	r2, [r3, #56]	@ tmp136, pxQueue_2->uxMessagesWaiting
 265:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 106              		.loc 1 265 0
 107 003a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxQueue
 108 003c 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
 109 003e FB68     		ldr	r3, [r7, #12]	@ tmp138, pxQueue
 110 0040 9A60     		str	r2, [r3, #8]	@ D.5940, pxQueue_2->pcWriteTo
 266:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseT_t ) 1U ) * pxQueue->ux
 111              		.loc 1 266 0
 112 0042 FB68     		ldr	r3, [r7, #12]	@ tmp139, pxQueue
 113 0044 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
 114 0046 FB68     		ldr	r3, [r7, #12]	@ tmp140, pxQueue
 115 0048 DB6B     		ldr	r3, [r3, #60]	@ D.5941, pxQueue_2->uxLength
 116 004a 013B     		subs	r3, r3, #1	@ D.5941, D.5941,
 117 004c F968     		ldr	r1, [r7, #12]	@ tmp141, pxQueue
 118 004e 096C     		ldr	r1, [r1, #64]	@ D.5941, pxQueue_2->uxItemSize
 119 0050 01FB03F3 		mul	r3, r1, r3	@ D.5941, D.5941, D.5941
 120 0054 1A44     		add	r2, r2, r3	@ D.5940, D.5941
 121 0056 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 122 0058 DA60     		str	r2, [r3, #12]	@ D.5940, pxQueue_2->u.pcReadFrom
 267:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 123              		.loc 1 267 0
 124 005a FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
 125 005c 4FF0FF32 		mov	r2, #-1	@ tmp144,
 126 0060 5A64     		str	r2, [r3, #68]	@ tmp144, pxQueue_2->xRxLock
 268:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 127              		.loc 1 268 0
 128 0062 FB68     		ldr	r3, [r7, #12]	@ tmp145, pxQueue
 129 0064 4FF0FF32 		mov	r2, #-1	@ tmp146,
 130 0068 9A64     		str	r2, [r3, #72]	@ tmp146, pxQueue_2->xTxLock
 269:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 8


 270:FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 131              		.loc 1 270 0
 132 006a 3B68     		ldr	r3, [r7]	@ tmp147, xNewQueue
 133 006c 002B     		cmp	r3, #0	@ tmp147,
 134 006e 0ED1     		bne	.L4	@,
 271:FreeRTOS/queue.c **** 		{
 272:FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:FreeRTOS/queue.c **** 			it will be possible to write to it. */
 277:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 135              		.loc 1 277 0
 136 0070 FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 137 0072 1B69     		ldr	r3, [r3, #16]	@ D.5941, pxQueue_2->xTasksWaitingToSend.uxNumberOfItems
 138 0074 002B     		cmp	r3, #0	@ D.5941,
 139 0076 14D0     		beq	.L5	@,
 278:FreeRTOS/queue.c **** 			{
 279:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 140              		.loc 1 279 0
 141 0078 FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 142 007a 1033     		adds	r3, r3, #16	@ D.5942, tmp149,
 143 007c 1846     		mov	r0, r3	@, D.5942
 144 007e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 145 0082 0346     		mov	r3, r0	@ D.5943,
 146 0084 012B     		cmp	r3, #1	@ D.5943,
 147 0086 0CD1     		bne	.L5	@,
 280:FreeRTOS/queue.c **** 				{
 281:FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 148              		.loc 1 281 0
 149 0088 FFF7FEFF 		bl	vPortYield	@
 150 008c 09E0     		b	.L5	@
 151              	.L4:
 282:FreeRTOS/queue.c **** 				}
 283:FreeRTOS/queue.c **** 				else
 284:FreeRTOS/queue.c **** 				{
 285:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:FreeRTOS/queue.c **** 				}
 287:FreeRTOS/queue.c **** 			}
 288:FreeRTOS/queue.c **** 			else
 289:FreeRTOS/queue.c **** 			{
 290:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:FreeRTOS/queue.c **** 			}
 292:FreeRTOS/queue.c **** 		}
 293:FreeRTOS/queue.c **** 		else
 294:FreeRTOS/queue.c **** 		{
 295:FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 152              		.loc 1 296 0
 153 008e FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 154 0090 1033     		adds	r3, r3, #16	@ D.5942, tmp150,
 155 0092 1846     		mov	r0, r3	@, D.5942
 156 0094 FFF7FEFF 		bl	vListInitialise	@
 297:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 157              		.loc 1 297 0
 158 0098 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 159 009a 2433     		adds	r3, r3, #36	@ D.5942, tmp151,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 9


 160 009c 1846     		mov	r0, r3	@, D.5942
 161 009e FFF7FEFF 		bl	vListInitialise	@
 162              	.L5:
 298:FreeRTOS/queue.c **** 		}
 299:FreeRTOS/queue.c **** 	}
 300:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 163              		.loc 1 300 0
 164 00a2 FFF7FEFF 		bl	vPortExitCritical	@
 301:FreeRTOS/queue.c **** 
 302:FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:FreeRTOS/queue.c **** 	versions. */
 304:FreeRTOS/queue.c **** 	return pdPASS;
 165              		.loc 1 304 0
 166 00a6 0123     		movs	r3, #1	@ D.5944,
 305:FreeRTOS/queue.c **** }
 167              		.loc 1 305 0
 168 00a8 1846     		mov	r0, r3	@, <retval>
 169 00aa 1037     		adds	r7, r7, #16	@,,
 170              		.cfi_def_cfa_offset 8
 171 00ac BD46     		mov	sp, r7	@,
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed	@
 174 00ae 80BD     		pop	{r7, pc}	@
 175              		.cfi_endproc
 176              	.LFE1:
 177              		.size	xQueueGenericReset, .-xQueueGenericReset
 178              		.section	.text.xQueueGenericCreate,"ax",%progbits
 179              		.align	2
 180              		.global	xQueueGenericCreate
 181              		.thumb
 182              		.thumb_func
 183              		.type	xQueueGenericCreate, %function
 184              	xQueueGenericCreate:
 185              	.LFB2:
 306:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 307:FreeRTOS/queue.c **** 
 308:FreeRTOS/queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseT_t uxQueueLength, const UBaseT_t uxItemSize, const u
 309:FreeRTOS/queue.c **** {
 186              		.loc 1 309 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 32
 189              		@ frame_needed = 1, uses_anonymous_args = 0
 190 0000 80B5     		push	{r7, lr}	@
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 0002 88B0     		sub	sp, sp, #32	@,,
 195              		.cfi_def_cfa_offset 40
 196 0004 00AF     		add	r7, sp, #0	@,,
 197              		.cfi_def_cfa_register 7
 198 0006 F860     		str	r0, [r7, #12]	@ uxQueueLength, uxQueueLength
 199 0008 B960     		str	r1, [r7, #8]	@ uxItemSize, uxItemSize
 200 000a 1346     		mov	r3, r2	@ tmp115, ucQueueType
 201 000c FB71     		strb	r3, [r7, #7]	@ tmp116, ucQueueType
 310:FreeRTOS/queue.c **** Queue_t *pxNewQueue;
 311:FreeRTOS/queue.c **** size_t xQueueSizeInBytes;
 312:FreeRTOS/queue.c **** QueueHandle_t xReturn = NULL;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 10


 202              		.loc 1 312 0
 203 000e 0023     		movs	r3, #0	@ tmp117,
 204 0010 FB61     		str	r3, [r7, #28]	@ tmp117, xReturn
 313:FreeRTOS/queue.c **** 
 314:FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 315:FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 316:FreeRTOS/queue.c **** 	( void ) ucQueueType;
 317:FreeRTOS/queue.c **** 
 318:FreeRTOS/queue.c **** 	/* Allocate the new queue structure. */
 319:FreeRTOS/queue.c **** 	if( uxQueueLength > ( UBaseT_t ) 0 )
 205              		.loc 1 319 0
 206 0012 FB68     		ldr	r3, [r7, #12]	@ tmp118, uxQueueLength
 207 0014 002B     		cmp	r3, #0	@ tmp118,
 208 0016 2AD0     		beq	.L8	@,
 320:FreeRTOS/queue.c **** 	{
 321:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 209              		.loc 1 321 0
 210 0018 5420     		movs	r0, #84	@,
 211 001a FFF7FEFF 		bl	pvPortMalloc	@
 212 001e B861     		str	r0, [r7, #24]	@, pxNewQueue
 322:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 213              		.loc 1 322 0
 214 0020 BB69     		ldr	r3, [r7, #24]	@ tmp119, pxNewQueue
 215 0022 002B     		cmp	r3, #0	@ tmp119,
 216 0024 23D0     		beq	.L8	@,
 323:FreeRTOS/queue.c **** 		{
 324:FreeRTOS/queue.c **** 			/* Create the list of pointers to queue items.  The queue is one byte
 325:FreeRTOS/queue.c **** 			longer than asked for to make wrap checking easier/faster. */
 326:FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA
 217              		.loc 1 326 0
 218 0026 FB68     		ldr	r3, [r7, #12]	@ tmp120, uxQueueLength
 219 0028 BA68     		ldr	r2, [r7, #8]	@ tmp121, uxItemSize
 220 002a 02FB03F3 		mul	r3, r2, r3	@ D.5945, tmp121, tmp120
 221 002e 0133     		adds	r3, r3, #1	@ tmp122, D.5945,
 222 0030 7B61     		str	r3, [r7, #20]	@ tmp122, xQueueSizeInBytes
 327:FreeRTOS/queue.c **** 
 328:FreeRTOS/queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pvPortMalloc( xQueueSizeInBytes );
 223              		.loc 1 328 0
 224 0032 7869     		ldr	r0, [r7, #20]	@, xQueueSizeInBytes
 225 0034 FFF7FEFF 		bl	pvPortMalloc	@
 226 0038 0246     		mov	r2, r0	@ D.5946,
 227 003a BB69     		ldr	r3, [r7, #24]	@ tmp123, pxNewQueue
 228 003c 1A60     		str	r2, [r3]	@ D.5946, pxNewQueue_5->pcHead
 329:FreeRTOS/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 229              		.loc 1 329 0
 230 003e BB69     		ldr	r3, [r7, #24]	@ tmp124, pxNewQueue
 231 0040 1B68     		ldr	r3, [r3]	@ D.5947, pxNewQueue_5->pcHead
 232 0042 002B     		cmp	r3, #0	@ D.5947,
 233 0044 10D0     		beq	.L9	@,
 330:FreeRTOS/queue.c **** 			{
 331:FreeRTOS/queue.c **** 				/* Initialise the queue members as described above where the
 332:FreeRTOS/queue.c **** 				queue type is defined. */
 333:FreeRTOS/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
 234              		.loc 1 333 0
 235 0046 BB69     		ldr	r3, [r7, #24]	@ tmp125, pxNewQueue
 236 0048 FA68     		ldr	r2, [r7, #12]	@ tmp126, uxQueueLength
 237 004a DA63     		str	r2, [r3, #60]	@ tmp126, pxNewQueue_5->uxLength
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 11


 334:FreeRTOS/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 238              		.loc 1 334 0
 239 004c BB69     		ldr	r3, [r7, #24]	@ tmp127, pxNewQueue
 240 004e BA68     		ldr	r2, [r7, #8]	@ tmp128, uxItemSize
 241 0050 1A64     		str	r2, [r3, #64]	@ tmp128, pxNewQueue_5->uxItemSize
 335:FreeRTOS/queue.c **** 				( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 242              		.loc 1 335 0
 243 0052 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 244 0054 0121     		movs	r1, #1	@,
 245 0056 FFF7FEFF 		bl	xQueueGenericReset	@
 336:FreeRTOS/queue.c **** 
 337:FreeRTOS/queue.c **** 				#if ( configUSE_TRACE_FACILITY == 1 )
 338:FreeRTOS/queue.c **** 				{
 339:FreeRTOS/queue.c **** 					pxNewQueue->ucQueueType = ucQueueType;
 246              		.loc 1 339 0
 247 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxNewQueue
 248 005c FA79     		ldrb	r2, [r7, #7]	@ tmp130, ucQueueType
 249 005e 83F85020 		strb	r2, [r3, #80]	@ tmp130, pxNewQueue_5->ucQueueType
 340:FreeRTOS/queue.c **** 				}
 341:FreeRTOS/queue.c **** 				#endif /* configUSE_TRACE_FACILITY */
 342:FreeRTOS/queue.c **** 
 343:FreeRTOS/queue.c **** 				#if( configUSE_QUEUE_SETS == 1 )
 344:FreeRTOS/queue.c **** 				{
 345:FreeRTOS/queue.c **** 					pxNewQueue->pxQueueSetContainer = NULL;
 346:FreeRTOS/queue.c **** 				}
 347:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 348:FreeRTOS/queue.c **** 
 349:FreeRTOS/queue.c **** 				traceQUEUE_CREATE( pxNewQueue );
 350:FreeRTOS/queue.c **** 				xReturn = pxNewQueue;
 250              		.loc 1 350 0
 251 0062 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxNewQueue
 252 0064 FB61     		str	r3, [r7, #28]	@ tmp131, xReturn
 253 0066 02E0     		b	.L8	@
 254              	.L9:
 351:FreeRTOS/queue.c **** 			}
 352:FreeRTOS/queue.c **** 			else
 353:FreeRTOS/queue.c **** 			{
 354:FreeRTOS/queue.c **** 				traceQUEUE_CREATE_FAILED( ucQueueType );
 355:FreeRTOS/queue.c **** 				vPortFree( pxNewQueue );
 255              		.loc 1 355 0
 256 0068 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 257 006a FFF7FEFF 		bl	vPortFree	@
 258              	.L8:
 356:FreeRTOS/queue.c **** 			}
 357:FreeRTOS/queue.c **** 		}
 358:FreeRTOS/queue.c **** 		else
 359:FreeRTOS/queue.c **** 		{
 360:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 361:FreeRTOS/queue.c **** 		}
 362:FreeRTOS/queue.c **** 	}
 363:FreeRTOS/queue.c **** 	else
 364:FreeRTOS/queue.c **** 	{
 365:FreeRTOS/queue.c **** 		mtCOVERAGE_TEST_MARKER();
 366:FreeRTOS/queue.c **** 	}
 367:FreeRTOS/queue.c **** 
 368:FreeRTOS/queue.c **** 	configASSERT( xReturn );
 259              		.loc 1 368 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 12


 260 006e FB69     		ldr	r3, [r7, #28]	@ tmp132, xReturn
 261 0070 002B     		cmp	r3, #0	@ tmp132,
 262 0072 02D1     		bne	.L11	@,
 263              		.loc 1 368 0 is_stmt 0 discriminator 1
 264 0074 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 265              	.L12:
 266              		.loc 1 368 0 discriminator 2
 267 0078 FEE7     		b	.L12	@
 268              	.L11:
 369:FreeRTOS/queue.c **** 
 370:FreeRTOS/queue.c **** 	return xReturn;
 269              		.loc 1 370 0 is_stmt 1
 270 007a FB69     		ldr	r3, [r7, #28]	@ D.5948, xReturn
 371:FreeRTOS/queue.c **** }
 271              		.loc 1 371 0
 272 007c 1846     		mov	r0, r3	@, <retval>
 273 007e 2037     		adds	r7, r7, #32	@,,
 274              		.cfi_def_cfa_offset 8
 275 0080 BD46     		mov	sp, r7	@,
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed	@
 278 0082 80BD     		pop	{r7, pc}	@
 279              		.cfi_endproc
 280              	.LFE2:
 281              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 282              		.section	.text.xQueueCreateMutex,"ax",%progbits
 283              		.align	2
 284              		.global	xQueueCreateMutex
 285              		.thumb
 286              		.thumb_func
 287              		.type	xQueueCreateMutex, %function
 288              	xQueueCreateMutex:
 289              	.LFB3:
 372:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 373:FreeRTOS/queue.c **** 
 374:FreeRTOS/queue.c **** #if ( configUSE_MUTEXES == 1 )
 375:FreeRTOS/queue.c **** 
 376:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 377:FreeRTOS/queue.c **** 	{
 290              		.loc 1 377 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 16
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}	@
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 84B0     		sub	sp, sp, #16	@,,
 299              		.cfi_def_cfa_offset 24
 300 0004 00AF     		add	r7, sp, #0	@,,
 301              		.cfi_def_cfa_register 7
 302 0006 0346     		mov	r3, r0	@ tmp114, ucQueueType
 303 0008 FB71     		strb	r3, [r7, #7]	@ tmp115, ucQueueType
 378:FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 379:FreeRTOS/queue.c **** 
 380:FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 381:FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 13


 382:FreeRTOS/queue.c **** 		( void ) ucQueueType;
 383:FreeRTOS/queue.c **** 
 384:FreeRTOS/queue.c **** 		/* Allocate the new queue structure. */
 385:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 304              		.loc 1 385 0
 305 000a 5420     		movs	r0, #84	@,
 306 000c FFF7FEFF 		bl	pvPortMalloc	@
 307 0010 F860     		str	r0, [r7, #12]	@, pxNewQueue
 386:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 308              		.loc 1 386 0
 309 0012 FB68     		ldr	r3, [r7, #12]	@ tmp116, pxNewQueue
 310 0014 002B     		cmp	r3, #0	@ tmp116,
 311 0016 30D0     		beq	.L15	@,
 387:FreeRTOS/queue.c **** 		{
 388:FreeRTOS/queue.c **** 			/* Information required for priority inheritance. */
 389:FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 312              		.loc 1 389 0
 313 0018 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxNewQueue
 314 001a 0022     		movs	r2, #0	@ tmp118,
 315 001c 5A60     		str	r2, [r3, #4]	@ tmp118, pxNewQueue_1->pcTail
 390:FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 316              		.loc 1 390 0
 317 001e FB68     		ldr	r3, [r7, #12]	@ tmp119, pxNewQueue
 318 0020 0022     		movs	r2, #0	@ tmp120,
 319 0022 1A60     		str	r2, [r3]	@ tmp120, pxNewQueue_1->pcHead
 391:FreeRTOS/queue.c **** 
 392:FreeRTOS/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 393:FreeRTOS/queue.c **** 			of the queue. */
 394:FreeRTOS/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 320              		.loc 1 394 0
 321 0024 FB68     		ldr	r3, [r7, #12]	@ tmp121, pxNewQueue
 322 0026 0022     		movs	r2, #0	@ tmp122,
 323 0028 9A60     		str	r2, [r3, #8]	@ tmp122, pxNewQueue_1->pcWriteTo
 395:FreeRTOS/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 324              		.loc 1 395 0
 325 002a FB68     		ldr	r3, [r7, #12]	@ tmp123, pxNewQueue
 326 002c 0022     		movs	r2, #0	@ tmp124,
 327 002e DA60     		str	r2, [r3, #12]	@ tmp124, pxNewQueue_1->u.pcReadFrom
 396:FreeRTOS/queue.c **** 
 397:FreeRTOS/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 398:FreeRTOS/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 399:FreeRTOS/queue.c **** 			of the mutex. */
 400:FreeRTOS/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 328              		.loc 1 400 0
 329 0030 FB68     		ldr	r3, [r7, #12]	@ tmp125, pxNewQueue
 330 0032 0022     		movs	r2, #0	@ tmp126,
 331 0034 9A63     		str	r2, [r3, #56]	@ tmp126, pxNewQueue_1->uxMessagesWaiting
 401:FreeRTOS/queue.c **** 			pxNewQueue->uxLength = ( UBaseT_t ) 1U;
 332              		.loc 1 401 0
 333 0036 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxNewQueue
 334 0038 0122     		movs	r2, #1	@ tmp128,
 335 003a DA63     		str	r2, [r3, #60]	@ tmp128, pxNewQueue_1->uxLength
 402:FreeRTOS/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseT_t ) 0U;
 336              		.loc 1 402 0
 337 003c FB68     		ldr	r3, [r7, #12]	@ tmp129, pxNewQueue
 338 003e 0022     		movs	r2, #0	@ tmp130,
 339 0040 1A64     		str	r2, [r3, #64]	@ tmp130, pxNewQueue_1->uxItemSize
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 14


 403:FreeRTOS/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 340              		.loc 1 403 0
 341 0042 FB68     		ldr	r3, [r7, #12]	@ tmp131, pxNewQueue
 342 0044 4FF0FF32 		mov	r2, #-1	@ tmp132,
 343 0048 5A64     		str	r2, [r3, #68]	@ tmp132, pxNewQueue_1->xRxLock
 404:FreeRTOS/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 344              		.loc 1 404 0
 345 004a FB68     		ldr	r3, [r7, #12]	@ tmp133, pxNewQueue
 346 004c 4FF0FF32 		mov	r2, #-1	@ tmp134,
 347 0050 9A64     		str	r2, [r3, #72]	@ tmp134, pxNewQueue_1->xTxLock
 405:FreeRTOS/queue.c **** 
 406:FreeRTOS/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 407:FreeRTOS/queue.c **** 			{
 408:FreeRTOS/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 348              		.loc 1 408 0
 349 0052 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxNewQueue
 350 0054 FA79     		ldrb	r2, [r7, #7]	@ tmp136, ucQueueType
 351 0056 83F85020 		strb	r2, [r3, #80]	@ tmp136, pxNewQueue_1->ucQueueType
 409:FreeRTOS/queue.c **** 			}
 410:FreeRTOS/queue.c **** 			#endif
 411:FreeRTOS/queue.c **** 
 412:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 413:FreeRTOS/queue.c **** 			{
 414:FreeRTOS/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 415:FreeRTOS/queue.c **** 			}
 416:FreeRTOS/queue.c **** 			#endif
 417:FreeRTOS/queue.c **** 
 418:FreeRTOS/queue.c **** 			/* Ensure the event queues start with the correct state. */
 419:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 352              		.loc 1 419 0
 353 005a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxNewQueue
 354 005c 1033     		adds	r3, r3, #16	@ D.5949, tmp137,
 355 005e 1846     		mov	r0, r3	@, D.5949
 356 0060 FFF7FEFF 		bl	vListInitialise	@
 420:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 357              		.loc 1 420 0
 358 0064 FB68     		ldr	r3, [r7, #12]	@ tmp138, pxNewQueue
 359 0066 2433     		adds	r3, r3, #36	@ D.5949, tmp138,
 360 0068 1846     		mov	r0, r3	@, D.5949
 361 006a FFF7FEFF 		bl	vListInitialise	@
 421:FreeRTOS/queue.c **** 
 422:FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 423:FreeRTOS/queue.c **** 
 424:FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 425:FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickT_t ) 0U, queueSEND_TO_BACK );
 362              		.loc 1 425 0
 363 006e F868     		ldr	r0, [r7, #12]	@, pxNewQueue
 364 0070 0021     		movs	r1, #0	@,
 365 0072 0022     		movs	r2, #0	@,
 366 0074 0023     		movs	r3, #0	@,
 367 0076 FFF7FEFF 		bl	xQueueGenericSend	@
 368              	.L15:
 426:FreeRTOS/queue.c **** 		}
 427:FreeRTOS/queue.c **** 		else
 428:FreeRTOS/queue.c **** 		{
 429:FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 430:FreeRTOS/queue.c **** 		}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 15


 431:FreeRTOS/queue.c **** 
 432:FreeRTOS/queue.c **** 		configASSERT( pxNewQueue );
 369              		.loc 1 432 0
 370 007a FB68     		ldr	r3, [r7, #12]	@ tmp139, pxNewQueue
 371 007c 002B     		cmp	r3, #0	@ tmp139,
 372 007e 02D1     		bne	.L16	@,
 373              		.loc 1 432 0 is_stmt 0 discriminator 1
 374 0080 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 375              	.L17:
 376 0084 FEE7     		b	.L17	@
 377              	.L16:
 433:FreeRTOS/queue.c **** 		return pxNewQueue;
 378              		.loc 1 433 0 is_stmt 1
 379 0086 FB68     		ldr	r3, [r7, #12]	@ D.5950, pxNewQueue
 434:FreeRTOS/queue.c **** 	}
 380              		.loc 1 434 0
 381 0088 1846     		mov	r0, r3	@, <retval>
 382 008a 1037     		adds	r7, r7, #16	@,,
 383              		.cfi_def_cfa_offset 8
 384 008c BD46     		mov	sp, r7	@,
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed	@
 387 008e 80BD     		pop	{r7, pc}	@
 388              		.cfi_endproc
 389              	.LFE3:
 390              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 391              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 392              		.align	2
 393              		.global	xQueueGiveMutexRecursive
 394              		.thumb
 395              		.thumb_func
 396              		.type	xQueueGiveMutexRecursive, %function
 397              	xQueueGiveMutexRecursive:
 398              	.LFB4:
 435:FreeRTOS/queue.c **** 
 436:FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 437:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 438:FreeRTOS/queue.c **** 
 439:FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 440:FreeRTOS/queue.c **** 
 441:FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 442:FreeRTOS/queue.c **** 	{
 443:FreeRTOS/queue.c **** 	void *pxReturn;
 444:FreeRTOS/queue.c **** 
 445:FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 446:FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 447:FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 448:FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 449:FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 450:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 451:FreeRTOS/queue.c **** 		{
 452:FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 453:FreeRTOS/queue.c **** 			{
 454:FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 455:FreeRTOS/queue.c **** 			}
 456:FreeRTOS/queue.c **** 			else
 457:FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 16


 458:FreeRTOS/queue.c **** 				pxReturn = NULL;
 459:FreeRTOS/queue.c **** 			}
 460:FreeRTOS/queue.c **** 		}
 461:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 462:FreeRTOS/queue.c **** 
 463:FreeRTOS/queue.c **** 		return pxReturn;
 464:FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 465:FreeRTOS/queue.c **** 
 466:FreeRTOS/queue.c **** #endif
 467:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 468:FreeRTOS/queue.c **** 
 469:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 470:FreeRTOS/queue.c **** 
 471:FreeRTOS/queue.c **** 	BaseT_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 472:FreeRTOS/queue.c **** 	{
 399              		.loc 1 472 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 16
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 90B5     		push	{r4, r7, lr}	@
 404              		.cfi_def_cfa_offset 12
 405              		.cfi_offset 4, -12
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 85B0     		sub	sp, sp, #20	@,,
 409              		.cfi_def_cfa_offset 32
 410 0004 00AF     		add	r7, sp, #0	@,,
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 473:FreeRTOS/queue.c **** 	BaseT_t xReturn;
 474:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 413              		.loc 1 474 0
 414 0008 7B68     		ldr	r3, [r7, #4]	@ tmp117, xMutex
 415 000a BB60     		str	r3, [r7, #8]	@ tmp117, pxMutex
 475:FreeRTOS/queue.c **** 
 476:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 416              		.loc 1 476 0
 417 000c BB68     		ldr	r3, [r7, #8]	@ tmp118, pxMutex
 418 000e 002B     		cmp	r3, #0	@ tmp118,
 419 0010 02D1     		bne	.L20	@,
 420              		.loc 1 476 0 is_stmt 0 discriminator 1
 421 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 422              	.L21:
 423 0016 FEE7     		b	.L21	@
 424              	.L20:
 477:FreeRTOS/queue.c **** 
 478:FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 479:FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 480:FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 481:FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 482:FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 483:FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 484:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 425              		.loc 1 484 0 is_stmt 1
 426 0018 BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 427 001a 5C68     		ldr	r4, [r3, #4]	@ D.5951, pxMutex_3->pcTail
 428 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 17


 429 0020 0346     		mov	r3, r0	@ D.5952,
 430 0022 9C42     		cmp	r4, r3	@ D.5951, D.5952
 431 0024 11D1     		bne	.L22	@,
 485:FreeRTOS/queue.c **** 		{
 486:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 487:FreeRTOS/queue.c **** 
 488:FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 489:FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 490:FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 491:FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 492:FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 493:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 432              		.loc 1 493 0
 433 0026 BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 434 0028 DB68     		ldr	r3, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 435 002a 5A1E     		subs	r2, r3, #1	@ D.5953, D.5953,
 436 002c BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 437 002e DA60     		str	r2, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 494:FreeRTOS/queue.c **** 
 495:FreeRTOS/queue.c **** 			/* Have we unwound the call count? */
 496:FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseT_t ) 0 )
 438              		.loc 1 496 0
 439 0030 BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 440 0032 DB68     		ldr	r3, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 441 0034 002B     		cmp	r3, #0	@ D.5953,
 442 0036 05D1     		bne	.L23	@,
 497:FreeRTOS/queue.c **** 			{
 498:FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 499:FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 500:FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 443              		.loc 1 500 0
 444 0038 B868     		ldr	r0, [r7, #8]	@, pxMutex
 445 003a 0021     		movs	r1, #0	@,
 446 003c 0022     		movs	r2, #0	@,
 447 003e 0023     		movs	r3, #0	@,
 448 0040 FFF7FEFF 		bl	xQueueGenericSend	@
 449              	.L23:
 501:FreeRTOS/queue.c **** 			}
 502:FreeRTOS/queue.c **** 			else
 503:FreeRTOS/queue.c **** 			{
 504:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 505:FreeRTOS/queue.c **** 			}
 506:FreeRTOS/queue.c **** 
 507:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 450              		.loc 1 507 0
 451 0044 0123     		movs	r3, #1	@ tmp123,
 452 0046 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 453 0048 01E0     		b	.L24	@
 454              	.L22:
 508:FreeRTOS/queue.c **** 		}
 509:FreeRTOS/queue.c **** 		else
 510:FreeRTOS/queue.c **** 		{
 511:FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 512:FreeRTOS/queue.c **** 			holder. */
 513:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 455              		.loc 1 513 0
 456 004a 0023     		movs	r3, #0	@ tmp124,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 18


 457 004c FB60     		str	r3, [r7, #12]	@ tmp124, xReturn
 458              	.L24:
 514:FreeRTOS/queue.c **** 
 515:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 516:FreeRTOS/queue.c **** 		}
 517:FreeRTOS/queue.c **** 
 518:FreeRTOS/queue.c **** 		return xReturn;
 459              		.loc 1 518 0
 460 004e FB68     		ldr	r3, [r7, #12]	@ D.5954, xReturn
 519:FreeRTOS/queue.c **** 	}
 461              		.loc 1 519 0
 462 0050 1846     		mov	r0, r3	@, <retval>
 463 0052 1437     		adds	r7, r7, #20	@,,
 464              		.cfi_def_cfa_offset 12
 465 0054 BD46     		mov	sp, r7	@,
 466              		.cfi_def_cfa_register 13
 467              		@ sp needed	@
 468 0056 90BD     		pop	{r4, r7, pc}	@
 469              		.cfi_endproc
 470              	.LFE4:
 471              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 472              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 473              		.align	2
 474              		.global	xQueueTakeMutexRecursive
 475              		.thumb
 476              		.thumb_func
 477              		.type	xQueueTakeMutexRecursive, %function
 478              	xQueueTakeMutexRecursive:
 479              	.LFB5:
 520:FreeRTOS/queue.c **** 
 521:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 522:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 523:FreeRTOS/queue.c **** 
 524:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 525:FreeRTOS/queue.c **** 
 526:FreeRTOS/queue.c **** 	BaseT_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickT_t xTicksToWait )
 527:FreeRTOS/queue.c **** 	{
 480              		.loc 1 527 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 16
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 90B5     		push	{r4, r7, lr}	@
 485              		.cfi_def_cfa_offset 12
 486              		.cfi_offset 4, -12
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 85B0     		sub	sp, sp, #20	@,,
 490              		.cfi_def_cfa_offset 32
 491 0004 00AF     		add	r7, sp, #0	@,,
 492              		.cfi_def_cfa_register 7
 493 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 494 0008 3960     		str	r1, [r7]	@ xTicksToWait, xTicksToWait
 528:FreeRTOS/queue.c **** 	BaseT_t xReturn;
 529:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 495              		.loc 1 529 0
 496 000a 7B68     		ldr	r3, [r7, #4]	@ tmp118, xMutex
 497 000c BB60     		str	r3, [r7, #8]	@ tmp118, pxMutex
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 19


 530:FreeRTOS/queue.c **** 
 531:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 498              		.loc 1 531 0
 499 000e BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 500 0010 002B     		cmp	r3, #0	@ tmp119,
 501 0012 02D1     		bne	.L27	@,
 502              		.loc 1 531 0 is_stmt 0 discriminator 1
 503 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 504              	.L28:
 505 0018 FEE7     		b	.L28	@
 506              	.L27:
 532:FreeRTOS/queue.c **** 
 533:FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 534:FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 535:FreeRTOS/queue.c **** 
 536:FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 537:FreeRTOS/queue.c **** 
 538:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 507              		.loc 1 538 0 is_stmt 1
 508 001a BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 509 001c 5C68     		ldr	r4, [r3, #4]	@ D.5955, pxMutex_3->pcTail
 510 001e FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
 511 0022 0346     		mov	r3, r0	@ D.5956,
 512 0024 9C42     		cmp	r4, r3	@ D.5955, D.5956
 513 0026 07D1     		bne	.L29	@,
 539:FreeRTOS/queue.c **** 		{
 540:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 514              		.loc 1 540 0
 515 0028 BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 516 002a DB68     		ldr	r3, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 517 002c 5A1C     		adds	r2, r3, #1	@ D.5957, D.5957,
 518 002e BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 519 0030 DA60     		str	r2, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 541:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 520              		.loc 1 541 0
 521 0032 0123     		movs	r3, #1	@ tmp123,
 522 0034 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 523 0036 0EE0     		b	.L30	@
 524              	.L29:
 542:FreeRTOS/queue.c **** 		}
 543:FreeRTOS/queue.c **** 		else
 544:FreeRTOS/queue.c **** 		{
 545:FreeRTOS/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 525              		.loc 1 545 0
 526 0038 B868     		ldr	r0, [r7, #8]	@, pxMutex
 527 003a 0021     		movs	r1, #0	@,
 528 003c 3A68     		ldr	r2, [r7]	@, xTicksToWait
 529 003e 0023     		movs	r3, #0	@,
 530 0040 FFF7FEFF 		bl	xQueueGenericReceive	@
 531 0044 F860     		str	r0, [r7, #12]	@, xReturn
 546:FreeRTOS/queue.c **** 
 547:FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 548:FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 549:FreeRTOS/queue.c **** 			before reaching here. */
 550:FreeRTOS/queue.c **** 			if( xReturn == pdPASS )
 532              		.loc 1 550 0
 533 0046 FB68     		ldr	r3, [r7, #12]	@ tmp124, xReturn
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 20


 534 0048 012B     		cmp	r3, #1	@ tmp124,
 535 004a 04D1     		bne	.L30	@,
 551:FreeRTOS/queue.c **** 			{
 552:FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 536              		.loc 1 552 0
 537 004c BB68     		ldr	r3, [r7, #8]	@ tmp125, pxMutex
 538 004e DB68     		ldr	r3, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 539 0050 5A1C     		adds	r2, r3, #1	@ D.5957, D.5957,
 540 0052 BB68     		ldr	r3, [r7, #8]	@ tmp126, pxMutex
 541 0054 DA60     		str	r2, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 542              	.L30:
 553:FreeRTOS/queue.c **** 			}
 554:FreeRTOS/queue.c **** 			else
 555:FreeRTOS/queue.c **** 			{
 556:FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 557:FreeRTOS/queue.c **** 			}
 558:FreeRTOS/queue.c **** 		}
 559:FreeRTOS/queue.c **** 
 560:FreeRTOS/queue.c **** 		return xReturn;
 543              		.loc 1 560 0
 544 0056 FB68     		ldr	r3, [r7, #12]	@ D.5958, xReturn
 561:FreeRTOS/queue.c **** 	}
 545              		.loc 1 561 0
 546 0058 1846     		mov	r0, r3	@, <retval>
 547 005a 1437     		adds	r7, r7, #20	@,,
 548              		.cfi_def_cfa_offset 12
 549 005c BD46     		mov	sp, r7	@,
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed	@
 552 005e 90BD     		pop	{r4, r7, pc}	@
 553              		.cfi_endproc
 554              	.LFE5:
 555              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 556              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 557              		.align	2
 558              		.global	xQueueCreateCountingSemaphore
 559              		.thumb
 560              		.thumb_func
 561              		.type	xQueueCreateCountingSemaphore, %function
 562              	xQueueCreateCountingSemaphore:
 563              	.LFB6:
 562:FreeRTOS/queue.c **** 
 563:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 564:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 565:FreeRTOS/queue.c **** 
 566:FreeRTOS/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 567:FreeRTOS/queue.c **** 
 568:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseT_t uxMaxCount, const UBaseT_t uxInitialCo
 569:FreeRTOS/queue.c **** 	{
 564              		.loc 1 569 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 16
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}	@
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 21


 572 0002 84B0     		sub	sp, sp, #16	@,,
 573              		.cfi_def_cfa_offset 24
 574 0004 00AF     		add	r7, sp, #0	@,,
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]	@ uxMaxCount, uxMaxCount
 577 0008 3960     		str	r1, [r7]	@ uxInitialCount, uxInitialCount
 570:FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 571:FreeRTOS/queue.c **** 
 572:FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 578              		.loc 1 572 0
 579 000a 7B68     		ldr	r3, [r7, #4]	@ tmp112, uxMaxCount
 580 000c 002B     		cmp	r3, #0	@ tmp112,
 581 000e 02D1     		bne	.L33	@,
 582              		.loc 1 572 0 is_stmt 0 discriminator 1
 583 0010 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 584              	.L34:
 585 0014 FEE7     		b	.L34	@
 586              	.L33:
 573:FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 587              		.loc 1 573 0 is_stmt 1
 588 0016 3A68     		ldr	r2, [r7]	@ tmp113, uxInitialCount
 589 0018 7B68     		ldr	r3, [r7, #4]	@ tmp114, uxMaxCount
 590 001a 9A42     		cmp	r2, r3	@ tmp113, tmp114
 591 001c 02D9     		bls	.L35	@,
 592              		.loc 1 573 0 is_stmt 0 discriminator 1
 593 001e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 594              	.L36:
 595              		.loc 1 573 0 discriminator 2
 596 0022 FEE7     		b	.L36	@
 597              	.L35:
 574:FreeRTOS/queue.c **** 
 575:FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 598              		.loc 1 575 0 is_stmt 1
 599 0024 7868     		ldr	r0, [r7, #4]	@, uxMaxCount
 600 0026 0021     		movs	r1, #0	@,
 601 0028 0222     		movs	r2, #2	@,
 602 002a FFF7FEFF 		bl	xQueueGenericCreate	@
 603 002e F860     		str	r0, [r7, #12]	@, xHandle
 576:FreeRTOS/queue.c **** 
 577:FreeRTOS/queue.c **** 		if( xHandle != NULL )
 604              		.loc 1 577 0
 605 0030 FB68     		ldr	r3, [r7, #12]	@ tmp115, xHandle
 606 0032 002B     		cmp	r3, #0	@ tmp115,
 607 0034 02D0     		beq	.L37	@,
 578:FreeRTOS/queue.c **** 		{
 579:FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 608              		.loc 1 579 0
 609 0036 FB68     		ldr	r3, [r7, #12]	@ tmp116, xHandle
 610 0038 3A68     		ldr	r2, [r7]	@ tmp117, uxInitialCount
 611 003a 9A63     		str	r2, [r3, #56]	@ tmp117, MEM[(struct Queue_t *)xHandle_3].uxMessagesWaiting
 612              	.L37:
 580:FreeRTOS/queue.c **** 
 581:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 582:FreeRTOS/queue.c **** 		}
 583:FreeRTOS/queue.c **** 		else
 584:FreeRTOS/queue.c **** 		{
 585:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 22


 586:FreeRTOS/queue.c **** 		}
 587:FreeRTOS/queue.c **** 
 588:FreeRTOS/queue.c **** 		configASSERT( xHandle );
 613              		.loc 1 588 0
 614 003c FB68     		ldr	r3, [r7, #12]	@ tmp118, xHandle
 615 003e 002B     		cmp	r3, #0	@ tmp118,
 616 0040 02D1     		bne	.L38	@,
 617              		.loc 1 588 0 is_stmt 0 discriminator 1
 618 0042 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 619              	.L39:
 620              		.loc 1 588 0 discriminator 3
 621 0046 FEE7     		b	.L39	@
 622              	.L38:
 589:FreeRTOS/queue.c **** 		return xHandle;
 623              		.loc 1 589 0 is_stmt 1
 624 0048 FB68     		ldr	r3, [r7, #12]	@ D.5959, xHandle
 590:FreeRTOS/queue.c **** 	}
 625              		.loc 1 590 0
 626 004a 1846     		mov	r0, r3	@, <retval>
 627 004c 1037     		adds	r7, r7, #16	@,,
 628              		.cfi_def_cfa_offset 8
 629 004e BD46     		mov	sp, r7	@,
 630              		.cfi_def_cfa_register 13
 631              		@ sp needed	@
 632 0050 80BD     		pop	{r7, pc}	@
 633              		.cfi_endproc
 634              	.LFE6:
 635              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 636 0052 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 637              		.align	2
 638              		.global	xQueueGenericSend
 639              		.thumb
 640              		.thumb_func
 641              		.type	xQueueGenericSend, %function
 642              	xQueueGenericSend:
 643              	.LFB7:
 591:FreeRTOS/queue.c **** 
 592:FreeRTOS/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 593:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 594:FreeRTOS/queue.c **** 
 595:FreeRTOS/queue.c **** BaseT_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTicksTo
 596:FreeRTOS/queue.c **** {
 644              		.loc 1 596 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 40
 647              		@ frame_needed = 1, uses_anonymous_args = 0
 648 0000 80B5     		push	{r7, lr}	@
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 652 0002 8AB0     		sub	sp, sp, #40	@,,
 653              		.cfi_def_cfa_offset 48
 654 0004 00AF     		add	r7, sp, #0	@,,
 655              		.cfi_def_cfa_register 7
 656 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 657 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 658 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 23


 659 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
 597:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE, xYieldRequired;
 660              		.loc 1 597 0
 661 000e 0023     		movs	r3, #0	@ tmp129,
 662 0010 7B62     		str	r3, [r7, #36]	@ tmp129, xEntryTimeSet
 598:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 599:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 663              		.loc 1 599 0
 664 0012 FB68     		ldr	r3, [r7, #12]	@ tmp130, xQueue
 665 0014 3B62     		str	r3, [r7, #32]	@ tmp130, pxQueue
 600:FreeRTOS/queue.c **** 
 601:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 666              		.loc 1 601 0
 667 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp131, pxQueue
 668 0018 002B     		cmp	r3, #0	@ tmp131,
 669 001a 02D1     		bne	.L42	@,
 670              		.loc 1 601 0 is_stmt 0 discriminator 1
 671 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 672              	.L43:
 673 0020 FEE7     		b	.L43	@
 674              	.L42:
 602:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 675              		.loc 1 602 0 is_stmt 1
 676 0022 BB68     		ldr	r3, [r7, #8]	@ tmp132, pvItemToQueue
 677 0024 002B     		cmp	r3, #0	@ tmp132,
 678 0026 03D1     		bne	.L44	@,
 679              		.loc 1 602 0 is_stmt 0 discriminator 2
 680 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp133, pxQueue
 681 002a 1B6C     		ldr	r3, [r3, #64]	@ D.5962, pxQueue_8->uxItemSize
 682 002c 002B     		cmp	r3, #0	@ D.5962,
 683 002e 01D1     		bne	.L45	@,
 684              	.L44:
 685              		.loc 1 602 0 discriminator 3
 686 0030 0123     		movs	r3, #1	@ D.5960,
 687 0032 00E0     		b	.L46	@
 688              	.L45:
 689              		.loc 1 602 0 discriminator 4
 690 0034 0023     		movs	r3, #0	@ D.5960,
 691              	.L46:
 692              		.loc 1 602 0 discriminator 6
 693 0036 002B     		cmp	r3, #0	@ D.5960,
 694 0038 02D1     		bne	.L47	@,
 695              		.loc 1 602 0 discriminator 7
 696 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
 697              	.L48:
 698              		.loc 1 602 0 discriminator 2
 699 003e FEE7     		b	.L48	@
 700              	.L47:
 603:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 701              		.loc 1 603 0 is_stmt 1
 702 0040 3B68     		ldr	r3, [r7]	@ tmp134, xCopyPosition
 703 0042 022B     		cmp	r3, #2	@ tmp134,
 704 0044 03D1     		bne	.L49	@,
 705              		.loc 1 603 0 is_stmt 0 discriminator 2
 706 0046 3B6A     		ldr	r3, [r7, #32]	@ tmp135, pxQueue
 707 0048 DB6B     		ldr	r3, [r3, #60]	@ D.5962, pxQueue_8->uxLength
 708 004a 012B     		cmp	r3, #1	@ D.5962,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 24


 709 004c 01D1     		bne	.L50	@,
 710              	.L49:
 711              		.loc 1 603 0 discriminator 3
 712 004e 0123     		movs	r3, #1	@ D.5960,
 713 0050 00E0     		b	.L51	@
 714              	.L50:
 715              		.loc 1 603 0 discriminator 4
 716 0052 0023     		movs	r3, #0	@ D.5960,
 717              	.L51:
 718              		.loc 1 603 0 discriminator 6
 719 0054 002B     		cmp	r3, #0	@ D.5960,
 720 0056 02D1     		bne	.L52	@,
 721              		.loc 1 603 0 discriminator 7
 722 0058 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 723              	.L53:
 724              		.loc 1 603 0 discriminator 3
 725 005c FEE7     		b	.L53	@
 726              	.L52:
 604:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 605:FreeRTOS/queue.c **** 	{
 606:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 607:FreeRTOS/queue.c **** 	}
 608:FreeRTOS/queue.c **** 	#endif
 609:FreeRTOS/queue.c **** 
 610:FreeRTOS/queue.c **** 
 611:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 612:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 613:FreeRTOS/queue.c **** 	of execution time efficiency. */
 614:FreeRTOS/queue.c **** 	for( ;; )
 615:FreeRTOS/queue.c **** 	{
 616:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 727              		.loc 1 616 0 is_stmt 1
 728 005e FFF7FEFF 		bl	vPortEnterCritical	@
 617:FreeRTOS/queue.c **** 		{
 618:FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be
 619:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue.  If
 620:FreeRTOS/queue.c **** 			the head item in the queue is to be overwritten then it does
 621:FreeRTOS/queue.c **** 			not matter if the queue is full. */
 622:FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 729              		.loc 1 622 0
 730 0062 3B6A     		ldr	r3, [r7, #32]	@ tmp136, pxQueue
 731 0064 9A6B     		ldr	r2, [r3, #56]	@ D.5962, pxQueue_8->uxMessagesWaiting
 732 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 733 0068 DB6B     		ldr	r3, [r3, #60]	@ D.5962, pxQueue_8->uxLength
 734 006a 9A42     		cmp	r2, r3	@ D.5962, D.5962
 735 006c 02D3     		bcc	.L54	@,
 736              		.loc 1 622 0 is_stmt 0 discriminator 1
 737 006e 3B68     		ldr	r3, [r7]	@ tmp138, xCopyPosition
 738 0070 022B     		cmp	r3, #2	@ tmp138,
 739 0072 1DD1     		bne	.L55	@,
 740              	.L54:
 623:FreeRTOS/queue.c **** 			{
 624:FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 625:FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 741              		.loc 1 625 0 is_stmt 1
 742 0074 386A     		ldr	r0, [r7, #32]	@, pxQueue
 743 0076 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 25


 744 0078 3A68     		ldr	r2, [r7]	@, xCopyPosition
 745 007a FFF7FEFF 		bl	prvCopyDataToQueue	@
 746 007e F861     		str	r0, [r7, #28]	@, xYieldRequired
 626:FreeRTOS/queue.c **** 
 627:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 628:FreeRTOS/queue.c **** 				{
 629:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 630:FreeRTOS/queue.c **** 					{
 631:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 632:FreeRTOS/queue.c **** 						{
 633:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 634:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 635:FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 636:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 637:FreeRTOS/queue.c **** 						}
 638:FreeRTOS/queue.c **** 						else
 639:FreeRTOS/queue.c **** 						{
 640:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 641:FreeRTOS/queue.c **** 						}
 642:FreeRTOS/queue.c **** 					}
 643:FreeRTOS/queue.c **** 					else
 644:FreeRTOS/queue.c **** 					{
 645:FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 646:FreeRTOS/queue.c **** 						queue then unblock it now. */
 647:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 648:FreeRTOS/queue.c **** 						{
 649:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 650:FreeRTOS/queue.c **** 							{
 651:FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 652:FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 653:FreeRTOS/queue.c **** 								do this from within the critical section - the
 654:FreeRTOS/queue.c **** 								kernel takes care of that. */
 655:FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 656:FreeRTOS/queue.c **** 							}
 657:FreeRTOS/queue.c **** 							else
 658:FreeRTOS/queue.c **** 							{
 659:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 660:FreeRTOS/queue.c **** 							}
 661:FreeRTOS/queue.c **** 						}
 662:FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 663:FreeRTOS/queue.c **** 						{
 664:FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 665:FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 666:FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 667:FreeRTOS/queue.c **** 							different to that in which they were taken. */
 668:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 669:FreeRTOS/queue.c **** 						}
 670:FreeRTOS/queue.c **** 						else
 671:FreeRTOS/queue.c **** 						{
 672:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 673:FreeRTOS/queue.c **** 						}
 674:FreeRTOS/queue.c **** 					}
 675:FreeRTOS/queue.c **** 				}
 676:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 677:FreeRTOS/queue.c **** 				{
 678:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 679:FreeRTOS/queue.c **** 					queue then unblock it now. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 26


 680:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 747              		.loc 1 680 0
 748 0080 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 749 0082 5B6A     		ldr	r3, [r3, #36]	@ D.5962, pxQueue_8->xTasksWaitingToReceive.uxNumberOfItems
 750 0084 002B     		cmp	r3, #0	@ D.5962,
 751 0086 0AD0     		beq	.L56	@,
 681:FreeRTOS/queue.c **** 					{
 682:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 752              		.loc 1 682 0
 753 0088 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 754 008a 2433     		adds	r3, r3, #36	@ D.5964, tmp140,
 755 008c 1846     		mov	r0, r3	@, D.5964
 756 008e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 757 0092 0346     		mov	r3, r0	@ D.5963,
 758 0094 012B     		cmp	r3, #1	@ D.5963,
 759 0096 07D1     		bne	.L57	@,
 683:FreeRTOS/queue.c **** 						{
 684:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 685:FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 686:FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 687:FreeRTOS/queue.c **** 							takes care of that. */
 688:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 760              		.loc 1 688 0
 761 0098 FFF7FEFF 		bl	vPortYield	@
 762 009c 04E0     		b	.L57	@
 763              	.L56:
 689:FreeRTOS/queue.c **** 						}
 690:FreeRTOS/queue.c **** 						else
 691:FreeRTOS/queue.c **** 						{
 692:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 693:FreeRTOS/queue.c **** 						}
 694:FreeRTOS/queue.c **** 					}
 695:FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 764              		.loc 1 695 0
 765 009e FB69     		ldr	r3, [r7, #28]	@ tmp141, xYieldRequired
 766 00a0 002B     		cmp	r3, #0	@ tmp141,
 767 00a2 01D0     		beq	.L57	@,
 696:FreeRTOS/queue.c **** 					{
 697:FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 698:FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
 699:FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 700:FreeRTOS/queue.c **** 						different to that in which they were taken. */
 701:FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 768              		.loc 1 701 0
 769 00a4 FFF7FEFF 		bl	vPortYield	@
 770              	.L57:
 702:FreeRTOS/queue.c **** 					}
 703:FreeRTOS/queue.c **** 					else
 704:FreeRTOS/queue.c **** 					{
 705:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 706:FreeRTOS/queue.c **** 					}
 707:FreeRTOS/queue.c **** 				}
 708:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 709:FreeRTOS/queue.c **** 
 710:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 771              		.loc 1 710 0
 772 00a8 FFF7FEFF 		bl	vPortExitCritical	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 27


 711:FreeRTOS/queue.c **** 				return pdPASS;
 773              		.loc 1 711 0
 774 00ac 0123     		movs	r3, #1	@ D.5961,
 775 00ae 59E0     		b	.L68	@
 776              	.L55:
 712:FreeRTOS/queue.c **** 			}
 713:FreeRTOS/queue.c **** 			else
 714:FreeRTOS/queue.c **** 			{
 715:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 777              		.loc 1 715 0
 778 00b0 7B68     		ldr	r3, [r7, #4]	@ D.5962, xTicksToWait
 779 00b2 002B     		cmp	r3, #0	@ D.5962,
 780 00b4 03D1     		bne	.L59	@,
 716:FreeRTOS/queue.c **** 				{
 717:FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 718:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 719:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 781              		.loc 1 719 0
 782 00b6 FFF7FEFF 		bl	vPortExitCritical	@
 720:FreeRTOS/queue.c **** 
 721:FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 722:FreeRTOS/queue.c **** 					the function. */
 723:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 724:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 783              		.loc 1 724 0
 784 00ba 0023     		movs	r3, #0	@ D.5961,
 785 00bc 52E0     		b	.L68	@
 786              	.L59:
 725:FreeRTOS/queue.c **** 				}
 726:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 787              		.loc 1 726 0
 788 00be 7B6A     		ldr	r3, [r7, #36]	@ tmp142, xEntryTimeSet
 789 00c0 002B     		cmp	r3, #0	@ tmp142,
 790 00c2 06D1     		bne	.L60	@,
 727:FreeRTOS/queue.c **** 				{
 728:FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 729:FreeRTOS/queue.c **** 					configure the timeout structure. */
 730:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 791              		.loc 1 730 0
 792 00c4 07F11403 		add	r3, r7, #20	@ tmp143,,
 793 00c8 1846     		mov	r0, r3	@, tmp143
 794 00ca FFF7FEFF 		bl	vTaskSetTimeOutState	@
 731:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 795              		.loc 1 731 0
 796 00ce 0123     		movs	r3, #1	@ tmp144,
 797 00d0 7B62     		str	r3, [r7, #36]	@ tmp144, xEntryTimeSet
 798              	.L60:
 732:FreeRTOS/queue.c **** 				}
 733:FreeRTOS/queue.c **** 				else
 734:FreeRTOS/queue.c **** 				{
 735:FreeRTOS/queue.c **** 					/* Entry time was already set. */
 736:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 737:FreeRTOS/queue.c **** 				}
 738:FreeRTOS/queue.c **** 			}
 739:FreeRTOS/queue.c **** 		}
 740:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 799              		.loc 1 740 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 28


 800 00d2 FFF7FEFF 		bl	vPortExitCritical	@
 741:FreeRTOS/queue.c **** 
 742:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 743:FreeRTOS/queue.c **** 		now the critical section has been exited. */
 744:FreeRTOS/queue.c **** 
 745:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 801              		.loc 1 745 0
 802 00d6 FFF7FEFF 		bl	vTaskSuspendAll	@
 746:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 803              		.loc 1 746 0
 804 00da FFF7FEFF 		bl	vPortEnterCritical	@
 805 00de 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
 806 00e0 5B6C     		ldr	r3, [r3, #68]	@ D.5963, pxQueue_8->xRxLock
 807 00e2 B3F1FF3F 		cmp	r3, #-1	@ D.5963,
 808 00e6 02D1     		bne	.L61	@,
 809              		.loc 1 746 0 is_stmt 0 discriminator 1
 810 00e8 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 811 00ea 0022     		movs	r2, #0	@ tmp147,
 812 00ec 5A64     		str	r2, [r3, #68]	@ tmp147, pxQueue_8->xRxLock
 813              	.L61:
 814              		.loc 1 746 0 discriminator 3
 815 00ee 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 816 00f0 9B6C     		ldr	r3, [r3, #72]	@ D.5963, pxQueue_8->xTxLock
 817 00f2 B3F1FF3F 		cmp	r3, #-1	@ D.5963,
 818 00f6 02D1     		bne	.L62	@,
 819              		.loc 1 746 0 discriminator 4
 820 00f8 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 821 00fa 0022     		movs	r2, #0	@ tmp150,
 822 00fc 9A64     		str	r2, [r3, #72]	@ tmp150, pxQueue_8->xTxLock
 823              	.L62:
 824              		.loc 1 746 0 discriminator 6
 825 00fe FFF7FEFF 		bl	vPortExitCritical	@
 747:FreeRTOS/queue.c **** 
 748:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 749:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 826              		.loc 1 749 0 is_stmt 1 discriminator 6
 827 0102 07F11402 		add	r2, r7, #20	@ tmp151,,
 828 0106 3B1D     		adds	r3, r7, #4	@ tmp152,,
 829 0108 1046     		mov	r0, r2	@, tmp151
 830 010a 1946     		mov	r1, r3	@, tmp152
 831 010c FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 832 0110 0346     		mov	r3, r0	@ D.5963,
 833 0112 002B     		cmp	r3, #0	@ D.5963,
 834 0114 1ED1     		bne	.L63	@,
 750:FreeRTOS/queue.c **** 		{
 751:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 835              		.loc 1 751 0
 836 0116 386A     		ldr	r0, [r7, #32]	@, pxQueue
 837 0118 FFF7FEFF 		bl	prvIsQueueFull	@
 838 011c 0346     		mov	r3, r0	@ D.5963,
 839 011e 002B     		cmp	r3, #0	@ D.5963,
 840 0120 12D0     		beq	.L64	@,
 752:FreeRTOS/queue.c **** 			{
 753:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 754:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 841              		.loc 1 754 0
 842 0122 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 29


 843 0124 03F11002 		add	r2, r3, #16	@ D.5964, tmp153,
 844 0128 7B68     		ldr	r3, [r7, #4]	@ D.5962, xTicksToWait
 845 012a 1046     		mov	r0, r2	@, D.5964
 846 012c 1946     		mov	r1, r3	@, D.5962
 847 012e FFF7FEFF 		bl	vTaskPlaceOnEventList	@
 755:FreeRTOS/queue.c **** 
 756:FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 757:FreeRTOS/queue.c **** 				event list.  It is possible	that interrupts occurring now
 758:FreeRTOS/queue.c **** 				remove this task from the event	list again - but as the
 759:FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 760:FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 761:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 848              		.loc 1 761 0
 849 0132 386A     		ldr	r0, [r7, #32]	@, pxQueue
 850 0134 FFF7FEFF 		bl	prvUnlockQueue	@
 762:FreeRTOS/queue.c **** 
 763:FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 764:FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 765:FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 766:FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 767:FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 768:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 851              		.loc 1 768 0
 852 0138 FFF7FEFF 		bl	xTaskResumeAll	@
 853 013c 0346     		mov	r3, r0	@ D.5963,
 854 013e 002B     		cmp	r3, #0	@ D.5963,
 855 0140 0FD1     		bne	.L67	@,
 769:FreeRTOS/queue.c **** 				{
 770:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 856              		.loc 1 770 0
 857 0142 FFF7FEFF 		bl	vPortYield	@
 858 0146 0CE0     		b	.L67	@
 859              	.L64:
 771:FreeRTOS/queue.c **** 				}
 772:FreeRTOS/queue.c **** 			}
 773:FreeRTOS/queue.c **** 			else
 774:FreeRTOS/queue.c **** 			{
 775:FreeRTOS/queue.c **** 				/* Try again. */
 776:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 860              		.loc 1 776 0
 861 0148 386A     		ldr	r0, [r7, #32]	@, pxQueue
 862 014a FFF7FEFF 		bl	prvUnlockQueue	@
 777:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 863              		.loc 1 777 0
 864 014e FFF7FEFF 		bl	xTaskResumeAll	@
 865 0152 84E7     		b	.L52	@
 866              	.L63:
 778:FreeRTOS/queue.c **** 			}
 779:FreeRTOS/queue.c **** 		}
 780:FreeRTOS/queue.c **** 		else
 781:FreeRTOS/queue.c **** 		{
 782:FreeRTOS/queue.c **** 			/* The timeout has expired. */
 783:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 867              		.loc 1 783 0
 868 0154 386A     		ldr	r0, [r7, #32]	@, pxQueue
 869 0156 FFF7FEFF 		bl	prvUnlockQueue	@
 784:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 30


 870              		.loc 1 784 0
 871 015a FFF7FEFF 		bl	xTaskResumeAll	@
 785:FreeRTOS/queue.c **** 
 786:FreeRTOS/queue.c **** 			/* Return to the original privilege level before exiting the
 787:FreeRTOS/queue.c **** 			function. */
 788:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 789:FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 872              		.loc 1 789 0
 873 015e 0023     		movs	r3, #0	@ D.5961,
 874 0160 00E0     		b	.L68	@
 875              	.L67:
 790:FreeRTOS/queue.c **** 		}
 791:FreeRTOS/queue.c **** 	}
 876              		.loc 1 791 0 discriminator 5
 877 0162 7CE7     		b	.L52	@
 878              	.L68:
 792:FreeRTOS/queue.c **** }
 879              		.loc 1 792 0 discriminator 6
 880 0164 1846     		mov	r0, r3	@, <retval>
 881 0166 2837     		adds	r7, r7, #40	@,,
 882              		.cfi_def_cfa_offset 8
 883 0168 BD46     		mov	sp, r7	@,
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed	@
 886 016a 80BD     		pop	{r7, pc}	@
 887              		.cfi_endproc
 888              	.LFE7:
 889              		.size	xQueueGenericSend, .-xQueueGenericSend
 890              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 891              		.align	2
 892              		.global	xQueueGenericSendFromISR
 893              		.thumb
 894              		.thumb_func
 895              		.type	xQueueGenericSendFromISR, %function
 896              	xQueueGenericSendFromISR:
 897              	.LFB8:
 793:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 794:FreeRTOS/queue.c **** 
 795:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 796:FreeRTOS/queue.c **** 
 797:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTic
 798:FreeRTOS/queue.c **** 	{
 799:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 800:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 801:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 802:FreeRTOS/queue.c **** 
 803:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 804:FreeRTOS/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 805:FreeRTOS/queue.c **** 
 806:FreeRTOS/queue.c **** 		for( ;; )
 807:FreeRTOS/queue.c **** 		{
 808:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 809:FreeRTOS/queue.c **** 			{
 810:FreeRTOS/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 811:FreeRTOS/queue.c **** 				the highest priority task wanting to access the queue. */
 812:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 813:FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 31


 814:FreeRTOS/queue.c **** 					traceQUEUE_SEND( pxQueue );
 815:FreeRTOS/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 816:FreeRTOS/queue.c **** 
 817:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 818:FreeRTOS/queue.c **** 					queue then unblock it now. */
 819:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 820:FreeRTOS/queue.c **** 					{
 821:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 822:FreeRTOS/queue.c **** 						{
 823:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 824:FreeRTOS/queue.c **** 							our own so yield immediately. */
 825:FreeRTOS/queue.c **** 							portYIELD_WITHIN_API();
 826:FreeRTOS/queue.c **** 						}
 827:FreeRTOS/queue.c **** 						else
 828:FreeRTOS/queue.c **** 						{
 829:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 830:FreeRTOS/queue.c **** 						}
 831:FreeRTOS/queue.c **** 					}
 832:FreeRTOS/queue.c **** 					else
 833:FreeRTOS/queue.c **** 					{
 834:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 835:FreeRTOS/queue.c **** 					}
 836:FreeRTOS/queue.c **** 
 837:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 838:FreeRTOS/queue.c **** 					return pdPASS;
 839:FreeRTOS/queue.c **** 				}
 840:FreeRTOS/queue.c **** 				else
 841:FreeRTOS/queue.c **** 				{
 842:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 843:FreeRTOS/queue.c **** 					{
 844:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 845:FreeRTOS/queue.c **** 						return errQUEUE_FULL;
 846:FreeRTOS/queue.c **** 					}
 847:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 848:FreeRTOS/queue.c **** 					{
 849:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 850:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 851:FreeRTOS/queue.c **** 					}
 852:FreeRTOS/queue.c **** 				}
 853:FreeRTOS/queue.c **** 			}
 854:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 855:FreeRTOS/queue.c **** 
 856:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 857:FreeRTOS/queue.c **** 			{
 858:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 859:FreeRTOS/queue.c **** 				{
 860:FreeRTOS/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 861:FreeRTOS/queue.c **** 					{
 862:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 863:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 864:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
 865:FreeRTOS/queue.c **** 					}
 866:FreeRTOS/queue.c **** 					else
 867:FreeRTOS/queue.c **** 					{
 868:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 869:FreeRTOS/queue.c **** 					}
 870:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 32


 871:FreeRTOS/queue.c **** 				else
 872:FreeRTOS/queue.c **** 				{
 873:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 874:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 875:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 876:FreeRTOS/queue.c **** 				}
 877:FreeRTOS/queue.c **** 			}
 878:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 879:FreeRTOS/queue.c **** 		}
 880:FreeRTOS/queue.c **** 	}
 881:FreeRTOS/queue.c **** 
 882:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 883:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 884:FreeRTOS/queue.c **** 
 885:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 886:FreeRTOS/queue.c **** 
 887:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait
 888:FreeRTOS/queue.c **** 	{
 889:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 890:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 891:FreeRTOS/queue.c **** 	int8_t *pcOriginalReadPosition;
 892:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 893:FreeRTOS/queue.c **** 
 894:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 895:FreeRTOS/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 896:FreeRTOS/queue.c **** 
 897:FreeRTOS/queue.c **** 		for( ;; )
 898:FreeRTOS/queue.c **** 		{
 899:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 900:FreeRTOS/queue.c **** 			{
 901:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 902:FreeRTOS/queue.c **** 				{
 903:FreeRTOS/queue.c **** 					/* Remember our read position in case we are just peeking. */
 904:FreeRTOS/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 905:FreeRTOS/queue.c **** 
 906:FreeRTOS/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 907:FreeRTOS/queue.c **** 
 908:FreeRTOS/queue.c **** 					if( xJustPeeking == pdFALSE )
 909:FreeRTOS/queue.c **** 					{
 910:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 911:FreeRTOS/queue.c **** 
 912:FreeRTOS/queue.c **** 						/* Data is actually being removed (not just peeked). */
 913:FreeRTOS/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 914:FreeRTOS/queue.c **** 
 915:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 916:FreeRTOS/queue.c **** 						{
 917:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 918:FreeRTOS/queue.c **** 							{
 919:FreeRTOS/queue.c **** 								/* Record the information required to implement
 920:FreeRTOS/queue.c **** 								priority inheritance should it become necessary. */
 921:FreeRTOS/queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 922:FreeRTOS/queue.c **** 							}
 923:FreeRTOS/queue.c **** 							else
 924:FreeRTOS/queue.c **** 							{
 925:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 926:FreeRTOS/queue.c **** 							}
 927:FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 33


 928:FreeRTOS/queue.c **** 						#endif
 929:FreeRTOS/queue.c **** 
 930:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 931:FreeRTOS/queue.c **** 						{
 932:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 933:FreeRTOS/queue.c **** 							{
 934:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 935:FreeRTOS/queue.c **** 							}
 936:FreeRTOS/queue.c **** 							else
 937:FreeRTOS/queue.c **** 							{
 938:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 939:FreeRTOS/queue.c **** 							}
 940:FreeRTOS/queue.c **** 						}
 941:FreeRTOS/queue.c **** 					}
 942:FreeRTOS/queue.c **** 					else
 943:FreeRTOS/queue.c **** 					{
 944:FreeRTOS/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 945:FreeRTOS/queue.c **** 
 946:FreeRTOS/queue.c **** 						/* We are not removing the data, so reset our read
 947:FreeRTOS/queue.c **** 						pointer. */
 948:FreeRTOS/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 949:FreeRTOS/queue.c **** 
 950:FreeRTOS/queue.c **** 						/* The data is being left in the queue, so see if there are
 951:FreeRTOS/queue.c **** 						any other tasks waiting for the data. */
 952:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 953:FreeRTOS/queue.c **** 						{
 954:FreeRTOS/queue.c **** 							/* Tasks that are removed from the event list will get added to
 955:FreeRTOS/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 956:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 957:FreeRTOS/queue.c **** 							{
 958:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority than this task. */
 959:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 960:FreeRTOS/queue.c **** 							}
 961:FreeRTOS/queue.c **** 							else
 962:FreeRTOS/queue.c **** 							{
 963:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 964:FreeRTOS/queue.c **** 							}
 965:FreeRTOS/queue.c **** 						}
 966:FreeRTOS/queue.c **** 						else
 967:FreeRTOS/queue.c **** 						{
 968:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 969:FreeRTOS/queue.c **** 						}
 970:FreeRTOS/queue.c **** 					}
 971:FreeRTOS/queue.c **** 
 972:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 973:FreeRTOS/queue.c **** 					return pdPASS;
 974:FreeRTOS/queue.c **** 				}
 975:FreeRTOS/queue.c **** 				else
 976:FreeRTOS/queue.c **** 				{
 977:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 978:FreeRTOS/queue.c **** 					{
 979:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 980:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 981:FreeRTOS/queue.c **** 						return errQUEUE_EMPTY;
 982:FreeRTOS/queue.c **** 					}
 983:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 984:FreeRTOS/queue.c **** 					{
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 34


 985:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 986:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 987:FreeRTOS/queue.c **** 					}
 988:FreeRTOS/queue.c **** 				}
 989:FreeRTOS/queue.c **** 			}
 990:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 991:FreeRTOS/queue.c **** 
 992:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 993:FreeRTOS/queue.c **** 			{
 994:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 995:FreeRTOS/queue.c **** 				{
 996:FreeRTOS/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 997:FreeRTOS/queue.c **** 					{
 998:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 999:FreeRTOS/queue.c **** 
1000:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1001:FreeRTOS/queue.c **** 						{
1002:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1003:FreeRTOS/queue.c **** 							{
1004:FreeRTOS/queue.c **** 								taskENTER_CRITICAL();
1005:FreeRTOS/queue.c **** 								{
1006:FreeRTOS/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1007:FreeRTOS/queue.c **** 								}
1008:FreeRTOS/queue.c **** 								taskEXIT_CRITICAL();
1009:FreeRTOS/queue.c **** 							}
1010:FreeRTOS/queue.c **** 							else
1011:FreeRTOS/queue.c **** 							{
1012:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1013:FreeRTOS/queue.c **** 							}
1014:FreeRTOS/queue.c **** 						}
1015:FreeRTOS/queue.c **** 						#endif
1016:FreeRTOS/queue.c **** 
1017:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1018:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
1019:FreeRTOS/queue.c **** 					}
1020:FreeRTOS/queue.c **** 					else
1021:FreeRTOS/queue.c **** 					{
1022:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1023:FreeRTOS/queue.c **** 					}
1024:FreeRTOS/queue.c **** 				}
1025:FreeRTOS/queue.c **** 				else
1026:FreeRTOS/queue.c **** 				{
1027:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1028:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1029:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1030:FreeRTOS/queue.c **** 				}
1031:FreeRTOS/queue.c **** 			}
1032:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
1033:FreeRTOS/queue.c **** 		}
1034:FreeRTOS/queue.c **** 	}
1035:FreeRTOS/queue.c **** 
1036:FreeRTOS/queue.c **** 
1037:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1038:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1039:FreeRTOS/queue.c **** 
1040:FreeRTOS/queue.c **** BaseT_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseT_t *
1041:FreeRTOS/queue.c **** {
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 35


 898              		.loc 1 1041 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 32
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 80B5     		push	{r7, lr}	@
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 88B0     		sub	sp, sp, #32	@,,
 907              		.cfi_def_cfa_offset 40
 908 0004 00AF     		add	r7, sp, #0	@,,
 909              		.cfi_def_cfa_register 7
 910 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 911 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 912 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
 913 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
1042:FreeRTOS/queue.c **** BaseT_t xReturn;
1043:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1044:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 914              		.loc 1 1044 0
 915 000e FB68     		ldr	r3, [r7, #12]	@ tmp125, xQueue
 916 0010 BB61     		str	r3, [r7, #24]	@ tmp125, pxQueue
1045:FreeRTOS/queue.c **** 
1046:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 917              		.loc 1 1046 0
 918 0012 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 919 0014 002B     		cmp	r3, #0	@ tmp126,
 920 0016 02D1     		bne	.L70	@,
 921              		.loc 1 1046 0 is_stmt 0 discriminator 1
 922 0018 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 923              	.L71:
 924 001c FEE7     		b	.L71	@
 925              	.L70:
1047:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 926              		.loc 1 1047 0 is_stmt 1
 927 001e BB68     		ldr	r3, [r7, #8]	@ tmp127, pvItemToQueue
 928 0020 002B     		cmp	r3, #0	@ tmp127,
 929 0022 03D1     		bne	.L72	@,
 930              		.loc 1 1047 0 is_stmt 0 discriminator 2
 931 0024 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 932 0026 1B6C     		ldr	r3, [r3, #64]	@ D.5966, pxQueue_5->uxItemSize
 933 0028 002B     		cmp	r3, #0	@ D.5966,
 934 002a 01D1     		bne	.L73	@,
 935              	.L72:
 936              		.loc 1 1047 0 discriminator 3
 937 002c 0123     		movs	r3, #1	@ D.5965,
 938 002e 00E0     		b	.L74	@
 939              	.L73:
 940              		.loc 1 1047 0 discriminator 4
 941 0030 0023     		movs	r3, #0	@ D.5965,
 942              	.L74:
 943              		.loc 1 1047 0 discriminator 6
 944 0032 002B     		cmp	r3, #0	@ D.5965,
 945 0034 02D1     		bne	.L75	@,
 946              		.loc 1 1047 0 discriminator 7
 947 0036 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 948              	.L76:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 36


 949              		.loc 1 1047 0 discriminator 2
 950 003a FEE7     		b	.L76	@
 951              	.L75:
1048:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 952              		.loc 1 1048 0 is_stmt 1
 953 003c 3B68     		ldr	r3, [r7]	@ tmp129, xCopyPosition
 954 003e 022B     		cmp	r3, #2	@ tmp129,
 955 0040 03D1     		bne	.L77	@,
 956              		.loc 1 1048 0 is_stmt 0 discriminator 2
 957 0042 BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
 958 0044 DB6B     		ldr	r3, [r3, #60]	@ D.5966, pxQueue_5->uxLength
 959 0046 012B     		cmp	r3, #1	@ D.5966,
 960 0048 01D1     		bne	.L78	@,
 961              	.L77:
 962              		.loc 1 1048 0 discriminator 3
 963 004a 0123     		movs	r3, #1	@ D.5965,
 964 004c 00E0     		b	.L79	@
 965              	.L78:
 966              		.loc 1 1048 0 discriminator 4
 967 004e 0023     		movs	r3, #0	@ D.5965,
 968              	.L79:
 969              		.loc 1 1048 0 discriminator 6
 970 0050 002B     		cmp	r3, #0	@ D.5965,
 971 0052 02D1     		bne	.L80	@,
 972              		.loc 1 1048 0 discriminator 7
 973 0054 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 974              	.L81:
 975              		.loc 1 1048 0 discriminator 3
 976 0058 FEE7     		b	.L81	@
 977              	.L80:
1049:FreeRTOS/queue.c **** 
1050:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1051:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1052:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1053:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1054:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1055:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1056:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1057:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1058:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1059:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1060:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1061:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1062:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1063:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1064:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 978              		.loc 1 1064 0 is_stmt 1
 979 005a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1065:FreeRTOS/queue.c **** 
1066:FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1067:FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1068:FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1069:FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1070:FreeRTOS/queue.c **** 	post). */
1071:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 980              		.loc 1 1071 0
 981 005e FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 37


 982 0062 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
1072:FreeRTOS/queue.c **** 	{
1073:FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 983              		.loc 1 1073 0
 984 0064 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 985 0066 9A6B     		ldr	r2, [r3, #56]	@ D.5966, pxQueue_5->uxMessagesWaiting
 986 0068 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 987 006a DB6B     		ldr	r3, [r3, #60]	@ D.5966, pxQueue_5->uxLength
 988 006c 9A42     		cmp	r2, r3	@ D.5966, D.5966
 989 006e 02D3     		bcc	.L82	@,
 990              		.loc 1 1073 0 is_stmt 0 discriminator 1
 991 0070 3B68     		ldr	r3, [r7]	@ tmp133, xCopyPosition
 992 0072 022B     		cmp	r3, #2	@ tmp133,
 993 0074 2DD1     		bne	.L83	@,
 994              	.L82:
1074:FreeRTOS/queue.c **** 		{
1075:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1076:FreeRTOS/queue.c **** 
1077:FreeRTOS/queue.c **** 			if( prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition ) != pdFALSE )
 995              		.loc 1 1077 0 is_stmt 1
 996 0076 B869     		ldr	r0, [r7, #24]	@, pxQueue
 997 0078 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 998 007a 3A68     		ldr	r2, [r7]	@, xCopyPosition
 999 007c FFF7FEFF 		bl	prvCopyDataToQueue	@
 1000 0080 0346     		mov	r3, r0	@ D.5967,
 1001 0082 002B     		cmp	r3, #0	@ D.5967,
 1002 0084 05D0     		beq	.L84	@,
1078:FreeRTOS/queue.c **** 			{
1079:FreeRTOS/queue.c **** 				/* This is a special case that can only be executed if a task
1080:FreeRTOS/queue.c **** 				holds multiple mutexes and then gives the mutexes back in an
1081:FreeRTOS/queue.c **** 				order that is different to that in which they were taken. */
1082:FreeRTOS/queue.c **** 				if( pxHigherPriorityTaskWoken != NULL )
 1003              		.loc 1 1082 0
 1004 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1005 0088 002B     		cmp	r3, #0	@ tmp134,
 1006 008a 02D0     		beq	.L84	@,
1083:FreeRTOS/queue.c **** 				{
1084:FreeRTOS/queue.c **** 					*pxHigherPriorityTaskWoken = pdTRUE;
 1007              		.loc 1 1084 0
 1008 008c 7B68     		ldr	r3, [r7, #4]	@ tmp135, pxHigherPriorityTaskWoken
 1009 008e 0122     		movs	r2, #1	@ tmp136,
 1010 0090 1A60     		str	r2, [r3]	@ tmp136, *pxHigherPriorityTaskWoken_19(D)
 1011              	.L84:
1085:FreeRTOS/queue.c **** 				}
1086:FreeRTOS/queue.c **** 				else
1087:FreeRTOS/queue.c **** 				{
1088:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1089:FreeRTOS/queue.c **** 				}
1090:FreeRTOS/queue.c **** 			}
1091:FreeRTOS/queue.c **** 
1092:FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1093:FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1094:FreeRTOS/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1012              		.loc 1 1094 0
 1013 0092 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1014 0094 9B6C     		ldr	r3, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1015 0096 B3F1FF3F 		cmp	r3, #-1	@ D.5967,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 38


 1016 009a 12D1     		bne	.L85	@,
1095:FreeRTOS/queue.c **** 			{
1096:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1097:FreeRTOS/queue.c **** 				{
1098:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1099:FreeRTOS/queue.c **** 					{
1100:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1101:FreeRTOS/queue.c **** 						{
1102:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
1103:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
1104:FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
1105:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1106:FreeRTOS/queue.c **** 							{
1107:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1108:FreeRTOS/queue.c **** 							}
1109:FreeRTOS/queue.c **** 							else
1110:FreeRTOS/queue.c **** 							{
1111:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1112:FreeRTOS/queue.c **** 							}
1113:FreeRTOS/queue.c **** 						}
1114:FreeRTOS/queue.c **** 						else
1115:FreeRTOS/queue.c **** 						{
1116:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1117:FreeRTOS/queue.c **** 						}
1118:FreeRTOS/queue.c **** 					}
1119:FreeRTOS/queue.c **** 					else
1120:FreeRTOS/queue.c **** 					{
1121:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1122:FreeRTOS/queue.c **** 						{
1123:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1124:FreeRTOS/queue.c **** 							{
1125:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1126:FreeRTOS/queue.c **** 								record that a context switch is required. */
1127:FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1128:FreeRTOS/queue.c **** 								{
1129:FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1130:FreeRTOS/queue.c **** 								}
1131:FreeRTOS/queue.c **** 								else
1132:FreeRTOS/queue.c **** 								{
1133:FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1134:FreeRTOS/queue.c **** 								}
1135:FreeRTOS/queue.c **** 							}
1136:FreeRTOS/queue.c **** 							else
1137:FreeRTOS/queue.c **** 							{
1138:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1139:FreeRTOS/queue.c **** 							}
1140:FreeRTOS/queue.c **** 						}
1141:FreeRTOS/queue.c **** 						else
1142:FreeRTOS/queue.c **** 						{
1143:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1144:FreeRTOS/queue.c **** 						}
1145:FreeRTOS/queue.c **** 					}
1146:FreeRTOS/queue.c **** 				}
1147:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1148:FreeRTOS/queue.c **** 				{
1149:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1017              		.loc 1 1149 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 39


 1018 009c BB69     		ldr	r3, [r7, #24]	@ tmp138, pxQueue
 1019 009e 5B6A     		ldr	r3, [r3, #36]	@ D.5966, pxQueue_5->xTasksWaitingToReceive.uxNumberOfItems
 1020 00a0 002B     		cmp	r3, #0	@ D.5966,
 1021 00a2 13D0     		beq	.L86	@,
1150:FreeRTOS/queue.c **** 					{
1151:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1022              		.loc 1 1151 0
 1023 00a4 BB69     		ldr	r3, [r7, #24]	@ tmp139, pxQueue
 1024 00a6 2433     		adds	r3, r3, #36	@ D.5968, tmp139,
 1025 00a8 1846     		mov	r0, r3	@, D.5968
 1026 00aa FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1027 00ae 0346     		mov	r3, r0	@ D.5967,
 1028 00b0 002B     		cmp	r3, #0	@ D.5967,
 1029 00b2 0BD0     		beq	.L86	@,
1152:FreeRTOS/queue.c **** 						{
1153:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1154:FreeRTOS/queue.c **** 							context	switch is required. */
1155:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1030              		.loc 1 1155 0
 1031 00b4 7B68     		ldr	r3, [r7, #4]	@ tmp140, pxHigherPriorityTaskWoken
 1032 00b6 002B     		cmp	r3, #0	@ tmp140,
 1033 00b8 08D0     		beq	.L86	@,
1156:FreeRTOS/queue.c **** 							{
1157:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1034              		.loc 1 1157 0
 1035 00ba 7B68     		ldr	r3, [r7, #4]	@ tmp141, pxHigherPriorityTaskWoken
 1036 00bc 0122     		movs	r2, #1	@ tmp142,
 1037 00be 1A60     		str	r2, [r3]	@ tmp142, *pxHigherPriorityTaskWoken_19(D)
 1038 00c0 04E0     		b	.L86	@
 1039              	.L85:
1158:FreeRTOS/queue.c **** 							}
1159:FreeRTOS/queue.c **** 							else
1160:FreeRTOS/queue.c **** 							{
1161:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1162:FreeRTOS/queue.c **** 							}
1163:FreeRTOS/queue.c **** 						}
1164:FreeRTOS/queue.c **** 						else
1165:FreeRTOS/queue.c **** 						{
1166:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1167:FreeRTOS/queue.c **** 						}
1168:FreeRTOS/queue.c **** 					}
1169:FreeRTOS/queue.c **** 					else
1170:FreeRTOS/queue.c **** 					{
1171:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1172:FreeRTOS/queue.c **** 					}
1173:FreeRTOS/queue.c **** 				}
1174:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1175:FreeRTOS/queue.c **** 			}
1176:FreeRTOS/queue.c **** 			else
1177:FreeRTOS/queue.c **** 			{
1178:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1179:FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1180:FreeRTOS/queue.c **** 				++( pxQueue->xTxLock );
 1040              		.loc 1 1180 0
 1041 00c2 BB69     		ldr	r3, [r7, #24]	@ tmp143, pxQueue
 1042 00c4 9B6C     		ldr	r3, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1043 00c6 5A1C     		adds	r2, r3, #1	@ D.5967, D.5967,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 40


 1044 00c8 BB69     		ldr	r3, [r7, #24]	@ tmp144, pxQueue
 1045 00ca 9A64     		str	r2, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1046              	.L86:
1181:FreeRTOS/queue.c **** 			}
1182:FreeRTOS/queue.c **** 
1183:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1047              		.loc 1 1183 0
 1048 00cc 0123     		movs	r3, #1	@ tmp145,
 1049 00ce FB61     		str	r3, [r7, #28]	@ tmp145, xReturn
 1050 00d0 01E0     		b	.L87	@
 1051              	.L83:
1184:FreeRTOS/queue.c **** 		}
1185:FreeRTOS/queue.c **** 		else
1186:FreeRTOS/queue.c **** 		{
1187:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1188:FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
 1052              		.loc 1 1188 0
 1053 00d2 0023     		movs	r3, #0	@ tmp146,
 1054 00d4 FB61     		str	r3, [r7, #28]	@ tmp146, xReturn
 1055              	.L87:
1189:FreeRTOS/queue.c **** 		}
1190:FreeRTOS/queue.c **** 	}
1191:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1056              		.loc 1 1191 0
 1057 00d6 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1058 00d8 FFF7FEFF 		bl	vPortClearInterruptMask	@
1192:FreeRTOS/queue.c **** 
1193:FreeRTOS/queue.c **** 	return xReturn;
 1059              		.loc 1 1193 0
 1060 00dc FB69     		ldr	r3, [r7, #28]	@ D.5969, xReturn
1194:FreeRTOS/queue.c **** }
 1061              		.loc 1 1194 0
 1062 00de 1846     		mov	r0, r3	@, <retval>
 1063 00e0 2037     		adds	r7, r7, #32	@,,
 1064              		.cfi_def_cfa_offset 8
 1065 00e2 BD46     		mov	sp, r7	@,
 1066              		.cfi_def_cfa_register 13
 1067              		@ sp needed	@
 1068 00e4 80BD     		pop	{r7, pc}	@
 1069              		.cfi_endproc
 1070              	.LFE8:
 1071              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1072 00e6 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1073              		.align	2
 1074              		.global	xQueueGenericReceive
 1075              		.thumb
 1076              		.thumb_func
 1077              		.type	xQueueGenericReceive, %function
 1078              	xQueueGenericReceive:
 1079              	.LFB9:
1195:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1196:FreeRTOS/queue.c **** 
1197:FreeRTOS/queue.c **** BaseT_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait, co
1198:FreeRTOS/queue.c **** {
 1080              		.loc 1 1198 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 41


 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}	@
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 8AB0     		sub	sp, sp, #40	@,,
 1089              		.cfi_def_cfa_offset 48
 1090 0004 00AF     		add	r7, sp, #0	@,,
 1091              		.cfi_def_cfa_register 7
 1092 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1093 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1094 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
 1095 000c 3B60     		str	r3, [r7]	@ xJustPeeking, xJustPeeking
1199:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE;
 1096              		.loc 1 1199 0
 1097 000e 0023     		movs	r3, #0	@ tmp135,
 1098 0010 7B62     		str	r3, [r7, #36]	@ tmp135, xEntryTimeSet
1200:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1201:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1202:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1099              		.loc 1 1202 0
 1100 0012 FB68     		ldr	r3, [r7, #12]	@ tmp136, xQueue
 1101 0014 3B62     		str	r3, [r7, #32]	@ tmp136, pxQueue
1203:FreeRTOS/queue.c **** 
1204:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1102              		.loc 1 1204 0
 1103 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 1104 0018 002B     		cmp	r3, #0	@ tmp137,
 1105 001a 02D1     		bne	.L90	@,
 1106              		.loc 1 1204 0 is_stmt 0 discriminator 1
 1107 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1108              	.L91:
 1109 0020 FEE7     		b	.L91	@
 1110              	.L90:
1205:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1111              		.loc 1 1205 0 is_stmt 1
 1112 0022 BB68     		ldr	r3, [r7, #8]	@ tmp138, pvBuffer
 1113 0024 002B     		cmp	r3, #0	@ tmp138,
 1114 0026 03D1     		bne	.L92	@,
 1115              		.loc 1 1205 0 is_stmt 0 discriminator 2
 1116 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 1117 002a 1B6C     		ldr	r3, [r3, #64]	@ D.5972, pxQueue_7->uxItemSize
 1118 002c 002B     		cmp	r3, #0	@ D.5972,
 1119 002e 01D1     		bne	.L93	@,
 1120              	.L92:
 1121              		.loc 1 1205 0 discriminator 3
 1122 0030 0123     		movs	r3, #1	@ D.5970,
 1123 0032 00E0     		b	.L94	@
 1124              	.L93:
 1125              		.loc 1 1205 0 discriminator 4
 1126 0034 0023     		movs	r3, #0	@ D.5970,
 1127              	.L94:
 1128              		.loc 1 1205 0 discriminator 6
 1129 0036 002B     		cmp	r3, #0	@ D.5970,
 1130 0038 02D1     		bne	.L95	@,
 1131              		.loc 1 1205 0 discriminator 7
 1132 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 42


 1133              	.L96:
 1134              		.loc 1 1205 0 discriminator 2
 1135 003e FEE7     		b	.L96	@
 1136              	.L95:
1206:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1207:FreeRTOS/queue.c **** 	{
1208:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1209:FreeRTOS/queue.c **** 	}
1210:FreeRTOS/queue.c **** 	#endif
1211:FreeRTOS/queue.c **** 
1212:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1213:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1214:FreeRTOS/queue.c **** 	of execution time efficiency. */
1215:FreeRTOS/queue.c **** 
1216:FreeRTOS/queue.c **** 	for( ;; )
1217:FreeRTOS/queue.c **** 	{
1218:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 1137              		.loc 1 1218 0 is_stmt 1
 1138 0040 FFF7FEFF 		bl	vPortEnterCritical	@
1219:FreeRTOS/queue.c **** 		{
1220:FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running we must be
1221:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue. */
1222:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1139              		.loc 1 1222 0
 1140 0044 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 1141 0046 9B6B     		ldr	r3, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
 1142 0048 002B     		cmp	r3, #0	@ D.5972,
 1143 004a 3BD0     		beq	.L97	@,
1223:FreeRTOS/queue.c **** 			{
1224:FreeRTOS/queue.c **** 				/* Remember the read position in case the queue is only being
1225:FreeRTOS/queue.c **** 				peeked. */
1226:FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1144              		.loc 1 1226 0
 1145 004c 3B6A     		ldr	r3, [r7, #32]	@ tmp141, pxQueue
 1146 004e DB68     		ldr	r3, [r3, #12]	@ tmp142, pxQueue_7->u.pcReadFrom
 1147 0050 FB61     		str	r3, [r7, #28]	@ tmp142, pcOriginalReadPosition
1227:FreeRTOS/queue.c **** 
1228:FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1148              		.loc 1 1228 0
 1149 0052 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1150 0054 B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1151 0056 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1229:FreeRTOS/queue.c **** 
1230:FreeRTOS/queue.c **** 				if( xJustPeeking == pdFALSE )
 1152              		.loc 1 1230 0
 1153 005a 3B68     		ldr	r3, [r7]	@ tmp143, xJustPeeking
 1154 005c 002B     		cmp	r3, #0	@ tmp143,
 1155 005e 1CD1     		bne	.L98	@,
1231:FreeRTOS/queue.c **** 				{
1232:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1233:FreeRTOS/queue.c **** 
1234:FreeRTOS/queue.c **** 					/* Actually removing data, not just peeking. */
1235:FreeRTOS/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 1156              		.loc 1 1235 0
 1157 0060 3B6A     		ldr	r3, [r7, #32]	@ tmp144, pxQueue
 1158 0062 9B6B     		ldr	r3, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
 1159 0064 5A1E     		subs	r2, r3, #1	@ D.5972, D.5972,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 43


 1160 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
 1161 0068 9A63     		str	r2, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
1236:FreeRTOS/queue.c **** 
1237:FreeRTOS/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1238:FreeRTOS/queue.c **** 					{
1239:FreeRTOS/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1162              		.loc 1 1239 0
 1163 006a 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 1164 006c 1B68     		ldr	r3, [r3]	@ D.5974, pxQueue_7->pcHead
 1165 006e 002B     		cmp	r3, #0	@ D.5974,
 1166 0070 04D1     		bne	.L99	@,
1240:FreeRTOS/queue.c **** 						{
1241:FreeRTOS/queue.c **** 							/* Record the information required to implement
1242:FreeRTOS/queue.c **** 							priority inheritance should it become necessary. */
1243:FreeRTOS/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
 1167              		.loc 1 1243 0
 1168 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount	@
 1169 0076 0246     		mov	r2, r0	@ D.5976,
 1170 0078 3B6A     		ldr	r3, [r7, #32]	@ tmp147, pxQueue
 1171 007a 5A60     		str	r2, [r3, #4]	@ D.5976, pxQueue_7->pcTail
 1172              	.L99:
1244:FreeRTOS/queue.c **** 						}
1245:FreeRTOS/queue.c **** 						else
1246:FreeRTOS/queue.c **** 						{
1247:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1248:FreeRTOS/queue.c **** 						}
1249:FreeRTOS/queue.c **** 					}
1250:FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1251:FreeRTOS/queue.c **** 
1252:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1173              		.loc 1 1252 0
 1174 007c 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 1175 007e 1B69     		ldr	r3, [r3, #16]	@ D.5972, pxQueue_7->xTasksWaitingToSend.uxNumberOfItems
 1176 0080 002B     		cmp	r3, #0	@ D.5972,
 1177 0082 1BD0     		beq	.L100	@,
1253:FreeRTOS/queue.c **** 					{
1254:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 1178              		.loc 1 1254 0
 1179 0084 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 1180 0086 1033     		adds	r3, r3, #16	@ D.5975, tmp149,
 1181 0088 1846     		mov	r0, r3	@, D.5975
 1182 008a FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1183 008e 0346     		mov	r3, r0	@ D.5973,
 1184 0090 012B     		cmp	r3, #1	@ D.5973,
 1185 0092 13D1     		bne	.L100	@,
1255:FreeRTOS/queue.c **** 						{
1256:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1186              		.loc 1 1256 0
 1187 0094 FFF7FEFF 		bl	vPortYield	@
 1188 0098 10E0     		b	.L100	@
 1189              	.L98:
1257:FreeRTOS/queue.c **** 						}
1258:FreeRTOS/queue.c **** 						else
1259:FreeRTOS/queue.c **** 						{
1260:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1261:FreeRTOS/queue.c **** 						}
1262:FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 44


1263:FreeRTOS/queue.c **** 					else
1264:FreeRTOS/queue.c **** 					{
1265:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1266:FreeRTOS/queue.c **** 					}
1267:FreeRTOS/queue.c **** 				}
1268:FreeRTOS/queue.c **** 				else
1269:FreeRTOS/queue.c **** 				{
1270:FreeRTOS/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1271:FreeRTOS/queue.c **** 
1272:FreeRTOS/queue.c **** 					/* The data is not being removed, so reset the read
1273:FreeRTOS/queue.c **** 					pointer. */
1274:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1190              		.loc 1 1274 0
 1191 009a 3B6A     		ldr	r3, [r7, #32]	@ tmp150, pxQueue
 1192 009c FA69     		ldr	r2, [r7, #28]	@ tmp151, pcOriginalReadPosition
 1193 009e DA60     		str	r2, [r3, #12]	@ tmp151, pxQueue_7->u.pcReadFrom
1275:FreeRTOS/queue.c **** 
1276:FreeRTOS/queue.c **** 					/* The data is being left in the queue, so see if there are
1277:FreeRTOS/queue.c **** 					any other tasks waiting for the data. */
1278:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1194              		.loc 1 1278 0
 1195 00a0 3B6A     		ldr	r3, [r7, #32]	@ tmp152, pxQueue
 1196 00a2 5B6A     		ldr	r3, [r3, #36]	@ D.5972, pxQueue_7->xTasksWaitingToReceive.uxNumberOfItems
 1197 00a4 002B     		cmp	r3, #0	@ D.5972,
 1198 00a6 09D0     		beq	.L100	@,
1279:FreeRTOS/queue.c **** 					{
1280:FreeRTOS/queue.c **** 						/* Tasks that are removed from the event list will get added to
1281:FreeRTOS/queue.c **** 						the pending ready list as the scheduler is still suspended. */
1282:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1199              		.loc 1 1282 0
 1200 00a8 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
 1201 00aa 2433     		adds	r3, r3, #36	@ D.5975, tmp153,
 1202 00ac 1846     		mov	r0, r3	@, D.5975
 1203 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1204 00b2 0346     		mov	r3, r0	@ D.5973,
 1205 00b4 002B     		cmp	r3, #0	@ D.5973,
 1206 00b6 01D0     		beq	.L100	@,
1283:FreeRTOS/queue.c **** 						{
1284:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority than this task. */
1285:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1207              		.loc 1 1285 0
 1208 00b8 FFF7FEFF 		bl	vPortYield	@
 1209              	.L100:
1286:FreeRTOS/queue.c **** 						}
1287:FreeRTOS/queue.c **** 						else
1288:FreeRTOS/queue.c **** 						{
1289:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:FreeRTOS/queue.c **** 						}
1291:FreeRTOS/queue.c **** 					}
1292:FreeRTOS/queue.c **** 					else
1293:FreeRTOS/queue.c **** 					{
1294:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1295:FreeRTOS/queue.c **** 					}
1296:FreeRTOS/queue.c **** 				}
1297:FreeRTOS/queue.c **** 
1298:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 1210              		.loc 1 1298 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 45


 1211 00bc FFF7FEFF 		bl	vPortExitCritical	@
1299:FreeRTOS/queue.c **** 				return pdPASS;
 1212              		.loc 1 1299 0
 1213 00c0 0123     		movs	r3, #1	@ D.5971,
 1214 00c2 66E0     		b	.L111	@
 1215              	.L97:
1300:FreeRTOS/queue.c **** 			}
1301:FreeRTOS/queue.c **** 			else
1302:FreeRTOS/queue.c **** 			{
1303:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 1216              		.loc 1 1303 0
 1217 00c4 7B68     		ldr	r3, [r7, #4]	@ D.5972, xTicksToWait
 1218 00c6 002B     		cmp	r3, #0	@ D.5972,
 1219 00c8 03D1     		bne	.L102	@,
1304:FreeRTOS/queue.c **** 				{
1305:FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1306:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1307:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 1220              		.loc 1 1307 0
 1221 00ca FFF7FEFF 		bl	vPortExitCritical	@
1308:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1309:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 1222              		.loc 1 1309 0
 1223 00ce 0023     		movs	r3, #0	@ D.5971,
 1224 00d0 5FE0     		b	.L111	@
 1225              	.L102:
1310:FreeRTOS/queue.c **** 				}
1311:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1226              		.loc 1 1311 0
 1227 00d2 7B6A     		ldr	r3, [r7, #36]	@ tmp154, xEntryTimeSet
 1228 00d4 002B     		cmp	r3, #0	@ tmp154,
 1229 00d6 06D1     		bne	.L103	@,
1312:FreeRTOS/queue.c **** 				{
1313:FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1314:FreeRTOS/queue.c **** 					configure the timeout structure. */
1315:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1230              		.loc 1 1315 0
 1231 00d8 07F11403 		add	r3, r7, #20	@ tmp155,,
 1232 00dc 1846     		mov	r0, r3	@, tmp155
 1233 00de FFF7FEFF 		bl	vTaskSetTimeOutState	@
1316:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1234              		.loc 1 1316 0
 1235 00e2 0123     		movs	r3, #1	@ tmp156,
 1236 00e4 7B62     		str	r3, [r7, #36]	@ tmp156, xEntryTimeSet
 1237              	.L103:
1317:FreeRTOS/queue.c **** 				}
1318:FreeRTOS/queue.c **** 				else
1319:FreeRTOS/queue.c **** 				{
1320:FreeRTOS/queue.c **** 					/* Entry time was already set. */
1321:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1322:FreeRTOS/queue.c **** 				}
1323:FreeRTOS/queue.c **** 			}
1324:FreeRTOS/queue.c **** 		}
1325:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 1238              		.loc 1 1325 0
 1239 00e6 FFF7FEFF 		bl	vPortExitCritical	@
1326:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 46


1327:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1328:FreeRTOS/queue.c **** 		now the critical section has been exited. */
1329:FreeRTOS/queue.c **** 
1330:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 1240              		.loc 1 1330 0
 1241 00ea FFF7FEFF 		bl	vTaskSuspendAll	@
1331:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1242              		.loc 1 1331 0
 1243 00ee FFF7FEFF 		bl	vPortEnterCritical	@
 1244 00f2 3B6A     		ldr	r3, [r7, #32]	@ tmp157, pxQueue
 1245 00f4 5B6C     		ldr	r3, [r3, #68]	@ D.5973, pxQueue_7->xRxLock
 1246 00f6 B3F1FF3F 		cmp	r3, #-1	@ D.5973,
 1247 00fa 02D1     		bne	.L104	@,
 1248              		.loc 1 1331 0 is_stmt 0 discriminator 1
 1249 00fc 3B6A     		ldr	r3, [r7, #32]	@ tmp158, pxQueue
 1250 00fe 0022     		movs	r2, #0	@ tmp159,
 1251 0100 5A64     		str	r2, [r3, #68]	@ tmp159, pxQueue_7->xRxLock
 1252              	.L104:
 1253              		.loc 1 1331 0 discriminator 3
 1254 0102 3B6A     		ldr	r3, [r7, #32]	@ tmp160, pxQueue
 1255 0104 9B6C     		ldr	r3, [r3, #72]	@ D.5973, pxQueue_7->xTxLock
 1256 0106 B3F1FF3F 		cmp	r3, #-1	@ D.5973,
 1257 010a 02D1     		bne	.L105	@,
 1258              		.loc 1 1331 0 discriminator 4
 1259 010c 3B6A     		ldr	r3, [r7, #32]	@ tmp161, pxQueue
 1260 010e 0022     		movs	r2, #0	@ tmp162,
 1261 0110 9A64     		str	r2, [r3, #72]	@ tmp162, pxQueue_7->xTxLock
 1262              	.L105:
 1263              		.loc 1 1331 0 discriminator 6
 1264 0112 FFF7FEFF 		bl	vPortExitCritical	@
1332:FreeRTOS/queue.c **** 
1333:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1334:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1265              		.loc 1 1334 0 is_stmt 1 discriminator 6
 1266 0116 07F11402 		add	r2, r7, #20	@ tmp163,,
 1267 011a 3B1D     		adds	r3, r7, #4	@ tmp164,,
 1268 011c 1046     		mov	r0, r2	@, tmp163
 1269 011e 1946     		mov	r1, r3	@, tmp164
 1270 0120 FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 1271 0124 0346     		mov	r3, r0	@ D.5973,
 1272 0126 002B     		cmp	r3, #0	@ D.5973,
 1273 0128 2BD1     		bne	.L106	@,
1335:FreeRTOS/queue.c **** 		{
1336:FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1274              		.loc 1 1336 0
 1275 012a 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1276 012c FFF7FEFF 		bl	prvIsQueueEmpty	@
 1277 0130 0346     		mov	r3, r0	@ D.5973,
 1278 0132 002B     		cmp	r3, #0	@ D.5973,
 1279 0134 1FD0     		beq	.L107	@,
1337:FreeRTOS/queue.c **** 			{
1338:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1339:FreeRTOS/queue.c **** 
1340:FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1341:FreeRTOS/queue.c **** 				{
1342:FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1280              		.loc 1 1342 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 47


 1281 0136 3B6A     		ldr	r3, [r7, #32]	@ tmp165, pxQueue
 1282 0138 1B68     		ldr	r3, [r3]	@ D.5974, pxQueue_7->pcHead
 1283 013a 002B     		cmp	r3, #0	@ D.5974,
 1284 013c 08D1     		bne	.L108	@,
1343:FreeRTOS/queue.c **** 					{
1344:FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
 1285              		.loc 1 1344 0
 1286 013e FFF7FEFF 		bl	vPortEnterCritical	@
1345:FreeRTOS/queue.c **** 						{
1346:FreeRTOS/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 1287              		.loc 1 1346 0
 1288 0142 3B6A     		ldr	r3, [r7, #32]	@ tmp166, pxQueue
 1289 0144 5B68     		ldr	r3, [r3, #4]	@ D.5974, pxQueue_7->pcTail
 1290 0146 1846     		mov	r0, r3	@, D.5974
 1291 0148 FFF7FEFF 		bl	vTaskPriorityInherit	@
1347:FreeRTOS/queue.c **** 						}
1348:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 1292              		.loc 1 1348 0
 1293 014c FFF7FEFF 		bl	vPortExitCritical	@
 1294              	.L108:
1349:FreeRTOS/queue.c **** 					}
1350:FreeRTOS/queue.c **** 					else
1351:FreeRTOS/queue.c **** 					{
1352:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1353:FreeRTOS/queue.c **** 					}
1354:FreeRTOS/queue.c **** 				}
1355:FreeRTOS/queue.c **** 				#endif
1356:FreeRTOS/queue.c **** 
1357:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1295              		.loc 1 1357 0
 1296 0150 3B6A     		ldr	r3, [r7, #32]	@ tmp167, pxQueue
 1297 0152 03F12402 		add	r2, r3, #36	@ D.5975, tmp167,
 1298 0156 7B68     		ldr	r3, [r7, #4]	@ D.5972, xTicksToWait
 1299 0158 1046     		mov	r0, r2	@, D.5975
 1300 015a 1946     		mov	r1, r3	@, D.5972
 1301 015c FFF7FEFF 		bl	vTaskPlaceOnEventList	@
1358:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1302              		.loc 1 1358 0
 1303 0160 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1304 0162 FFF7FEFF 		bl	prvUnlockQueue	@
1359:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1305              		.loc 1 1359 0
 1306 0166 FFF7FEFF 		bl	xTaskResumeAll	@
 1307 016a 0346     		mov	r3, r0	@ D.5973,
 1308 016c 002B     		cmp	r3, #0	@ D.5973,
 1309 016e 0FD1     		bne	.L110	@,
1360:FreeRTOS/queue.c **** 				{
1361:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 1310              		.loc 1 1361 0
 1311 0170 FFF7FEFF 		bl	vPortYield	@
 1312 0174 0CE0     		b	.L110	@
 1313              	.L107:
1362:FreeRTOS/queue.c **** 				}
1363:FreeRTOS/queue.c **** 				else
1364:FreeRTOS/queue.c **** 				{
1365:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1366:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 48


1367:FreeRTOS/queue.c **** 			}
1368:FreeRTOS/queue.c **** 			else
1369:FreeRTOS/queue.c **** 			{
1370:FreeRTOS/queue.c **** 				/* Try again. */
1371:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1314              		.loc 1 1371 0
 1315 0176 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1316 0178 FFF7FEFF 		bl	prvUnlockQueue	@
1372:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1317              		.loc 1 1372 0
 1318 017c FFF7FEFF 		bl	xTaskResumeAll	@
 1319 0180 5EE7     		b	.L95	@
 1320              	.L106:
1373:FreeRTOS/queue.c **** 			}
1374:FreeRTOS/queue.c **** 		}
1375:FreeRTOS/queue.c **** 		else
1376:FreeRTOS/queue.c **** 		{
1377:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 1321              		.loc 1 1377 0
 1322 0182 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1323 0184 FFF7FEFF 		bl	prvUnlockQueue	@
1378:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1324              		.loc 1 1378 0
 1325 0188 FFF7FEFF 		bl	xTaskResumeAll	@
1379:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1380:FreeRTOS/queue.c **** 			return errQUEUE_EMPTY;
 1326              		.loc 1 1380 0
 1327 018c 0023     		movs	r3, #0	@ D.5971,
 1328 018e 00E0     		b	.L111	@
 1329              	.L110:
1381:FreeRTOS/queue.c **** 		}
1382:FreeRTOS/queue.c **** 	}
 1330              		.loc 1 1382 0 discriminator 5
 1331 0190 56E7     		b	.L95	@
 1332              	.L111:
1383:FreeRTOS/queue.c **** }
 1333              		.loc 1 1383 0 discriminator 6
 1334 0192 1846     		mov	r0, r3	@, <retval>
 1335 0194 2837     		adds	r7, r7, #40	@,,
 1336              		.cfi_def_cfa_offset 8
 1337 0196 BD46     		mov	sp, r7	@,
 1338              		.cfi_def_cfa_register 13
 1339              		@ sp needed	@
 1340 0198 80BD     		pop	{r7, pc}	@
 1341              		.cfi_endproc
 1342              	.LFE9:
 1343              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1344 019a 00BF     		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1345              		.align	2
 1346              		.global	xQueueReceiveFromISR
 1347              		.thumb
 1348              		.thumb_func
 1349              		.type	xQueueReceiveFromISR, %function
 1350              	xQueueReceiveFromISR:
 1351              	.LFB10:
1384:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1385:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 49


1386:FreeRTOS/queue.c **** BaseT_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseT_t * const pxHigher
1387:FreeRTOS/queue.c **** {
 1352              		.loc 1 1387 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 32
 1355              		@ frame_needed = 1, uses_anonymous_args = 0
 1356 0000 80B5     		push	{r7, lr}	@
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 88B0     		sub	sp, sp, #32	@,,
 1361              		.cfi_def_cfa_offset 40
 1362 0004 00AF     		add	r7, sp, #0	@,,
 1363              		.cfi_def_cfa_register 7
 1364 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1365 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1366 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
1388:FreeRTOS/queue.c **** BaseT_t xReturn;
1389:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1390:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1367              		.loc 1 1390 0
 1368 000c FB68     		ldr	r3, [r7, #12]	@ tmp123, xQueue
 1369 000e BB61     		str	r3, [r7, #24]	@ tmp123, pxQueue
1391:FreeRTOS/queue.c **** 
1392:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1370              		.loc 1 1392 0
 1371 0010 BB69     		ldr	r3, [r7, #24]	@ tmp124, pxQueue
 1372 0012 002B     		cmp	r3, #0	@ tmp124,
 1373 0014 02D1     		bne	.L113	@,
 1374              		.loc 1 1392 0 is_stmt 0 discriminator 1
 1375 0016 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1376              	.L114:
 1377 001a FEE7     		b	.L114	@
 1378              	.L113:
1393:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1379              		.loc 1 1393 0 is_stmt 1
 1380 001c BB68     		ldr	r3, [r7, #8]	@ tmp125, pvBuffer
 1381 001e 002B     		cmp	r3, #0	@ tmp125,
 1382 0020 03D1     		bne	.L115	@,
 1383              		.loc 1 1393 0 is_stmt 0 discriminator 2
 1384 0022 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 1385 0024 1B6C     		ldr	r3, [r3, #64]	@ D.5978, pxQueue_4->uxItemSize
 1386 0026 002B     		cmp	r3, #0	@ D.5978,
 1387 0028 01D1     		bne	.L116	@,
 1388              	.L115:
 1389              		.loc 1 1393 0 discriminator 3
 1390 002a 0123     		movs	r3, #1	@ D.5977,
 1391 002c 00E0     		b	.L117	@
 1392              	.L116:
 1393              		.loc 1 1393 0 discriminator 4
 1394 002e 0023     		movs	r3, #0	@ D.5977,
 1395              	.L117:
 1396              		.loc 1 1393 0 discriminator 6
 1397 0030 002B     		cmp	r3, #0	@ D.5977,
 1398 0032 02D1     		bne	.L118	@,
 1399              		.loc 1 1393 0 discriminator 7
 1400 0034 FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 50


 1401              	.L119:
 1402              		.loc 1 1393 0 discriminator 2
 1403 0038 FEE7     		b	.L119	@
 1404              	.L118:
1394:FreeRTOS/queue.c **** 
1395:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1396:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1397:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1398:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1399:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1400:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1401:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1402:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1403:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1404:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1405:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1406:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1407:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1408:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1409:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1405              		.loc 1 1409 0 is_stmt 1
 1406 003a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1410:FreeRTOS/queue.c **** 
1411:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1407              		.loc 1 1411 0
 1408 003e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1409 0042 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
1412:FreeRTOS/queue.c **** 	{
1413:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1414:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1410              		.loc 1 1414 0
 1411 0044 BB69     		ldr	r3, [r7, #24]	@ tmp127, pxQueue
 1412 0046 9B6B     		ldr	r3, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
 1413 0048 002B     		cmp	r3, #0	@ D.5978,
 1414 004a 28D0     		beq	.L120	@,
1415:FreeRTOS/queue.c **** 		{
1416:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1417:FreeRTOS/queue.c **** 
1418:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1415              		.loc 1 1418 0
 1416 004c B869     		ldr	r0, [r7, #24]	@, pxQueue
 1417 004e B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1418 0050 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1419:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 1419              		.loc 1 1419 0
 1420 0054 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 1421 0056 9B6B     		ldr	r3, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
 1422 0058 5A1E     		subs	r2, r3, #1	@ D.5978, D.5978,
 1423 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxQueue
 1424 005c 9A63     		str	r2, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
1420:FreeRTOS/queue.c **** 
1421:FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1422:FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1423:FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1424:FreeRTOS/queue.c **** 			locked. */
1425:FreeRTOS/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 1425              		.loc 1 1425 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 51


 1426 005e BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
 1427 0060 5B6C     		ldr	r3, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1428 0062 B3F1FF3F 		cmp	r3, #-1	@ D.5979,
 1429 0066 12D1     		bne	.L121	@,
1426:FreeRTOS/queue.c **** 			{
1427:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1430              		.loc 1 1427 0
 1431 0068 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 1432 006a 1B69     		ldr	r3, [r3, #16]	@ D.5978, pxQueue_4->xTasksWaitingToSend.uxNumberOfItems
 1433 006c 002B     		cmp	r3, #0	@ D.5978,
 1434 006e 13D0     		beq	.L122	@,
1428:FreeRTOS/queue.c **** 				{
1429:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1435              		.loc 1 1429 0
 1436 0070 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 1437 0072 1033     		adds	r3, r3, #16	@ D.5980, tmp132,
 1438 0074 1846     		mov	r0, r3	@, D.5980
 1439 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1440 007a 0346     		mov	r3, r0	@ D.5979,
 1441 007c 002B     		cmp	r3, #0	@ D.5979,
 1442 007e 0BD0     		beq	.L122	@,
1430:FreeRTOS/queue.c **** 					{
1431:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1432:FreeRTOS/queue.c **** 						force a context switch. */
1433:FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 1443              		.loc 1 1433 0
 1444 0080 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxHigherPriorityTaskWoken
 1445 0082 002B     		cmp	r3, #0	@ tmp133,
 1446 0084 08D0     		beq	.L122	@,
1434:FreeRTOS/queue.c **** 						{
1435:FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 1447              		.loc 1 1435 0
 1448 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1449 0088 0122     		movs	r2, #1	@ tmp135,
 1450 008a 1A60     		str	r2, [r3]	@ tmp135, *pxHigherPriorityTaskWoken_17(D)
 1451 008c 04E0     		b	.L122	@
 1452              	.L121:
1436:FreeRTOS/queue.c **** 						}
1437:FreeRTOS/queue.c **** 						else
1438:FreeRTOS/queue.c **** 						{
1439:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1440:FreeRTOS/queue.c **** 						}
1441:FreeRTOS/queue.c **** 					}
1442:FreeRTOS/queue.c **** 					else
1443:FreeRTOS/queue.c **** 					{
1444:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1445:FreeRTOS/queue.c **** 					}
1446:FreeRTOS/queue.c **** 				}
1447:FreeRTOS/queue.c **** 				else
1448:FreeRTOS/queue.c **** 				{
1449:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1450:FreeRTOS/queue.c **** 				}
1451:FreeRTOS/queue.c **** 			}
1452:FreeRTOS/queue.c **** 			else
1453:FreeRTOS/queue.c **** 			{
1454:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1455:FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 52


1456:FreeRTOS/queue.c **** 				++( pxQueue->xRxLock );
 1453              		.loc 1 1456 0
 1454 008e BB69     		ldr	r3, [r7, #24]	@ tmp136, pxQueue
 1455 0090 5B6C     		ldr	r3, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1456 0092 5A1C     		adds	r2, r3, #1	@ D.5979, D.5979,
 1457 0094 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1458 0096 5A64     		str	r2, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1459              	.L122:
1457:FreeRTOS/queue.c **** 			}
1458:FreeRTOS/queue.c **** 
1459:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1460              		.loc 1 1459 0
 1461 0098 0123     		movs	r3, #1	@ tmp138,
 1462 009a FB61     		str	r3, [r7, #28]	@ tmp138, xReturn
 1463 009c 01E0     		b	.L123	@
 1464              	.L120:
1460:FreeRTOS/queue.c **** 		}
1461:FreeRTOS/queue.c **** 		else
1462:FreeRTOS/queue.c **** 		{
1463:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1465              		.loc 1 1463 0
 1466 009e 0023     		movs	r3, #0	@ tmp139,
 1467 00a0 FB61     		str	r3, [r7, #28]	@ tmp139, xReturn
 1468              	.L123:
1464:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1465:FreeRTOS/queue.c **** 		}
1466:FreeRTOS/queue.c **** 	}
1467:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1469              		.loc 1 1467 0
 1470 00a2 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1471 00a4 FFF7FEFF 		bl	vPortClearInterruptMask	@
1468:FreeRTOS/queue.c **** 
1469:FreeRTOS/queue.c **** 	return xReturn;
 1472              		.loc 1 1469 0
 1473 00a8 FB69     		ldr	r3, [r7, #28]	@ D.5981, xReturn
1470:FreeRTOS/queue.c **** }
 1474              		.loc 1 1470 0
 1475 00aa 1846     		mov	r0, r3	@, <retval>
 1476 00ac 2037     		adds	r7, r7, #32	@,,
 1477              		.cfi_def_cfa_offset 8
 1478 00ae BD46     		mov	sp, r7	@,
 1479              		.cfi_def_cfa_register 13
 1480              		@ sp needed	@
 1481 00b0 80BD     		pop	{r7, pc}	@
 1482              		.cfi_endproc
 1483              	.LFE10:
 1484              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1485 00b2 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1486              		.align	2
 1487              		.global	xQueuePeekFromISR
 1488              		.thumb
 1489              		.thumb_func
 1490              		.type	xQueuePeekFromISR, %function
 1491              	xQueuePeekFromISR:
 1492              	.LFB11:
1471:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1472:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 53


1473:FreeRTOS/queue.c **** BaseT_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1474:FreeRTOS/queue.c **** {
 1493              		.loc 1 1474 0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 24
 1496              		@ frame_needed = 1, uses_anonymous_args = 0
 1497 0000 80B5     		push	{r7, lr}	@
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 7, -8
 1500              		.cfi_offset 14, -4
 1501 0002 86B0     		sub	sp, sp, #24	@,,
 1502              		.cfi_def_cfa_offset 32
 1503 0004 00AF     		add	r7, sp, #0	@,,
 1504              		.cfi_def_cfa_register 7
 1505 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1506 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1475:FreeRTOS/queue.c **** BaseT_t xReturn;
1476:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1477:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1478:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1507              		.loc 1 1478 0
 1508 000a 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 1509 000c 3B61     		str	r3, [r7, #16]	@ tmp115, pxQueue
1479:FreeRTOS/queue.c **** 
1480:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1510              		.loc 1 1480 0
 1511 000e 3B69     		ldr	r3, [r7, #16]	@ tmp116, pxQueue
 1512 0010 002B     		cmp	r3, #0	@ tmp116,
 1513 0012 02D1     		bne	.L126	@,
 1514              		.loc 1 1480 0 is_stmt 0 discriminator 1
 1515 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1516              	.L127:
 1517 0018 FEE7     		b	.L127	@
 1518              	.L126:
1481:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1519              		.loc 1 1481 0 is_stmt 1
 1520 001a 3B68     		ldr	r3, [r7]	@ tmp117, pvBuffer
 1521 001c 002B     		cmp	r3, #0	@ tmp117,
 1522 001e 03D1     		bne	.L128	@,
 1523              		.loc 1 1481 0 is_stmt 0 discriminator 2
 1524 0020 3B69     		ldr	r3, [r7, #16]	@ tmp118, pxQueue
 1525 0022 1B6C     		ldr	r3, [r3, #64]	@ D.5983, pxQueue_4->uxItemSize
 1526 0024 002B     		cmp	r3, #0	@ D.5983,
 1527 0026 01D1     		bne	.L129	@,
 1528              	.L128:
 1529              		.loc 1 1481 0 discriminator 3
 1530 0028 0123     		movs	r3, #1	@ D.5982,
 1531 002a 00E0     		b	.L130	@
 1532              	.L129:
 1533              		.loc 1 1481 0 discriminator 4
 1534 002c 0023     		movs	r3, #0	@ D.5982,
 1535              	.L130:
 1536              		.loc 1 1481 0 discriminator 6
 1537 002e 002B     		cmp	r3, #0	@ D.5982,
 1538 0030 02D1     		bne	.L131	@,
 1539              		.loc 1 1481 0 discriminator 7
 1540 0032 FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 54


 1541              	.L132:
 1542              		.loc 1 1481 0 discriminator 2
 1543 0036 FEE7     		b	.L132	@
 1544              	.L131:
1482:FreeRTOS/queue.c **** 
1483:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1484:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1485:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1486:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1487:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1488:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1489:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1490:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1491:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1492:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1493:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1494:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1495:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1496:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1497:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1545              		.loc 1 1497 0 is_stmt 1
 1546 0038 FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1498:FreeRTOS/queue.c **** 
1499:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1547              		.loc 1 1499 0
 1548 003c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1549 0040 F860     		str	r0, [r7, #12]	@, uxSavedInterruptStatus
1500:FreeRTOS/queue.c **** 	{
1501:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1502:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1550              		.loc 1 1502 0
 1551 0042 3B69     		ldr	r3, [r7, #16]	@ tmp119, pxQueue
 1552 0044 9B6B     		ldr	r3, [r3, #56]	@ D.5983, pxQueue_4->uxMessagesWaiting
 1553 0046 002B     		cmp	r3, #0	@ D.5983,
 1554 0048 0CD0     		beq	.L133	@,
1503:FreeRTOS/queue.c **** 		{
1504:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1505:FreeRTOS/queue.c **** 
1506:FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1507:FreeRTOS/queue.c **** 			actually being removed from the queue. */
1508:FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1555              		.loc 1 1508 0
 1556 004a 3B69     		ldr	r3, [r7, #16]	@ tmp120, pxQueue
 1557 004c DB68     		ldr	r3, [r3, #12]	@ tmp121, pxQueue_4->u.pcReadFrom
 1558 004e BB60     		str	r3, [r7, #8]	@ tmp121, pcOriginalReadPosition
1509:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1559              		.loc 1 1509 0
 1560 0050 3869     		ldr	r0, [r7, #16]	@, pxQueue
 1561 0052 3968     		ldr	r1, [r7]	@, pvBuffer
 1562 0054 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1510:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1563              		.loc 1 1510 0
 1564 0058 3B69     		ldr	r3, [r7, #16]	@ tmp122, pxQueue
 1565 005a BA68     		ldr	r2, [r7, #8]	@ tmp123, pcOriginalReadPosition
 1566 005c DA60     		str	r2, [r3, #12]	@ tmp123, pxQueue_4->u.pcReadFrom
1511:FreeRTOS/queue.c **** 
1512:FreeRTOS/queue.c **** 			xReturn = pdPASS;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 55


 1567              		.loc 1 1512 0
 1568 005e 0123     		movs	r3, #1	@ tmp124,
 1569 0060 7B61     		str	r3, [r7, #20]	@ tmp124, xReturn
 1570 0062 01E0     		b	.L134	@
 1571              	.L133:
1513:FreeRTOS/queue.c **** 		}
1514:FreeRTOS/queue.c **** 		else
1515:FreeRTOS/queue.c **** 		{
1516:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1572              		.loc 1 1516 0
 1573 0064 0023     		movs	r3, #0	@ tmp125,
 1574 0066 7B61     		str	r3, [r7, #20]	@ tmp125, xReturn
 1575              	.L134:
1517:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1518:FreeRTOS/queue.c **** 		}
1519:FreeRTOS/queue.c **** 	}
1520:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1576              		.loc 1 1520 0
 1577 0068 F868     		ldr	r0, [r7, #12]	@, uxSavedInterruptStatus
 1578 006a FFF7FEFF 		bl	vPortClearInterruptMask	@
1521:FreeRTOS/queue.c **** 
1522:FreeRTOS/queue.c **** 	return xReturn;
 1579              		.loc 1 1522 0
 1580 006e 7B69     		ldr	r3, [r7, #20]	@ D.5984, xReturn
1523:FreeRTOS/queue.c **** }
 1581              		.loc 1 1523 0
 1582 0070 1846     		mov	r0, r3	@, <retval>
 1583 0072 1837     		adds	r7, r7, #24	@,,
 1584              		.cfi_def_cfa_offset 8
 1585 0074 BD46     		mov	sp, r7	@,
 1586              		.cfi_def_cfa_register 13
 1587              		@ sp needed	@
 1588 0076 80BD     		pop	{r7, pc}	@
 1589              		.cfi_endproc
 1590              	.LFE11:
 1591              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1592              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1593              		.align	2
 1594              		.global	uxQueueMessagesWaiting
 1595              		.thumb
 1596              		.thumb_func
 1597              		.type	uxQueueMessagesWaiting, %function
 1598              	uxQueueMessagesWaiting:
 1599              	.LFB12:
1524:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1525:FreeRTOS/queue.c **** 
1526:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1527:FreeRTOS/queue.c **** {
 1600              		.loc 1 1527 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 16
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 80B5     		push	{r7, lr}	@
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 84B0     		sub	sp, sp, #16	@,,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 56


 1609              		.cfi_def_cfa_offset 24
 1610 0004 00AF     		add	r7, sp, #0	@,,
 1611              		.cfi_def_cfa_register 7
 1612 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1528:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1529:FreeRTOS/queue.c **** 
1530:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1613              		.loc 1 1530 0
 1614 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1615 000a 002B     		cmp	r3, #0	@ tmp112,
 1616 000c 02D1     		bne	.L137	@,
 1617              		.loc 1 1530 0 is_stmt 0 discriminator 1
 1618 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1619              	.L138:
 1620 0012 FEE7     		b	.L138	@
 1621              	.L137:
1531:FreeRTOS/queue.c **** 
1532:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1622              		.loc 1 1532 0 is_stmt 1
 1623 0014 FFF7FEFF 		bl	vPortEnterCritical	@
1533:FreeRTOS/queue.c **** 	{
1534:FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1624              		.loc 1 1534 0
 1625 0018 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1626 001a 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1627 001c FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1535:FreeRTOS/queue.c **** 	}
1536:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1628              		.loc 1 1536 0
 1629 001e FFF7FEFF 		bl	vPortExitCritical	@
1537:FreeRTOS/queue.c **** 
1538:FreeRTOS/queue.c **** 	return uxReturn;
 1630              		.loc 1 1538 0
 1631 0022 FB68     		ldr	r3, [r7, #12]	@ D.5985, uxReturn
1539:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1632              		.loc 1 1539 0
 1633 0024 1846     		mov	r0, r3	@, <retval>
 1634 0026 1037     		adds	r7, r7, #16	@,,
 1635              		.cfi_def_cfa_offset 8
 1636 0028 BD46     		mov	sp, r7	@,
 1637              		.cfi_def_cfa_register 13
 1638              		@ sp needed	@
 1639 002a 80BD     		pop	{r7, pc}	@
 1640              		.cfi_endproc
 1641              	.LFE12:
 1642              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1643              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1644              		.align	2
 1645              		.global	uxQueueSpacesAvailable
 1646              		.thumb
 1647              		.thumb_func
 1648              		.type	uxQueueSpacesAvailable, %function
 1649              	uxQueueSpacesAvailable:
 1650              	.LFB13:
1540:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1541:FreeRTOS/queue.c **** 
1542:FreeRTOS/queue.c **** UBaseT_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 57


1543:FreeRTOS/queue.c **** {
 1651              		.loc 1 1543 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 16
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655 0000 80B5     		push	{r7, lr}	@
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 7, -8
 1658              		.cfi_offset 14, -4
 1659 0002 84B0     		sub	sp, sp, #16	@,,
 1660              		.cfi_def_cfa_offset 24
 1661 0004 00AF     		add	r7, sp, #0	@,,
 1662              		.cfi_def_cfa_register 7
 1663 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1544:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1545:FreeRTOS/queue.c **** Queue_t *pxQueue;
1546:FreeRTOS/queue.c **** 
1547:FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 1664              		.loc 1 1547 0
 1665 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 1666 000a FB60     		str	r3, [r7, #12]	@ tmp114, pxQueue
1548:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1667              		.loc 1 1548 0
 1668 000c FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1669 000e 002B     		cmp	r3, #0	@ tmp115,
 1670 0010 02D1     		bne	.L141	@,
 1671              		.loc 1 1548 0 is_stmt 0 discriminator 1
 1672 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1673              	.L142:
 1674 0016 FEE7     		b	.L142	@
 1675              	.L141:
1549:FreeRTOS/queue.c **** 
1550:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1676              		.loc 1 1550 0 is_stmt 1
 1677 0018 FFF7FEFF 		bl	vPortEnterCritical	@
1551:FreeRTOS/queue.c **** 	{
1552:FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 1678              		.loc 1 1552 0
 1679 001c FB68     		ldr	r3, [r7, #12]	@ tmp116, pxQueue
 1680 001e DA6B     		ldr	r2, [r3, #60]	@ D.5986, pxQueue_2->uxLength
 1681 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxQueue
 1682 0022 9B6B     		ldr	r3, [r3, #56]	@ D.5986, pxQueue_2->uxMessagesWaiting
 1683 0024 D31A     		subs	r3, r2, r3	@ tmp118, D.5986, D.5986
 1684 0026 BB60     		str	r3, [r7, #8]	@ tmp118, uxReturn
1553:FreeRTOS/queue.c **** 	}
1554:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1685              		.loc 1 1554 0
 1686 0028 FFF7FEFF 		bl	vPortExitCritical	@
1555:FreeRTOS/queue.c **** 
1556:FreeRTOS/queue.c **** 	return uxReturn;
 1687              		.loc 1 1556 0
 1688 002c BB68     		ldr	r3, [r7, #8]	@ D.5987, uxReturn
1557:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1689              		.loc 1 1557 0
 1690 002e 1846     		mov	r0, r3	@, <retval>
 1691 0030 1037     		adds	r7, r7, #16	@,,
 1692              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 58


 1693 0032 BD46     		mov	sp, r7	@,
 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed	@
 1696 0034 80BD     		pop	{r7, pc}	@
 1697              		.cfi_endproc
 1698              	.LFE13:
 1699              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1700 0036 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1701              		.align	2
 1702              		.global	uxQueueMessagesWaitingFromISR
 1703              		.thumb
 1704              		.thumb_func
 1705              		.type	uxQueueMessagesWaitingFromISR, %function
 1706              	uxQueueMessagesWaitingFromISR:
 1707              	.LFB14:
1558:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1559:FreeRTOS/queue.c **** 
1560:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1561:FreeRTOS/queue.c **** {
 1708              		.loc 1 1561 0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 16
 1711              		@ frame_needed = 1, uses_anonymous_args = 0
 1712 0000 80B5     		push	{r7, lr}	@
 1713              		.cfi_def_cfa_offset 8
 1714              		.cfi_offset 7, -8
 1715              		.cfi_offset 14, -4
 1716 0002 84B0     		sub	sp, sp, #16	@,,
 1717              		.cfi_def_cfa_offset 24
 1718 0004 00AF     		add	r7, sp, #0	@,,
 1719              		.cfi_def_cfa_register 7
 1720 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1562:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1563:FreeRTOS/queue.c **** 
1564:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1721              		.loc 1 1564 0
 1722 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1723 000a 002B     		cmp	r3, #0	@ tmp112,
 1724 000c 02D1     		bne	.L145	@,
 1725              		.loc 1 1564 0 is_stmt 0 discriminator 1
 1726 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1727              	.L146:
 1728 0012 FEE7     		b	.L146	@
 1729              	.L145:
1565:FreeRTOS/queue.c **** 
1566:FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1730              		.loc 1 1566 0 is_stmt 1
 1731 0014 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1732 0016 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1733 0018 FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1567:FreeRTOS/queue.c **** 
1568:FreeRTOS/queue.c **** 	return uxReturn;
 1734              		.loc 1 1568 0
 1735 001a FB68     		ldr	r3, [r7, #12]	@ D.5988, uxReturn
1569:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1736              		.loc 1 1569 0
 1737 001c 1846     		mov	r0, r3	@, <retval>
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 59


 1738 001e 1037     		adds	r7, r7, #16	@,,
 1739              		.cfi_def_cfa_offset 8
 1740 0020 BD46     		mov	sp, r7	@,
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed	@
 1743 0022 80BD     		pop	{r7, pc}	@
 1744              		.cfi_endproc
 1745              	.LFE14:
 1746              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1747              		.section	.text.vQueueDelete,"ax",%progbits
 1748              		.align	2
 1749              		.global	vQueueDelete
 1750              		.thumb
 1751              		.thumb_func
 1752              		.type	vQueueDelete, %function
 1753              	vQueueDelete:
 1754              	.LFB15:
1570:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1571:FreeRTOS/queue.c **** 
1572:FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1573:FreeRTOS/queue.c **** {
 1755              		.loc 1 1573 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 16
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759 0000 80B5     		push	{r7, lr}	@
 1760              		.cfi_def_cfa_offset 8
 1761              		.cfi_offset 7, -8
 1762              		.cfi_offset 14, -4
 1763 0002 84B0     		sub	sp, sp, #16	@,,
 1764              		.cfi_def_cfa_offset 24
 1765 0004 00AF     		add	r7, sp, #0	@,,
 1766              		.cfi_def_cfa_register 7
 1767 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1574:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1768              		.loc 1 1574 0
 1769 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1770 000a FB60     		str	r3, [r7, #12]	@ tmp112, pxQueue
1575:FreeRTOS/queue.c **** 
1576:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1771              		.loc 1 1576 0
 1772 000c FB68     		ldr	r3, [r7, #12]	@ tmp113, pxQueue
 1773 000e 002B     		cmp	r3, #0	@ tmp113,
 1774 0010 02D1     		bne	.L149	@,
 1775              		.loc 1 1576 0 is_stmt 0 discriminator 1
 1776 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1777              	.L150:
 1778 0016 FEE7     		b	.L150	@
 1779              	.L149:
1577:FreeRTOS/queue.c **** 
1578:FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1579:FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1580:FreeRTOS/queue.c **** 	{
1581:FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 1780              		.loc 1 1581 0 is_stmt 1
 1781 0018 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1782 001a FFF7FEFF 		bl	vQueueUnregisterQueue	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 60


1582:FreeRTOS/queue.c **** 	}
1583:FreeRTOS/queue.c **** 	#endif
1584:FreeRTOS/queue.c **** 	if( pxQueue->pcHead != NULL )
 1783              		.loc 1 1584 0
 1784 001e FB68     		ldr	r3, [r7, #12]	@ tmp114, pxQueue
 1785 0020 1B68     		ldr	r3, [r3]	@ D.5989, pxQueue_2->pcHead
 1786 0022 002B     		cmp	r3, #0	@ D.5989,
 1787 0024 04D0     		beq	.L151	@,
1585:FreeRTOS/queue.c **** 	{
1586:FreeRTOS/queue.c **** 		vPortFree( pxQueue->pcHead );
 1788              		.loc 1 1586 0
 1789 0026 FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1790 0028 1B68     		ldr	r3, [r3]	@ D.5989, pxQueue_2->pcHead
 1791 002a 1846     		mov	r0, r3	@, D.5989
 1792 002c FFF7FEFF 		bl	vPortFree	@
 1793              	.L151:
1587:FreeRTOS/queue.c **** 	}
1588:FreeRTOS/queue.c **** 	vPortFree( pxQueue );
 1794              		.loc 1 1588 0
 1795 0030 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1796 0032 FFF7FEFF 		bl	vPortFree	@
1589:FreeRTOS/queue.c **** }
 1797              		.loc 1 1589 0
 1798 0036 1037     		adds	r7, r7, #16	@,,
 1799              		.cfi_def_cfa_offset 8
 1800 0038 BD46     		mov	sp, r7	@,
 1801              		.cfi_def_cfa_register 13
 1802              		@ sp needed	@
 1803 003a 80BD     		pop	{r7, pc}	@
 1804              		.cfi_endproc
 1805              	.LFE15:
 1806              		.size	vQueueDelete, .-vQueueDelete
 1807              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 1808              		.align	2
 1809              		.global	uxQueueGetQueueNumber
 1810              		.thumb
 1811              		.thumb_func
 1812              		.type	uxQueueGetQueueNumber, %function
 1813              	uxQueueGetQueueNumber:
 1814              	.LFB16:
1590:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1591:FreeRTOS/queue.c **** 
1592:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1593:FreeRTOS/queue.c **** 
1594:FreeRTOS/queue.c **** 	UBaseT_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1595:FreeRTOS/queue.c **** 	{
 1815              		.loc 1 1595 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 8
 1818              		@ frame_needed = 1, uses_anonymous_args = 0
 1819              		@ link register save eliminated.
 1820 0000 80B4     		push	{r7}	@
 1821              		.cfi_def_cfa_offset 4
 1822              		.cfi_offset 7, -4
 1823 0002 83B0     		sub	sp, sp, #12	@,,
 1824              		.cfi_def_cfa_offset 16
 1825 0004 00AF     		add	r7, sp, #0	@,,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 61


 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1596:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 1828              		.loc 1 1596 0
 1829 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1830 000a DB6C     		ldr	r3, [r3, #76]	@ D.5990, MEM[(struct Queue_t *)xQueue_1(D)].uxQueueNumber
1597:FreeRTOS/queue.c **** 	}
 1831              		.loc 1 1597 0
 1832 000c 1846     		mov	r0, r3	@, <retval>
 1833 000e 0C37     		adds	r7, r7, #12	@,,
 1834              		.cfi_def_cfa_offset 4
 1835 0010 BD46     		mov	sp, r7	@,
 1836              		.cfi_def_cfa_register 13
 1837              		@ sp needed	@
 1838 0012 5DF8047B 		ldr	r7, [sp], #4	@,
 1839              		.cfi_restore 7
 1840              		.cfi_def_cfa_offset 0
 1841 0016 7047     		bx	lr	@
 1842              		.cfi_endproc
 1843              	.LFE16:
 1844              		.size	uxQueueGetQueueNumber, .-uxQueueGetQueueNumber
 1845              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 1846              		.align	2
 1847              		.global	vQueueSetQueueNumber
 1848              		.thumb
 1849              		.thumb_func
 1850              		.type	vQueueSetQueueNumber, %function
 1851              	vQueueSetQueueNumber:
 1852              	.LFB17:
1598:FreeRTOS/queue.c **** 
1599:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1600:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1601:FreeRTOS/queue.c **** 
1602:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1603:FreeRTOS/queue.c **** 
1604:FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseT_t uxQueueNumber )
1605:FreeRTOS/queue.c **** 	{
 1853              		.loc 1 1605 0
 1854              		.cfi_startproc
 1855              		@ args = 0, pretend = 0, frame = 8
 1856              		@ frame_needed = 1, uses_anonymous_args = 0
 1857              		@ link register save eliminated.
 1858 0000 80B4     		push	{r7}	@
 1859              		.cfi_def_cfa_offset 4
 1860              		.cfi_offset 7, -4
 1861 0002 83B0     		sub	sp, sp, #12	@,,
 1862              		.cfi_def_cfa_offset 16
 1863 0004 00AF     		add	r7, sp, #0	@,,
 1864              		.cfi_def_cfa_register 7
 1865 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1866 0008 3960     		str	r1, [r7]	@ uxQueueNumber, uxQueueNumber
1606:FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 1867              		.loc 1 1606 0
 1868 000a 7B68     		ldr	r3, [r7, #4]	@ tmp110, xQueue
 1869 000c 3A68     		ldr	r2, [r7]	@ tmp111, uxQueueNumber
 1870 000e DA64     		str	r2, [r3, #76]	@ tmp111, MEM[(struct Queue_t *)xQueue_1(D)].uxQueueNumber
1607:FreeRTOS/queue.c **** 	}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 62


 1871              		.loc 1 1607 0
 1872 0010 0C37     		adds	r7, r7, #12	@,,
 1873              		.cfi_def_cfa_offset 4
 1874 0012 BD46     		mov	sp, r7	@,
 1875              		.cfi_def_cfa_register 13
 1876              		@ sp needed	@
 1877 0014 5DF8047B 		ldr	r7, [sp], #4	@,
 1878              		.cfi_restore 7
 1879              		.cfi_def_cfa_offset 0
 1880 0018 7047     		bx	lr	@
 1881              		.cfi_endproc
 1882              	.LFE17:
 1883              		.size	vQueueSetQueueNumber, .-vQueueSetQueueNumber
 1884 001a 00BF     		.section	.text.ucQueueGetQueueType,"ax",%progbits
 1885              		.align	2
 1886              		.global	ucQueueGetQueueType
 1887              		.thumb
 1888              		.thumb_func
 1889              		.type	ucQueueGetQueueType, %function
 1890              	ucQueueGetQueueType:
 1891              	.LFB18:
1608:FreeRTOS/queue.c **** 
1609:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1610:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1611:FreeRTOS/queue.c **** 
1612:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1613:FreeRTOS/queue.c **** 
1614:FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1615:FreeRTOS/queue.c **** 	{
 1892              		.loc 1 1615 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 8
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
 1897 0000 80B4     		push	{r7}	@
 1898              		.cfi_def_cfa_offset 4
 1899              		.cfi_offset 7, -4
 1900 0002 83B0     		sub	sp, sp, #12	@,,
 1901              		.cfi_def_cfa_offset 16
 1902 0004 00AF     		add	r7, sp, #0	@,,
 1903              		.cfi_def_cfa_register 7
 1904 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1616:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 1905              		.loc 1 1616 0
 1906 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1907 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2	@ D.5991, MEM[(struct Queue_t *)xQueue_1(D)].ucQueueType
1617:FreeRTOS/queue.c **** 	}
 1908              		.loc 1 1617 0
 1909 000e 1846     		mov	r0, r3	@, <retval>
 1910 0010 0C37     		adds	r7, r7, #12	@,,
 1911              		.cfi_def_cfa_offset 4
 1912 0012 BD46     		mov	sp, r7	@,
 1913              		.cfi_def_cfa_register 13
 1914              		@ sp needed	@
 1915 0014 5DF8047B 		ldr	r7, [sp], #4	@,
 1916              		.cfi_restore 7
 1917              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 63


 1918 0018 7047     		bx	lr	@
 1919              		.cfi_endproc
 1920              	.LFE18:
 1921              		.size	ucQueueGetQueueType, .-ucQueueGetQueueType
 1922 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 1923              		.align	2
 1924              		.thumb
 1925              		.thumb_func
 1926              		.type	prvCopyDataToQueue, %function
 1927              	prvCopyDataToQueue:
 1928              	.LFB19:
1618:FreeRTOS/queue.c **** 
1619:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1620:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1621:FreeRTOS/queue.c **** 
1622:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
1623:FreeRTOS/queue.c **** {
 1929              		.loc 1 1623 0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 24
 1932              		@ frame_needed = 1, uses_anonymous_args = 0
 1933 0000 80B5     		push	{r7, lr}	@
 1934              		.cfi_def_cfa_offset 8
 1935              		.cfi_offset 7, -8
 1936              		.cfi_offset 14, -4
 1937 0002 86B0     		sub	sp, sp, #24	@,,
 1938              		.cfi_def_cfa_offset 32
 1939 0004 00AF     		add	r7, sp, #0	@,,
 1940              		.cfi_def_cfa_register 7
 1941 0006 F860     		str	r0, [r7, #12]	@ pxQueue, pxQueue
 1942 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 1943 000a 7A60     		str	r2, [r7, #4]	@ xPosition, xPosition
1624:FreeRTOS/queue.c **** BaseT_t xReturn = pdFALSE;
 1944              		.loc 1 1624 0
 1945 000c 0023     		movs	r3, #0	@ tmp140,
 1946 000e 7B61     		str	r3, [r7, #20]	@ tmp140, xReturn
1625:FreeRTOS/queue.c **** 
1626:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseT_t ) 0 )
 1947              		.loc 1 1626 0
 1948 0010 FB68     		ldr	r3, [r7, #12]	@ tmp141, pxQueue
 1949 0012 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1950 0014 002B     		cmp	r3, #0	@ D.5992,
 1951 0016 0DD1     		bne	.L158	@,
1627:FreeRTOS/queue.c **** 	{
1628:FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1629:FreeRTOS/queue.c **** 		{
1630:FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1952              		.loc 1 1630 0
 1953 0018 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 1954 001a 1B68     		ldr	r3, [r3]	@ D.5993, pxQueue_3(D)->pcHead
 1955 001c 002B     		cmp	r3, #0	@ D.5993,
 1956 001e 52D1     		bne	.L159	@,
1631:FreeRTOS/queue.c **** 			{
1632:FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
1633:FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 1957              		.loc 1 1633 0
 1958 0020 FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 64


 1959 0022 5B68     		ldr	r3, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
 1960 0024 1846     		mov	r0, r3	@, D.5993
 1961 0026 FFF7FEFF 		bl	xTaskPriorityDisinherit	@
 1962 002a 7861     		str	r0, [r7, #20]	@, xReturn
1634:FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1963              		.loc 1 1634 0
 1964 002c FB68     		ldr	r3, [r7, #12]	@ tmp144, pxQueue
 1965 002e 0022     		movs	r2, #0	@ tmp145,
 1966 0030 5A60     		str	r2, [r3, #4]	@ tmp145, pxQueue_3(D)->pcTail
 1967 0032 48E0     		b	.L159	@
 1968              	.L158:
1635:FreeRTOS/queue.c **** 			}
1636:FreeRTOS/queue.c **** 			else
1637:FreeRTOS/queue.c **** 			{
1638:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1639:FreeRTOS/queue.c **** 			}
1640:FreeRTOS/queue.c **** 		}
1641:FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
1642:FreeRTOS/queue.c **** 	}
1643:FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 1969              		.loc 1 1643 0
 1970 0034 7B68     		ldr	r3, [r7, #4]	@ tmp146, xPosition
 1971 0036 002B     		cmp	r3, #0	@ tmp146,
 1972 0038 1AD1     		bne	.L160	@,
1644:FreeRTOS/queue.c **** 	{
1645:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 1973              		.loc 1 1645 0
 1974 003a FB68     		ldr	r3, [r7, #12]	@ tmp147, pxQueue
 1975 003c 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1976 003e FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 1977 0040 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1978 0042 1046     		mov	r0, r2	@, D.5993
 1979 0044 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 1980 0046 1A46     		mov	r2, r3	@, D.5992
 1981 0048 FFF7FEFF 		bl	memcpy	@
1646:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1982              		.loc 1 1646 0
 1983 004c FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 1984 004e 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1985 0050 FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 1986 0052 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1987 0054 1A44     		add	r2, r2, r3	@ D.5993, D.5992
 1988 0056 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 1989 0058 9A60     		str	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
1647:FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1990              		.loc 1 1647 0
 1991 005a FB68     		ldr	r3, [r7, #12]	@ tmp152, pxQueue
 1992 005c 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1993 005e FB68     		ldr	r3, [r7, #12]	@ tmp153, pxQueue
 1994 0060 5B68     		ldr	r3, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
 1995 0062 9A42     		cmp	r2, r3	@ D.5993, D.5993
 1996 0064 2FD3     		bcc	.L159	@,
1648:FreeRTOS/queue.c **** 		{
1649:FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 1997              		.loc 1 1649 0
 1998 0066 FB68     		ldr	r3, [r7, #12]	@ tmp154, pxQueue
 1999 0068 1A68     		ldr	r2, [r3]	@ D.5993, pxQueue_3(D)->pcHead
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 65


 2000 006a FB68     		ldr	r3, [r7, #12]	@ tmp155, pxQueue
 2001 006c 9A60     		str	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 2002 006e 2AE0     		b	.L159	@
 2003              	.L160:
1650:FreeRTOS/queue.c **** 		}
1651:FreeRTOS/queue.c **** 		else
1652:FreeRTOS/queue.c **** 		{
1653:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1654:FreeRTOS/queue.c **** 		}
1655:FreeRTOS/queue.c **** 	}
1656:FreeRTOS/queue.c **** 	else
1657:FreeRTOS/queue.c **** 	{
1658:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 2004              		.loc 1 1658 0
 2005 0070 FB68     		ldr	r3, [r7, #12]	@ tmp156, pxQueue
 2006 0072 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2007 0074 FB68     		ldr	r3, [r7, #12]	@ tmp157, pxQueue
 2008 0076 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2009 0078 1046     		mov	r0, r2	@, D.5993
 2010 007a B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 2011 007c 1A46     		mov	r2, r3	@, D.5992
 2012 007e FFF7FEFF 		bl	memcpy	@
1659:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 2013              		.loc 1 1659 0
 2014 0082 FB68     		ldr	r3, [r7, #12]	@ tmp158, pxQueue
 2015 0084 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2016 0086 FB68     		ldr	r3, [r7, #12]	@ tmp159, pxQueue
 2017 0088 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2018 008a 5B42     		negs	r3, r3	@ D.5994, D.5992
 2019 008c 1A44     		add	r2, r2, r3	@ D.5993, D.5994
 2020 008e FB68     		ldr	r3, [r7, #12]	@ tmp160, pxQueue
 2021 0090 DA60     		str	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
1660:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 2022              		.loc 1 1660 0
 2023 0092 FB68     		ldr	r3, [r7, #12]	@ tmp161, pxQueue
 2024 0094 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2025 0096 FB68     		ldr	r3, [r7, #12]	@ tmp162, pxQueue
 2026 0098 1B68     		ldr	r3, [r3]	@ D.5993, pxQueue_3(D)->pcHead
 2027 009a 9A42     		cmp	r2, r3	@ D.5993, D.5993
 2028 009c 07D2     		bcs	.L161	@,
1661:FreeRTOS/queue.c **** 		{
1662:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 2029              		.loc 1 1662 0
 2030 009e FB68     		ldr	r3, [r7, #12]	@ tmp163, pxQueue
 2031 00a0 5A68     		ldr	r2, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
 2032 00a2 FB68     		ldr	r3, [r7, #12]	@ tmp164, pxQueue
 2033 00a4 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2034 00a6 5B42     		negs	r3, r3	@ D.5994, D.5992
 2035 00a8 1A44     		add	r2, r2, r3	@ D.5993, D.5994
 2036 00aa FB68     		ldr	r3, [r7, #12]	@ tmp165, pxQueue
 2037 00ac DA60     		str	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2038              	.L161:
1663:FreeRTOS/queue.c **** 		}
1664:FreeRTOS/queue.c **** 		else
1665:FreeRTOS/queue.c **** 		{
1666:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1667:FreeRTOS/queue.c **** 		}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 66


1668:FreeRTOS/queue.c **** 
1669:FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
 2039              		.loc 1 1669 0
 2040 00ae 7B68     		ldr	r3, [r7, #4]	@ tmp166, xPosition
 2041 00b0 022B     		cmp	r3, #2	@ tmp166,
 2042 00b2 08D1     		bne	.L159	@,
1670:FreeRTOS/queue.c **** 		{
1671:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 2043              		.loc 1 1671 0
 2044 00b4 FB68     		ldr	r3, [r7, #12]	@ tmp167, pxQueue
 2045 00b6 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2046 00b8 002B     		cmp	r3, #0	@ D.5992,
 2047 00ba 04D0     		beq	.L159	@,
1672:FreeRTOS/queue.c **** 			{
1673:FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
1674:FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
1675:FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
1676:FreeRTOS/queue.c **** 				correct. */
1677:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
 2048              		.loc 1 1677 0
 2049 00bc FB68     		ldr	r3, [r7, #12]	@ tmp168, pxQueue
 2050 00be 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2051 00c0 5A1E     		subs	r2, r3, #1	@ D.5992, D.5992,
 2052 00c2 FB68     		ldr	r3, [r7, #12]	@ tmp169, pxQueue
 2053 00c4 9A63     		str	r2, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2054              	.L159:
1678:FreeRTOS/queue.c **** 			}
1679:FreeRTOS/queue.c **** 			else
1680:FreeRTOS/queue.c **** 			{
1681:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1682:FreeRTOS/queue.c **** 			}
1683:FreeRTOS/queue.c **** 		}
1684:FreeRTOS/queue.c **** 		else
1685:FreeRTOS/queue.c **** 		{
1686:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1687:FreeRTOS/queue.c **** 		}
1688:FreeRTOS/queue.c **** 	}
1689:FreeRTOS/queue.c **** 
1690:FreeRTOS/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 2055              		.loc 1 1690 0
 2056 00c6 FB68     		ldr	r3, [r7, #12]	@ tmp170, pxQueue
 2057 00c8 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2058 00ca 5A1C     		adds	r2, r3, #1	@ D.5992, D.5992,
 2059 00cc FB68     		ldr	r3, [r7, #12]	@ tmp171, pxQueue
 2060 00ce 9A63     		str	r2, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
1691:FreeRTOS/queue.c **** 
1692:FreeRTOS/queue.c **** 	return xReturn;
 2061              		.loc 1 1692 0
 2062 00d0 7B69     		ldr	r3, [r7, #20]	@ D.5995, xReturn
1693:FreeRTOS/queue.c **** }
 2063              		.loc 1 1693 0
 2064 00d2 1846     		mov	r0, r3	@, <retval>
 2065 00d4 1837     		adds	r7, r7, #24	@,,
 2066              		.cfi_def_cfa_offset 8
 2067 00d6 BD46     		mov	sp, r7	@,
 2068              		.cfi_def_cfa_register 13
 2069              		@ sp needed	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 67


 2070 00d8 80BD     		pop	{r7, pc}	@
 2071              		.cfi_endproc
 2072              	.LFE19:
 2073              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 2074 00da 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 2075              		.align	2
 2076              		.thumb
 2077              		.thumb_func
 2078              		.type	prvCopyDataFromQueue, %function
 2079              	prvCopyDataFromQueue:
 2080              	.LFB20:
1694:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1695:FreeRTOS/queue.c **** 
1696:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1697:FreeRTOS/queue.c **** {
 2081              		.loc 1 1697 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 8
 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085 0000 80B5     		push	{r7, lr}	@
 2086              		.cfi_def_cfa_offset 8
 2087              		.cfi_offset 7, -8
 2088              		.cfi_offset 14, -4
 2089 0002 82B0     		sub	sp, sp, #8	@,,
 2090              		.cfi_def_cfa_offset 16
 2091 0004 00AF     		add	r7, sp, #0	@,,
 2092              		.cfi_def_cfa_register 7
 2093 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
 2094 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1698:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseT_t ) 0 )
 2095              		.loc 1 1698 0
 2096 000a 7B68     		ldr	r3, [r7, #4]	@ tmp119, pxQueue
 2097 000c 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2098 000e 002B     		cmp	r3, #0	@ D.5996,
 2099 0010 19D0     		beq	.L163	@,
1699:FreeRTOS/queue.c **** 	{
1700:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 2100              		.loc 1 1700 0
 2101 0012 7B68     		ldr	r3, [r7, #4]	@ tmp120, pxQueue
 2102 0014 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2103 0016 7B68     		ldr	r3, [r7, #4]	@ tmp121, pxQueue
 2104 0018 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2105 001a 1A44     		add	r2, r2, r3	@ D.5997, D.5996
 2106 001c 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2107 001e DA60     		str	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
1701:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2108              		.loc 1 1701 0
 2109 0020 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2110 0022 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2111 0024 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2112 0026 5B68     		ldr	r3, [r3, #4]	@ D.5997, pxQueue_1(D)->pcTail
 2113 0028 9A42     		cmp	r2, r3	@ D.5997, D.5997
 2114 002a 03D3     		bcc	.L165	@,
1702:FreeRTOS/queue.c **** 		{
1703:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 2115              		.loc 1 1703 0
 2116 002c 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 68


 2117 002e 1A68     		ldr	r2, [r3]	@ D.5997, pxQueue_1(D)->pcHead
 2118 0030 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2119 0032 DA60     		str	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2120              	.L165:
1704:FreeRTOS/queue.c **** 		}
1705:FreeRTOS/queue.c **** 		else
1706:FreeRTOS/queue.c **** 		{
1707:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1708:FreeRTOS/queue.c **** 		}
1709:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 2121              		.loc 1 1709 0
 2122 0034 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2123 0036 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2124 0038 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxQueue
 2125 003a 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2126 003c 3868     		ldr	r0, [r7]	@, pvBuffer
 2127 003e 1146     		mov	r1, r2	@, D.5997
 2128 0040 1A46     		mov	r2, r3	@, D.5996
 2129 0042 FFF7FEFF 		bl	memcpy	@
 2130              	.L163:
1710:FreeRTOS/queue.c **** 	}
1711:FreeRTOS/queue.c **** }
 2131              		.loc 1 1711 0
 2132 0046 0837     		adds	r7, r7, #8	@,,
 2133              		.cfi_def_cfa_offset 8
 2134 0048 BD46     		mov	sp, r7	@,
 2135              		.cfi_def_cfa_register 13
 2136              		@ sp needed	@
 2137 004a 80BD     		pop	{r7, pc}	@
 2138              		.cfi_endproc
 2139              	.LFE20:
 2140              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 2141              		.section	.text.prvUnlockQueue,"ax",%progbits
 2142              		.align	2
 2143              		.thumb
 2144              		.thumb_func
 2145              		.type	prvUnlockQueue, %function
 2146              	prvUnlockQueue:
 2147              	.LFB21:
1712:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1713:FreeRTOS/queue.c **** 
1714:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1715:FreeRTOS/queue.c **** {
 2148              		.loc 1 1715 0
 2149              		.cfi_startproc
 2150              		@ args = 0, pretend = 0, frame = 8
 2151              		@ frame_needed = 1, uses_anonymous_args = 0
 2152 0000 80B5     		push	{r7, lr}	@
 2153              		.cfi_def_cfa_offset 8
 2154              		.cfi_offset 7, -8
 2155              		.cfi_offset 14, -4
 2156 0002 82B0     		sub	sp, sp, #8	@,,
 2157              		.cfi_def_cfa_offset 16
 2158 0004 00AF     		add	r7, sp, #0	@,,
 2159              		.cfi_def_cfa_register 7
 2160 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1716:FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 69


1717:FreeRTOS/queue.c **** 
1718:FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1719:FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1720:FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1721:FreeRTOS/queue.c **** 	updated. */
1722:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2161              		.loc 1 1722 0
 2162 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1723:FreeRTOS/queue.c **** 	{
1724:FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
1725:FreeRTOS/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2163              		.loc 1 1725 0
 2164 000c 14E0     		b	.L167	@
 2165              	.L171:
1726:FreeRTOS/queue.c **** 		{
1727:FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1728:FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
1729:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1730:FreeRTOS/queue.c **** 			{
1731:FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1732:FreeRTOS/queue.c **** 				{
1733:FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1734:FreeRTOS/queue.c **** 					{
1735:FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
1736:FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
1737:FreeRTOS/queue.c **** 						A context switch is required. */
1738:FreeRTOS/queue.c **** 						vTaskMissedYield();
1739:FreeRTOS/queue.c **** 					}
1740:FreeRTOS/queue.c **** 					else
1741:FreeRTOS/queue.c **** 					{
1742:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1743:FreeRTOS/queue.c **** 					}
1744:FreeRTOS/queue.c **** 				}
1745:FreeRTOS/queue.c **** 				else
1746:FreeRTOS/queue.c **** 				{
1747:FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get added to
1748:FreeRTOS/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1749:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1750:FreeRTOS/queue.c **** 					{
1751:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1752:FreeRTOS/queue.c **** 						{
1753:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1754:FreeRTOS/queue.c **** 							context	switch is required. */
1755:FreeRTOS/queue.c **** 							vTaskMissedYield();
1756:FreeRTOS/queue.c **** 						}
1757:FreeRTOS/queue.c **** 						else
1758:FreeRTOS/queue.c **** 						{
1759:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1760:FreeRTOS/queue.c **** 						}
1761:FreeRTOS/queue.c **** 					}
1762:FreeRTOS/queue.c **** 					else
1763:FreeRTOS/queue.c **** 					{
1764:FreeRTOS/queue.c **** 						break;
1765:FreeRTOS/queue.c **** 					}
1766:FreeRTOS/queue.c **** 				}
1767:FreeRTOS/queue.c **** 			}
1768:FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 70


1769:FreeRTOS/queue.c **** 			{
1770:FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
1771:FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1772:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2166              		.loc 1 1772 0
 2167 000e 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2168 0010 5B6A     		ldr	r3, [r3, #36]	@ D.5999, pxQueue_1(D)->xTasksWaitingToReceive.uxNumberOfItems
 2169 0012 002B     		cmp	r3, #0	@ D.5999,
 2170 0014 0AD0     		beq	.L168	@,
1773:FreeRTOS/queue.c **** 				{
1774:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2171              		.loc 1 1774 0
 2172 0016 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2173 0018 2433     		adds	r3, r3, #36	@ D.6000, tmp123,
 2174 001a 1846     		mov	r0, r3	@, D.6000
 2175 001c FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2176 0020 0346     		mov	r3, r0	@ D.5998,
 2177 0022 002B     		cmp	r3, #0	@ D.5998,
 2178 0024 03D0     		beq	.L169	@,
1775:FreeRTOS/queue.c **** 					{
1776:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that a
1777:FreeRTOS/queue.c **** 						context	switch is required. */
1778:FreeRTOS/queue.c **** 						vTaskMissedYield();
 2179              		.loc 1 1778 0
 2180 0026 FFF7FEFF 		bl	vTaskMissedYield	@
 2181 002a 00E0     		b	.L169	@
 2182              	.L168:
1779:FreeRTOS/queue.c **** 					}
1780:FreeRTOS/queue.c **** 					else
1781:FreeRTOS/queue.c **** 					{
1782:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1783:FreeRTOS/queue.c **** 					}
1784:FreeRTOS/queue.c **** 				}
1785:FreeRTOS/queue.c **** 				else
1786:FreeRTOS/queue.c **** 				{
1787:FreeRTOS/queue.c **** 					break;
 2183              		.loc 1 1787 0
 2184 002c 08E0     		b	.L170	@
 2185              	.L169:
1788:FreeRTOS/queue.c **** 				}
1789:FreeRTOS/queue.c **** 			}
1790:FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1791:FreeRTOS/queue.c **** 
1792:FreeRTOS/queue.c **** 			--( pxQueue->xTxLock );
 2186              		.loc 1 1792 0
 2187 002e 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2188 0030 9B6C     		ldr	r3, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2189 0032 5A1E     		subs	r2, r3, #1	@ D.5998, D.5998,
 2190 0034 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
 2191 0036 9A64     		str	r2, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2192              	.L167:
1725:FreeRTOS/queue.c **** 		{
 2193              		.loc 1 1725 0
 2194 0038 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2195 003a 9B6C     		ldr	r3, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2196 003c 002B     		cmp	r3, #0	@ D.5998,
 2197 003e E6DC     		bgt	.L171	@,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 71


 2198              	.L170:
1793:FreeRTOS/queue.c **** 		}
1794:FreeRTOS/queue.c **** 
1795:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 2199              		.loc 1 1795 0
 2200 0040 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2201 0042 4FF0FF32 		mov	r2, #-1	@ tmp128,
 2202 0046 9A64     		str	r2, [r3, #72]	@ tmp128, pxQueue_1(D)->xTxLock
1796:FreeRTOS/queue.c **** 	}
1797:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2203              		.loc 1 1797 0
 2204 0048 FFF7FEFF 		bl	vPortExitCritical	@
1798:FreeRTOS/queue.c **** 
1799:FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
1800:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2205              		.loc 1 1800 0
 2206 004c FFF7FEFF 		bl	vPortEnterCritical	@
1801:FreeRTOS/queue.c **** 	{
1802:FreeRTOS/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2207              		.loc 1 1802 0
 2208 0050 14E0     		b	.L172	@
 2209              	.L176:
1803:FreeRTOS/queue.c **** 		{
1804:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2210              		.loc 1 1804 0
 2211 0052 7B68     		ldr	r3, [r7, #4]	@ tmp129, pxQueue
 2212 0054 1B69     		ldr	r3, [r3, #16]	@ D.5999, pxQueue_1(D)->xTasksWaitingToSend.uxNumberOfItems
 2213 0056 002B     		cmp	r3, #0	@ D.5999,
 2214 0058 0FD0     		beq	.L173	@,
1805:FreeRTOS/queue.c **** 			{
1806:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2215              		.loc 1 1806 0
 2216 005a 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxQueue
 2217 005c 1033     		adds	r3, r3, #16	@ D.6000, tmp130,
 2218 005e 1846     		mov	r0, r3	@, D.6000
 2219 0060 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2220 0064 0346     		mov	r3, r0	@ D.5998,
 2221 0066 002B     		cmp	r3, #0	@ D.5998,
 2222 0068 01D0     		beq	.L174	@,
1807:FreeRTOS/queue.c **** 				{
1808:FreeRTOS/queue.c **** 					vTaskMissedYield();
 2223              		.loc 1 1808 0
 2224 006a FFF7FEFF 		bl	vTaskMissedYield	@
 2225              	.L174:
1809:FreeRTOS/queue.c **** 				}
1810:FreeRTOS/queue.c **** 				else
1811:FreeRTOS/queue.c **** 				{
1812:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1813:FreeRTOS/queue.c **** 				}
1814:FreeRTOS/queue.c **** 
1815:FreeRTOS/queue.c **** 				--( pxQueue->xRxLock );
 2226              		.loc 1 1815 0
 2227 006e 7B68     		ldr	r3, [r7, #4]	@ tmp131, pxQueue
 2228 0070 5B6C     		ldr	r3, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
 2229 0072 5A1E     		subs	r2, r3, #1	@ D.5998, D.5998,
 2230 0074 7B68     		ldr	r3, [r7, #4]	@ tmp132, pxQueue
 2231 0076 5A64     		str	r2, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 72


 2232 0078 00E0     		b	.L172	@
 2233              	.L173:
1816:FreeRTOS/queue.c **** 			}
1817:FreeRTOS/queue.c **** 			else
1818:FreeRTOS/queue.c **** 			{
1819:FreeRTOS/queue.c **** 				break;
 2234              		.loc 1 1819 0
 2235 007a 03E0     		b	.L175	@
 2236              	.L172:
1802:FreeRTOS/queue.c **** 		{
 2237              		.loc 1 1802 0
 2238 007c 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxQueue
 2239 007e 5B6C     		ldr	r3, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
 2240 0080 002B     		cmp	r3, #0	@ D.5998,
 2241 0082 E6DC     		bgt	.L176	@,
 2242              	.L175:
1820:FreeRTOS/queue.c **** 			}
1821:FreeRTOS/queue.c **** 		}
1822:FreeRTOS/queue.c **** 
1823:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2243              		.loc 1 1823 0
 2244 0084 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxQueue
 2245 0086 4FF0FF32 		mov	r2, #-1	@ tmp135,
 2246 008a 5A64     		str	r2, [r3, #68]	@ tmp135, pxQueue_1(D)->xRxLock
1824:FreeRTOS/queue.c **** 	}
1825:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2247              		.loc 1 1825 0
 2248 008c FFF7FEFF 		bl	vPortExitCritical	@
1826:FreeRTOS/queue.c **** }
 2249              		.loc 1 1826 0
 2250 0090 0837     		adds	r7, r7, #8	@,,
 2251              		.cfi_def_cfa_offset 8
 2252 0092 BD46     		mov	sp, r7	@,
 2253              		.cfi_def_cfa_register 13
 2254              		@ sp needed	@
 2255 0094 80BD     		pop	{r7, pc}	@
 2256              		.cfi_endproc
 2257              	.LFE21:
 2258              		.size	prvUnlockQueue, .-prvUnlockQueue
 2259 0096 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 2260              		.align	2
 2261              		.thumb
 2262              		.thumb_func
 2263              		.type	prvIsQueueEmpty, %function
 2264              	prvIsQueueEmpty:
 2265              	.LFB22:
1827:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1828:FreeRTOS/queue.c **** 
1829:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue )
1830:FreeRTOS/queue.c **** {
 2266              		.loc 1 1830 0
 2267              		.cfi_startproc
 2268              		@ args = 0, pretend = 0, frame = 16
 2269              		@ frame_needed = 1, uses_anonymous_args = 0
 2270 0000 80B5     		push	{r7, lr}	@
 2271              		.cfi_def_cfa_offset 8
 2272              		.cfi_offset 7, -8
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 73


 2273              		.cfi_offset 14, -4
 2274 0002 84B0     		sub	sp, sp, #16	@,,
 2275              		.cfi_def_cfa_offset 24
 2276 0004 00AF     		add	r7, sp, #0	@,,
 2277              		.cfi_def_cfa_register 7
 2278 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1831:FreeRTOS/queue.c **** BaseT_t xReturn;
1832:FreeRTOS/queue.c **** 
1833:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2279              		.loc 1 1833 0
 2280 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1834:FreeRTOS/queue.c **** 	{
1835:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseT_t )  0 )
 2281              		.loc 1 1835 0
 2282 000c 7B68     		ldr	r3, [r7, #4]	@ tmp113, pxQueue
 2283 000e 9B6B     		ldr	r3, [r3, #56]	@ D.6001, pxQueue_2(D)->uxMessagesWaiting
 2284 0010 002B     		cmp	r3, #0	@ D.6001,
 2285 0012 02D1     		bne	.L178	@,
1836:FreeRTOS/queue.c **** 		{
1837:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2286              		.loc 1 1837 0
 2287 0014 0123     		movs	r3, #1	@ tmp114,
 2288 0016 FB60     		str	r3, [r7, #12]	@ tmp114, xReturn
 2289 0018 01E0     		b	.L179	@
 2290              	.L178:
1838:FreeRTOS/queue.c **** 		}
1839:FreeRTOS/queue.c **** 		else
1840:FreeRTOS/queue.c **** 		{
1841:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2291              		.loc 1 1841 0
 2292 001a 0023     		movs	r3, #0	@ tmp115,
 2293 001c FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2294              	.L179:
1842:FreeRTOS/queue.c **** 		}
1843:FreeRTOS/queue.c **** 	}
1844:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2295              		.loc 1 1844 0
 2296 001e FFF7FEFF 		bl	vPortExitCritical	@
1845:FreeRTOS/queue.c **** 
1846:FreeRTOS/queue.c **** 	return xReturn;
 2297              		.loc 1 1846 0
 2298 0022 FB68     		ldr	r3, [r7, #12]	@ D.6002, xReturn
1847:FreeRTOS/queue.c **** }
 2299              		.loc 1 1847 0
 2300 0024 1846     		mov	r0, r3	@, <retval>
 2301 0026 1037     		adds	r7, r7, #16	@,,
 2302              		.cfi_def_cfa_offset 8
 2303 0028 BD46     		mov	sp, r7	@,
 2304              		.cfi_def_cfa_register 13
 2305              		@ sp needed	@
 2306 002a 80BD     		pop	{r7, pc}	@
 2307              		.cfi_endproc
 2308              	.LFE22:
 2309              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 2310              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2311              		.align	2
 2312              		.global	xQueueIsQueueEmptyFromISR
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 74


 2313              		.thumb
 2314              		.thumb_func
 2315              		.type	xQueueIsQueueEmptyFromISR, %function
 2316              	xQueueIsQueueEmptyFromISR:
 2317              	.LFB23:
1848:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1849:FreeRTOS/queue.c **** 
1850:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1851:FreeRTOS/queue.c **** {
 2318              		.loc 1 1851 0
 2319              		.cfi_startproc
 2320              		@ args = 0, pretend = 0, frame = 16
 2321              		@ frame_needed = 1, uses_anonymous_args = 0
 2322 0000 80B5     		push	{r7, lr}	@
 2323              		.cfi_def_cfa_offset 8
 2324              		.cfi_offset 7, -8
 2325              		.cfi_offset 14, -4
 2326 0002 84B0     		sub	sp, sp, #16	@,,
 2327              		.cfi_def_cfa_offset 24
 2328 0004 00AF     		add	r7, sp, #0	@,,
 2329              		.cfi_def_cfa_register 7
 2330 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1852:FreeRTOS/queue.c **** BaseT_t xReturn;
1853:FreeRTOS/queue.c **** 
1854:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2331              		.loc 1 1854 0
 2332 0008 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 2333 000a 002B     		cmp	r3, #0	@ tmp113,
 2334 000c 02D1     		bne	.L182	@,
 2335              		.loc 1 1854 0 is_stmt 0 discriminator 1
 2336 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2337              	.L183:
 2338 0012 FEE7     		b	.L183	@
 2339              	.L182:
1855:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseT_t ) 0 )
 2340              		.loc 1 1855 0 is_stmt 1
 2341 0014 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2342 0016 9B6B     		ldr	r3, [r3, #56]	@ D.6003, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2343 0018 002B     		cmp	r3, #0	@ D.6003,
 2344 001a 02D1     		bne	.L184	@,
1856:FreeRTOS/queue.c **** 	{
1857:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2345              		.loc 1 1857 0
 2346 001c 0123     		movs	r3, #1	@ tmp115,
 2347 001e FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2348 0020 01E0     		b	.L185	@
 2349              	.L184:
1858:FreeRTOS/queue.c **** 	}
1859:FreeRTOS/queue.c **** 	else
1860:FreeRTOS/queue.c **** 	{
1861:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2350              		.loc 1 1861 0
 2351 0022 0023     		movs	r3, #0	@ tmp116,
 2352 0024 FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
 2353              	.L185:
1862:FreeRTOS/queue.c **** 	}
1863:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 75


1864:FreeRTOS/queue.c **** 	return xReturn;
 2354              		.loc 1 1864 0
 2355 0026 FB68     		ldr	r3, [r7, #12]	@ D.6004, xReturn
1865:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2356              		.loc 1 1865 0
 2357 0028 1846     		mov	r0, r3	@, <retval>
 2358 002a 1037     		adds	r7, r7, #16	@,,
 2359              		.cfi_def_cfa_offset 8
 2360 002c BD46     		mov	sp, r7	@,
 2361              		.cfi_def_cfa_register 13
 2362              		@ sp needed	@
 2363 002e 80BD     		pop	{r7, pc}	@
 2364              		.cfi_endproc
 2365              	.LFE23:
 2366              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2367              		.section	.text.prvIsQueueFull,"ax",%progbits
 2368              		.align	2
 2369              		.thumb
 2370              		.thumb_func
 2371              		.type	prvIsQueueFull, %function
 2372              	prvIsQueueFull:
 2373              	.LFB24:
1866:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1867:FreeRTOS/queue.c **** 
1868:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue )
1869:FreeRTOS/queue.c **** {
 2374              		.loc 1 1869 0
 2375              		.cfi_startproc
 2376              		@ args = 0, pretend = 0, frame = 16
 2377              		@ frame_needed = 1, uses_anonymous_args = 0
 2378 0000 80B5     		push	{r7, lr}	@
 2379              		.cfi_def_cfa_offset 8
 2380              		.cfi_offset 7, -8
 2381              		.cfi_offset 14, -4
 2382 0002 84B0     		sub	sp, sp, #16	@,,
 2383              		.cfi_def_cfa_offset 24
 2384 0004 00AF     		add	r7, sp, #0	@,,
 2385              		.cfi_def_cfa_register 7
 2386 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1870:FreeRTOS/queue.c **** BaseT_t xReturn;
1871:FreeRTOS/queue.c **** 
1872:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2387              		.loc 1 1872 0
 2388 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1873:FreeRTOS/queue.c **** 	{
1874:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2389              		.loc 1 1874 0
 2390 000c 7B68     		ldr	r3, [r7, #4]	@ tmp114, pxQueue
 2391 000e 9A6B     		ldr	r2, [r3, #56]	@ D.6005, pxQueue_2(D)->uxMessagesWaiting
 2392 0010 7B68     		ldr	r3, [r7, #4]	@ tmp115, pxQueue
 2393 0012 DB6B     		ldr	r3, [r3, #60]	@ D.6005, pxQueue_2(D)->uxLength
 2394 0014 9A42     		cmp	r2, r3	@ D.6005, D.6005
 2395 0016 02D1     		bne	.L188	@,
1875:FreeRTOS/queue.c **** 		{
1876:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2396              		.loc 1 1876 0
 2397 0018 0123     		movs	r3, #1	@ tmp116,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 76


 2398 001a FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
 2399 001c 01E0     		b	.L189	@
 2400              	.L188:
1877:FreeRTOS/queue.c **** 		}
1878:FreeRTOS/queue.c **** 		else
1879:FreeRTOS/queue.c **** 		{
1880:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2401              		.loc 1 1880 0
 2402 001e 0023     		movs	r3, #0	@ tmp117,
 2403 0020 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2404              	.L189:
1881:FreeRTOS/queue.c **** 		}
1882:FreeRTOS/queue.c **** 	}
1883:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2405              		.loc 1 1883 0
 2406 0022 FFF7FEFF 		bl	vPortExitCritical	@
1884:FreeRTOS/queue.c **** 
1885:FreeRTOS/queue.c **** 	return xReturn;
 2407              		.loc 1 1885 0
 2408 0026 FB68     		ldr	r3, [r7, #12]	@ D.6006, xReturn
1886:FreeRTOS/queue.c **** }
 2409              		.loc 1 1886 0
 2410 0028 1846     		mov	r0, r3	@, <retval>
 2411 002a 1037     		adds	r7, r7, #16	@,,
 2412              		.cfi_def_cfa_offset 8
 2413 002c BD46     		mov	sp, r7	@,
 2414              		.cfi_def_cfa_register 13
 2415              		@ sp needed	@
 2416 002e 80BD     		pop	{r7, pc}	@
 2417              		.cfi_endproc
 2418              	.LFE24:
 2419              		.size	prvIsQueueFull, .-prvIsQueueFull
 2420              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2421              		.align	2
 2422              		.global	xQueueIsQueueFullFromISR
 2423              		.thumb
 2424              		.thumb_func
 2425              		.type	xQueueIsQueueFullFromISR, %function
 2426              	xQueueIsQueueFullFromISR:
 2427              	.LFB25:
1887:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1888:FreeRTOS/queue.c **** 
1889:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1890:FreeRTOS/queue.c **** {
 2428              		.loc 1 1890 0
 2429              		.cfi_startproc
 2430              		@ args = 0, pretend = 0, frame = 16
 2431              		@ frame_needed = 1, uses_anonymous_args = 0
 2432 0000 80B5     		push	{r7, lr}	@
 2433              		.cfi_def_cfa_offset 8
 2434              		.cfi_offset 7, -8
 2435              		.cfi_offset 14, -4
 2436 0002 84B0     		sub	sp, sp, #16	@,,
 2437              		.cfi_def_cfa_offset 24
 2438 0004 00AF     		add	r7, sp, #0	@,,
 2439              		.cfi_def_cfa_register 7
 2440 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 77


1891:FreeRTOS/queue.c **** BaseT_t xReturn;
1892:FreeRTOS/queue.c **** 
1893:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2441              		.loc 1 1893 0
 2442 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2443 000a 002B     		cmp	r3, #0	@ tmp114,
 2444 000c 02D1     		bne	.L192	@,
 2445              		.loc 1 1893 0 is_stmt 0 discriminator 1
 2446 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2447              	.L193:
 2448 0012 FEE7     		b	.L193	@
 2449              	.L192:
1894:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2450              		.loc 1 1894 0 is_stmt 1
 2451 0014 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2452 0016 9A6B     		ldr	r2, [r3, #56]	@ D.6007, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2453 0018 7B68     		ldr	r3, [r7, #4]	@ tmp116, xQueue
 2454 001a DB6B     		ldr	r3, [r3, #60]	@ D.6007, MEM[(struct Queue_t *)xQueue_2(D)].uxLength
 2455 001c 9A42     		cmp	r2, r3	@ D.6007, D.6007
 2456 001e 02D1     		bne	.L194	@,
1895:FreeRTOS/queue.c **** 	{
1896:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2457              		.loc 1 1896 0
 2458 0020 0123     		movs	r3, #1	@ tmp117,
 2459 0022 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2460 0024 01E0     		b	.L195	@
 2461              	.L194:
1897:FreeRTOS/queue.c **** 	}
1898:FreeRTOS/queue.c **** 	else
1899:FreeRTOS/queue.c **** 	{
1900:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2462              		.loc 1 1900 0
 2463 0026 0023     		movs	r3, #0	@ tmp118,
 2464 0028 FB60     		str	r3, [r7, #12]	@ tmp118, xReturn
 2465              	.L195:
1901:FreeRTOS/queue.c **** 	}
1902:FreeRTOS/queue.c **** 
1903:FreeRTOS/queue.c **** 	return xReturn;
 2466              		.loc 1 1903 0
 2467 002a FB68     		ldr	r3, [r7, #12]	@ D.6008, xReturn
1904:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2468              		.loc 1 1904 0
 2469 002c 1846     		mov	r0, r3	@, <retval>
 2470 002e 1037     		adds	r7, r7, #16	@,,
 2471              		.cfi_def_cfa_offset 8
 2472 0030 BD46     		mov	sp, r7	@,
 2473              		.cfi_def_cfa_register 13
 2474              		@ sp needed	@
 2475 0032 80BD     		pop	{r7, pc}	@
 2476              		.cfi_endproc
 2477              	.LFE25:
 2478              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2479              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2480              		.align	2
 2481              		.global	vQueueAddToRegistry
 2482              		.thumb
 2483              		.thumb_func
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 78


 2484              		.type	vQueueAddToRegistry, %function
 2485              	vQueueAddToRegistry:
 2486              	.LFB26:
1905:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1906:FreeRTOS/queue.c **** 
1907:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1908:FreeRTOS/queue.c **** 
1909:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickT_t xTicksToWait )
1910:FreeRTOS/queue.c **** 	{
1911:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1912:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1913:FreeRTOS/queue.c **** 
1914:FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
1915:FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
1916:FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
1917:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1918:FreeRTOS/queue.c **** 		{
1919:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
1920:FreeRTOS/queue.c **** 			{
1921:FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
1922:FreeRTOS/queue.c **** 				posting? */
1923:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
1924:FreeRTOS/queue.c **** 				{
1925:FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
1926:FreeRTOS/queue.c **** 					return indicating that we need to block. */
1927:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
1928:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1929:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
1930:FreeRTOS/queue.c **** 				}
1931:FreeRTOS/queue.c **** 				else
1932:FreeRTOS/queue.c **** 				{
1933:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1934:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
1935:FreeRTOS/queue.c **** 				}
1936:FreeRTOS/queue.c **** 			}
1937:FreeRTOS/queue.c **** 		}
1938:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1939:FreeRTOS/queue.c **** 
1940:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1941:FreeRTOS/queue.c **** 		{
1942:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1943:FreeRTOS/queue.c **** 			{
1944:FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
1945:FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
1946:FreeRTOS/queue.c **** 				xReturn = pdPASS;
1947:FreeRTOS/queue.c **** 
1948:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
1949:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1950:FreeRTOS/queue.c **** 				{
1951:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
1952:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
1953:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
1954:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
1955:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1956:FreeRTOS/queue.c **** 					{
1957:FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
1958:FreeRTOS/queue.c **** 						that a yield might be appropriate. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 79


1959:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
1960:FreeRTOS/queue.c **** 					}
1961:FreeRTOS/queue.c **** 					else
1962:FreeRTOS/queue.c **** 					{
1963:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1964:FreeRTOS/queue.c **** 					}
1965:FreeRTOS/queue.c **** 				}
1966:FreeRTOS/queue.c **** 				else
1967:FreeRTOS/queue.c **** 				{
1968:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1969:FreeRTOS/queue.c **** 				}
1970:FreeRTOS/queue.c **** 			}
1971:FreeRTOS/queue.c **** 			else
1972:FreeRTOS/queue.c **** 			{
1973:FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
1974:FreeRTOS/queue.c **** 			}
1975:FreeRTOS/queue.c **** 		}
1976:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1977:FreeRTOS/queue.c **** 
1978:FreeRTOS/queue.c **** 		return xReturn;
1979:FreeRTOS/queue.c **** 	}
1980:FreeRTOS/queue.c **** 
1981:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
1982:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1983:FreeRTOS/queue.c **** 
1984:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1985:FreeRTOS/queue.c **** 
1986:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickT_t xTicksToWait )
1987:FreeRTOS/queue.c **** 	{
1988:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1989:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1990:FreeRTOS/queue.c **** 
1991:FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
1992:FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
1993:FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
1994:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1995:FreeRTOS/queue.c **** 		{
1996:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseT_t ) 0 )
1997:FreeRTOS/queue.c **** 			{
1998:FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
1999:FreeRTOS/queue.c **** 				leave with nothing? */
2000:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
2001:FreeRTOS/queue.c **** 				{
2002:FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2003:FreeRTOS/queue.c **** 					indicating that we need to block. */
2004:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2005:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2006:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2007:FreeRTOS/queue.c **** 				}
2008:FreeRTOS/queue.c **** 				else
2009:FreeRTOS/queue.c **** 				{
2010:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2011:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2012:FreeRTOS/queue.c **** 				}
2013:FreeRTOS/queue.c **** 			}
2014:FreeRTOS/queue.c **** 			else
2015:FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 80


2016:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2017:FreeRTOS/queue.c **** 			}
2018:FreeRTOS/queue.c **** 		}
2019:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2020:FreeRTOS/queue.c **** 
2021:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2022:FreeRTOS/queue.c **** 		{
2023:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
2024:FreeRTOS/queue.c **** 			{
2025:FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2026:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2027:FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2028:FreeRTOS/queue.c **** 				{
2029:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2030:FreeRTOS/queue.c **** 				}
2031:FreeRTOS/queue.c **** 				else
2032:FreeRTOS/queue.c **** 				{
2033:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2034:FreeRTOS/queue.c **** 				}
2035:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2036:FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2037:FreeRTOS/queue.c **** 
2038:FreeRTOS/queue.c **** 				xReturn = pdPASS;
2039:FreeRTOS/queue.c **** 
2040:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2041:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2042:FreeRTOS/queue.c **** 				{
2043:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2044:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2045:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2046:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2047:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2048:FreeRTOS/queue.c **** 					{
2049:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2050:FreeRTOS/queue.c **** 					}
2051:FreeRTOS/queue.c **** 					else
2052:FreeRTOS/queue.c **** 					{
2053:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2054:FreeRTOS/queue.c **** 					}
2055:FreeRTOS/queue.c **** 				}
2056:FreeRTOS/queue.c **** 				else
2057:FreeRTOS/queue.c **** 				{
2058:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2059:FreeRTOS/queue.c **** 				}
2060:FreeRTOS/queue.c **** 			}
2061:FreeRTOS/queue.c **** 			else
2062:FreeRTOS/queue.c **** 			{
2063:FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2064:FreeRTOS/queue.c **** 			}
2065:FreeRTOS/queue.c **** 		}
2066:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2067:FreeRTOS/queue.c **** 
2068:FreeRTOS/queue.c **** 		return xReturn;
2069:FreeRTOS/queue.c **** 	}
2070:FreeRTOS/queue.c **** 
2071:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2072:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 81


2073:FreeRTOS/queue.c **** 
2074:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2075:FreeRTOS/queue.c **** 
2076:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseT_t xCoRoutinePr
2077:FreeRTOS/queue.c **** 	{
2078:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2079:FreeRTOS/queue.c **** 
2080:FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2081:FreeRTOS/queue.c **** 		exit without doing anything. */
2082:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2083:FreeRTOS/queue.c **** 		{
2084:FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2085:FreeRTOS/queue.c **** 
2086:FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2087:FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2088:FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2089:FreeRTOS/queue.c **** 			{
2090:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2091:FreeRTOS/queue.c **** 				{
2092:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2093:FreeRTOS/queue.c **** 					{
2094:FreeRTOS/queue.c **** 						return pdTRUE;
2095:FreeRTOS/queue.c **** 					}
2096:FreeRTOS/queue.c **** 					else
2097:FreeRTOS/queue.c **** 					{
2098:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2099:FreeRTOS/queue.c **** 					}
2100:FreeRTOS/queue.c **** 				}
2101:FreeRTOS/queue.c **** 				else
2102:FreeRTOS/queue.c **** 				{
2103:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2104:FreeRTOS/queue.c **** 				}
2105:FreeRTOS/queue.c **** 			}
2106:FreeRTOS/queue.c **** 			else
2107:FreeRTOS/queue.c **** 			{
2108:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2109:FreeRTOS/queue.c **** 			}
2110:FreeRTOS/queue.c **** 		}
2111:FreeRTOS/queue.c **** 		else
2112:FreeRTOS/queue.c **** 		{
2113:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2114:FreeRTOS/queue.c **** 		}
2115:FreeRTOS/queue.c **** 
2116:FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2117:FreeRTOS/queue.c **** 	}
2118:FreeRTOS/queue.c **** 
2119:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2120:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2121:FreeRTOS/queue.c **** 
2122:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2123:FreeRTOS/queue.c **** 
2124:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseT_t *pxCoRoutineWoken )
2125:FreeRTOS/queue.c **** 	{
2126:FreeRTOS/queue.c **** 	BaseT_t xReturn;
2127:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2128:FreeRTOS/queue.c **** 
2129:FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 82


2130:FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2131:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
2132:FreeRTOS/queue.c **** 		{
2133:FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2134:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2135:FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2136:FreeRTOS/queue.c **** 			{
2137:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2138:FreeRTOS/queue.c **** 			}
2139:FreeRTOS/queue.c **** 			else
2140:FreeRTOS/queue.c **** 			{
2141:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2142:FreeRTOS/queue.c **** 			}
2143:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2144:FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2145:FreeRTOS/queue.c **** 
2146:FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2147:FreeRTOS/queue.c **** 			{
2148:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2149:FreeRTOS/queue.c **** 				{
2150:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2151:FreeRTOS/queue.c **** 					{
2152:FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2153:FreeRTOS/queue.c **** 					}
2154:FreeRTOS/queue.c **** 					else
2155:FreeRTOS/queue.c **** 					{
2156:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2157:FreeRTOS/queue.c **** 					}
2158:FreeRTOS/queue.c **** 				}
2159:FreeRTOS/queue.c **** 				else
2160:FreeRTOS/queue.c **** 				{
2161:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2162:FreeRTOS/queue.c **** 				}
2163:FreeRTOS/queue.c **** 			}
2164:FreeRTOS/queue.c **** 			else
2165:FreeRTOS/queue.c **** 			{
2166:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2167:FreeRTOS/queue.c **** 			}
2168:FreeRTOS/queue.c **** 
2169:FreeRTOS/queue.c **** 			xReturn = pdPASS;
2170:FreeRTOS/queue.c **** 		}
2171:FreeRTOS/queue.c **** 		else
2172:FreeRTOS/queue.c **** 		{
2173:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2174:FreeRTOS/queue.c **** 		}
2175:FreeRTOS/queue.c **** 
2176:FreeRTOS/queue.c **** 		return xReturn;
2177:FreeRTOS/queue.c **** 	}
2178:FreeRTOS/queue.c **** 
2179:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2180:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2181:FreeRTOS/queue.c **** 
2182:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2183:FreeRTOS/queue.c **** 
2184:FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2185:FreeRTOS/queue.c **** 	{
 2487              		.loc 1 2185 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 83


 2488              		.cfi_startproc
 2489              		@ args = 0, pretend = 0, frame = 16
 2490              		@ frame_needed = 1, uses_anonymous_args = 0
 2491              		@ link register save eliminated.
 2492 0000 80B4     		push	{r7}	@
 2493              		.cfi_def_cfa_offset 4
 2494              		.cfi_offset 7, -4
 2495 0002 85B0     		sub	sp, sp, #20	@,,
 2496              		.cfi_def_cfa_offset 24
 2497 0004 00AF     		add	r7, sp, #0	@,,
 2498              		.cfi_def_cfa_register 7
 2499 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 2500 0008 3960     		str	r1, [r7]	@ pcQueueName, pcQueueName
2186:FreeRTOS/queue.c **** 	UBaseT_t ux;
2187:FreeRTOS/queue.c **** 
2188:FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2189:FreeRTOS/queue.c **** 		a free slot. */
2190:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2501              		.loc 1 2190 0
 2502 000a 0023     		movs	r3, #0	@ tmp111,
 2503 000c FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2504 000e 14E0     		b	.L198	@
 2505              	.L201:
2191:FreeRTOS/queue.c **** 		{
2192:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2506              		.loc 1 2192 0
 2507 0010 0E4A     		ldr	r2, .L202	@ tmp112,
 2508 0012 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2509 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]	@ D.6009, xQueueRegistry[ux_1].pcQueueName
 2510 0018 002B     		cmp	r3, #0	@ D.6009,
 2511 001a 0BD1     		bne	.L199	@,
2193:FreeRTOS/queue.c **** 			{
2194:FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2195:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2512              		.loc 1 2195 0
 2513 001c 0B49     		ldr	r1, .L202	@ tmp114,
 2514 001e FB68     		ldr	r3, [r7, #12]	@ tmp115, ux
 2515 0020 3A68     		ldr	r2, [r7]	@ tmp116, pcQueueName
 2516 0022 41F83320 		str	r2, [r1, r3, lsl #3]	@ tmp116, xQueueRegistry[ux_1].pcQueueName
2196:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2517              		.loc 1 2196 0
 2518 0026 094A     		ldr	r2, .L202	@ tmp117,
 2519 0028 FB68     		ldr	r3, [r7, #12]	@ tmp118, ux
 2520 002a DB00     		lsls	r3, r3, #3	@ tmp119, tmp118,
 2521 002c 1344     		add	r3, r3, r2	@ tmp119, tmp117
 2522 002e 7A68     		ldr	r2, [r7, #4]	@ tmp120, xQueue
 2523 0030 5A60     		str	r2, [r3, #4]	@ tmp120, xQueueRegistry[ux_1].xHandle
2197:FreeRTOS/queue.c **** 
2198:FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2199:FreeRTOS/queue.c **** 				break;
 2524              		.loc 1 2199 0
 2525 0032 05E0     		b	.L197	@
 2526              	.L199:
2190:FreeRTOS/queue.c **** 		{
 2527              		.loc 1 2190 0 discriminator 2
 2528 0034 FB68     		ldr	r3, [r7, #12]	@ tmp122, ux
 2529 0036 0133     		adds	r3, r3, #1	@ tmp121, tmp122,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 84


 2530 0038 FB60     		str	r3, [r7, #12]	@ tmp121, ux
 2531              	.L198:
2190:FreeRTOS/queue.c **** 		{
 2532              		.loc 1 2190 0 is_stmt 0 discriminator 1
 2533 003a FB68     		ldr	r3, [r7, #12]	@ tmp123, ux
 2534 003c 092B     		cmp	r3, #9	@ tmp123,
 2535 003e E7D9     		bls	.L201	@,
 2536              	.L197:
2200:FreeRTOS/queue.c **** 			}
2201:FreeRTOS/queue.c **** 			else
2202:FreeRTOS/queue.c **** 			{
2203:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2204:FreeRTOS/queue.c **** 			}
2205:FreeRTOS/queue.c **** 		}
2206:FreeRTOS/queue.c **** 	}
 2537              		.loc 1 2206 0 is_stmt 1
 2538 0040 1437     		adds	r7, r7, #20	@,,
 2539              		.cfi_def_cfa_offset 4
 2540 0042 BD46     		mov	sp, r7	@,
 2541              		.cfi_def_cfa_register 13
 2542              		@ sp needed	@
 2543 0044 5DF8047B 		ldr	r7, [sp], #4	@,
 2544              		.cfi_restore 7
 2545              		.cfi_def_cfa_offset 0
 2546 0048 7047     		bx	lr	@
 2547              	.L203:
 2548 004a 00BF     		.align	2
 2549              	.L202:
 2550 004c 00000000 		.word	xQueueRegistry
 2551              		.cfi_endproc
 2552              	.LFE26:
 2553              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2554              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2555              		.align	2
 2556              		.global	vQueueUnregisterQueue
 2557              		.thumb
 2558              		.thumb_func
 2559              		.type	vQueueUnregisterQueue, %function
 2560              	vQueueUnregisterQueue:
 2561              	.LFB27:
2207:FreeRTOS/queue.c **** 
2208:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2209:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2210:FreeRTOS/queue.c **** 
2211:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2212:FreeRTOS/queue.c **** 
2213:FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2214:FreeRTOS/queue.c **** 	{
 2562              		.loc 1 2214 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 16
 2565              		@ frame_needed = 1, uses_anonymous_args = 0
 2566              		@ link register save eliminated.
 2567 0000 80B4     		push	{r7}	@
 2568              		.cfi_def_cfa_offset 4
 2569              		.cfi_offset 7, -4
 2570 0002 85B0     		sub	sp, sp, #20	@,,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 85


 2571              		.cfi_def_cfa_offset 24
 2572 0004 00AF     		add	r7, sp, #0	@,,
 2573              		.cfi_def_cfa_register 7
 2574 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
2215:FreeRTOS/queue.c **** 	UBaseT_t ux;
2216:FreeRTOS/queue.c **** 
2217:FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2218:FreeRTOS/queue.c **** 		registry. */
2219:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2575              		.loc 1 2219 0
 2576 0008 0023     		movs	r3, #0	@ tmp111,
 2577 000a FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2578 000c 10E0     		b	.L205	@
 2579              	.L208:
2220:FreeRTOS/queue.c **** 		{
2221:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2580              		.loc 1 2221 0
 2581 000e 0C4A     		ldr	r2, .L209	@ tmp112,
 2582 0010 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2583 0012 DB00     		lsls	r3, r3, #3	@ tmp114, tmp113,
 2584 0014 1344     		add	r3, r3, r2	@ tmp114, tmp112
 2585 0016 5A68     		ldr	r2, [r3, #4]	@ D.6010, xQueueRegistry[ux_1].xHandle
 2586 0018 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2587 001a 9A42     		cmp	r2, r3	@ D.6010, tmp115
 2588 001c 05D1     		bne	.L206	@,
2222:FreeRTOS/queue.c **** 			{
2223:FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2224:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2589              		.loc 1 2224 0
 2590 001e 084A     		ldr	r2, .L209	@ tmp116,
 2591 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, ux
 2592 0022 0021     		movs	r1, #0	@ tmp118,
 2593 0024 42F83310 		str	r1, [r2, r3, lsl #3]	@ tmp118, xQueueRegistry[ux_1].pcQueueName
2225:FreeRTOS/queue.c **** 				break;
 2594              		.loc 1 2225 0
 2595 0028 05E0     		b	.L204	@
 2596              	.L206:
2219:FreeRTOS/queue.c **** 		{
 2597              		.loc 1 2219 0 discriminator 2
 2598 002a FB68     		ldr	r3, [r7, #12]	@ tmp120, ux
 2599 002c 0133     		adds	r3, r3, #1	@ tmp119, tmp120,
 2600 002e FB60     		str	r3, [r7, #12]	@ tmp119, ux
 2601              	.L205:
2219:FreeRTOS/queue.c **** 		{
 2602              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2603 0030 FB68     		ldr	r3, [r7, #12]	@ tmp121, ux
 2604 0032 092B     		cmp	r3, #9	@ tmp121,
 2605 0034 EBD9     		bls	.L208	@,
 2606              	.L204:
2226:FreeRTOS/queue.c **** 			}
2227:FreeRTOS/queue.c **** 			else
2228:FreeRTOS/queue.c **** 			{
2229:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2230:FreeRTOS/queue.c **** 			}
2231:FreeRTOS/queue.c **** 		}
2232:FreeRTOS/queue.c **** 
2233:FreeRTOS/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 86


 2607              		.loc 1 2233 0 is_stmt 1
 2608 0036 1437     		adds	r7, r7, #20	@,,
 2609              		.cfi_def_cfa_offset 4
 2610 0038 BD46     		mov	sp, r7	@,
 2611              		.cfi_def_cfa_register 13
 2612              		@ sp needed	@
 2613 003a 5DF8047B 		ldr	r7, [sp], #4	@,
 2614              		.cfi_restore 7
 2615              		.cfi_def_cfa_offset 0
 2616 003e 7047     		bx	lr	@
 2617              	.L210:
 2618              		.align	2
 2619              	.L209:
 2620 0040 00000000 		.word	xQueueRegistry
 2621              		.cfi_endproc
 2622              	.LFE27:
 2623              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2624              		.text
 2625              	.Letext0:
 2626              		.file 2 "c:\\gnu tools arm embedded\\4.9 2015q1\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h
 2627              		.file 3 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\_default_types.h
 2628              		.file 4 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\stdint.h"
 2629              		.file 5 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
 2630              		.file 6 "FreeRTOS/include/list.h"
 2631              		.file 7 "FreeRTOS/include/task.h"
 2632              		.file 8 "FreeRTOS/include/queue.h"
 2633              		.section	.debug_info,"",%progbits
 2634              	.Ldebug_info0:
 2635 0000 890B0000 		.4byte	0xb89
 2636 0004 0400     		.2byte	0x4
 2637 0006 00000000 		.4byte	.Ldebug_abbrev0
 2638 000a 04       		.byte	0x4
 2639 000b 01       		.uleb128 0x1
 2640 000c C90A0000 		.4byte	.LASF1139
 2641 0010 01       		.byte	0x1
 2642 0011 28110000 		.4byte	.LASF1140
 2643 0015 538E0000 		.4byte	.LASF1141
 2644 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2645 001d 00000000 		.4byte	0
 2646 0021 00000000 		.4byte	.Ldebug_line0
 2647 0025 00000000 		.4byte	.Ldebug_macro0
 2648 0029 02       		.uleb128 0x2
 2649 002a 02010000 		.4byte	.LASF1027
 2650 002e 02       		.byte	0x2
 2651 002f D4       		.byte	0xd4
 2652 0030 34000000 		.4byte	0x34
 2653 0034 03       		.uleb128 0x3
 2654 0035 04       		.byte	0x4
 2655 0036 07       		.byte	0x7
 2656 0037 12520000 		.4byte	.LASF1026
 2657 003b 04       		.uleb128 0x4
 2658 003c 04       		.byte	0x4
 2659 003d 05       		.byte	0x5
 2660 003e 696E7400 		.ascii	"int\000"
 2661 0042 02       		.uleb128 0x2
 2662 0043 71620000 		.4byte	.LASF1028
 2663 0047 03       		.byte	0x3
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 87


 2664 0048 1B       		.byte	0x1b
 2665 0049 4D000000 		.4byte	0x4d
 2666 004d 03       		.uleb128 0x3
 2667 004e 01       		.byte	0x1
 2668 004f 06       		.byte	0x6
 2669 0050 7C1C0000 		.4byte	.LASF1029
 2670 0054 02       		.uleb128 0x2
 2671 0055 8A100000 		.4byte	.LASF1030
 2672 0059 03       		.byte	0x3
 2673 005a 1D       		.byte	0x1d
 2674 005b 5F000000 		.4byte	0x5f
 2675 005f 03       		.uleb128 0x3
 2676 0060 01       		.byte	0x1
 2677 0061 08       		.byte	0x8
 2678 0062 005A0000 		.4byte	.LASF1031
 2679 0066 03       		.uleb128 0x3
 2680 0067 02       		.byte	0x2
 2681 0068 05       		.byte	0x5
 2682 0069 BD750000 		.4byte	.LASF1032
 2683 006d 03       		.uleb128 0x3
 2684 006e 02       		.byte	0x2
 2685 006f 07       		.byte	0x7
 2686 0070 5A5A0000 		.4byte	.LASF1033
 2687 0074 03       		.uleb128 0x3
 2688 0075 04       		.byte	0x4
 2689 0076 05       		.byte	0x5
 2690 0077 DC130000 		.4byte	.LASF1034
 2691 007b 02       		.uleb128 0x2
 2692 007c 943C0000 		.4byte	.LASF1035
 2693 0080 03       		.byte	0x3
 2694 0081 41       		.byte	0x41
 2695 0082 86000000 		.4byte	0x86
 2696 0086 03       		.uleb128 0x3
 2697 0087 04       		.byte	0x4
 2698 0088 07       		.byte	0x7
 2699 0089 DD3B0000 		.4byte	.LASF1036
 2700 008d 03       		.uleb128 0x3
 2701 008e 08       		.byte	0x8
 2702 008f 05       		.byte	0x5
 2703 0090 CD470000 		.4byte	.LASF1037
 2704 0094 03       		.uleb128 0x3
 2705 0095 08       		.byte	0x8
 2706 0096 07       		.byte	0x7
 2707 0097 64630000 		.4byte	.LASF1038
 2708 009b 03       		.uleb128 0x3
 2709 009c 04       		.byte	0x4
 2710 009d 07       		.byte	0x7
 2711 009e 5C010000 		.4byte	.LASF1039
 2712 00a2 05       		.uleb128 0x5
 2713 00a3 04       		.byte	0x4
 2714 00a4 03       		.uleb128 0x3
 2715 00a5 01       		.byte	0x1
 2716 00a6 08       		.byte	0x8
 2717 00a7 13280000 		.4byte	.LASF1040
 2718 00ab 06       		.uleb128 0x6
 2719 00ac 04       		.byte	0x4
 2720 00ad B1000000 		.4byte	0xb1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 88


 2721 00b1 07       		.uleb128 0x7
 2722 00b2 A4000000 		.4byte	0xa4
 2723 00b6 06       		.uleb128 0x6
 2724 00b7 04       		.byte	0x4
 2725 00b8 BC000000 		.4byte	0xbc
 2726 00bc 08       		.uleb128 0x8
 2727 00bd 02       		.uleb128 0x2
 2728 00be 76000000 		.4byte	.LASF1041
 2729 00c2 04       		.byte	0x4
 2730 00c3 14       		.byte	0x14
 2731 00c4 42000000 		.4byte	0x42
 2732 00c8 02       		.uleb128 0x2
 2733 00c9 881C0000 		.4byte	.LASF1042
 2734 00cd 04       		.byte	0x4
 2735 00ce 15       		.byte	0x15
 2736 00cf 54000000 		.4byte	0x54
 2737 00d3 02       		.uleb128 0x2
 2738 00d4 95830000 		.4byte	.LASF1043
 2739 00d8 04       		.byte	0x4
 2740 00d9 2D       		.byte	0x2d
 2741 00da 7B000000 		.4byte	0x7b
 2742 00de 02       		.uleb128 0x2
 2743 00df BC3A0000 		.4byte	.LASF1044
 2744 00e3 05       		.byte	0x5
 2745 00e4 60       		.byte	0x60
 2746 00e5 74000000 		.4byte	0x74
 2747 00e9 02       		.uleb128 0x2
 2748 00ea EB2B0000 		.4byte	.LASF1045
 2749 00ee 05       		.byte	0x5
 2750 00ef 62       		.byte	0x62
 2751 00f0 86000000 		.4byte	0x86
 2752 00f4 02       		.uleb128 0x2
 2753 00f5 DB7D0000 		.4byte	.LASF1046
 2754 00f9 05       		.byte	0x5
 2755 00fa 69       		.byte	0x69
 2756 00fb D3000000 		.4byte	0xd3
 2757 00ff 09       		.uleb128 0x9
 2758 0100 1B4D0000 		.4byte	.LASF1053
 2759 0104 14       		.byte	0x14
 2760 0105 06       		.byte	0x6
 2761 0106 88       		.byte	0x88
 2762 0107 48010000 		.4byte	0x148
 2763 010b 0A       		.uleb128 0xa
 2764 010c 328F0000 		.4byte	.LASF1047
 2765 0110 06       		.byte	0x6
 2766 0111 8A       		.byte	0x8a
 2767 0112 F4000000 		.4byte	0xf4
 2768 0116 00       		.byte	0
 2769 0117 0A       		.uleb128 0xa
 2770 0118 370F0000 		.4byte	.LASF1048
 2771 011c 06       		.byte	0x6
 2772 011d 8B       		.byte	0x8b
 2773 011e 48010000 		.4byte	0x148
 2774 0122 04       		.byte	0x4
 2775 0123 0A       		.uleb128 0xa
 2776 0124 55670000 		.4byte	.LASF1049
 2777 0128 06       		.byte	0x6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 89


 2778 0129 8C       		.byte	0x8c
 2779 012a 48010000 		.4byte	0x148
 2780 012e 08       		.byte	0x8
 2781 012f 0A       		.uleb128 0xa
 2782 0130 855E0000 		.4byte	.LASF1050
 2783 0134 06       		.byte	0x6
 2784 0135 8D       		.byte	0x8d
 2785 0136 A2000000 		.4byte	0xa2
 2786 013a 0C       		.byte	0xc
 2787 013b 0A       		.uleb128 0xa
 2788 013c 362C0000 		.4byte	.LASF1051
 2789 0140 06       		.byte	0x6
 2790 0141 8E       		.byte	0x8e
 2791 0142 A2000000 		.4byte	0xa2
 2792 0146 10       		.byte	0x10
 2793 0147 00       		.byte	0
 2794 0148 06       		.uleb128 0x6
 2795 0149 04       		.byte	0x4
 2796 014a FF000000 		.4byte	0xff
 2797 014e 02       		.uleb128 0x2
 2798 014f D07D0000 		.4byte	.LASF1052
 2799 0153 06       		.byte	0x6
 2800 0154 90       		.byte	0x90
 2801 0155 FF000000 		.4byte	0xff
 2802 0159 09       		.uleb128 0x9
 2803 015a 0D290000 		.4byte	.LASF1054
 2804 015e 0C       		.byte	0xc
 2805 015f 06       		.byte	0x6
 2806 0160 92       		.byte	0x92
 2807 0161 8A010000 		.4byte	0x18a
 2808 0165 0A       		.uleb128 0xa
 2809 0166 328F0000 		.4byte	.LASF1047
 2810 016a 06       		.byte	0x6
 2811 016b 94       		.byte	0x94
 2812 016c F4000000 		.4byte	0xf4
 2813 0170 00       		.byte	0
 2814 0171 0A       		.uleb128 0xa
 2815 0172 370F0000 		.4byte	.LASF1048
 2816 0176 06       		.byte	0x6
 2817 0177 95       		.byte	0x95
 2818 0178 48010000 		.4byte	0x148
 2819 017c 04       		.byte	0x4
 2820 017d 0A       		.uleb128 0xa
 2821 017e 55670000 		.4byte	.LASF1049
 2822 0182 06       		.byte	0x6
 2823 0183 96       		.byte	0x96
 2824 0184 48010000 		.4byte	0x148
 2825 0188 08       		.byte	0x8
 2826 0189 00       		.byte	0
 2827 018a 02       		.uleb128 0x2
 2828 018b A8720000 		.4byte	.LASF1055
 2829 018f 06       		.byte	0x6
 2830 0190 98       		.byte	0x98
 2831 0191 59010000 		.4byte	0x159
 2832 0195 09       		.uleb128 0x9
 2833 0196 62730000 		.4byte	.LASF1056
 2834 019a 14       		.byte	0x14
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 90


 2835 019b 06       		.byte	0x6
 2836 019c 9D       		.byte	0x9d
 2837 019d C6010000 		.4byte	0x1c6
 2838 01a1 0A       		.uleb128 0xa
 2839 01a2 B8540000 		.4byte	.LASF1057
 2840 01a6 06       		.byte	0x6
 2841 01a7 9F       		.byte	0x9f
 2842 01a8 E9000000 		.4byte	0xe9
 2843 01ac 00       		.byte	0
 2844 01ad 0A       		.uleb128 0xa
 2845 01ae 59260000 		.4byte	.LASF1058
 2846 01b2 06       		.byte	0x6
 2847 01b3 A0       		.byte	0xa0
 2848 01b4 C6010000 		.4byte	0x1c6
 2849 01b8 04       		.byte	0x4
 2850 01b9 0A       		.uleb128 0xa
 2851 01ba 6D5A0000 		.4byte	.LASF1059
 2852 01be 06       		.byte	0x6
 2853 01bf A1       		.byte	0xa1
 2854 01c0 8A010000 		.4byte	0x18a
 2855 01c4 08       		.byte	0x8
 2856 01c5 00       		.byte	0
 2857 01c6 06       		.uleb128 0x6
 2858 01c7 04       		.byte	0x4
 2859 01c8 4E010000 		.4byte	0x14e
 2860 01cc 02       		.uleb128 0x2
 2861 01cd D0570000 		.4byte	.LASF1060
 2862 01d1 06       		.byte	0x6
 2863 01d2 A2       		.byte	0xa2
 2864 01d3 95010000 		.4byte	0x195
 2865 01d7 09       		.uleb128 0x9
 2866 01d8 9F060000 		.4byte	.LASF1061
 2867 01dc 08       		.byte	0x8
 2868 01dd 07       		.byte	0x7
 2869 01de 78       		.byte	0x78
 2870 01df FC010000 		.4byte	0x1fc
 2871 01e3 0A       		.uleb128 0xa
 2872 01e4 9E390000 		.4byte	.LASF1062
 2873 01e8 07       		.byte	0x7
 2874 01e9 7A       		.byte	0x7a
 2875 01ea DE000000 		.4byte	0xde
 2876 01ee 00       		.byte	0
 2877 01ef 0A       		.uleb128 0xa
 2878 01f0 AF230000 		.4byte	.LASF1063
 2879 01f4 07       		.byte	0x7
 2880 01f5 7B       		.byte	0x7b
 2881 01f6 F4000000 		.4byte	0xf4
 2882 01fa 04       		.byte	0x4
 2883 01fb 00       		.byte	0
 2884 01fc 02       		.uleb128 0x2
 2885 01fd D7280000 		.4byte	.LASF1064
 2886 0201 07       		.byte	0x7
 2887 0202 7C       		.byte	0x7c
 2888 0203 D7010000 		.4byte	0x1d7
 2889 0207 02       		.uleb128 0x2
 2890 0208 6E1C0000 		.4byte	.LASF1065
 2891 020c 08       		.byte	0x8
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 91


 2892 020d 54       		.byte	0x54
 2893 020e A2000000 		.4byte	0xa2
 2894 0212 0B       		.uleb128 0xb
 2895 0213 04       		.byte	0x4
 2896 0214 01       		.byte	0x1
 2897 0215 83       		.byte	0x83
 2898 0216 31020000 		.4byte	0x231
 2899 021a 0C       		.uleb128 0xc
 2900 021b 9E0D0000 		.4byte	.LASF1066
 2901 021f 01       		.byte	0x1
 2902 0220 85       		.byte	0x85
 2903 0221 31020000 		.4byte	0x231
 2904 0225 0C       		.uleb128 0xc
 2905 0226 F2270000 		.4byte	.LASF1067
 2906 022a 01       		.byte	0x1
 2907 022b 86       		.byte	0x86
 2908 022c E9000000 		.4byte	0xe9
 2909 0230 00       		.byte	0
 2910 0231 06       		.uleb128 0x6
 2911 0232 04       		.byte	0x4
 2912 0233 BD000000 		.4byte	0xbd
 2913 0237 09       		.uleb128 0x9
 2914 0238 C5140000 		.4byte	.LASF1068
 2915 023c 54       		.byte	0x54
 2916 023d 01       		.byte	0x1
 2917 023e 7D       		.byte	0x7d
 2918 023f DE020000 		.4byte	0x2de
 2919 0243 0A       		.uleb128 0xa
 2920 0244 D0310000 		.4byte	.LASF1069
 2921 0248 01       		.byte	0x1
 2922 0249 7F       		.byte	0x7f
 2923 024a 31020000 		.4byte	0x231
 2924 024e 00       		.byte	0
 2925 024f 0A       		.uleb128 0xa
 2926 0250 170D0000 		.4byte	.LASF1070
 2927 0254 01       		.byte	0x1
 2928 0255 80       		.byte	0x80
 2929 0256 31020000 		.4byte	0x231
 2930 025a 04       		.byte	0x4
 2931 025b 0A       		.uleb128 0xa
 2932 025c D7570000 		.4byte	.LASF1071
 2933 0260 01       		.byte	0x1
 2934 0261 81       		.byte	0x81
 2935 0262 31020000 		.4byte	0x231
 2936 0266 08       		.byte	0x8
 2937 0267 0D       		.uleb128 0xd
 2938 0268 7500     		.ascii	"u\000"
 2939 026a 01       		.byte	0x1
 2940 026b 87       		.byte	0x87
 2941 026c 12020000 		.4byte	0x212
 2942 0270 0C       		.byte	0xc
 2943 0271 0A       		.uleb128 0xa
 2944 0272 F01F0000 		.4byte	.LASF1072
 2945 0276 01       		.byte	0x1
 2946 0277 89       		.byte	0x89
 2947 0278 CC010000 		.4byte	0x1cc
 2948 027c 10       		.byte	0x10
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 92


 2949 027d 0A       		.uleb128 0xa
 2950 027e A8630000 		.4byte	.LASF1073
 2951 0282 01       		.byte	0x1
 2952 0283 8A       		.byte	0x8a
 2953 0284 CC010000 		.4byte	0x1cc
 2954 0288 24       		.byte	0x24
 2955 0289 0A       		.uleb128 0xa
 2956 028a F5500000 		.4byte	.LASF1074
 2957 028e 01       		.byte	0x1
 2958 028f 8C       		.byte	0x8c
 2959 0290 DE020000 		.4byte	0x2de
 2960 0294 38       		.byte	0x38
 2961 0295 0A       		.uleb128 0xa
 2962 0296 17630000 		.4byte	.LASF1075
 2963 029a 01       		.byte	0x1
 2964 029b 8D       		.byte	0x8d
 2965 029c E9000000 		.4byte	0xe9
 2966 02a0 3C       		.byte	0x3c
 2967 02a1 0A       		.uleb128 0xa
 2968 02a2 79330000 		.4byte	.LASF1076
 2969 02a6 01       		.byte	0x1
 2970 02a7 8E       		.byte	0x8e
 2971 02a8 E9000000 		.4byte	0xe9
 2972 02ac 40       		.byte	0x40
 2973 02ad 0A       		.uleb128 0xa
 2974 02ae 64360000 		.4byte	.LASF1077
 2975 02b2 01       		.byte	0x1
 2976 02b3 90       		.byte	0x90
 2977 02b4 E3020000 		.4byte	0x2e3
 2978 02b8 44       		.byte	0x44
 2979 02b9 0A       		.uleb128 0xa
 2980 02ba E4880000 		.4byte	.LASF1078
 2981 02be 01       		.byte	0x1
 2982 02bf 91       		.byte	0x91
 2983 02c0 E3020000 		.4byte	0x2e3
 2984 02c4 48       		.byte	0x48
 2985 02c5 0A       		.uleb128 0xa
 2986 02c6 221B0000 		.4byte	.LASF1079
 2987 02ca 01       		.byte	0x1
 2988 02cb 94       		.byte	0x94
 2989 02cc E9000000 		.4byte	0xe9
 2990 02d0 4C       		.byte	0x4c
 2991 02d1 0A       		.uleb128 0xa
 2992 02d2 F04D0000 		.4byte	.LASF1080
 2993 02d6 01       		.byte	0x1
 2994 02d7 95       		.byte	0x95
 2995 02d8 C8000000 		.4byte	0xc8
 2996 02dc 50       		.byte	0x50
 2997 02dd 00       		.byte	0
 2998 02de 0E       		.uleb128 0xe
 2999 02df E9000000 		.4byte	0xe9
 3000 02e3 0E       		.uleb128 0xe
 3001 02e4 DE000000 		.4byte	0xde
 3002 02e8 02       		.uleb128 0x2
 3003 02e9 7B8B0000 		.4byte	.LASF1081
 3004 02ed 01       		.byte	0x1
 3005 02ee 9C       		.byte	0x9c
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 93


 3006 02ef 37020000 		.4byte	0x237
 3007 02f3 02       		.uleb128 0x2
 3008 02f4 FE3B0000 		.4byte	.LASF1082
 3009 02f8 01       		.byte	0x1
 3010 02f9 A0       		.byte	0xa0
 3011 02fa E8020000 		.4byte	0x2e8
 3012 02fe 09       		.uleb128 0x9
 3013 02ff 22300000 		.4byte	.LASF1083
 3014 0303 08       		.byte	0x8
 3015 0304 01       		.byte	0x1
 3016 0305 AD       		.byte	0xad
 3017 0306 23030000 		.4byte	0x323
 3018 030a 0A       		.uleb128 0xa
 3019 030b 0A020000 		.4byte	.LASF1084
 3020 030f 01       		.byte	0x1
 3021 0310 AF       		.byte	0xaf
 3022 0311 AB000000 		.4byte	0xab
 3023 0315 00       		.byte	0
 3024 0316 0A       		.uleb128 0xa
 3025 0317 0B090000 		.4byte	.LASF1085
 3026 031b 01       		.byte	0x1
 3027 031c B0       		.byte	0xb0
 3028 031d 07020000 		.4byte	0x207
 3029 0321 04       		.byte	0x4
 3030 0322 00       		.byte	0
 3031 0323 02       		.uleb128 0x2
 3032 0324 212F0000 		.4byte	.LASF1086
 3033 0328 01       		.byte	0x1
 3034 0329 B1       		.byte	0xb1
 3035 032a FE020000 		.4byte	0x2fe
 3036 032e 02       		.uleb128 0x2
 3037 032f CA830000 		.4byte	.LASF1087
 3038 0333 01       		.byte	0x1
 3039 0334 B6       		.byte	0xb6
 3040 0335 23030000 		.4byte	0x323
 3041 0339 0F       		.uleb128 0xf
 3042 033a 1A610000 		.4byte	.LASF1090
 3043 033e 01       		.byte	0x1
 3044 033f FF       		.byte	0xff
 3045 0340 DE000000 		.4byte	0xde
 3046 0344 00000000 		.4byte	.LFB1
 3047 0348 B0000000 		.4byte	.LFE1-.LFB1
 3048 034c 01       		.uleb128 0x1
 3049 034d 9C       		.byte	0x9c
 3050 034e 7E030000 		.4byte	0x37e
 3051 0352 10       		.uleb128 0x10
 3052 0353 B3830000 		.4byte	.LASF1088
 3053 0357 01       		.byte	0x1
 3054 0358 FF       		.byte	0xff
 3055 0359 07020000 		.4byte	0x207
 3056 035d 02       		.uleb128 0x2
 3057 035e 91       		.byte	0x91
 3058 035f 6C       		.sleb128 -20
 3059 0360 10       		.uleb128 0x10
 3060 0361 366D0000 		.4byte	.LASF1089
 3061 0365 01       		.byte	0x1
 3062 0366 FF       		.byte	0xff
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 94


 3063 0367 DE000000 		.4byte	0xde
 3064 036b 02       		.uleb128 0x2
 3065 036c 91       		.byte	0x91
 3066 036d 68       		.sleb128 -24
 3067 036e 11       		.uleb128 0x11
 3068 036f 27140000 		.4byte	.LASF1093
 3069 0373 01       		.byte	0x1
 3070 0374 0101     		.2byte	0x101
 3071 0376 7E030000 		.4byte	0x37e
 3072 037a 02       		.uleb128 0x2
 3073 037b 91       		.byte	0x91
 3074 037c 74       		.sleb128 -12
 3075 037d 00       		.byte	0
 3076 037e 07       		.uleb128 0x7
 3077 037f 83030000 		.4byte	0x383
 3078 0383 06       		.uleb128 0x6
 3079 0384 04       		.byte	0x4
 3080 0385 F3020000 		.4byte	0x2f3
 3081 0389 12       		.uleb128 0x12
 3082 038a 7D220000 		.4byte	.LASF1091
 3083 038e 01       		.byte	0x1
 3084 038f 3401     		.2byte	0x134
 3085 0391 07020000 		.4byte	0x207
 3086 0395 00000000 		.4byte	.LFB2
 3087 0399 84000000 		.4byte	.LFE2-.LFB2
 3088 039d 01       		.uleb128 0x1
 3089 039e 9C       		.byte	0x9c
 3090 039f FE030000 		.4byte	0x3fe
 3091 03a3 13       		.uleb128 0x13
 3092 03a4 FE0F0000 		.4byte	.LASF1092
 3093 03a8 01       		.byte	0x1
 3094 03a9 3401     		.2byte	0x134
 3095 03ab FE030000 		.4byte	0x3fe
 3096 03af 02       		.uleb128 0x2
 3097 03b0 91       		.byte	0x91
 3098 03b1 64       		.sleb128 -28
 3099 03b2 13       		.uleb128 0x13
 3100 03b3 79330000 		.4byte	.LASF1076
 3101 03b7 01       		.byte	0x1
 3102 03b8 3401     		.2byte	0x134
 3103 03ba FE030000 		.4byte	0x3fe
 3104 03be 02       		.uleb128 0x2
 3105 03bf 91       		.byte	0x91
 3106 03c0 60       		.sleb128 -32
 3107 03c1 13       		.uleb128 0x13
 3108 03c2 F04D0000 		.4byte	.LASF1080
 3109 03c6 01       		.byte	0x1
 3110 03c7 3401     		.2byte	0x134
 3111 03c9 03040000 		.4byte	0x403
 3112 03cd 02       		.uleb128 0x2
 3113 03ce 91       		.byte	0x91
 3114 03cf 5F       		.sleb128 -33
 3115 03d0 11       		.uleb128 0x11
 3116 03d1 5D8A0000 		.4byte	.LASF1094
 3117 03d5 01       		.byte	0x1
 3118 03d6 3601     		.2byte	0x136
 3119 03d8 83030000 		.4byte	0x383
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 95


 3120 03dc 02       		.uleb128 0x2
 3121 03dd 91       		.byte	0x91
 3122 03de 70       		.sleb128 -16
 3123 03df 11       		.uleb128 0x11
 3124 03e0 4A750000 		.4byte	.LASF1095
 3125 03e4 01       		.byte	0x1
 3126 03e5 3701     		.2byte	0x137
 3127 03e7 29000000 		.4byte	0x29
 3128 03eb 02       		.uleb128 0x2
 3129 03ec 91       		.byte	0x91
 3130 03ed 6C       		.sleb128 -20
 3131 03ee 11       		.uleb128 0x11
 3132 03ef AF210000 		.4byte	.LASF1096
 3133 03f3 01       		.byte	0x1
 3134 03f4 3801     		.2byte	0x138
 3135 03f6 07020000 		.4byte	0x207
 3136 03fa 02       		.uleb128 0x2
 3137 03fb 91       		.byte	0x91
 3138 03fc 74       		.sleb128 -12
 3139 03fd 00       		.byte	0
 3140 03fe 07       		.uleb128 0x7
 3141 03ff E9000000 		.4byte	0xe9
 3142 0403 07       		.uleb128 0x7
 3143 0404 C8000000 		.4byte	0xc8
 3144 0408 12       		.uleb128 0x12
 3145 0409 92270000 		.4byte	.LASF1097
 3146 040d 01       		.byte	0x1
 3147 040e 7801     		.2byte	0x178
 3148 0410 07020000 		.4byte	0x207
 3149 0414 00000000 		.4byte	.LFB3
 3150 0418 90000000 		.4byte	.LFE3-.LFB3
 3151 041c 01       		.uleb128 0x1
 3152 041d 9C       		.byte	0x9c
 3153 041e 41040000 		.4byte	0x441
 3154 0422 13       		.uleb128 0x13
 3155 0423 F04D0000 		.4byte	.LASF1080
 3156 0427 01       		.byte	0x1
 3157 0428 7801     		.2byte	0x178
 3158 042a 03040000 		.4byte	0x403
 3159 042e 02       		.uleb128 0x2
 3160 042f 91       		.byte	0x91
 3161 0430 6F       		.sleb128 -17
 3162 0431 11       		.uleb128 0x11
 3163 0432 5D8A0000 		.4byte	.LASF1094
 3164 0436 01       		.byte	0x1
 3165 0437 7A01     		.2byte	0x17a
 3166 0439 83030000 		.4byte	0x383
 3167 043d 02       		.uleb128 0x2
 3168 043e 91       		.byte	0x91
 3169 043f 74       		.sleb128 -12
 3170 0440 00       		.byte	0
 3171 0441 12       		.uleb128 0x12
 3172 0442 71100000 		.4byte	.LASF1098
 3173 0446 01       		.byte	0x1
 3174 0447 D701     		.2byte	0x1d7
 3175 0449 DE000000 		.4byte	0xde
 3176 044d 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 96


 3177 0451 58000000 		.4byte	.LFE4-.LFB4
 3178 0455 01       		.uleb128 0x1
 3179 0456 9C       		.byte	0x9c
 3180 0457 89040000 		.4byte	0x489
 3181 045b 13       		.uleb128 0x13
 3182 045c F66D0000 		.4byte	.LASF1099
 3183 0460 01       		.byte	0x1
 3184 0461 D701     		.2byte	0x1d7
 3185 0463 07020000 		.4byte	0x207
 3186 0467 02       		.uleb128 0x2
 3187 0468 91       		.byte	0x91
 3188 0469 64       		.sleb128 -28
 3189 046a 11       		.uleb128 0x11
 3190 046b AF210000 		.4byte	.LASF1096
 3191 046f 01       		.byte	0x1
 3192 0470 D901     		.2byte	0x1d9
 3193 0472 DE000000 		.4byte	0xde
 3194 0476 02       		.uleb128 0x2
 3195 0477 91       		.byte	0x91
 3196 0478 6C       		.sleb128 -20
 3197 0479 11       		.uleb128 0x11
 3198 047a 6E390000 		.4byte	.LASF1100
 3199 047e 01       		.byte	0x1
 3200 047f DA01     		.2byte	0x1da
 3201 0481 7E030000 		.4byte	0x37e
 3202 0485 02       		.uleb128 0x2
 3203 0486 91       		.byte	0x91
 3204 0487 68       		.sleb128 -24
 3205 0488 00       		.byte	0
 3206 0489 12       		.uleb128 0x12
 3207 048a D8660000 		.4byte	.LASF1101
 3208 048e 01       		.byte	0x1
 3209 048f 0E02     		.2byte	0x20e
 3210 0491 DE000000 		.4byte	0xde
 3211 0495 00000000 		.4byte	.LFB5
 3212 0499 60000000 		.4byte	.LFE5-.LFB5
 3213 049d 01       		.uleb128 0x1
 3214 049e 9C       		.byte	0x9c
 3215 049f E0040000 		.4byte	0x4e0
 3216 04a3 13       		.uleb128 0x13
 3217 04a4 F66D0000 		.4byte	.LASF1099
 3218 04a8 01       		.byte	0x1
 3219 04a9 0E02     		.2byte	0x20e
 3220 04ab 07020000 		.4byte	0x207
 3221 04af 02       		.uleb128 0x2
 3222 04b0 91       		.byte	0x91
 3223 04b1 64       		.sleb128 -28
 3224 04b2 13       		.uleb128 0x13
 3225 04b3 8B3E0000 		.4byte	.LASF1102
 3226 04b7 01       		.byte	0x1
 3227 04b8 0E02     		.2byte	0x20e
 3228 04ba F4000000 		.4byte	0xf4
 3229 04be 02       		.uleb128 0x2
 3230 04bf 91       		.byte	0x91
 3231 04c0 60       		.sleb128 -32
 3232 04c1 11       		.uleb128 0x11
 3233 04c2 AF210000 		.4byte	.LASF1096
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 97


 3234 04c6 01       		.byte	0x1
 3235 04c7 1002     		.2byte	0x210
 3236 04c9 DE000000 		.4byte	0xde
 3237 04cd 02       		.uleb128 0x2
 3238 04ce 91       		.byte	0x91
 3239 04cf 6C       		.sleb128 -20
 3240 04d0 11       		.uleb128 0x11
 3241 04d1 6E390000 		.4byte	.LASF1100
 3242 04d5 01       		.byte	0x1
 3243 04d6 1102     		.2byte	0x211
 3244 04d8 7E030000 		.4byte	0x37e
 3245 04dc 02       		.uleb128 0x2
 3246 04dd 91       		.byte	0x91
 3247 04de 68       		.sleb128 -24
 3248 04df 00       		.byte	0
 3249 04e0 12       		.uleb128 0x12
 3250 04e1 25000000 		.4byte	.LASF1103
 3251 04e5 01       		.byte	0x1
 3252 04e6 3802     		.2byte	0x238
 3253 04e8 07020000 		.4byte	0x207
 3254 04ec 00000000 		.4byte	.LFB6
 3255 04f0 52000000 		.4byte	.LFE6-.LFB6
 3256 04f4 01       		.uleb128 0x1
 3257 04f5 9C       		.byte	0x9c
 3258 04f6 28050000 		.4byte	0x528
 3259 04fa 13       		.uleb128 0x13
 3260 04fb F98B0000 		.4byte	.LASF1104
 3261 04ff 01       		.byte	0x1
 3262 0500 3802     		.2byte	0x238
 3263 0502 FE030000 		.4byte	0x3fe
 3264 0506 02       		.uleb128 0x2
 3265 0507 91       		.byte	0x91
 3266 0508 6C       		.sleb128 -20
 3267 0509 13       		.uleb128 0x13
 3268 050a 8A350000 		.4byte	.LASF1105
 3269 050e 01       		.byte	0x1
 3270 050f 3802     		.2byte	0x238
 3271 0511 FE030000 		.4byte	0x3fe
 3272 0515 02       		.uleb128 0x2
 3273 0516 91       		.byte	0x91
 3274 0517 68       		.sleb128 -24
 3275 0518 11       		.uleb128 0x11
 3276 0519 0B090000 		.4byte	.LASF1085
 3277 051d 01       		.byte	0x1
 3278 051e 3A02     		.2byte	0x23a
 3279 0520 07020000 		.4byte	0x207
 3280 0524 02       		.uleb128 0x2
 3281 0525 91       		.byte	0x91
 3282 0526 74       		.sleb128 -12
 3283 0527 00       		.byte	0
 3284 0528 12       		.uleb128 0x12
 3285 0529 39690000 		.4byte	.LASF1106
 3286 052d 01       		.byte	0x1
 3287 052e 5302     		.2byte	0x253
 3288 0530 DE000000 		.4byte	0xde
 3289 0534 00000000 		.4byte	.LFB7
 3290 0538 6C010000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 98


 3291 053c 01       		.uleb128 0x1
 3292 053d 9C       		.byte	0x9c
 3293 053e BB050000 		.4byte	0x5bb
 3294 0542 13       		.uleb128 0x13
 3295 0543 B3830000 		.4byte	.LASF1088
 3296 0547 01       		.byte	0x1
 3297 0548 5302     		.2byte	0x253
 3298 054a 07020000 		.4byte	0x207
 3299 054e 02       		.uleb128 0x2
 3300 054f 91       		.byte	0x91
 3301 0550 5C       		.sleb128 -36
 3302 0551 13       		.uleb128 0x13
 3303 0552 17000000 		.4byte	.LASF1107
 3304 0556 01       		.byte	0x1
 3305 0557 5302     		.2byte	0x253
 3306 0559 BB050000 		.4byte	0x5bb
 3307 055d 02       		.uleb128 0x2
 3308 055e 91       		.byte	0x91
 3309 055f 58       		.sleb128 -40
 3310 0560 13       		.uleb128 0x13
 3311 0561 8B3E0000 		.4byte	.LASF1102
 3312 0565 01       		.byte	0x1
 3313 0566 5302     		.2byte	0x253
 3314 0568 F4000000 		.4byte	0xf4
 3315 056c 02       		.uleb128 0x2
 3316 056d 91       		.byte	0x91
 3317 056e 54       		.sleb128 -44
 3318 056f 13       		.uleb128 0x13
 3319 0570 534C0000 		.4byte	.LASF1108
 3320 0574 01       		.byte	0x1
 3321 0575 5302     		.2byte	0x253
 3322 0577 C0050000 		.4byte	0x5c0
 3323 057b 02       		.uleb128 0x2
 3324 057c 91       		.byte	0x91
 3325 057d 50       		.sleb128 -48
 3326 057e 11       		.uleb128 0x11
 3327 057f 183E0000 		.4byte	.LASF1109
 3328 0583 01       		.byte	0x1
 3329 0584 5502     		.2byte	0x255
 3330 0586 DE000000 		.4byte	0xde
 3331 058a 02       		.uleb128 0x2
 3332 058b 91       		.byte	0x91
 3333 058c 74       		.sleb128 -12
 3334 058d 11       		.uleb128 0x11
 3335 058e 63480000 		.4byte	.LASF1110
 3336 0592 01       		.byte	0x1
 3337 0593 5502     		.2byte	0x255
 3338 0595 DE000000 		.4byte	0xde
 3339 0599 02       		.uleb128 0x2
 3340 059a 91       		.byte	0x91
 3341 059b 6C       		.sleb128 -20
 3342 059c 11       		.uleb128 0x11
 3343 059d 325B0000 		.4byte	.LASF1111
 3344 05a1 01       		.byte	0x1
 3345 05a2 5602     		.2byte	0x256
 3346 05a4 FC010000 		.4byte	0x1fc
 3347 05a8 02       		.uleb128 0x2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 99


 3348 05a9 91       		.byte	0x91
 3349 05aa 64       		.sleb128 -28
 3350 05ab 11       		.uleb128 0x11
 3351 05ac 27140000 		.4byte	.LASF1093
 3352 05b0 01       		.byte	0x1
 3353 05b1 5702     		.2byte	0x257
 3354 05b3 7E030000 		.4byte	0x37e
 3355 05b7 02       		.uleb128 0x2
 3356 05b8 91       		.byte	0x91
 3357 05b9 70       		.sleb128 -16
 3358 05ba 00       		.byte	0
 3359 05bb 07       		.uleb128 0x7
 3360 05bc B6000000 		.4byte	0xb6
 3361 05c0 07       		.uleb128 0x7
 3362 05c1 DE000000 		.4byte	0xde
 3363 05c5 12       		.uleb128 0x12
 3364 05c6 091B0000 		.4byte	.LASF1112
 3365 05ca 01       		.byte	0x1
 3366 05cb 1004     		.2byte	0x410
 3367 05cd DE000000 		.4byte	0xde
 3368 05d1 00000000 		.4byte	.LFB8
 3369 05d5 E6000000 		.4byte	.LFE8-.LFB8
 3370 05d9 01       		.uleb128 0x1
 3371 05da 9C       		.byte	0x9c
 3372 05db 49060000 		.4byte	0x649
 3373 05df 13       		.uleb128 0x13
 3374 05e0 B3830000 		.4byte	.LASF1088
 3375 05e4 01       		.byte	0x1
 3376 05e5 1004     		.2byte	0x410
 3377 05e7 07020000 		.4byte	0x207
 3378 05eb 02       		.uleb128 0x2
 3379 05ec 91       		.byte	0x91
 3380 05ed 64       		.sleb128 -28
 3381 05ee 13       		.uleb128 0x13
 3382 05ef 17000000 		.4byte	.LASF1107
 3383 05f3 01       		.byte	0x1
 3384 05f4 1004     		.2byte	0x410
 3385 05f6 BB050000 		.4byte	0x5bb
 3386 05fa 02       		.uleb128 0x2
 3387 05fb 91       		.byte	0x91
 3388 05fc 60       		.sleb128 -32
 3389 05fd 13       		.uleb128 0x13
 3390 05fe AE730000 		.4byte	.LASF1113
 3391 0602 01       		.byte	0x1
 3392 0603 1004     		.2byte	0x410
 3393 0605 49060000 		.4byte	0x649
 3394 0609 02       		.uleb128 0x2
 3395 060a 91       		.byte	0x91
 3396 060b 5C       		.sleb128 -36
 3397 060c 13       		.uleb128 0x13
 3398 060d 534C0000 		.4byte	.LASF1108
 3399 0611 01       		.byte	0x1
 3400 0612 1004     		.2byte	0x410
 3401 0614 C0050000 		.4byte	0x5c0
 3402 0618 02       		.uleb128 0x2
 3403 0619 91       		.byte	0x91
 3404 061a 58       		.sleb128 -40
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 100


 3405 061b 11       		.uleb128 0x11
 3406 061c AF210000 		.4byte	.LASF1096
 3407 0620 01       		.byte	0x1
 3408 0621 1204     		.2byte	0x412
 3409 0623 DE000000 		.4byte	0xde
 3410 0627 02       		.uleb128 0x2
 3411 0628 91       		.byte	0x91
 3412 0629 74       		.sleb128 -12
 3413 062a 11       		.uleb128 0x11
 3414 062b 6B470000 		.4byte	.LASF1114
 3415 062f 01       		.byte	0x1
 3416 0630 1304     		.2byte	0x413
 3417 0632 E9000000 		.4byte	0xe9
 3418 0636 02       		.uleb128 0x2
 3419 0637 91       		.byte	0x91
 3420 0638 6C       		.sleb128 -20
 3421 0639 11       		.uleb128 0x11
 3422 063a 27140000 		.4byte	.LASF1093
 3423 063e 01       		.byte	0x1
 3424 063f 1404     		.2byte	0x414
 3425 0641 7E030000 		.4byte	0x37e
 3426 0645 02       		.uleb128 0x2
 3427 0646 91       		.byte	0x91
 3428 0647 70       		.sleb128 -16
 3429 0648 00       		.byte	0
 3430 0649 07       		.uleb128 0x7
 3431 064a 4E060000 		.4byte	0x64e
 3432 064e 06       		.uleb128 0x6
 3433 064f 04       		.byte	0x4
 3434 0650 DE000000 		.4byte	0xde
 3435 0654 12       		.uleb128 0x12
 3436 0655 488A0000 		.4byte	.LASF1115
 3437 0659 01       		.byte	0x1
 3438 065a AD04     		.2byte	0x4ad
 3439 065c DE000000 		.4byte	0xde
 3440 0660 00000000 		.4byte	.LFB9
 3441 0664 9A010000 		.4byte	.LFE9-.LFB9
 3442 0668 01       		.uleb128 0x1
 3443 0669 9C       		.byte	0x9c
 3444 066a E7060000 		.4byte	0x6e7
 3445 066e 13       		.uleb128 0x13
 3446 066f B3830000 		.4byte	.LASF1088
 3447 0673 01       		.byte	0x1
 3448 0674 AD04     		.2byte	0x4ad
 3449 0676 07020000 		.4byte	0x207
 3450 067a 02       		.uleb128 0x2
 3451 067b 91       		.byte	0x91
 3452 067c 5C       		.sleb128 -36
 3453 067d 13       		.uleb128 0x13
 3454 067e 16040000 		.4byte	.LASF1116
 3455 0682 01       		.byte	0x1
 3456 0683 AD04     		.2byte	0x4ad
 3457 0685 E7060000 		.4byte	0x6e7
 3458 0689 02       		.uleb128 0x2
 3459 068a 91       		.byte	0x91
 3460 068b 58       		.sleb128 -40
 3461 068c 13       		.uleb128 0x13
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 101


 3462 068d 8B3E0000 		.4byte	.LASF1102
 3463 0691 01       		.byte	0x1
 3464 0692 AD04     		.2byte	0x4ad
 3465 0694 F4000000 		.4byte	0xf4
 3466 0698 02       		.uleb128 0x2
 3467 0699 91       		.byte	0x91
 3468 069a 54       		.sleb128 -44
 3469 069b 13       		.uleb128 0x13
 3470 069c 74070000 		.4byte	.LASF1117
 3471 06a0 01       		.byte	0x1
 3472 06a1 AD04     		.2byte	0x4ad
 3473 06a3 C0050000 		.4byte	0x5c0
 3474 06a7 02       		.uleb128 0x2
 3475 06a8 91       		.byte	0x91
 3476 06a9 50       		.sleb128 -48
 3477 06aa 11       		.uleb128 0x11
 3478 06ab 183E0000 		.4byte	.LASF1109
 3479 06af 01       		.byte	0x1
 3480 06b0 AF04     		.2byte	0x4af
 3481 06b2 DE000000 		.4byte	0xde
 3482 06b6 02       		.uleb128 0x2
 3483 06b7 91       		.byte	0x91
 3484 06b8 74       		.sleb128 -12
 3485 06b9 11       		.uleb128 0x11
 3486 06ba 325B0000 		.4byte	.LASF1111
 3487 06be 01       		.byte	0x1
 3488 06bf B004     		.2byte	0x4b0
 3489 06c1 FC010000 		.4byte	0x1fc
 3490 06c5 02       		.uleb128 0x2
 3491 06c6 91       		.byte	0x91
 3492 06c7 64       		.sleb128 -28
 3493 06c8 11       		.uleb128 0x11
 3494 06c9 6C750000 		.4byte	.LASF1118
 3495 06cd 01       		.byte	0x1
 3496 06ce B104     		.2byte	0x4b1
 3497 06d0 31020000 		.4byte	0x231
 3498 06d4 02       		.uleb128 0x2
 3499 06d5 91       		.byte	0x91
 3500 06d6 6C       		.sleb128 -20
 3501 06d7 11       		.uleb128 0x11
 3502 06d8 27140000 		.4byte	.LASF1093
 3503 06dc 01       		.byte	0x1
 3504 06dd B204     		.2byte	0x4b2
 3505 06df 7E030000 		.4byte	0x37e
 3506 06e3 02       		.uleb128 0x2
 3507 06e4 91       		.byte	0x91
 3508 06e5 70       		.sleb128 -16
 3509 06e6 00       		.byte	0
 3510 06e7 07       		.uleb128 0x7
 3511 06e8 A2000000 		.4byte	0xa2
 3512 06ec 12       		.uleb128 0x12
 3513 06ed 8A060000 		.4byte	.LASF1119
 3514 06f1 01       		.byte	0x1
 3515 06f2 6A05     		.2byte	0x56a
 3516 06f4 DE000000 		.4byte	0xde
 3517 06f8 00000000 		.4byte	.LFB10
 3518 06fc B2000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 102


 3519 0700 01       		.uleb128 0x1
 3520 0701 9C       		.byte	0x9c
 3521 0702 61070000 		.4byte	0x761
 3522 0706 13       		.uleb128 0x13
 3523 0707 B3830000 		.4byte	.LASF1088
 3524 070b 01       		.byte	0x1
 3525 070c 6A05     		.2byte	0x56a
 3526 070e 07020000 		.4byte	0x207
 3527 0712 02       		.uleb128 0x2
 3528 0713 91       		.byte	0x91
 3529 0714 64       		.sleb128 -28
 3530 0715 13       		.uleb128 0x13
 3531 0716 16040000 		.4byte	.LASF1116
 3532 071a 01       		.byte	0x1
 3533 071b 6A05     		.2byte	0x56a
 3534 071d E7060000 		.4byte	0x6e7
 3535 0721 02       		.uleb128 0x2
 3536 0722 91       		.byte	0x91
 3537 0723 60       		.sleb128 -32
 3538 0724 13       		.uleb128 0x13
 3539 0725 AE730000 		.4byte	.LASF1113
 3540 0729 01       		.byte	0x1
 3541 072a 6A05     		.2byte	0x56a
 3542 072c 49060000 		.4byte	0x649
 3543 0730 02       		.uleb128 0x2
 3544 0731 91       		.byte	0x91
 3545 0732 5C       		.sleb128 -36
 3546 0733 11       		.uleb128 0x11
 3547 0734 AF210000 		.4byte	.LASF1096
 3548 0738 01       		.byte	0x1
 3549 0739 6C05     		.2byte	0x56c
 3550 073b DE000000 		.4byte	0xde
 3551 073f 02       		.uleb128 0x2
 3552 0740 91       		.byte	0x91
 3553 0741 74       		.sleb128 -12
 3554 0742 11       		.uleb128 0x11
 3555 0743 6B470000 		.4byte	.LASF1114
 3556 0747 01       		.byte	0x1
 3557 0748 6D05     		.2byte	0x56d
 3558 074a E9000000 		.4byte	0xe9
 3559 074e 02       		.uleb128 0x2
 3560 074f 91       		.byte	0x91
 3561 0750 6C       		.sleb128 -20
 3562 0751 11       		.uleb128 0x11
 3563 0752 27140000 		.4byte	.LASF1093
 3564 0756 01       		.byte	0x1
 3565 0757 6E05     		.2byte	0x56e
 3566 0759 7E030000 		.4byte	0x37e
 3567 075d 02       		.uleb128 0x2
 3568 075e 91       		.byte	0x91
 3569 075f 70       		.sleb128 -16
 3570 0760 00       		.byte	0
 3571 0761 12       		.uleb128 0x12
 3572 0762 063C0000 		.4byte	.LASF1120
 3573 0766 01       		.byte	0x1
 3574 0767 C105     		.2byte	0x5c1
 3575 0769 DE000000 		.4byte	0xde
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 103


 3576 076d 00000000 		.4byte	.LFB11
 3577 0771 78000000 		.4byte	.LFE11-.LFB11
 3578 0775 01       		.uleb128 0x1
 3579 0776 9C       		.byte	0x9c
 3580 0777 D6070000 		.4byte	0x7d6
 3581 077b 13       		.uleb128 0x13
 3582 077c B3830000 		.4byte	.LASF1088
 3583 0780 01       		.byte	0x1
 3584 0781 C105     		.2byte	0x5c1
 3585 0783 07020000 		.4byte	0x207
 3586 0787 02       		.uleb128 0x2
 3587 0788 91       		.byte	0x91
 3588 0789 64       		.sleb128 -28
 3589 078a 13       		.uleb128 0x13
 3590 078b 16040000 		.4byte	.LASF1116
 3591 078f 01       		.byte	0x1
 3592 0790 C105     		.2byte	0x5c1
 3593 0792 E7060000 		.4byte	0x6e7
 3594 0796 02       		.uleb128 0x2
 3595 0797 91       		.byte	0x91
 3596 0798 60       		.sleb128 -32
 3597 0799 11       		.uleb128 0x11
 3598 079a AF210000 		.4byte	.LASF1096
 3599 079e 01       		.byte	0x1
 3600 079f C305     		.2byte	0x5c3
 3601 07a1 DE000000 		.4byte	0xde
 3602 07a5 02       		.uleb128 0x2
 3603 07a6 91       		.byte	0x91
 3604 07a7 74       		.sleb128 -12
 3605 07a8 11       		.uleb128 0x11
 3606 07a9 6B470000 		.4byte	.LASF1114
 3607 07ad 01       		.byte	0x1
 3608 07ae C405     		.2byte	0x5c4
 3609 07b0 E9000000 		.4byte	0xe9
 3610 07b4 02       		.uleb128 0x2
 3611 07b5 91       		.byte	0x91
 3612 07b6 6C       		.sleb128 -20
 3613 07b7 11       		.uleb128 0x11
 3614 07b8 6C750000 		.4byte	.LASF1118
 3615 07bc 01       		.byte	0x1
 3616 07bd C505     		.2byte	0x5c5
 3617 07bf 31020000 		.4byte	0x231
 3618 07c3 02       		.uleb128 0x2
 3619 07c4 91       		.byte	0x91
 3620 07c5 68       		.sleb128 -24
 3621 07c6 11       		.uleb128 0x11
 3622 07c7 27140000 		.4byte	.LASF1093
 3623 07cb 01       		.byte	0x1
 3624 07cc C605     		.2byte	0x5c6
 3625 07ce 7E030000 		.4byte	0x37e
 3626 07d2 02       		.uleb128 0x2
 3627 07d3 91       		.byte	0x91
 3628 07d4 70       		.sleb128 -16
 3629 07d5 00       		.byte	0
 3630 07d6 12       		.uleb128 0x12
 3631 07d7 97690000 		.4byte	.LASF1121
 3632 07db 01       		.byte	0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 104


 3633 07dc F605     		.2byte	0x5f6
 3634 07de E9000000 		.4byte	0xe9
 3635 07e2 00000000 		.4byte	.LFB12
 3636 07e6 2C000000 		.4byte	.LFE12-.LFB12
 3637 07ea 01       		.uleb128 0x1
 3638 07eb 9C       		.byte	0x9c
 3639 07ec 0F080000 		.4byte	0x80f
 3640 07f0 13       		.uleb128 0x13
 3641 07f1 B3830000 		.4byte	.LASF1088
 3642 07f5 01       		.byte	0x1
 3643 07f6 F605     		.2byte	0x5f6
 3644 07f8 0F080000 		.4byte	0x80f
 3645 07fc 02       		.uleb128 0x2
 3646 07fd 91       		.byte	0x91
 3647 07fe 6C       		.sleb128 -20
 3648 07ff 11       		.uleb128 0x11
 3649 0800 5B0E0000 		.4byte	.LASF1122
 3650 0804 01       		.byte	0x1
 3651 0805 F805     		.2byte	0x5f8
 3652 0807 E9000000 		.4byte	0xe9
 3653 080b 02       		.uleb128 0x2
 3654 080c 91       		.byte	0x91
 3655 080d 74       		.sleb128 -12
 3656 080e 00       		.byte	0
 3657 080f 07       		.uleb128 0x7
 3658 0810 07020000 		.4byte	0x207
 3659 0814 12       		.uleb128 0x12
 3660 0815 BB790000 		.4byte	.LASF1123
 3661 0819 01       		.byte	0x1
 3662 081a 0606     		.2byte	0x606
 3663 081c E9000000 		.4byte	0xe9
 3664 0820 00000000 		.4byte	.LFB13
 3665 0824 36000000 		.4byte	.LFE13-.LFB13
 3666 0828 01       		.uleb128 0x1
 3667 0829 9C       		.byte	0x9c
 3668 082a 5C080000 		.4byte	0x85c
 3669 082e 13       		.uleb128 0x13
 3670 082f B3830000 		.4byte	.LASF1088
 3671 0833 01       		.byte	0x1
 3672 0834 0606     		.2byte	0x606
 3673 0836 0F080000 		.4byte	0x80f
 3674 083a 02       		.uleb128 0x2
 3675 083b 91       		.byte	0x91
 3676 083c 6C       		.sleb128 -20
 3677 083d 11       		.uleb128 0x11
 3678 083e 5B0E0000 		.4byte	.LASF1122
 3679 0842 01       		.byte	0x1
 3680 0843 0806     		.2byte	0x608
 3681 0845 E9000000 		.4byte	0xe9
 3682 0849 02       		.uleb128 0x2
 3683 084a 91       		.byte	0x91
 3684 084b 70       		.sleb128 -16
 3685 084c 11       		.uleb128 0x11
 3686 084d 27140000 		.4byte	.LASF1093
 3687 0851 01       		.byte	0x1
 3688 0852 0906     		.2byte	0x609
 3689 0854 83030000 		.4byte	0x383
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 105


 3690 0858 02       		.uleb128 0x2
 3691 0859 91       		.byte	0x91
 3692 085a 74       		.sleb128 -12
 3693 085b 00       		.byte	0
 3694 085c 12       		.uleb128 0x12
 3695 085d 8D6E0000 		.4byte	.LASF1124
 3696 0861 01       		.byte	0x1
 3697 0862 1806     		.2byte	0x618
 3698 0864 E9000000 		.4byte	0xe9
 3699 0868 00000000 		.4byte	.LFB14
 3700 086c 24000000 		.4byte	.LFE14-.LFB14
 3701 0870 01       		.uleb128 0x1
 3702 0871 9C       		.byte	0x9c
 3703 0872 95080000 		.4byte	0x895
 3704 0876 13       		.uleb128 0x13
 3705 0877 B3830000 		.4byte	.LASF1088
 3706 087b 01       		.byte	0x1
 3707 087c 1806     		.2byte	0x618
 3708 087e 0F080000 		.4byte	0x80f
 3709 0882 02       		.uleb128 0x2
 3710 0883 91       		.byte	0x91
 3711 0884 6C       		.sleb128 -20
 3712 0885 11       		.uleb128 0x11
 3713 0886 5B0E0000 		.4byte	.LASF1122
 3714 088a 01       		.byte	0x1
 3715 088b 1A06     		.2byte	0x61a
 3716 088d E9000000 		.4byte	0xe9
 3717 0891 02       		.uleb128 0x2
 3718 0892 91       		.byte	0x91
 3719 0893 74       		.sleb128 -12
 3720 0894 00       		.byte	0
 3721 0895 14       		.uleb128 0x14
 3722 0896 67280000 		.4byte	.LASF1126
 3723 089a 01       		.byte	0x1
 3724 089b 2406     		.2byte	0x624
 3725 089d 00000000 		.4byte	.LFB15
 3726 08a1 3C000000 		.4byte	.LFE15-.LFB15
 3727 08a5 01       		.uleb128 0x1
 3728 08a6 9C       		.byte	0x9c
 3729 08a7 CA080000 		.4byte	0x8ca
 3730 08ab 13       		.uleb128 0x13
 3731 08ac B3830000 		.4byte	.LASF1088
 3732 08b0 01       		.byte	0x1
 3733 08b1 2406     		.2byte	0x624
 3734 08b3 07020000 		.4byte	0x207
 3735 08b7 02       		.uleb128 0x2
 3736 08b8 91       		.byte	0x91
 3737 08b9 6C       		.sleb128 -20
 3738 08ba 11       		.uleb128 0x11
 3739 08bb 27140000 		.4byte	.LASF1093
 3740 08bf 01       		.byte	0x1
 3741 08c0 2606     		.2byte	0x626
 3742 08c2 7E030000 		.4byte	0x37e
 3743 08c6 02       		.uleb128 0x2
 3744 08c7 91       		.byte	0x91
 3745 08c8 74       		.sleb128 -12
 3746 08c9 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 106


 3747 08ca 15       		.uleb128 0x15
 3748 08cb E58F0000 		.4byte	.LASF1125
 3749 08cf 01       		.byte	0x1
 3750 08d0 3A06     		.2byte	0x63a
 3751 08d2 E9000000 		.4byte	0xe9
 3752 08d6 00000000 		.4byte	.LFB16
 3753 08da 18000000 		.4byte	.LFE16-.LFB16
 3754 08de 01       		.uleb128 0x1
 3755 08df 9C       		.byte	0x9c
 3756 08e0 F4080000 		.4byte	0x8f4
 3757 08e4 13       		.uleb128 0x13
 3758 08e5 B3830000 		.4byte	.LASF1088
 3759 08e9 01       		.byte	0x1
 3760 08ea 3A06     		.2byte	0x63a
 3761 08ec 07020000 		.4byte	0x207
 3762 08f0 02       		.uleb128 0x2
 3763 08f1 91       		.byte	0x91
 3764 08f2 74       		.sleb128 -12
 3765 08f3 00       		.byte	0
 3766 08f4 16       		.uleb128 0x16
 3767 08f5 FA830000 		.4byte	.LASF1127
 3768 08f9 01       		.byte	0x1
 3769 08fa 4406     		.2byte	0x644
 3770 08fc 00000000 		.4byte	.LFB17
 3771 0900 1A000000 		.4byte	.LFE17-.LFB17
 3772 0904 01       		.uleb128 0x1
 3773 0905 9C       		.byte	0x9c
 3774 0906 29090000 		.4byte	0x929
 3775 090a 13       		.uleb128 0x13
 3776 090b B3830000 		.4byte	.LASF1088
 3777 090f 01       		.byte	0x1
 3778 0910 4406     		.2byte	0x644
 3779 0912 07020000 		.4byte	0x207
 3780 0916 02       		.uleb128 0x2
 3781 0917 91       		.byte	0x91
 3782 0918 74       		.sleb128 -12
 3783 0919 13       		.uleb128 0x13
 3784 091a 221B0000 		.4byte	.LASF1079
 3785 091e 01       		.byte	0x1
 3786 091f 4406     		.2byte	0x644
 3787 0921 E9000000 		.4byte	0xe9
 3788 0925 02       		.uleb128 0x2
 3789 0926 91       		.byte	0x91
 3790 0927 70       		.sleb128 -16
 3791 0928 00       		.byte	0
 3792 0929 15       		.uleb128 0x15
 3793 092a AE690000 		.4byte	.LASF1128
 3794 092e 01       		.byte	0x1
 3795 092f 4E06     		.2byte	0x64e
 3796 0931 C8000000 		.4byte	0xc8
 3797 0935 00000000 		.4byte	.LFB18
 3798 0939 1A000000 		.4byte	.LFE18-.LFB18
 3799 093d 01       		.uleb128 0x1
 3800 093e 9C       		.byte	0x9c
 3801 093f 53090000 		.4byte	0x953
 3802 0943 13       		.uleb128 0x13
 3803 0944 B3830000 		.4byte	.LASF1088
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 107


 3804 0948 01       		.byte	0x1
 3805 0949 4E06     		.2byte	0x64e
 3806 094b 07020000 		.4byte	0x207
 3807 094f 02       		.uleb128 0x2
 3808 0950 91       		.byte	0x91
 3809 0951 74       		.sleb128 -12
 3810 0952 00       		.byte	0
 3811 0953 17       		.uleb128 0x17
 3812 0954 28820000 		.4byte	.LASF1132
 3813 0958 01       		.byte	0x1
 3814 0959 5606     		.2byte	0x656
 3815 095b DE000000 		.4byte	0xde
 3816 095f 00000000 		.4byte	.LFB19
 3817 0963 DA000000 		.4byte	.LFE19-.LFB19
 3818 0967 01       		.uleb128 0x1
 3819 0968 9C       		.byte	0x9c
 3820 0969 AA090000 		.4byte	0x9aa
 3821 096d 13       		.uleb128 0x13
 3822 096e 27140000 		.4byte	.LASF1093
 3823 0972 01       		.byte	0x1
 3824 0973 5606     		.2byte	0x656
 3825 0975 7E030000 		.4byte	0x37e
 3826 0979 02       		.uleb128 0x2
 3827 097a 91       		.byte	0x91
 3828 097b 6C       		.sleb128 -20
 3829 097c 13       		.uleb128 0x13
 3830 097d 17000000 		.4byte	.LASF1107
 3831 0981 01       		.byte	0x1
 3832 0982 5606     		.2byte	0x656
 3833 0984 B6000000 		.4byte	0xb6
 3834 0988 02       		.uleb128 0x2
 3835 0989 91       		.byte	0x91
 3836 098a 68       		.sleb128 -24
 3837 098b 13       		.uleb128 0x13
 3838 098c EB420000 		.4byte	.LASF1129
 3839 0990 01       		.byte	0x1
 3840 0991 5606     		.2byte	0x656
 3841 0993 C0050000 		.4byte	0x5c0
 3842 0997 02       		.uleb128 0x2
 3843 0998 91       		.byte	0x91
 3844 0999 64       		.sleb128 -28
 3845 099a 11       		.uleb128 0x11
 3846 099b AF210000 		.4byte	.LASF1096
 3847 099f 01       		.byte	0x1
 3848 09a0 5806     		.2byte	0x658
 3849 09a2 DE000000 		.4byte	0xde
 3850 09a6 02       		.uleb128 0x2
 3851 09a7 91       		.byte	0x91
 3852 09a8 74       		.sleb128 -12
 3853 09a9 00       		.byte	0
 3854 09aa 18       		.uleb128 0x18
 3855 09ab EA480000 		.4byte	.LASF1130
 3856 09af 01       		.byte	0x1
 3857 09b0 A006     		.2byte	0x6a0
 3858 09b2 00000000 		.4byte	.LFB20
 3859 09b6 4C000000 		.4byte	.LFE20-.LFB20
 3860 09ba 01       		.uleb128 0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 108


 3861 09bb 9C       		.byte	0x9c
 3862 09bc DF090000 		.4byte	0x9df
 3863 09c0 13       		.uleb128 0x13
 3864 09c1 27140000 		.4byte	.LASF1093
 3865 09c5 01       		.byte	0x1
 3866 09c6 A006     		.2byte	0x6a0
 3867 09c8 7E030000 		.4byte	0x37e
 3868 09cc 02       		.uleb128 0x2
 3869 09cd 91       		.byte	0x91
 3870 09ce 74       		.sleb128 -12
 3871 09cf 13       		.uleb128 0x13
 3872 09d0 16040000 		.4byte	.LASF1116
 3873 09d4 01       		.byte	0x1
 3874 09d5 A006     		.2byte	0x6a0
 3875 09d7 E7060000 		.4byte	0x6e7
 3876 09db 02       		.uleb128 0x2
 3877 09dc 91       		.byte	0x91
 3878 09dd 70       		.sleb128 -16
 3879 09de 00       		.byte	0
 3880 09df 18       		.uleb128 0x18
 3881 09e0 6A5B0000 		.4byte	.LASF1131
 3882 09e4 01       		.byte	0x1
 3883 09e5 B206     		.2byte	0x6b2
 3884 09e7 00000000 		.4byte	.LFB21
 3885 09eb 96000000 		.4byte	.LFE21-.LFB21
 3886 09ef 01       		.uleb128 0x1
 3887 09f0 9C       		.byte	0x9c
 3888 09f1 050A0000 		.4byte	0xa05
 3889 09f5 13       		.uleb128 0x13
 3890 09f6 27140000 		.4byte	.LASF1093
 3891 09fa 01       		.byte	0x1
 3892 09fb B206     		.2byte	0x6b2
 3893 09fd 7E030000 		.4byte	0x37e
 3894 0a01 02       		.uleb128 0x2
 3895 0a02 91       		.byte	0x91
 3896 0a03 74       		.sleb128 -12
 3897 0a04 00       		.byte	0
 3898 0a05 17       		.uleb128 0x17
 3899 0a06 99130000 		.4byte	.LASF1133
 3900 0a0a 01       		.byte	0x1
 3901 0a0b 2507     		.2byte	0x725
 3902 0a0d DE000000 		.4byte	0xde
 3903 0a11 00000000 		.4byte	.LFB22
 3904 0a15 2C000000 		.4byte	.LFE22-.LFB22
 3905 0a19 01       		.uleb128 0x1
 3906 0a1a 9C       		.byte	0x9c
 3907 0a1b 3E0A0000 		.4byte	0xa3e
 3908 0a1f 13       		.uleb128 0x13
 3909 0a20 27140000 		.4byte	.LASF1093
 3910 0a24 01       		.byte	0x1
 3911 0a25 2507     		.2byte	0x725
 3912 0a27 3E0A0000 		.4byte	0xa3e
 3913 0a2b 02       		.uleb128 0x2
 3914 0a2c 91       		.byte	0x91
 3915 0a2d 6C       		.sleb128 -20
 3916 0a2e 11       		.uleb128 0x11
 3917 0a2f AF210000 		.4byte	.LASF1096
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 109


 3918 0a33 01       		.byte	0x1
 3919 0a34 2707     		.2byte	0x727
 3920 0a36 DE000000 		.4byte	0xde
 3921 0a3a 02       		.uleb128 0x2
 3922 0a3b 91       		.byte	0x91
 3923 0a3c 74       		.sleb128 -12
 3924 0a3d 00       		.byte	0
 3925 0a3e 06       		.uleb128 0x6
 3926 0a3f 04       		.byte	0x4
 3927 0a40 440A0000 		.4byte	0xa44
 3928 0a44 07       		.uleb128 0x7
 3929 0a45 F3020000 		.4byte	0x2f3
 3930 0a49 12       		.uleb128 0x12
 3931 0a4a 263B0000 		.4byte	.LASF1134
 3932 0a4e 01       		.byte	0x1
 3933 0a4f 3A07     		.2byte	0x73a
 3934 0a51 DE000000 		.4byte	0xde
 3935 0a55 00000000 		.4byte	.LFB23
 3936 0a59 30000000 		.4byte	.LFE23-.LFB23
 3937 0a5d 01       		.uleb128 0x1
 3938 0a5e 9C       		.byte	0x9c
 3939 0a5f 820A0000 		.4byte	0xa82
 3940 0a63 13       		.uleb128 0x13
 3941 0a64 B3830000 		.4byte	.LASF1088
 3942 0a68 01       		.byte	0x1
 3943 0a69 3A07     		.2byte	0x73a
 3944 0a6b 0F080000 		.4byte	0x80f
 3945 0a6f 02       		.uleb128 0x2
 3946 0a70 91       		.byte	0x91
 3947 0a71 6C       		.sleb128 -20
 3948 0a72 11       		.uleb128 0x11
 3949 0a73 AF210000 		.4byte	.LASF1096
 3950 0a77 01       		.byte	0x1
 3951 0a78 3C07     		.2byte	0x73c
 3952 0a7a DE000000 		.4byte	0xde
 3953 0a7e 02       		.uleb128 0x2
 3954 0a7f 91       		.byte	0x91
 3955 0a80 74       		.sleb128 -12
 3956 0a81 00       		.byte	0
 3957 0a82 17       		.uleb128 0x17
 3958 0a83 92160000 		.4byte	.LASF1135
 3959 0a87 01       		.byte	0x1
 3960 0a88 4C07     		.2byte	0x74c
 3961 0a8a DE000000 		.4byte	0xde
 3962 0a8e 00000000 		.4byte	.LFB24
 3963 0a92 30000000 		.4byte	.LFE24-.LFB24
 3964 0a96 01       		.uleb128 0x1
 3965 0a97 9C       		.byte	0x9c
 3966 0a98 BB0A0000 		.4byte	0xabb
 3967 0a9c 13       		.uleb128 0x13
 3968 0a9d 27140000 		.4byte	.LASF1093
 3969 0aa1 01       		.byte	0x1
 3970 0aa2 4C07     		.2byte	0x74c
 3971 0aa4 3E0A0000 		.4byte	0xa3e
 3972 0aa8 02       		.uleb128 0x2
 3973 0aa9 91       		.byte	0x91
 3974 0aaa 6C       		.sleb128 -20
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 110


 3975 0aab 11       		.uleb128 0x11
 3976 0aac AF210000 		.4byte	.LASF1096
 3977 0ab0 01       		.byte	0x1
 3978 0ab1 4E07     		.2byte	0x74e
 3979 0ab3 DE000000 		.4byte	0xde
 3980 0ab7 02       		.uleb128 0x2
 3981 0ab8 91       		.byte	0x91
 3982 0ab9 74       		.sleb128 -12
 3983 0aba 00       		.byte	0
 3984 0abb 12       		.uleb128 0x12
 3985 0abc ED120000 		.4byte	.LASF1136
 3986 0ac0 01       		.byte	0x1
 3987 0ac1 6107     		.2byte	0x761
 3988 0ac3 DE000000 		.4byte	0xde
 3989 0ac7 00000000 		.4byte	.LFB25
 3990 0acb 34000000 		.4byte	.LFE25-.LFB25
 3991 0acf 01       		.uleb128 0x1
 3992 0ad0 9C       		.byte	0x9c
 3993 0ad1 F40A0000 		.4byte	0xaf4
 3994 0ad5 13       		.uleb128 0x13
 3995 0ad6 B3830000 		.4byte	.LASF1088
 3996 0ada 01       		.byte	0x1
 3997 0adb 6107     		.2byte	0x761
 3998 0add 0F080000 		.4byte	0x80f
 3999 0ae1 02       		.uleb128 0x2
 4000 0ae2 91       		.byte	0x91
 4001 0ae3 6C       		.sleb128 -20
 4002 0ae4 11       		.uleb128 0x11
 4003 0ae5 AF210000 		.4byte	.LASF1096
 4004 0ae9 01       		.byte	0x1
 4005 0aea 6307     		.2byte	0x763
 4006 0aec DE000000 		.4byte	0xde
 4007 0af0 02       		.uleb128 0x2
 4008 0af1 91       		.byte	0x91
 4009 0af2 74       		.sleb128 -12
 4010 0af3 00       		.byte	0
 4011 0af4 16       		.uleb128 0x16
 4012 0af5 B9460000 		.4byte	.LASF1137
 4013 0af9 01       		.byte	0x1
 4014 0afa 8808     		.2byte	0x888
 4015 0afc 00000000 		.4byte	.LFB26
 4016 0b00 50000000 		.4byte	.LFE26-.LFB26
 4017 0b04 01       		.uleb128 0x1
 4018 0b05 9C       		.byte	0x9c
 4019 0b06 370B0000 		.4byte	0xb37
 4020 0b0a 13       		.uleb128 0x13
 4021 0b0b B3830000 		.4byte	.LASF1088
 4022 0b0f 01       		.byte	0x1
 4023 0b10 8808     		.2byte	0x888
 4024 0b12 07020000 		.4byte	0x207
 4025 0b16 02       		.uleb128 0x2
 4026 0b17 91       		.byte	0x91
 4027 0b18 6C       		.sleb128 -20
 4028 0b19 13       		.uleb128 0x13
 4029 0b1a 0A020000 		.4byte	.LASF1084
 4030 0b1e 01       		.byte	0x1
 4031 0b1f 8808     		.2byte	0x888
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 111


 4032 0b21 AB000000 		.4byte	0xab
 4033 0b25 02       		.uleb128 0x2
 4034 0b26 91       		.byte	0x91
 4035 0b27 68       		.sleb128 -24
 4036 0b28 19       		.uleb128 0x19
 4037 0b29 757800   		.ascii	"ux\000"
 4038 0b2c 01       		.byte	0x1
 4039 0b2d 8A08     		.2byte	0x88a
 4040 0b2f E9000000 		.4byte	0xe9
 4041 0b33 02       		.uleb128 0x2
 4042 0b34 91       		.byte	0x91
 4043 0b35 74       		.sleb128 -12
 4044 0b36 00       		.byte	0
 4045 0b37 16       		.uleb128 0x16
 4046 0b38 FB460000 		.4byte	.LASF1138
 4047 0b3c 01       		.byte	0x1
 4048 0b3d A508     		.2byte	0x8a5
 4049 0b3f 00000000 		.4byte	.LFB27
 4050 0b43 44000000 		.4byte	.LFE27-.LFB27
 4051 0b47 01       		.uleb128 0x1
 4052 0b48 9C       		.byte	0x9c
 4053 0b49 6B0B0000 		.4byte	0xb6b
 4054 0b4d 13       		.uleb128 0x13
 4055 0b4e B3830000 		.4byte	.LASF1088
 4056 0b52 01       		.byte	0x1
 4057 0b53 A508     		.2byte	0x8a5
 4058 0b55 07020000 		.4byte	0x207
 4059 0b59 02       		.uleb128 0x2
 4060 0b5a 91       		.byte	0x91
 4061 0b5b 6C       		.sleb128 -20
 4062 0b5c 19       		.uleb128 0x19
 4063 0b5d 757800   		.ascii	"ux\000"
 4064 0b60 01       		.byte	0x1
 4065 0b61 A708     		.2byte	0x8a7
 4066 0b63 E9000000 		.4byte	0xe9
 4067 0b67 02       		.uleb128 0x2
 4068 0b68 91       		.byte	0x91
 4069 0b69 74       		.sleb128 -12
 4070 0b6a 00       		.byte	0
 4071 0b6b 1A       		.uleb128 0x1a
 4072 0b6c 2E030000 		.4byte	0x32e
 4073 0b70 7B0B0000 		.4byte	0xb7b
 4074 0b74 1B       		.uleb128 0x1b
 4075 0b75 9B000000 		.4byte	0x9b
 4076 0b79 09       		.byte	0x9
 4077 0b7a 00       		.byte	0
 4078 0b7b 1C       		.uleb128 0x1c
 4079 0b7c F45A0000 		.4byte	.LASF1142
 4080 0b80 01       		.byte	0x1
 4081 0b81 BB       		.byte	0xbb
 4082 0b82 6B0B0000 		.4byte	0xb6b
 4083 0b86 05       		.uleb128 0x5
 4084 0b87 03       		.byte	0x3
 4085 0b88 00000000 		.4byte	xQueueRegistry
 4086 0b8c 00       		.byte	0
 4087              		.section	.debug_abbrev,"",%progbits
 4088              	.Ldebug_abbrev0:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 112


 4089 0000 01       		.uleb128 0x1
 4090 0001 11       		.uleb128 0x11
 4091 0002 01       		.byte	0x1
 4092 0003 25       		.uleb128 0x25
 4093 0004 0E       		.uleb128 0xe
 4094 0005 13       		.uleb128 0x13
 4095 0006 0B       		.uleb128 0xb
 4096 0007 03       		.uleb128 0x3
 4097 0008 0E       		.uleb128 0xe
 4098 0009 1B       		.uleb128 0x1b
 4099 000a 0E       		.uleb128 0xe
 4100 000b 55       		.uleb128 0x55
 4101 000c 17       		.uleb128 0x17
 4102 000d 11       		.uleb128 0x11
 4103 000e 01       		.uleb128 0x1
 4104 000f 10       		.uleb128 0x10
 4105 0010 17       		.uleb128 0x17
 4106 0011 9942     		.uleb128 0x2119
 4107 0013 17       		.uleb128 0x17
 4108 0014 00       		.byte	0
 4109 0015 00       		.byte	0
 4110 0016 02       		.uleb128 0x2
 4111 0017 16       		.uleb128 0x16
 4112 0018 00       		.byte	0
 4113 0019 03       		.uleb128 0x3
 4114 001a 0E       		.uleb128 0xe
 4115 001b 3A       		.uleb128 0x3a
 4116 001c 0B       		.uleb128 0xb
 4117 001d 3B       		.uleb128 0x3b
 4118 001e 0B       		.uleb128 0xb
 4119 001f 49       		.uleb128 0x49
 4120 0020 13       		.uleb128 0x13
 4121 0021 00       		.byte	0
 4122 0022 00       		.byte	0
 4123 0023 03       		.uleb128 0x3
 4124 0024 24       		.uleb128 0x24
 4125 0025 00       		.byte	0
 4126 0026 0B       		.uleb128 0xb
 4127 0027 0B       		.uleb128 0xb
 4128 0028 3E       		.uleb128 0x3e
 4129 0029 0B       		.uleb128 0xb
 4130 002a 03       		.uleb128 0x3
 4131 002b 0E       		.uleb128 0xe
 4132 002c 00       		.byte	0
 4133 002d 00       		.byte	0
 4134 002e 04       		.uleb128 0x4
 4135 002f 24       		.uleb128 0x24
 4136 0030 00       		.byte	0
 4137 0031 0B       		.uleb128 0xb
 4138 0032 0B       		.uleb128 0xb
 4139 0033 3E       		.uleb128 0x3e
 4140 0034 0B       		.uleb128 0xb
 4141 0035 03       		.uleb128 0x3
 4142 0036 08       		.uleb128 0x8
 4143 0037 00       		.byte	0
 4144 0038 00       		.byte	0
 4145 0039 05       		.uleb128 0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 113


 4146 003a 0F       		.uleb128 0xf
 4147 003b 00       		.byte	0
 4148 003c 0B       		.uleb128 0xb
 4149 003d 0B       		.uleb128 0xb
 4150 003e 00       		.byte	0
 4151 003f 00       		.byte	0
 4152 0040 06       		.uleb128 0x6
 4153 0041 0F       		.uleb128 0xf
 4154 0042 00       		.byte	0
 4155 0043 0B       		.uleb128 0xb
 4156 0044 0B       		.uleb128 0xb
 4157 0045 49       		.uleb128 0x49
 4158 0046 13       		.uleb128 0x13
 4159 0047 00       		.byte	0
 4160 0048 00       		.byte	0
 4161 0049 07       		.uleb128 0x7
 4162 004a 26       		.uleb128 0x26
 4163 004b 00       		.byte	0
 4164 004c 49       		.uleb128 0x49
 4165 004d 13       		.uleb128 0x13
 4166 004e 00       		.byte	0
 4167 004f 00       		.byte	0
 4168 0050 08       		.uleb128 0x8
 4169 0051 26       		.uleb128 0x26
 4170 0052 00       		.byte	0
 4171 0053 00       		.byte	0
 4172 0054 00       		.byte	0
 4173 0055 09       		.uleb128 0x9
 4174 0056 13       		.uleb128 0x13
 4175 0057 01       		.byte	0x1
 4176 0058 03       		.uleb128 0x3
 4177 0059 0E       		.uleb128 0xe
 4178 005a 0B       		.uleb128 0xb
 4179 005b 0B       		.uleb128 0xb
 4180 005c 3A       		.uleb128 0x3a
 4181 005d 0B       		.uleb128 0xb
 4182 005e 3B       		.uleb128 0x3b
 4183 005f 0B       		.uleb128 0xb
 4184 0060 01       		.uleb128 0x1
 4185 0061 13       		.uleb128 0x13
 4186 0062 00       		.byte	0
 4187 0063 00       		.byte	0
 4188 0064 0A       		.uleb128 0xa
 4189 0065 0D       		.uleb128 0xd
 4190 0066 00       		.byte	0
 4191 0067 03       		.uleb128 0x3
 4192 0068 0E       		.uleb128 0xe
 4193 0069 3A       		.uleb128 0x3a
 4194 006a 0B       		.uleb128 0xb
 4195 006b 3B       		.uleb128 0x3b
 4196 006c 0B       		.uleb128 0xb
 4197 006d 49       		.uleb128 0x49
 4198 006e 13       		.uleb128 0x13
 4199 006f 38       		.uleb128 0x38
 4200 0070 0B       		.uleb128 0xb
 4201 0071 00       		.byte	0
 4202 0072 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 114


 4203 0073 0B       		.uleb128 0xb
 4204 0074 17       		.uleb128 0x17
 4205 0075 01       		.byte	0x1
 4206 0076 0B       		.uleb128 0xb
 4207 0077 0B       		.uleb128 0xb
 4208 0078 3A       		.uleb128 0x3a
 4209 0079 0B       		.uleb128 0xb
 4210 007a 3B       		.uleb128 0x3b
 4211 007b 0B       		.uleb128 0xb
 4212 007c 01       		.uleb128 0x1
 4213 007d 13       		.uleb128 0x13
 4214 007e 00       		.byte	0
 4215 007f 00       		.byte	0
 4216 0080 0C       		.uleb128 0xc
 4217 0081 0D       		.uleb128 0xd
 4218 0082 00       		.byte	0
 4219 0083 03       		.uleb128 0x3
 4220 0084 0E       		.uleb128 0xe
 4221 0085 3A       		.uleb128 0x3a
 4222 0086 0B       		.uleb128 0xb
 4223 0087 3B       		.uleb128 0x3b
 4224 0088 0B       		.uleb128 0xb
 4225 0089 49       		.uleb128 0x49
 4226 008a 13       		.uleb128 0x13
 4227 008b 00       		.byte	0
 4228 008c 00       		.byte	0
 4229 008d 0D       		.uleb128 0xd
 4230 008e 0D       		.uleb128 0xd
 4231 008f 00       		.byte	0
 4232 0090 03       		.uleb128 0x3
 4233 0091 08       		.uleb128 0x8
 4234 0092 3A       		.uleb128 0x3a
 4235 0093 0B       		.uleb128 0xb
 4236 0094 3B       		.uleb128 0x3b
 4237 0095 0B       		.uleb128 0xb
 4238 0096 49       		.uleb128 0x49
 4239 0097 13       		.uleb128 0x13
 4240 0098 38       		.uleb128 0x38
 4241 0099 0B       		.uleb128 0xb
 4242 009a 00       		.byte	0
 4243 009b 00       		.byte	0
 4244 009c 0E       		.uleb128 0xe
 4245 009d 35       		.uleb128 0x35
 4246 009e 00       		.byte	0
 4247 009f 49       		.uleb128 0x49
 4248 00a0 13       		.uleb128 0x13
 4249 00a1 00       		.byte	0
 4250 00a2 00       		.byte	0
 4251 00a3 0F       		.uleb128 0xf
 4252 00a4 2E       		.uleb128 0x2e
 4253 00a5 01       		.byte	0x1
 4254 00a6 3F       		.uleb128 0x3f
 4255 00a7 19       		.uleb128 0x19
 4256 00a8 03       		.uleb128 0x3
 4257 00a9 0E       		.uleb128 0xe
 4258 00aa 3A       		.uleb128 0x3a
 4259 00ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 115


 4260 00ac 3B       		.uleb128 0x3b
 4261 00ad 0B       		.uleb128 0xb
 4262 00ae 27       		.uleb128 0x27
 4263 00af 19       		.uleb128 0x19
 4264 00b0 49       		.uleb128 0x49
 4265 00b1 13       		.uleb128 0x13
 4266 00b2 11       		.uleb128 0x11
 4267 00b3 01       		.uleb128 0x1
 4268 00b4 12       		.uleb128 0x12
 4269 00b5 06       		.uleb128 0x6
 4270 00b6 40       		.uleb128 0x40
 4271 00b7 18       		.uleb128 0x18
 4272 00b8 9642     		.uleb128 0x2116
 4273 00ba 19       		.uleb128 0x19
 4274 00bb 01       		.uleb128 0x1
 4275 00bc 13       		.uleb128 0x13
 4276 00bd 00       		.byte	0
 4277 00be 00       		.byte	0
 4278 00bf 10       		.uleb128 0x10
 4279 00c0 05       		.uleb128 0x5
 4280 00c1 00       		.byte	0
 4281 00c2 03       		.uleb128 0x3
 4282 00c3 0E       		.uleb128 0xe
 4283 00c4 3A       		.uleb128 0x3a
 4284 00c5 0B       		.uleb128 0xb
 4285 00c6 3B       		.uleb128 0x3b
 4286 00c7 0B       		.uleb128 0xb
 4287 00c8 49       		.uleb128 0x49
 4288 00c9 13       		.uleb128 0x13
 4289 00ca 02       		.uleb128 0x2
 4290 00cb 18       		.uleb128 0x18
 4291 00cc 00       		.byte	0
 4292 00cd 00       		.byte	0
 4293 00ce 11       		.uleb128 0x11
 4294 00cf 34       		.uleb128 0x34
 4295 00d0 00       		.byte	0
 4296 00d1 03       		.uleb128 0x3
 4297 00d2 0E       		.uleb128 0xe
 4298 00d3 3A       		.uleb128 0x3a
 4299 00d4 0B       		.uleb128 0xb
 4300 00d5 3B       		.uleb128 0x3b
 4301 00d6 05       		.uleb128 0x5
 4302 00d7 49       		.uleb128 0x49
 4303 00d8 13       		.uleb128 0x13
 4304 00d9 02       		.uleb128 0x2
 4305 00da 18       		.uleb128 0x18
 4306 00db 00       		.byte	0
 4307 00dc 00       		.byte	0
 4308 00dd 12       		.uleb128 0x12
 4309 00de 2E       		.uleb128 0x2e
 4310 00df 01       		.byte	0x1
 4311 00e0 3F       		.uleb128 0x3f
 4312 00e1 19       		.uleb128 0x19
 4313 00e2 03       		.uleb128 0x3
 4314 00e3 0E       		.uleb128 0xe
 4315 00e4 3A       		.uleb128 0x3a
 4316 00e5 0B       		.uleb128 0xb
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 116


 4317 00e6 3B       		.uleb128 0x3b
 4318 00e7 05       		.uleb128 0x5
 4319 00e8 27       		.uleb128 0x27
 4320 00e9 19       		.uleb128 0x19
 4321 00ea 49       		.uleb128 0x49
 4322 00eb 13       		.uleb128 0x13
 4323 00ec 11       		.uleb128 0x11
 4324 00ed 01       		.uleb128 0x1
 4325 00ee 12       		.uleb128 0x12
 4326 00ef 06       		.uleb128 0x6
 4327 00f0 40       		.uleb128 0x40
 4328 00f1 18       		.uleb128 0x18
 4329 00f2 9642     		.uleb128 0x2116
 4330 00f4 19       		.uleb128 0x19
 4331 00f5 01       		.uleb128 0x1
 4332 00f6 13       		.uleb128 0x13
 4333 00f7 00       		.byte	0
 4334 00f8 00       		.byte	0
 4335 00f9 13       		.uleb128 0x13
 4336 00fa 05       		.uleb128 0x5
 4337 00fb 00       		.byte	0
 4338 00fc 03       		.uleb128 0x3
 4339 00fd 0E       		.uleb128 0xe
 4340 00fe 3A       		.uleb128 0x3a
 4341 00ff 0B       		.uleb128 0xb
 4342 0100 3B       		.uleb128 0x3b
 4343 0101 05       		.uleb128 0x5
 4344 0102 49       		.uleb128 0x49
 4345 0103 13       		.uleb128 0x13
 4346 0104 02       		.uleb128 0x2
 4347 0105 18       		.uleb128 0x18
 4348 0106 00       		.byte	0
 4349 0107 00       		.byte	0
 4350 0108 14       		.uleb128 0x14
 4351 0109 2E       		.uleb128 0x2e
 4352 010a 01       		.byte	0x1
 4353 010b 3F       		.uleb128 0x3f
 4354 010c 19       		.uleb128 0x19
 4355 010d 03       		.uleb128 0x3
 4356 010e 0E       		.uleb128 0xe
 4357 010f 3A       		.uleb128 0x3a
 4358 0110 0B       		.uleb128 0xb
 4359 0111 3B       		.uleb128 0x3b
 4360 0112 05       		.uleb128 0x5
 4361 0113 27       		.uleb128 0x27
 4362 0114 19       		.uleb128 0x19
 4363 0115 11       		.uleb128 0x11
 4364 0116 01       		.uleb128 0x1
 4365 0117 12       		.uleb128 0x12
 4366 0118 06       		.uleb128 0x6
 4367 0119 40       		.uleb128 0x40
 4368 011a 18       		.uleb128 0x18
 4369 011b 9642     		.uleb128 0x2116
 4370 011d 19       		.uleb128 0x19
 4371 011e 01       		.uleb128 0x1
 4372 011f 13       		.uleb128 0x13
 4373 0120 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 117


 4374 0121 00       		.byte	0
 4375 0122 15       		.uleb128 0x15
 4376 0123 2E       		.uleb128 0x2e
 4377 0124 01       		.byte	0x1
 4378 0125 3F       		.uleb128 0x3f
 4379 0126 19       		.uleb128 0x19
 4380 0127 03       		.uleb128 0x3
 4381 0128 0E       		.uleb128 0xe
 4382 0129 3A       		.uleb128 0x3a
 4383 012a 0B       		.uleb128 0xb
 4384 012b 3B       		.uleb128 0x3b
 4385 012c 05       		.uleb128 0x5
 4386 012d 27       		.uleb128 0x27
 4387 012e 19       		.uleb128 0x19
 4388 012f 49       		.uleb128 0x49
 4389 0130 13       		.uleb128 0x13
 4390 0131 11       		.uleb128 0x11
 4391 0132 01       		.uleb128 0x1
 4392 0133 12       		.uleb128 0x12
 4393 0134 06       		.uleb128 0x6
 4394 0135 40       		.uleb128 0x40
 4395 0136 18       		.uleb128 0x18
 4396 0137 9742     		.uleb128 0x2117
 4397 0139 19       		.uleb128 0x19
 4398 013a 01       		.uleb128 0x1
 4399 013b 13       		.uleb128 0x13
 4400 013c 00       		.byte	0
 4401 013d 00       		.byte	0
 4402 013e 16       		.uleb128 0x16
 4403 013f 2E       		.uleb128 0x2e
 4404 0140 01       		.byte	0x1
 4405 0141 3F       		.uleb128 0x3f
 4406 0142 19       		.uleb128 0x19
 4407 0143 03       		.uleb128 0x3
 4408 0144 0E       		.uleb128 0xe
 4409 0145 3A       		.uleb128 0x3a
 4410 0146 0B       		.uleb128 0xb
 4411 0147 3B       		.uleb128 0x3b
 4412 0148 05       		.uleb128 0x5
 4413 0149 27       		.uleb128 0x27
 4414 014a 19       		.uleb128 0x19
 4415 014b 11       		.uleb128 0x11
 4416 014c 01       		.uleb128 0x1
 4417 014d 12       		.uleb128 0x12
 4418 014e 06       		.uleb128 0x6
 4419 014f 40       		.uleb128 0x40
 4420 0150 18       		.uleb128 0x18
 4421 0151 9742     		.uleb128 0x2117
 4422 0153 19       		.uleb128 0x19
 4423 0154 01       		.uleb128 0x1
 4424 0155 13       		.uleb128 0x13
 4425 0156 00       		.byte	0
 4426 0157 00       		.byte	0
 4427 0158 17       		.uleb128 0x17
 4428 0159 2E       		.uleb128 0x2e
 4429 015a 01       		.byte	0x1
 4430 015b 03       		.uleb128 0x3
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 118


 4431 015c 0E       		.uleb128 0xe
 4432 015d 3A       		.uleb128 0x3a
 4433 015e 0B       		.uleb128 0xb
 4434 015f 3B       		.uleb128 0x3b
 4435 0160 05       		.uleb128 0x5
 4436 0161 27       		.uleb128 0x27
 4437 0162 19       		.uleb128 0x19
 4438 0163 49       		.uleb128 0x49
 4439 0164 13       		.uleb128 0x13
 4440 0165 11       		.uleb128 0x11
 4441 0166 01       		.uleb128 0x1
 4442 0167 12       		.uleb128 0x12
 4443 0168 06       		.uleb128 0x6
 4444 0169 40       		.uleb128 0x40
 4445 016a 18       		.uleb128 0x18
 4446 016b 9642     		.uleb128 0x2116
 4447 016d 19       		.uleb128 0x19
 4448 016e 01       		.uleb128 0x1
 4449 016f 13       		.uleb128 0x13
 4450 0170 00       		.byte	0
 4451 0171 00       		.byte	0
 4452 0172 18       		.uleb128 0x18
 4453 0173 2E       		.uleb128 0x2e
 4454 0174 01       		.byte	0x1
 4455 0175 03       		.uleb128 0x3
 4456 0176 0E       		.uleb128 0xe
 4457 0177 3A       		.uleb128 0x3a
 4458 0178 0B       		.uleb128 0xb
 4459 0179 3B       		.uleb128 0x3b
 4460 017a 05       		.uleb128 0x5
 4461 017b 27       		.uleb128 0x27
 4462 017c 19       		.uleb128 0x19
 4463 017d 11       		.uleb128 0x11
 4464 017e 01       		.uleb128 0x1
 4465 017f 12       		.uleb128 0x12
 4466 0180 06       		.uleb128 0x6
 4467 0181 40       		.uleb128 0x40
 4468 0182 18       		.uleb128 0x18
 4469 0183 9642     		.uleb128 0x2116
 4470 0185 19       		.uleb128 0x19
 4471 0186 01       		.uleb128 0x1
 4472 0187 13       		.uleb128 0x13
 4473 0188 00       		.byte	0
 4474 0189 00       		.byte	0
 4475 018a 19       		.uleb128 0x19
 4476 018b 34       		.uleb128 0x34
 4477 018c 00       		.byte	0
 4478 018d 03       		.uleb128 0x3
 4479 018e 08       		.uleb128 0x8
 4480 018f 3A       		.uleb128 0x3a
 4481 0190 0B       		.uleb128 0xb
 4482 0191 3B       		.uleb128 0x3b
 4483 0192 05       		.uleb128 0x5
 4484 0193 49       		.uleb128 0x49
 4485 0194 13       		.uleb128 0x13
 4486 0195 02       		.uleb128 0x2
 4487 0196 18       		.uleb128 0x18
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 119


 4488 0197 00       		.byte	0
 4489 0198 00       		.byte	0
 4490 0199 1A       		.uleb128 0x1a
 4491 019a 01       		.uleb128 0x1
 4492 019b 01       		.byte	0x1
 4493 019c 49       		.uleb128 0x49
 4494 019d 13       		.uleb128 0x13
 4495 019e 01       		.uleb128 0x1
 4496 019f 13       		.uleb128 0x13
 4497 01a0 00       		.byte	0
 4498 01a1 00       		.byte	0
 4499 01a2 1B       		.uleb128 0x1b
 4500 01a3 21       		.uleb128 0x21
 4501 01a4 00       		.byte	0
 4502 01a5 49       		.uleb128 0x49
 4503 01a6 13       		.uleb128 0x13
 4504 01a7 2F       		.uleb128 0x2f
 4505 01a8 0B       		.uleb128 0xb
 4506 01a9 00       		.byte	0
 4507 01aa 00       		.byte	0
 4508 01ab 1C       		.uleb128 0x1c
 4509 01ac 34       		.uleb128 0x34
 4510 01ad 00       		.byte	0
 4511 01ae 03       		.uleb128 0x3
 4512 01af 0E       		.uleb128 0xe
 4513 01b0 3A       		.uleb128 0x3a
 4514 01b1 0B       		.uleb128 0xb
 4515 01b2 3B       		.uleb128 0x3b
 4516 01b3 0B       		.uleb128 0xb
 4517 01b4 49       		.uleb128 0x49
 4518 01b5 13       		.uleb128 0x13
 4519 01b6 3F       		.uleb128 0x3f
 4520 01b7 19       		.uleb128 0x19
 4521 01b8 02       		.uleb128 0x2
 4522 01b9 18       		.uleb128 0x18
 4523 01ba 00       		.byte	0
 4524 01bb 00       		.byte	0
 4525 01bc 00       		.byte	0
 4526              		.section	.debug_aranges,"",%progbits
 4527 0000 EC000000 		.4byte	0xec
 4528 0004 0200     		.2byte	0x2
 4529 0006 00000000 		.4byte	.Ldebug_info0
 4530 000a 04       		.byte	0x4
 4531 000b 00       		.byte	0
 4532 000c 0000     		.2byte	0
 4533 000e 0000     		.2byte	0
 4534 0010 00000000 		.4byte	.LFB1
 4535 0014 B0000000 		.4byte	.LFE1-.LFB1
 4536 0018 00000000 		.4byte	.LFB2
 4537 001c 84000000 		.4byte	.LFE2-.LFB2
 4538 0020 00000000 		.4byte	.LFB3
 4539 0024 90000000 		.4byte	.LFE3-.LFB3
 4540 0028 00000000 		.4byte	.LFB4
 4541 002c 58000000 		.4byte	.LFE4-.LFB4
 4542 0030 00000000 		.4byte	.LFB5
 4543 0034 60000000 		.4byte	.LFE5-.LFB5
 4544 0038 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 120


 4545 003c 52000000 		.4byte	.LFE6-.LFB6
 4546 0040 00000000 		.4byte	.LFB7
 4547 0044 6C010000 		.4byte	.LFE7-.LFB7
 4548 0048 00000000 		.4byte	.LFB8
 4549 004c E6000000 		.4byte	.LFE8-.LFB8
 4550 0050 00000000 		.4byte	.LFB9
 4551 0054 9A010000 		.4byte	.LFE9-.LFB9
 4552 0058 00000000 		.4byte	.LFB10
 4553 005c B2000000 		.4byte	.LFE10-.LFB10
 4554 0060 00000000 		.4byte	.LFB11
 4555 0064 78000000 		.4byte	.LFE11-.LFB11
 4556 0068 00000000 		.4byte	.LFB12
 4557 006c 2C000000 		.4byte	.LFE12-.LFB12
 4558 0070 00000000 		.4byte	.LFB13
 4559 0074 36000000 		.4byte	.LFE13-.LFB13
 4560 0078 00000000 		.4byte	.LFB14
 4561 007c 24000000 		.4byte	.LFE14-.LFB14
 4562 0080 00000000 		.4byte	.LFB15
 4563 0084 3C000000 		.4byte	.LFE15-.LFB15
 4564 0088 00000000 		.4byte	.LFB16
 4565 008c 18000000 		.4byte	.LFE16-.LFB16
 4566 0090 00000000 		.4byte	.LFB17
 4567 0094 1A000000 		.4byte	.LFE17-.LFB17
 4568 0098 00000000 		.4byte	.LFB18
 4569 009c 1A000000 		.4byte	.LFE18-.LFB18
 4570 00a0 00000000 		.4byte	.LFB19
 4571 00a4 DA000000 		.4byte	.LFE19-.LFB19
 4572 00a8 00000000 		.4byte	.LFB20
 4573 00ac 4C000000 		.4byte	.LFE20-.LFB20
 4574 00b0 00000000 		.4byte	.LFB21
 4575 00b4 96000000 		.4byte	.LFE21-.LFB21
 4576 00b8 00000000 		.4byte	.LFB22
 4577 00bc 2C000000 		.4byte	.LFE22-.LFB22
 4578 00c0 00000000 		.4byte	.LFB23
 4579 00c4 30000000 		.4byte	.LFE23-.LFB23
 4580 00c8 00000000 		.4byte	.LFB24
 4581 00cc 30000000 		.4byte	.LFE24-.LFB24
 4582 00d0 00000000 		.4byte	.LFB25
 4583 00d4 34000000 		.4byte	.LFE25-.LFB25
 4584 00d8 00000000 		.4byte	.LFB26
 4585 00dc 50000000 		.4byte	.LFE26-.LFB26
 4586 00e0 00000000 		.4byte	.LFB27
 4587 00e4 44000000 		.4byte	.LFE27-.LFB27
 4588 00e8 00000000 		.4byte	0
 4589 00ec 00000000 		.4byte	0
 4590              		.section	.debug_ranges,"",%progbits
 4591              	.Ldebug_ranges0:
 4592 0000 00000000 		.4byte	.LFB1
 4593 0004 B0000000 		.4byte	.LFE1
 4594 0008 00000000 		.4byte	.LFB2
 4595 000c 84000000 		.4byte	.LFE2
 4596 0010 00000000 		.4byte	.LFB3
 4597 0014 90000000 		.4byte	.LFE3
 4598 0018 00000000 		.4byte	.LFB4
 4599 001c 58000000 		.4byte	.LFE4
 4600 0020 00000000 		.4byte	.LFB5
 4601 0024 60000000 		.4byte	.LFE5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 121


 4602 0028 00000000 		.4byte	.LFB6
 4603 002c 52000000 		.4byte	.LFE6
 4604 0030 00000000 		.4byte	.LFB7
 4605 0034 6C010000 		.4byte	.LFE7
 4606 0038 00000000 		.4byte	.LFB8
 4607 003c E6000000 		.4byte	.LFE8
 4608 0040 00000000 		.4byte	.LFB9
 4609 0044 9A010000 		.4byte	.LFE9
 4610 0048 00000000 		.4byte	.LFB10
 4611 004c B2000000 		.4byte	.LFE10
 4612 0050 00000000 		.4byte	.LFB11
 4613 0054 78000000 		.4byte	.LFE11
 4614 0058 00000000 		.4byte	.LFB12
 4615 005c 2C000000 		.4byte	.LFE12
 4616 0060 00000000 		.4byte	.LFB13
 4617 0064 36000000 		.4byte	.LFE13
 4618 0068 00000000 		.4byte	.LFB14
 4619 006c 24000000 		.4byte	.LFE14
 4620 0070 00000000 		.4byte	.LFB15
 4621 0074 3C000000 		.4byte	.LFE15
 4622 0078 00000000 		.4byte	.LFB16
 4623 007c 18000000 		.4byte	.LFE16
 4624 0080 00000000 		.4byte	.LFB17
 4625 0084 1A000000 		.4byte	.LFE17
 4626 0088 00000000 		.4byte	.LFB18
 4627 008c 1A000000 		.4byte	.LFE18
 4628 0090 00000000 		.4byte	.LFB19
 4629 0094 DA000000 		.4byte	.LFE19
 4630 0098 00000000 		.4byte	.LFB20
 4631 009c 4C000000 		.4byte	.LFE20
 4632 00a0 00000000 		.4byte	.LFB21
 4633 00a4 96000000 		.4byte	.LFE21
 4634 00a8 00000000 		.4byte	.LFB22
 4635 00ac 2C000000 		.4byte	.LFE22
 4636 00b0 00000000 		.4byte	.LFB23
 4637 00b4 30000000 		.4byte	.LFE23
 4638 00b8 00000000 		.4byte	.LFB24
 4639 00bc 30000000 		.4byte	.LFE24
 4640 00c0 00000000 		.4byte	.LFB25
 4641 00c4 34000000 		.4byte	.LFE25
 4642 00c8 00000000 		.4byte	.LFB26
 4643 00cc 50000000 		.4byte	.LFE26
 4644 00d0 00000000 		.4byte	.LFB27
 4645 00d4 44000000 		.4byte	.LFE27
 4646 00d8 00000000 		.4byte	0
 4647 00dc 00000000 		.4byte	0
 4648              		.section	.debug_macro,"",%progbits
 4649              	.Ldebug_macro0:
 4650 0000 0400     		.2byte	0x4
 4651 0002 02       		.byte	0x2
 4652 0003 00000000 		.4byte	.Ldebug_line0
 4653 0007 07       		.byte	0x7
 4654 0008 00000000 		.4byte	.Ldebug_macro1
 4655 000c 03       		.byte	0x3
 4656 000d 00       		.uleb128 0
 4657 000e 01       		.uleb128 0x1
 4658              		.file 9 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\stdlib.h"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 122


 4659 000f 03       		.byte	0x3
 4660 0010 42       		.uleb128 0x42
 4661 0011 09       		.uleb128 0x9
 4662 0012 05       		.byte	0x5
 4663 0013 08       		.uleb128 0x8
 4664 0014 A56F0000 		.4byte	.LASF355
 4665              		.file 10 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\ieeefp.h"
 4666 0018 03       		.byte	0x3
 4667 0019 0A       		.uleb128 0xa
 4668 001a 0A       		.uleb128 0xa
 4669 001b 05       		.byte	0x5
 4670 001c 3C       		.uleb128 0x3c
 4671 001d 7E580000 		.4byte	.LASF356
 4672 0021 04       		.byte	0x4
 4673              		.file 11 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\_ansi.h"
 4674 0022 03       		.byte	0x3
 4675 0023 0B       		.uleb128 0xb
 4676 0024 0B       		.uleb128 0xb
 4677 0025 05       		.byte	0x5
 4678 0026 0D       		.uleb128 0xd
 4679 0027 20500000 		.4byte	.LASF357
 4680              		.file 12 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\newlib.h"
 4681 002b 03       		.byte	0x3
 4682 002c 0F       		.uleb128 0xf
 4683 002d 0C       		.uleb128 0xc
 4684 002e 07       		.byte	0x7
 4685 002f 00000000 		.4byte	.Ldebug_macro2
 4686 0033 04       		.byte	0x4
 4687              		.file 13 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\config.h"
 4688 0034 03       		.byte	0x3
 4689 0035 10       		.uleb128 0x10
 4690 0036 0D       		.uleb128 0xd
 4691 0037 05       		.byte	0x5
 4692 0038 02       		.uleb128 0x2
 4693 0039 204C0000 		.4byte	.LASF372
 4694 003d 03       		.byte	0x3
 4695 003e 04       		.uleb128 0x4
 4696 003f 0A       		.uleb128 0xa
 4697 0040 04       		.byte	0x4
 4698              		.file 14 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\features.h"
 4699 0041 03       		.byte	0x3
 4700 0042 05       		.uleb128 0x5
 4701 0043 0E       		.uleb128 0xe
 4702 0044 07       		.byte	0x7
 4703 0045 00000000 		.4byte	.Ldebug_macro3
 4704 0049 04       		.byte	0x4
 4705 004a 07       		.byte	0x7
 4706 004b 00000000 		.4byte	.Ldebug_macro4
 4707 004f 04       		.byte	0x4
 4708 0050 07       		.byte	0x7
 4709 0051 00000000 		.4byte	.Ldebug_macro5
 4710 0055 04       		.byte	0x4
 4711 0056 07       		.byte	0x7
 4712 0057 00000000 		.4byte	.Ldebug_macro6
 4713 005b 03       		.byte	0x3
 4714 005c 10       		.uleb128 0x10
 4715 005d 02       		.uleb128 0x2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 123


 4716 005e 07       		.byte	0x7
 4717 005f 00000000 		.4byte	.Ldebug_macro7
 4718 0063 04       		.byte	0x4
 4719              		.file 15 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\reent.h"
 4720 0064 03       		.byte	0x3
 4721 0065 12       		.uleb128 0x12
 4722 0066 0F       		.uleb128 0xf
 4723 0067 05       		.byte	0x5
 4724 0068 0B       		.uleb128 0xb
 4725 0069 52540000 		.4byte	.LASF451
 4726 006d 03       		.byte	0x3
 4727 006e 0D       		.uleb128 0xd
 4728 006f 0B       		.uleb128 0xb
 4729 0070 04       		.byte	0x4
 4730 0071 03       		.byte	0x3
 4731 0072 0E       		.uleb128 0xe
 4732 0073 02       		.uleb128 0x2
 4733 0074 07       		.byte	0x7
 4734 0075 00000000 		.4byte	.Ldebug_macro8
 4735 0079 04       		.byte	0x4
 4736              		.file 16 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\_types.h"
 4737 007a 03       		.byte	0x3
 4738 007b 0F       		.uleb128 0xf
 4739 007c 10       		.uleb128 0x10
 4740 007d 05       		.byte	0x5
 4741 007e 0A       		.uleb128 0xa
 4742 007f 7B300000 		.4byte	.LASF465
 4743              		.file 17 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\_types.h"
 4744 0083 03       		.byte	0x3
 4745 0084 0C       		.uleb128 0xc
 4746 0085 11       		.uleb128 0x11
 4747 0086 05       		.byte	0x5
 4748 0087 06       		.uleb128 0x6
 4749 0088 4A580000 		.4byte	.LASF466
 4750 008c 03       		.byte	0x3
 4751 008d 07       		.uleb128 0x7
 4752 008e 03       		.uleb128 0x3
 4753 008f 07       		.byte	0x7
 4754 0090 00000000 		.4byte	.Ldebug_macro9
 4755 0094 04       		.byte	0x4
 4756 0095 04       		.byte	0x4
 4757              		.file 18 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\lock.h"
 4758 0096 03       		.byte	0x3
 4759 0097 0D       		.uleb128 0xd
 4760 0098 12       		.uleb128 0x12
 4761 0099 07       		.byte	0x7
 4762 009a 00000000 		.4byte	.Ldebug_macro10
 4763 009e 04       		.byte	0x4
 4764 009f 07       		.byte	0x7
 4765 00a0 00000000 		.4byte	.Ldebug_macro11
 4766 00a4 03       		.byte	0x3
 4767 00a5 43       		.uleb128 0x43
 4768 00a6 02       		.uleb128 0x2
 4769 00a7 07       		.byte	0x7
 4770 00a8 00000000 		.4byte	.Ldebug_macro12
 4771 00ac 04       		.byte	0x4
 4772 00ad 04       		.byte	0x4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 124


 4773 00ae 07       		.byte	0x7
 4774 00af 00000000 		.4byte	.Ldebug_macro13
 4775 00b3 04       		.byte	0x4
 4776              		.file 19 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\cdefs.h"
 4777 00b4 03       		.byte	0x3
 4778 00b5 13       		.uleb128 0x13
 4779 00b6 13       		.uleb128 0x13
 4780 00b7 05       		.byte	0x5
 4781 00b8 29       		.uleb128 0x29
 4782 00b9 5B800000 		.4byte	.LASF551
 4783 00bd 03       		.byte	0x3
 4784 00be 2D       		.uleb128 0x2d
 4785 00bf 02       		.uleb128 0x2
 4786 00c0 04       		.byte	0x4
 4787 00c1 07       		.byte	0x7
 4788 00c2 00000000 		.4byte	.Ldebug_macro14
 4789 00c6 04       		.byte	0x4
 4790              		.file 20 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\stdlib.h"
 4791 00c7 03       		.byte	0x3
 4792 00c8 14       		.uleb128 0x14
 4793 00c9 14       		.uleb128 0x14
 4794 00ca 05       		.byte	0x5
 4795 00cb 02       		.uleb128 0x2
 4796 00cc 8B260000 		.4byte	.LASF651
 4797 00d0 04       		.byte	0x4
 4798              		.file 21 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\alloca.h"
 4799 00d1 03       		.byte	0x3
 4800 00d2 16       		.uleb128 0x16
 4801 00d3 15       		.uleb128 0x15
 4802 00d4 07       		.byte	0x7
 4803 00d5 00000000 		.4byte	.Ldebug_macro15
 4804 00d9 04       		.byte	0x4
 4805 00da 07       		.byte	0x7
 4806 00db 00000000 		.4byte	.Ldebug_macro16
 4807 00df 04       		.byte	0x4
 4808              		.file 22 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\string.h"
 4809 00e0 03       		.byte	0x3
 4810 00e1 43       		.uleb128 0x43
 4811 00e2 16       		.uleb128 0x16
 4812 00e3 07       		.byte	0x7
 4813 00e4 00000000 		.4byte	.Ldebug_macro17
 4814 00e8 03       		.byte	0x3
 4815 00e9 11       		.uleb128 0x11
 4816 00ea 02       		.uleb128 0x2
 4817 00eb 07       		.byte	0x7
 4818 00ec 00000000 		.4byte	.Ldebug_macro18
 4819 00f0 04       		.byte	0x4
 4820              		.file 23 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\string.h"
 4821 00f1 03       		.byte	0x3
 4822 00f2 A601     		.uleb128 0xa6
 4823 00f4 17       		.uleb128 0x17
 4824 00f5 04       		.byte	0x4
 4825 00f6 04       		.byte	0x4
 4826 00f7 05       		.byte	0x5
 4827 00f8 48       		.uleb128 0x48
 4828 00f9 4A6C0000 		.4byte	.LASF662
 4829              		.file 24 "FreeRTOS/include/FreeRTOS.h"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 125


 4830 00fd 03       		.byte	0x3
 4831 00fe 4A       		.uleb128 0x4a
 4832 00ff 18       		.uleb128 0x18
 4833 0100 05       		.byte	0x5
 4834 0101 43       		.uleb128 0x43
 4835 0102 CC5E0000 		.4byte	.LASF663
 4836 0106 03       		.byte	0x3
 4837 0107 48       		.uleb128 0x48
 4838 0108 02       		.uleb128 0x2
 4839 0109 04       		.byte	0x4
 4840              		.file 25 "c:\\gnu tools arm embedded\\4.9 2015q1\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stdint.
 4841 010a 03       		.byte	0x3
 4842 010b 57       		.uleb128 0x57
 4843 010c 19       		.uleb128 0x19
 4844 010d 03       		.byte	0x3
 4845 010e 09       		.uleb128 0x9
 4846 010f 04       		.uleb128 0x4
 4847 0110 05       		.byte	0x5
 4848 0111 0A       		.uleb128 0xa
 4849 0112 BB8A0000 		.4byte	.LASF664
 4850              		.file 26 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\_intsup.h"
 4851 0116 03       		.byte	0x3
 4852 0117 0D       		.uleb128 0xd
 4853 0118 1A       		.uleb128 0x1a
 4854 0119 07       		.byte	0x7
 4855 011a 00000000 		.4byte	.Ldebug_macro19
 4856 011e 04       		.byte	0x4
 4857 011f 07       		.byte	0x7
 4858 0120 00000000 		.4byte	.Ldebug_macro20
 4859 0124 04       		.byte	0x4
 4860 0125 05       		.byte	0x5
 4861 0126 0D       		.uleb128 0xd
 4862 0127 4D740000 		.4byte	.LASF742
 4863 012b 04       		.byte	0x4
 4864              		.file 27 "config/FreeRTOSConfig.h"
 4865 012c 03       		.byte	0x3
 4866 012d 5E       		.uleb128 0x5e
 4867 012e 1B       		.uleb128 0x1b
 4868 012f 07       		.byte	0x7
 4869 0130 00000000 		.4byte	.Ldebug_macro21
 4870 0134 04       		.byte	0x4
 4871              		.file 28 "FreeRTOS/include/projdefs.h"
 4872 0135 03       		.byte	0x3
 4873 0136 61       		.uleb128 0x61
 4874 0137 1C       		.uleb128 0x1c
 4875 0138 07       		.byte	0x7
 4876 0139 00000000 		.4byte	.Ldebug_macro22
 4877 013d 04       		.byte	0x4
 4878              		.file 29 "FreeRTOS/include/portable.h"
 4879 013e 03       		.byte	0x3
 4880 013f 64       		.uleb128 0x64
 4881 0140 1D       		.uleb128 0x1d
 4882 0141 05       		.byte	0x5
 4883 0142 47       		.uleb128 0x47
 4884 0143 07280000 		.4byte	.LASF796
 4885 0147 03       		.byte	0x3
 4886 0148 C401     		.uleb128 0xc4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 126


 4887 014a 05       		.uleb128 0x5
 4888 014b 07       		.byte	0x7
 4889 014c 00000000 		.4byte	.Ldebug_macro23
 4890 0150 04       		.byte	0x4
 4891 0151 07       		.byte	0x7
 4892 0152 00000000 		.4byte	.Ldebug_macro24
 4893              		.file 30 "FreeRTOS/include/mpu_wrappers.h"
 4894 0156 03       		.byte	0x3
 4895 0157 E002     		.uleb128 0x160
 4896 0159 1E       		.uleb128 0x1e
 4897 015a 07       		.byte	0x7
 4898 015b 00000000 		.4byte	.Ldebug_macro25
 4899 015f 04       		.byte	0x4
 4900 0160 04       		.byte	0x4
 4901 0161 07       		.byte	0x7
 4902 0162 00000000 		.4byte	.Ldebug_macro26
 4903 0166 04       		.byte	0x4
 4904 0167 03       		.byte	0x3
 4905 0168 4B       		.uleb128 0x4b
 4906 0169 07       		.uleb128 0x7
 4907 016a 05       		.byte	0x5
 4908 016b 44       		.uleb128 0x44
 4909 016c D9500000 		.4byte	.LASF957
 4910 0170 03       		.byte	0x3
 4911 0171 4A       		.uleb128 0x4a
 4912 0172 06       		.uleb128 0x6
 4913 0173 07       		.byte	0x7
 4914 0174 00000000 		.4byte	.Ldebug_macro27
 4915 0178 04       		.byte	0x4
 4916 0179 07       		.byte	0x7
 4917 017a 00000000 		.4byte	.Ldebug_macro28
 4918 017e 04       		.byte	0x4
 4919 017f 03       		.byte	0x3
 4920 0180 4C       		.uleb128 0x4c
 4921 0181 08       		.uleb128 0x8
 4922 0182 07       		.byte	0x7
 4923 0183 00000000 		.4byte	.Ldebug_macro29
 4924 0187 04       		.byte	0x4
 4925 0188 06       		.byte	0x6
 4926 0189 56       		.uleb128 0x56
 4927 018a D86A0000 		.4byte	.LASF1016
 4928 018e 05       		.byte	0x5
 4929 018f 5A       		.uleb128 0x5a
 4930 0190 334E0000 		.4byte	.LASF1017
 4931 0194 05       		.byte	0x5
 4932 0195 5B       		.uleb128 0x5b
 4933 0196 C3870000 		.4byte	.LASF1018
 4934 019a 05       		.byte	0x5
 4935 019b 68       		.uleb128 0x68
 4936 019c 24720000 		.4byte	.LASF1019
 4937 01a0 05       		.byte	0x5
 4938 01a1 69       		.uleb128 0x69
 4939 01a2 C53D0000 		.4byte	.LASF1020
 4940 01a6 05       		.byte	0x5
 4941 01a7 6A       		.uleb128 0x6a
 4942 01a8 2B860000 		.4byte	.LASF1021
 4943 01ac 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 127


 4944 01ad 6E       		.uleb128 0x6e
 4945 01ae 61320000 		.4byte	.LASF1022
 4946 01b2 05       		.byte	0x5
 4947 01b3 6F       		.uleb128 0x6f
 4948 01b4 35480000 		.4byte	.LASF1023
 4949 01b8 05       		.byte	0x5
 4950 01b9 76       		.uleb128 0x76
 4951 01ba 0E0C0000 		.4byte	.LASF1024
 4952 01be 05       		.byte	0x5
 4953 01bf F001     		.uleb128 0xf0
 4954 01c1 A1160000 		.4byte	.LASF1025
 4955 01c5 04       		.byte	0x4
 4956 01c6 00       		.byte	0
 4957              		.section	.debug_macro,"G",%progbits,wm4.0.1834ce015d70b8127b1e5f7bc96e3d8e,comdat
 4958              	.Ldebug_macro1:
 4959 0000 0400     		.2byte	0x4
 4960 0002 00       		.byte	0
 4961 0003 05       		.byte	0x5
 4962 0004 00       		.uleb128 0
 4963 0005 A7560000 		.4byte	.LASF0
 4964 0009 05       		.byte	0x5
 4965 000a 00       		.uleb128 0
 4966 000b E4080000 		.4byte	.LASF1
 4967 000f 05       		.byte	0x5
 4968 0010 00       		.uleb128 0
 4969 0011 183C0000 		.4byte	.LASF2
 4970 0015 05       		.byte	0x5
 4971 0016 00       		.uleb128 0
 4972 0017 FD6D0000 		.4byte	.LASF3
 4973 001b 05       		.byte	0x5
 4974 001c 00       		.uleb128 0
 4975 001d 1B1E0000 		.4byte	.LASF4
 4976 0021 05       		.byte	0x5
 4977 0022 00       		.uleb128 0
 4978 0023 A08D0000 		.4byte	.LASF5
 4979 0027 05       		.byte	0x5
 4980 0028 00       		.uleb128 0
 4981 0029 70770000 		.4byte	.LASF6
 4982 002d 05       		.byte	0x5
 4983 002e 00       		.uleb128 0
 4984 002f B7210000 		.4byte	.LASF7
 4985 0033 05       		.byte	0x5
 4986 0034 00       		.uleb128 0
 4987 0035 29380000 		.4byte	.LASF8
 4988 0039 05       		.byte	0x5
 4989 003a 00       		.uleb128 0
 4990 003b 05410000 		.4byte	.LASF9
 4991 003f 05       		.byte	0x5
 4992 0040 00       		.uleb128 0
 4993 0041 8D8D0000 		.4byte	.LASF10
 4994 0045 05       		.byte	0x5
 4995 0046 00       		.uleb128 0
 4996 0047 AD030000 		.4byte	.LASF11
 4997 004b 05       		.byte	0x5
 4998 004c 00       		.uleb128 0
 4999 004d 3E670000 		.4byte	.LASF12
 5000 0051 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 128


 5001 0052 00       		.uleb128 0
 5002 0053 47830000 		.4byte	.LASF13
 5003 0057 05       		.byte	0x5
 5004 0058 00       		.uleb128 0
 5005 0059 46190000 		.4byte	.LASF14
 5006 005d 05       		.byte	0x5
 5007 005e 00       		.uleb128 0
 5008 005f CD040000 		.4byte	.LASF15
 5009 0063 05       		.byte	0x5
 5010 0064 00       		.uleb128 0
 5011 0065 40680000 		.4byte	.LASF16
 5012 0069 05       		.byte	0x5
 5013 006a 00       		.uleb128 0
 5014 006b 85200000 		.4byte	.LASF17
 5015 006f 05       		.byte	0x5
 5016 0070 00       		.uleb128 0
 5017 0071 CD1A0000 		.4byte	.LASF18
 5018 0075 05       		.byte	0x5
 5019 0076 00       		.uleb128 0
 5020 0077 79270000 		.4byte	.LASF19
 5021 007b 05       		.byte	0x5
 5022 007c 00       		.uleb128 0
 5023 007d 35730000 		.4byte	.LASF20
 5024 0081 05       		.byte	0x5
 5025 0082 00       		.uleb128 0
 5026 0083 B44C0000 		.4byte	.LASF21
 5027 0087 05       		.byte	0x5
 5028 0088 00       		.uleb128 0
 5029 0089 D65B0000 		.4byte	.LASF22
 5030 008d 05       		.byte	0x5
 5031 008e 00       		.uleb128 0
 5032 008f FA620000 		.4byte	.LASF23
 5033 0093 05       		.byte	0x5
 5034 0094 00       		.uleb128 0
 5035 0095 320E0000 		.4byte	.LASF24
 5036 0099 05       		.byte	0x5
 5037 009a 00       		.uleb128 0
 5038 009b CF050000 		.4byte	.LASF25
 5039 009f 05       		.byte	0x5
 5040 00a0 00       		.uleb128 0
 5041 00a1 8A4F0000 		.4byte	.LASF26
 5042 00a5 05       		.byte	0x5
 5043 00a6 00       		.uleb128 0
 5044 00a7 CC560000 		.4byte	.LASF27
 5045 00ab 05       		.byte	0x5
 5046 00ac 00       		.uleb128 0
 5047 00ad FB150000 		.4byte	.LASF28
 5048 00b1 05       		.byte	0x5
 5049 00b2 00       		.uleb128 0
 5050 00b3 E9050000 		.4byte	.LASF29
 5051 00b7 05       		.byte	0x5
 5052 00b8 00       		.uleb128 0
 5053 00b9 06640000 		.4byte	.LASF30
 5054 00bd 05       		.byte	0x5
 5055 00be 00       		.uleb128 0
 5056 00bf C0270000 		.4byte	.LASF31
 5057 00c3 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 129


 5058 00c4 00       		.uleb128 0
 5059 00c5 5C090000 		.4byte	.LASF32
 5060 00c9 05       		.byte	0x5
 5061 00ca 00       		.uleb128 0
 5062 00cb 0E6E0000 		.4byte	.LASF33
 5063 00cf 05       		.byte	0x5
 5064 00d0 00       		.uleb128 0
 5065 00d1 828B0000 		.4byte	.LASF34
 5066 00d5 05       		.byte	0x5
 5067 00d6 00       		.uleb128 0
 5068 00d7 3D660000 		.4byte	.LASF35
 5069 00db 05       		.byte	0x5
 5070 00dc 00       		.uleb128 0
 5071 00dd CC180000 		.4byte	.LASF36
 5072 00e1 05       		.byte	0x5
 5073 00e2 00       		.uleb128 0
 5074 00e3 62570000 		.4byte	.LASF37
 5075 00e7 05       		.byte	0x5
 5076 00e8 00       		.uleb128 0
 5077 00e9 5A060000 		.4byte	.LASF38
 5078 00ed 05       		.byte	0x5
 5079 00ee 00       		.uleb128 0
 5080 00ef 90070000 		.4byte	.LASF39
 5081 00f3 05       		.byte	0x5
 5082 00f4 00       		.uleb128 0
 5083 00f5 8F470000 		.4byte	.LASF40
 5084 00f9 05       		.byte	0x5
 5085 00fa 00       		.uleb128 0
 5086 00fb 844C0000 		.4byte	.LASF41
 5087 00ff 05       		.byte	0x5
 5088 0100 00       		.uleb128 0
 5089 0101 2D570000 		.4byte	.LASF42
 5090 0105 05       		.byte	0x5
 5091 0106 00       		.uleb128 0
 5092 0107 3D3C0000 		.4byte	.LASF43
 5093 010b 05       		.byte	0x5
 5094 010c 00       		.uleb128 0
 5095 010d E84E0000 		.4byte	.LASF44
 5096 0111 05       		.byte	0x5
 5097 0112 00       		.uleb128 0
 5098 0113 F0380000 		.4byte	.LASF45
 5099 0117 05       		.byte	0x5
 5100 0118 00       		.uleb128 0
 5101 0119 10160000 		.4byte	.LASF46
 5102 011d 05       		.byte	0x5
 5103 011e 00       		.uleb128 0
 5104 011f BF860000 		.4byte	.LASF47
 5105 0123 05       		.byte	0x5
 5106 0124 00       		.uleb128 0
 5107 0125 F7610000 		.4byte	.LASF48
 5108 0129 05       		.byte	0x5
 5109 012a 00       		.uleb128 0
 5110 012b 738F0000 		.4byte	.LASF49
 5111 012f 05       		.byte	0x5
 5112 0130 00       		.uleb128 0
 5113 0131 76130000 		.4byte	.LASF50
 5114 0135 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 130


 5115 0136 00       		.uleb128 0
 5116 0137 6D650000 		.4byte	.LASF51
 5117 013b 05       		.byte	0x5
 5118 013c 00       		.uleb128 0
 5119 013d CE6D0000 		.4byte	.LASF52
 5120 0141 05       		.byte	0x5
 5121 0142 00       		.uleb128 0
 5122 0143 8A3F0000 		.4byte	.LASF53
 5123 0147 05       		.byte	0x5
 5124 0148 00       		.uleb128 0
 5125 0149 59080000 		.4byte	.LASF54
 5126 014d 05       		.byte	0x5
 5127 014e 00       		.uleb128 0
 5128 014f 93640000 		.4byte	.LASF55
 5129 0153 05       		.byte	0x5
 5130 0154 00       		.uleb128 0
 5131 0155 0B490000 		.4byte	.LASF56
 5132 0159 05       		.byte	0x5
 5133 015a 00       		.uleb128 0
 5134 015b 3A090000 		.4byte	.LASF57
 5135 015f 05       		.byte	0x5
 5136 0160 00       		.uleb128 0
 5137 0161 753D0000 		.4byte	.LASF58
 5138 0165 05       		.byte	0x5
 5139 0166 00       		.uleb128 0
 5140 0167 C4840000 		.4byte	.LASF59
 5141 016b 05       		.byte	0x5
 5142 016c 00       		.uleb128 0
 5143 016d 52200000 		.4byte	.LASF60
 5144 0171 05       		.byte	0x5
 5145 0172 00       		.uleb128 0
 5146 0173 E1280000 		.4byte	.LASF61
 5147 0177 05       		.byte	0x5
 5148 0178 00       		.uleb128 0
 5149 0179 AE110000 		.4byte	.LASF62
 5150 017d 05       		.byte	0x5
 5151 017e 00       		.uleb128 0
 5152 017f 75720000 		.4byte	.LASF63
 5153 0183 05       		.byte	0x5
 5154 0184 00       		.uleb128 0
 5155 0185 76390000 		.4byte	.LASF64
 5156 0189 05       		.byte	0x5
 5157 018a 00       		.uleb128 0
 5158 018b 612D0000 		.4byte	.LASF65
 5159 018f 05       		.byte	0x5
 5160 0190 00       		.uleb128 0
 5161 0191 C0280000 		.4byte	.LASF66
 5162 0195 05       		.byte	0x5
 5163 0196 00       		.uleb128 0
 5164 0197 D1300000 		.4byte	.LASF67
 5165 019b 05       		.byte	0x5
 5166 019c 00       		.uleb128 0
 5167 019d 4C7B0000 		.4byte	.LASF68
 5168 01a1 05       		.byte	0x5
 5169 01a2 00       		.uleb128 0
 5170 01a3 243F0000 		.4byte	.LASF69
 5171 01a7 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 131


 5172 01a8 00       		.uleb128 0
 5173 01a9 117D0000 		.4byte	.LASF70
 5174 01ad 05       		.byte	0x5
 5175 01ae 00       		.uleb128 0
 5176 01af 65010000 		.4byte	.LASF71
 5177 01b3 05       		.byte	0x5
 5178 01b4 00       		.uleb128 0
 5179 01b5 AB140000 		.4byte	.LASF72
 5180 01b9 05       		.byte	0x5
 5181 01ba 00       		.uleb128 0
 5182 01bb 8C460000 		.4byte	.LASF73
 5183 01bf 05       		.byte	0x5
 5184 01c0 00       		.uleb128 0
 5185 01c1 4C6A0000 		.4byte	.LASF74
 5186 01c5 05       		.byte	0x5
 5187 01c6 00       		.uleb128 0
 5188 01c7 1B860000 		.4byte	.LASF75
 5189 01cb 05       		.byte	0x5
 5190 01cc 00       		.uleb128 0
 5191 01cd 09720000 		.4byte	.LASF76
 5192 01d1 05       		.byte	0x5
 5193 01d2 00       		.uleb128 0
 5194 01d3 1C6B0000 		.4byte	.LASF77
 5195 01d7 05       		.byte	0x5
 5196 01d8 00       		.uleb128 0
 5197 01d9 39110000 		.4byte	.LASF78
 5198 01dd 05       		.byte	0x5
 5199 01de 00       		.uleb128 0
 5200 01df 69020000 		.4byte	.LASF79
 5201 01e3 05       		.byte	0x5
 5202 01e4 00       		.uleb128 0
 5203 01e5 66380000 		.4byte	.LASF80
 5204 01e9 05       		.byte	0x5
 5205 01ea 00       		.uleb128 0
 5206 01eb 6F150000 		.4byte	.LASF81
 5207 01ef 05       		.byte	0x5
 5208 01f0 00       		.uleb128 0
 5209 01f1 45840000 		.4byte	.LASF82
 5210 01f5 05       		.byte	0x5
 5211 01f6 00       		.uleb128 0
 5212 01f7 1F320000 		.4byte	.LASF83
 5213 01fb 05       		.byte	0x5
 5214 01fc 00       		.uleb128 0
 5215 01fd 45180000 		.4byte	.LASF84
 5216 0201 05       		.byte	0x5
 5217 0202 00       		.uleb128 0
 5218 0203 B1100000 		.4byte	.LASF85
 5219 0207 05       		.byte	0x5
 5220 0208 00       		.uleb128 0
 5221 0209 135F0000 		.4byte	.LASF86
 5222 020d 05       		.byte	0x5
 5223 020e 00       		.uleb128 0
 5224 020f 072E0000 		.4byte	.LASF87
 5225 0213 05       		.byte	0x5
 5226 0214 00       		.uleb128 0
 5227 0215 5E3E0000 		.4byte	.LASF88
 5228 0219 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 132


 5229 021a 00       		.uleb128 0
 5230 021b 54230000 		.4byte	.LASF89
 5231 021f 05       		.byte	0x5
 5232 0220 00       		.uleb128 0
 5233 0221 9D460000 		.4byte	.LASF90
 5234 0225 05       		.byte	0x5
 5235 0226 00       		.uleb128 0
 5236 0227 A20A0000 		.4byte	.LASF91
 5237 022b 05       		.byte	0x5
 5238 022c 00       		.uleb128 0
 5239 022d 39340000 		.4byte	.LASF92
 5240 0231 05       		.byte	0x5
 5241 0232 00       		.uleb128 0
 5242 0233 595E0000 		.4byte	.LASF93
 5243 0237 05       		.byte	0x5
 5244 0238 00       		.uleb128 0
 5245 0239 CE2C0000 		.4byte	.LASF94
 5246 023d 05       		.byte	0x5
 5247 023e 00       		.uleb128 0
 5248 023f EA8B0000 		.4byte	.LASF95
 5249 0243 05       		.byte	0x5
 5250 0244 00       		.uleb128 0
 5251 0245 5D790000 		.4byte	.LASF96
 5252 0249 05       		.byte	0x5
 5253 024a 00       		.uleb128 0
 5254 024b 0E0E0000 		.4byte	.LASF97
 5255 024f 05       		.byte	0x5
 5256 0250 00       		.uleb128 0
 5257 0251 7E6A0000 		.4byte	.LASF98
 5258 0255 05       		.byte	0x5
 5259 0256 00       		.uleb128 0
 5260 0257 99730000 		.4byte	.LASF99
 5261 025b 05       		.byte	0x5
 5262 025c 00       		.uleb128 0
 5263 025d DA8E0000 		.4byte	.LASF100
 5264 0261 05       		.byte	0x5
 5265 0262 00       		.uleb128 0
 5266 0263 81070000 		.4byte	.LASF101
 5267 0267 05       		.byte	0x5
 5268 0268 00       		.uleb128 0
 5269 0269 AC660000 		.4byte	.LASF102
 5270 026d 05       		.byte	0x5
 5271 026e 00       		.uleb128 0
 5272 026f 62760000 		.4byte	.LASF103
 5273 0273 05       		.byte	0x5
 5274 0274 00       		.uleb128 0
 5275 0275 13480000 		.4byte	.LASF104
 5276 0279 05       		.byte	0x5
 5277 027a 00       		.uleb128 0
 5278 027b D72D0000 		.4byte	.LASF105
 5279 027f 05       		.byte	0x5
 5280 0280 00       		.uleb128 0
 5281 0281 5F5D0000 		.4byte	.LASF106
 5282 0285 05       		.byte	0x5
 5283 0286 00       		.uleb128 0
 5284 0287 733F0000 		.4byte	.LASF107
 5285 028b 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 133


 5286 028c 00       		.uleb128 0
 5287 028d BA5D0000 		.4byte	.LASF108
 5288 0291 05       		.byte	0x5
 5289 0292 00       		.uleb128 0
 5290 0293 B2170000 		.4byte	.LASF109
 5291 0297 05       		.byte	0x5
 5292 0298 00       		.uleb128 0
 5293 0299 A8500000 		.4byte	.LASF110
 5294 029d 05       		.byte	0x5
 5295 029e 00       		.uleb128 0
 5296 029f 61350000 		.4byte	.LASF111
 5297 02a3 05       		.byte	0x5
 5298 02a4 00       		.uleb128 0
 5299 02a5 91220000 		.4byte	.LASF112
 5300 02a9 05       		.byte	0x5
 5301 02aa 00       		.uleb128 0
 5302 02ab 965C0000 		.4byte	.LASF113
 5303 02af 05       		.byte	0x5
 5304 02b0 00       		.uleb128 0
 5305 02b1 BA8E0000 		.4byte	.LASF114
 5306 02b5 05       		.byte	0x5
 5307 02b6 00       		.uleb128 0
 5308 02b7 E5130000 		.4byte	.LASF115
 5309 02bb 05       		.byte	0x5
 5310 02bc 00       		.uleb128 0
 5311 02bd 7D6C0000 		.4byte	.LASF116
 5312 02c1 05       		.byte	0x5
 5313 02c2 00       		.uleb128 0
 5314 02c3 A8530000 		.4byte	.LASF117
 5315 02c7 05       		.byte	0x5
 5316 02c8 00       		.uleb128 0
 5317 02c9 35210000 		.4byte	.LASF118
 5318 02cd 05       		.byte	0x5
 5319 02ce 00       		.uleb128 0
 5320 02cf 12120000 		.4byte	.LASF119
 5321 02d3 05       		.byte	0x5
 5322 02d4 00       		.uleb128 0
 5323 02d5 61540000 		.4byte	.LASF120
 5324 02d9 05       		.byte	0x5
 5325 02da 00       		.uleb128 0
 5326 02db 00530000 		.4byte	.LASF121
 5327 02df 05       		.byte	0x5
 5328 02e0 00       		.uleb128 0
 5329 02e1 BD470000 		.4byte	.LASF122
 5330 02e5 05       		.byte	0x5
 5331 02e6 00       		.uleb128 0
 5332 02e7 34410000 		.4byte	.LASF123
 5333 02eb 05       		.byte	0x5
 5334 02ec 00       		.uleb128 0
 5335 02ed C4530000 		.4byte	.LASF124
 5336 02f1 05       		.byte	0x5
 5337 02f2 00       		.uleb128 0
 5338 02f3 E9520000 		.4byte	.LASF125
 5339 02f7 05       		.byte	0x5
 5340 02f8 00       		.uleb128 0
 5341 02f9 7B630000 		.4byte	.LASF126
 5342 02fd 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 134


 5343 02fe 00       		.uleb128 0
 5344 02ff 32190000 		.4byte	.LASF127
 5345 0303 05       		.byte	0x5
 5346 0304 00       		.uleb128 0
 5347 0305 CA200000 		.4byte	.LASF128
 5348 0309 05       		.byte	0x5
 5349 030a 00       		.uleb128 0
 5350 030b 0D1C0000 		.4byte	.LASF129
 5351 030f 05       		.byte	0x5
 5352 0310 00       		.uleb128 0
 5353 0311 A9450000 		.4byte	.LASF130
 5354 0315 05       		.byte	0x5
 5355 0316 00       		.uleb128 0
 5356 0317 9E290000 		.4byte	.LASF131
 5357 031b 05       		.byte	0x5
 5358 031c 00       		.uleb128 0
 5359 031d 3B2E0000 		.4byte	.LASF132
 5360 0321 05       		.byte	0x5
 5361 0322 00       		.uleb128 0
 5362 0323 6C2C0000 		.4byte	.LASF133
 5363 0327 05       		.byte	0x5
 5364 0328 00       		.uleb128 0
 5365 0329 45060000 		.4byte	.LASF134
 5366 032d 05       		.byte	0x5
 5367 032e 00       		.uleb128 0
 5368 032f 0A220000 		.4byte	.LASF135
 5369 0333 05       		.byte	0x5
 5370 0334 00       		.uleb128 0
 5371 0335 94580000 		.4byte	.LASF136
 5372 0339 05       		.byte	0x5
 5373 033a 00       		.uleb128 0
 5374 033b 3D8F0000 		.4byte	.LASF137
 5375 033f 05       		.byte	0x5
 5376 0340 00       		.uleb128 0
 5377 0341 B7720000 		.4byte	.LASF138
 5378 0345 05       		.byte	0x5
 5379 0346 00       		.uleb128 0
 5380 0347 8D5E0000 		.4byte	.LASF139
 5381 034b 05       		.byte	0x5
 5382 034c 00       		.uleb128 0
 5383 034d 248E0000 		.4byte	.LASF140
 5384 0351 05       		.byte	0x5
 5385 0352 00       		.uleb128 0
 5386 0353 F0400000 		.4byte	.LASF141
 5387 0357 05       		.byte	0x5
 5388 0358 00       		.uleb128 0
 5389 0359 E4040000 		.4byte	.LASF142
 5390 035d 05       		.byte	0x5
 5391 035e 00       		.uleb128 0
 5392 035f 707B0000 		.4byte	.LASF143
 5393 0363 05       		.byte	0x5
 5394 0364 00       		.uleb128 0
 5395 0365 2F870000 		.4byte	.LASF144
 5396 0369 05       		.byte	0x5
 5397 036a 00       		.uleb128 0
 5398 036b 2F140000 		.4byte	.LASF145
 5399 036f 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 135


 5400 0370 00       		.uleb128 0
 5401 0371 F3390000 		.4byte	.LASF146
 5402 0375 05       		.byte	0x5
 5403 0376 00       		.uleb128 0
 5404 0377 0C800000 		.4byte	.LASF147
 5405 037b 05       		.byte	0x5
 5406 037c 00       		.uleb128 0
 5407 037d 84330000 		.4byte	.LASF148
 5408 0381 05       		.byte	0x5
 5409 0382 00       		.uleb128 0
 5410 0383 20790000 		.4byte	.LASF149
 5411 0387 05       		.byte	0x5
 5412 0388 00       		.uleb128 0
 5413 0389 B16F0000 		.4byte	.LASF150
 5414 038d 05       		.byte	0x5
 5415 038e 00       		.uleb128 0
 5416 038f 5F070000 		.4byte	.LASF151
 5417 0393 05       		.byte	0x5
 5418 0394 00       		.uleb128 0
 5419 0395 BC850000 		.4byte	.LASF152
 5420 0399 05       		.byte	0x5
 5421 039a 00       		.uleb128 0
 5422 039b 46070000 		.4byte	.LASF153
 5423 039f 05       		.byte	0x5
 5424 03a0 00       		.uleb128 0
 5425 03a1 0B3B0000 		.4byte	.LASF154
 5426 03a5 05       		.byte	0x5
 5427 03a6 00       		.uleb128 0
 5428 03a7 F9220000 		.4byte	.LASF155
 5429 03ab 05       		.byte	0x5
 5430 03ac 00       		.uleb128 0
 5431 03ad 07510000 		.4byte	.LASF156
 5432 03b1 05       		.byte	0x5
 5433 03b2 00       		.uleb128 0
 5434 03b3 33070000 		.4byte	.LASF157
 5435 03b7 05       		.byte	0x5
 5436 03b8 00       		.uleb128 0
 5437 03b9 972C0000 		.4byte	.LASF158
 5438 03bd 05       		.byte	0x5
 5439 03be 00       		.uleb128 0
 5440 03bf CB740000 		.4byte	.LASF159
 5441 03c3 05       		.byte	0x5
 5442 03c4 00       		.uleb128 0
 5443 03c5 E23F0000 		.4byte	.LASF160
 5444 03c9 05       		.byte	0x5
 5445 03ca 00       		.uleb128 0
 5446 03cb 88430000 		.4byte	.LASF161
 5447 03cf 05       		.byte	0x5
 5448 03d0 00       		.uleb128 0
 5449 03d1 92600000 		.4byte	.LASF162
 5450 03d5 05       		.byte	0x5
 5451 03d6 00       		.uleb128 0
 5452 03d7 F5300000 		.4byte	.LASF163
 5453 03db 05       		.byte	0x5
 5454 03dc 00       		.uleb128 0
 5455 03dd AD120000 		.4byte	.LASF164
 5456 03e1 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 136


 5457 03e2 00       		.uleb128 0
 5458 03e3 555B0000 		.4byte	.LASF165
 5459 03e7 05       		.byte	0x5
 5460 03e8 00       		.uleb128 0
 5461 03e9 652A0000 		.4byte	.LASF166
 5462 03ed 05       		.byte	0x5
 5463 03ee 00       		.uleb128 0
 5464 03ef D53C0000 		.4byte	.LASF167
 5465 03f3 05       		.byte	0x5
 5466 03f4 00       		.uleb128 0
 5467 03f5 7F050000 		.4byte	.LASF168
 5468 03f9 05       		.byte	0x5
 5469 03fa 00       		.uleb128 0
 5470 03fb 20310000 		.4byte	.LASF169
 5471 03ff 05       		.byte	0x5
 5472 0400 00       		.uleb128 0
 5473 0401 0C100000 		.4byte	.LASF170
 5474 0405 05       		.byte	0x5
 5475 0406 00       		.uleb128 0
 5476 0407 13030000 		.4byte	.LASF171
 5477 040b 05       		.byte	0x5
 5478 040c 00       		.uleb128 0
 5479 040d 4E630000 		.4byte	.LASF172
 5480 0411 05       		.byte	0x5
 5481 0412 00       		.uleb128 0
 5482 0413 56550000 		.4byte	.LASF173
 5483 0417 05       		.byte	0x5
 5484 0418 00       		.uleb128 0
 5485 0419 04060000 		.4byte	.LASF174
 5486 041d 05       		.byte	0x5
 5487 041e 00       		.uleb128 0
 5488 041f E4460000 		.4byte	.LASF175
 5489 0423 05       		.byte	0x5
 5490 0424 00       		.uleb128 0
 5491 0425 8A1B0000 		.4byte	.LASF176
 5492 0429 05       		.byte	0x5
 5493 042a 00       		.uleb128 0
 5494 042b 44860000 		.4byte	.LASF177
 5495 042f 05       		.byte	0x5
 5496 0430 00       		.uleb128 0
 5497 0431 A6340000 		.4byte	.LASF178
 5498 0435 05       		.byte	0x5
 5499 0436 00       		.uleb128 0
 5500 0437 E1570000 		.4byte	.LASF179
 5501 043b 05       		.byte	0x5
 5502 043c 00       		.uleb128 0
 5503 043d F21B0000 		.4byte	.LASF180
 5504 0441 05       		.byte	0x5
 5505 0442 00       		.uleb128 0
 5506 0443 2F710000 		.4byte	.LASF181
 5507 0447 05       		.byte	0x5
 5508 0448 00       		.uleb128 0
 5509 0449 80730000 		.4byte	.LASF182
 5510 044d 05       		.byte	0x5
 5511 044e 00       		.uleb128 0
 5512 044f 16020000 		.4byte	.LASF183
 5513 0453 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 137


 5514 0454 00       		.uleb128 0
 5515 0455 7D000000 		.4byte	.LASF184
 5516 0459 05       		.byte	0x5
 5517 045a 00       		.uleb128 0
 5518 045b 0F230000 		.4byte	.LASF185
 5519 045f 05       		.byte	0x5
 5520 0460 00       		.uleb128 0
 5521 0461 4A010000 		.4byte	.LASF186
 5522 0465 05       		.byte	0x5
 5523 0466 00       		.uleb128 0
 5524 0467 134F0000 		.4byte	.LASF187
 5525 046b 05       		.byte	0x5
 5526 046c 00       		.uleb128 0
 5527 046d BF3B0000 		.4byte	.LASF188
 5528 0471 05       		.byte	0x5
 5529 0472 00       		.uleb128 0
 5530 0473 628B0000 		.4byte	.LASF189
 5531 0477 05       		.byte	0x5
 5532 0478 00       		.uleb128 0
 5533 0479 D30D0000 		.4byte	.LASF190
 5534 047d 05       		.byte	0x5
 5535 047e 00       		.uleb128 0
 5536 047f CF3F0000 		.4byte	.LASF191
 5537 0483 05       		.byte	0x5
 5538 0484 00       		.uleb128 0
 5539 0485 7D2A0000 		.4byte	.LASF192
 5540 0489 05       		.byte	0x5
 5541 048a 00       		.uleb128 0
 5542 048b A82A0000 		.4byte	.LASF193
 5543 048f 05       		.byte	0x5
 5544 0490 00       		.uleb128 0
 5545 0491 AB0B0000 		.4byte	.LASF194
 5546 0495 05       		.byte	0x5
 5547 0496 00       		.uleb128 0
 5548 0497 D7340000 		.4byte	.LASF195
 5549 049b 05       		.byte	0x5
 5550 049c 00       		.uleb128 0
 5551 049d B11D0000 		.4byte	.LASF196
 5552 04a1 05       		.byte	0x5
 5553 04a2 00       		.uleb128 0
 5554 04a3 7A620000 		.4byte	.LASF197
 5555 04a7 05       		.byte	0x5
 5556 04a8 00       		.uleb128 0
 5557 04a9 1B050000 		.4byte	.LASF198
 5558 04ad 05       		.byte	0x5
 5559 04ae 00       		.uleb128 0
 5560 04af 1B210000 		.4byte	.LASF199
 5561 04b3 05       		.byte	0x5
 5562 04b4 00       		.uleb128 0
 5563 04b5 AA3D0000 		.4byte	.LASF200
 5564 04b9 05       		.byte	0x5
 5565 04ba 00       		.uleb128 0
 5566 04bb C6500000 		.4byte	.LASF201
 5567 04bf 05       		.byte	0x5
 5568 04c0 00       		.uleb128 0
 5569 04c1 1B5E0000 		.4byte	.LASF202
 5570 04c5 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 138


 5571 04c6 00       		.uleb128 0
 5572 04c7 7E120000 		.4byte	.LASF203
 5573 04cb 05       		.byte	0x5
 5574 04cc 00       		.uleb128 0
 5575 04cd FC4D0000 		.4byte	.LASF204
 5576 04d1 05       		.byte	0x5
 5577 04d2 00       		.uleb128 0
 5578 04d3 6F460000 		.4byte	.LASF205
 5579 04d7 05       		.byte	0x5
 5580 04d8 00       		.uleb128 0
 5581 04d9 A14C0000 		.4byte	.LASF206
 5582 04dd 05       		.byte	0x5
 5583 04de 00       		.uleb128 0
 5584 04df 675E0000 		.4byte	.LASF207
 5585 04e3 05       		.byte	0x5
 5586 04e4 00       		.uleb128 0
 5587 04e5 C0030000 		.4byte	.LASF208
 5588 04e9 05       		.byte	0x5
 5589 04ea 00       		.uleb128 0
 5590 04eb 04560000 		.4byte	.LASF209
 5591 04ef 05       		.byte	0x5
 5592 04f0 00       		.uleb128 0
 5593 04f1 28590000 		.4byte	.LASF210
 5594 04f5 05       		.byte	0x5
 5595 04f6 00       		.uleb128 0
 5596 04f7 2D0D0000 		.4byte	.LASF211
 5597 04fb 05       		.byte	0x5
 5598 04fc 00       		.uleb128 0
 5599 04fd 518F0000 		.4byte	.LASF212
 5600 0501 05       		.byte	0x5
 5601 0502 00       		.uleb128 0
 5602 0503 22690000 		.4byte	.LASF213
 5603 0507 05       		.byte	0x5
 5604 0508 00       		.uleb128 0
 5605 0509 39650000 		.4byte	.LASF214
 5606 050d 05       		.byte	0x5
 5607 050e 00       		.uleb128 0
 5608 050f C6720000 		.4byte	.LASF215
 5609 0513 05       		.byte	0x5
 5610 0514 00       		.uleb128 0
 5611 0515 6A870000 		.4byte	.LASF216
 5612 0519 05       		.byte	0x5
 5613 051a 00       		.uleb128 0
 5614 051b 66830000 		.4byte	.LASF217
 5615 051f 05       		.byte	0x5
 5616 0520 00       		.uleb128 0
 5617 0521 07110000 		.4byte	.LASF218
 5618 0525 05       		.byte	0x5
 5619 0526 00       		.uleb128 0
 5620 0527 05710000 		.4byte	.LASF219
 5621 052b 05       		.byte	0x5
 5622 052c 00       		.uleb128 0
 5623 052d 1B8B0000 		.4byte	.LASF220
 5624 0531 05       		.byte	0x5
 5625 0532 00       		.uleb128 0
 5626 0533 F6080000 		.4byte	.LASF221
 5627 0537 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 139


 5628 0538 00       		.uleb128 0
 5629 0539 E7430000 		.4byte	.LASF222
 5630 053d 05       		.byte	0x5
 5631 053e 00       		.uleb128 0
 5632 053f 93820000 		.4byte	.LASF223
 5633 0543 05       		.byte	0x5
 5634 0544 00       		.uleb128 0
 5635 0545 19180000 		.4byte	.LASF224
 5636 0549 05       		.byte	0x5
 5637 054a 00       		.uleb128 0
 5638 054b CA7E0000 		.4byte	.LASF225
 5639 054f 05       		.byte	0x5
 5640 0550 00       		.uleb128 0
 5641 0551 968F0000 		.4byte	.LASF226
 5642 0555 05       		.byte	0x5
 5643 0556 00       		.uleb128 0
 5644 0557 98200000 		.4byte	.LASF227
 5645 055b 05       		.byte	0x5
 5646 055c 00       		.uleb128 0
 5647 055d 17650000 		.4byte	.LASF228
 5648 0561 05       		.byte	0x5
 5649 0562 00       		.uleb128 0
 5650 0563 39720000 		.4byte	.LASF229
 5651 0567 05       		.byte	0x5
 5652 0568 00       		.uleb128 0
 5653 0569 DE830000 		.4byte	.LASF230
 5654 056d 05       		.byte	0x5
 5655 056e 00       		.uleb128 0
 5656 056f 36300000 		.4byte	.LASF231
 5657 0573 05       		.byte	0x5
 5658 0574 00       		.uleb128 0
 5659 0575 30530000 		.4byte	.LASF232
 5660 0579 05       		.byte	0x5
 5661 057a 00       		.uleb128 0
 5662 057b EE5B0000 		.4byte	.LASF233
 5663 057f 05       		.byte	0x5
 5664 0580 00       		.uleb128 0
 5665 0581 62050000 		.4byte	.LASF234
 5666 0585 05       		.byte	0x5
 5667 0586 00       		.uleb128 0
 5668 0587 51150000 		.4byte	.LASF235
 5669 058b 05       		.byte	0x5
 5670 058c 00       		.uleb128 0
 5671 058d A9130000 		.4byte	.LASF236
 5672 0591 05       		.byte	0x5
 5673 0592 00       		.uleb128 0
 5674 0593 12750000 		.4byte	.LASF237
 5675 0597 05       		.byte	0x5
 5676 0598 00       		.uleb128 0
 5677 0599 6E610000 		.4byte	.LASF238
 5678 059d 05       		.byte	0x5
 5679 059e 00       		.uleb128 0
 5680 059f C43A0000 		.4byte	.LASF239
 5681 05a3 05       		.byte	0x5
 5682 05a4 00       		.uleb128 0
 5683 05a5 04850000 		.4byte	.LASF240
 5684 05a9 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 140


 5685 05aa 00       		.uleb128 0
 5686 05ab E5450000 		.4byte	.LASF241
 5687 05af 05       		.byte	0x5
 5688 05b0 00       		.uleb128 0
 5689 05b1 C9130000 		.4byte	.LASF242
 5690 05b5 05       		.byte	0x5
 5691 05b6 00       		.uleb128 0
 5692 05b7 4C320000 		.4byte	.LASF243
 5693 05bb 05       		.byte	0x5
 5694 05bc 00       		.uleb128 0
 5695 05bd 6F550000 		.4byte	.LASF244
 5696 05c1 05       		.byte	0x5
 5697 05c2 00       		.uleb128 0
 5698 05c3 D2530000 		.4byte	.LASF245
 5699 05c7 05       		.byte	0x5
 5700 05c8 00       		.uleb128 0
 5701 05c9 60410000 		.4byte	.LASF246
 5702 05cd 05       		.byte	0x5
 5703 05ce 00       		.uleb128 0
 5704 05cf 5E100000 		.4byte	.LASF247
 5705 05d3 05       		.byte	0x5
 5706 05d4 00       		.uleb128 0
 5707 05d5 6A7F0000 		.4byte	.LASF248
 5708 05d9 05       		.byte	0x5
 5709 05da 00       		.uleb128 0
 5710 05db 15660000 		.4byte	.LASF249
 5711 05df 05       		.byte	0x5
 5712 05e0 00       		.uleb128 0
 5713 05e1 ED010000 		.4byte	.LASF250
 5714 05e5 05       		.byte	0x5
 5715 05e6 00       		.uleb128 0
 5716 05e7 DC5E0000 		.4byte	.LASF251
 5717 05eb 05       		.byte	0x5
 5718 05ec 00       		.uleb128 0
 5719 05ed 94630000 		.4byte	.LASF252
 5720 05f1 05       		.byte	0x5
 5721 05f2 00       		.uleb128 0
 5722 05f3 2F470000 		.4byte	.LASF253
 5723 05f7 05       		.byte	0x5
 5724 05f8 00       		.uleb128 0
 5725 05f9 F8680000 		.4byte	.LASF254
 5726 05fd 05       		.byte	0x5
 5727 05fe 00       		.uleb128 0
 5728 05ff 1F850000 		.4byte	.LASF255
 5729 0603 05       		.byte	0x5
 5730 0604 00       		.uleb128 0
 5731 0605 E96C0000 		.4byte	.LASF256
 5732 0609 05       		.byte	0x5
 5733 060a 00       		.uleb128 0
 5734 060b 963D0000 		.4byte	.LASF257
 5735 060f 05       		.byte	0x5
 5736 0610 00       		.uleb128 0
 5737 0611 C6010000 		.4byte	.LASF258
 5738 0615 05       		.byte	0x5
 5739 0616 00       		.uleb128 0
 5740 0617 B4350000 		.4byte	.LASF259
 5741 061b 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 141


 5742 061c 00       		.uleb128 0
 5743 061d DA1D0000 		.4byte	.LASF260
 5744 0621 05       		.byte	0x5
 5745 0622 00       		.uleb128 0
 5746 0623 DF230000 		.4byte	.LASF261
 5747 0627 05       		.byte	0x5
 5748 0628 00       		.uleb128 0
 5749 0629 207E0000 		.4byte	.LASF262
 5750 062d 05       		.byte	0x5
 5751 062e 00       		.uleb128 0
 5752 062f 42800000 		.4byte	.LASF263
 5753 0633 05       		.byte	0x5
 5754 0634 00       		.uleb128 0
 5755 0635 36050000 		.4byte	.LASF264
 5756 0639 05       		.byte	0x5
 5757 063a 00       		.uleb128 0
 5758 063b E82C0000 		.4byte	.LASF265
 5759 063f 05       		.byte	0x5
 5760 0640 00       		.uleb128 0
 5761 0641 D1370000 		.4byte	.LASF266
 5762 0645 05       		.byte	0x5
 5763 0646 00       		.uleb128 0
 5764 0647 6F6C0000 		.4byte	.LASF267
 5765 064b 05       		.byte	0x5
 5766 064c 00       		.uleb128 0
 5767 064d D5880000 		.4byte	.LASF268
 5768 0651 05       		.byte	0x5
 5769 0652 00       		.uleb128 0
 5770 0653 F18D0000 		.4byte	.LASF269
 5771 0657 05       		.byte	0x5
 5772 0658 00       		.uleb128 0
 5773 0659 4C0E0000 		.4byte	.LASF270
 5774 065d 05       		.byte	0x5
 5775 065e 00       		.uleb128 0
 5776 065f C1050000 		.4byte	.LASF271
 5777 0663 05       		.byte	0x5
 5778 0664 00       		.uleb128 0
 5779 0665 2C640000 		.4byte	.LASF272
 5780 0669 05       		.byte	0x5
 5781 066a 00       		.uleb128 0
 5782 066b 4B690000 		.4byte	.LASF273
 5783 066f 05       		.byte	0x5
 5784 0670 00       		.uleb128 0
 5785 0671 B0220000 		.4byte	.LASF274
 5786 0675 05       		.byte	0x5
 5787 0676 00       		.uleb128 0
 5788 0677 3A030000 		.4byte	.LASF275
 5789 067b 05       		.byte	0x5
 5790 067c 00       		.uleb128 0
 5791 067d 47550000 		.4byte	.LASF276
 5792 0681 05       		.byte	0x5
 5793 0682 00       		.uleb128 0
 5794 0683 CD460000 		.4byte	.LASF277
 5795 0687 05       		.byte	0x5
 5796 0688 00       		.uleb128 0
 5797 0689 5D0F0000 		.4byte	.LASF278
 5798 068d 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 142


 5799 068e 00       		.uleb128 0
 5800 068f 48640000 		.4byte	.LASF279
 5801 0693 05       		.byte	0x5
 5802 0694 00       		.uleb128 0
 5803 0695 220E0000 		.4byte	.LASF280
 5804 0699 05       		.byte	0x5
 5805 069a 00       		.uleb128 0
 5806 069b 6F6D0000 		.4byte	.LASF281
 5807 069f 05       		.byte	0x5
 5808 06a0 00       		.uleb128 0
 5809 06a1 E5500000 		.4byte	.LASF282
 5810 06a5 05       		.byte	0x5
 5811 06a6 00       		.uleb128 0
 5812 06a7 38830000 		.4byte	.LASF283
 5813 06ab 05       		.byte	0x5
 5814 06ac 00       		.uleb128 0
 5815 06ad C7660000 		.4byte	.LASF284
 5816 06b1 05       		.byte	0x5
 5817 06b2 00       		.uleb128 0
 5818 06b3 816B0000 		.4byte	.LASF285
 5819 06b7 05       		.byte	0x5
 5820 06b8 00       		.uleb128 0
 5821 06b9 D1290000 		.4byte	.LASF286
 5822 06bd 05       		.byte	0x5
 5823 06be 00       		.uleb128 0
 5824 06bf 94100000 		.4byte	.LASF287
 5825 06c3 05       		.byte	0x5
 5826 06c4 00       		.uleb128 0
 5827 06c5 A3170000 		.4byte	.LASF288
 5828 06c9 05       		.byte	0x5
 5829 06ca 00       		.uleb128 0
 5830 06cb EF3B0000 		.4byte	.LASF289
 5831 06cf 05       		.byte	0x5
 5832 06d0 00       		.uleb128 0
 5833 06d1 272C0000 		.4byte	.LASF290
 5834 06d5 05       		.byte	0x5
 5835 06d6 00       		.uleb128 0
 5836 06d7 1E0D0000 		.4byte	.LASF291
 5837 06db 05       		.byte	0x5
 5838 06dc 00       		.uleb128 0
 5839 06dd F4170000 		.4byte	.LASF292
 5840 06e1 05       		.byte	0x5
 5841 06e2 00       		.uleb128 0
 5842 06e3 4E5C0000 		.4byte	.LASF293
 5843 06e7 05       		.byte	0x5
 5844 06e8 00       		.uleb128 0
 5845 06e9 43000000 		.4byte	.LASF294
 5846 06ed 05       		.byte	0x5
 5847 06ee 00       		.uleb128 0
 5848 06ef E6840000 		.4byte	.LASF295
 5849 06f3 05       		.byte	0x5
 5850 06f4 00       		.uleb128 0
 5851 06f5 26580000 		.4byte	.LASF296
 5852 06f9 05       		.byte	0x5
 5853 06fa 00       		.uleb128 0
 5854 06fb 18280000 		.4byte	.LASF297
 5855 06ff 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 143


 5856 0700 00       		.uleb128 0
 5857 0701 0D150000 		.4byte	.LASF298
 5858 0705 05       		.byte	0x5
 5859 0706 00       		.uleb128 0
 5860 0707 B5760000 		.4byte	.LASF299
 5861 070b 05       		.byte	0x5
 5862 070c 00       		.uleb128 0
 5863 070d E21B0000 		.4byte	.LASF300
 5864 0711 05       		.byte	0x5
 5865 0712 00       		.uleb128 0
 5866 0713 107E0000 		.4byte	.LASF301
 5867 0717 05       		.byte	0x5
 5868 0718 00       		.uleb128 0
 5869 0719 93720000 		.4byte	.LASF302
 5870 071d 05       		.byte	0x5
 5871 071e 00       		.uleb128 0
 5872 071f 6E500000 		.4byte	.LASF303
 5873 0723 05       		.byte	0x5
 5874 0724 00       		.uleb128 0
 5875 0725 8E890000 		.4byte	.LASF304
 5876 0729 05       		.byte	0x5
 5877 072a 00       		.uleb128 0
 5878 072b 24770000 		.4byte	.LASF305
 5879 072f 05       		.byte	0x5
 5880 0730 00       		.uleb128 0
 5881 0731 EE000000 		.4byte	.LASF306
 5882 0735 05       		.byte	0x5
 5883 0736 00       		.uleb128 0
 5884 0737 34080000 		.4byte	.LASF307
 5885 073b 05       		.byte	0x5
 5886 073c 00       		.uleb128 0
 5887 073d 28280000 		.4byte	.LASF308
 5888 0741 05       		.byte	0x5
 5889 0742 00       		.uleb128 0
 5890 0743 F5600000 		.4byte	.LASF309
 5891 0747 05       		.byte	0x5
 5892 0748 00       		.uleb128 0
 5893 0749 30160000 		.4byte	.LASF310
 5894 074d 05       		.byte	0x5
 5895 074e 00       		.uleb128 0
 5896 074f E7580000 		.4byte	.LASF311
 5897 0753 05       		.byte	0x5
 5898 0754 00       		.uleb128 0
 5899 0755 CE400000 		.4byte	.LASF312
 5900 0759 05       		.byte	0x5
 5901 075a 00       		.uleb128 0
 5902 075b F91D0000 		.4byte	.LASF313
 5903 075f 05       		.byte	0x5
 5904 0760 00       		.uleb128 0
 5905 0761 6A800000 		.4byte	.LASF314
 5906 0765 05       		.byte	0x5
 5907 0766 00       		.uleb128 0
 5908 0767 03300000 		.4byte	.LASF315
 5909 076b 05       		.byte	0x5
 5910 076c 00       		.uleb128 0
 5911 076d 706E0000 		.4byte	.LASF316
 5912 0771 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 144


 5913 0772 00       		.uleb128 0
 5914 0773 11470000 		.4byte	.LASF317
 5915 0777 05       		.byte	0x5
 5916 0778 00       		.uleb128 0
 5917 0779 DF290000 		.4byte	.LASF318
 5918 077d 05       		.byte	0x5
 5919 077e 00       		.uleb128 0
 5920 077f 57300000 		.4byte	.LASF319
 5921 0783 05       		.byte	0x5
 5922 0784 00       		.uleb128 0
 5923 0785 DF370000 		.4byte	.LASF320
 5924 0789 05       		.byte	0x5
 5925 078a 00       		.uleb128 0
 5926 078b 8F3B0000 		.4byte	.LASF321
 5927 078f 05       		.byte	0x5
 5928 0790 00       		.uleb128 0
 5929 0791 A4270000 		.4byte	.LASF322
 5930 0795 05       		.byte	0x5
 5931 0796 00       		.uleb128 0
 5932 0797 064D0000 		.4byte	.LASF323
 5933 079b 05       		.byte	0x5
 5934 079c 00       		.uleb128 0
 5935 079d EB7E0000 		.4byte	.LASF324
 5936 07a1 05       		.byte	0x5
 5937 07a2 00       		.uleb128 0
 5938 07a3 24560000 		.4byte	.LASF325
 5939 07a7 05       		.byte	0x5
 5940 07a8 00       		.uleb128 0
 5941 07a9 00380000 		.4byte	.LASF326
 5942 07ad 05       		.byte	0x5
 5943 07ae 00       		.uleb128 0
 5944 07af BF430000 		.4byte	.LASF327
 5945 07b3 05       		.byte	0x5
 5946 07b4 00       		.uleb128 0
 5947 07b5 FF7E0000 		.4byte	.LASF328
 5948 07b9 05       		.byte	0x5
 5949 07ba 00       		.uleb128 0
 5950 07bb 2D5E0000 		.4byte	.LASF329
 5951 07bf 05       		.byte	0x5
 5952 07c0 00       		.uleb128 0
 5953 07c1 A58A0000 		.4byte	.LASF330
 5954 07c5 05       		.byte	0x5
 5955 07c6 00       		.uleb128 0
 5956 07c7 15380000 		.4byte	.LASF331
 5957 07cb 05       		.byte	0x5
 5958 07cc 00       		.uleb128 0
 5959 07cd E4590000 		.4byte	.LASF332
 5960 07d1 05       		.byte	0x5
 5961 07d2 00       		.uleb128 0
 5962 07d3 57390000 		.4byte	.LASF333
 5963 07d7 05       		.byte	0x5
 5964 07d8 00       		.uleb128 0
 5965 07d9 74060000 		.4byte	.LASF334
 5966 07dd 05       		.byte	0x5
 5967 07de 00       		.uleb128 0
 5968 07df 345A0000 		.4byte	.LASF335
 5969 07e3 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 145


 5970 07e4 00       		.uleb128 0
 5971 07e5 82470000 		.4byte	.LASF336
 5972 07e9 05       		.byte	0x5
 5973 07ea 00       		.uleb128 0
 5974 07eb 703E0000 		.4byte	.LASF337
 5975 07ef 05       		.byte	0x5
 5976 07f0 00       		.uleb128 0
 5977 07f1 8B870000 		.4byte	.LASF338
 5978 07f5 05       		.byte	0x5
 5979 07f6 00       		.uleb128 0
 5980 07f7 D2230000 		.4byte	.LASF339
 5981 07fb 05       		.byte	0x5
 5982 07fc 00       		.uleb128 0
 5983 07fd 485D0000 		.4byte	.LASF340
 5984 0801 05       		.byte	0x5
 5985 0802 00       		.uleb128 0
 5986 0803 0E880000 		.4byte	.LASF341
 5987 0807 05       		.byte	0x5
 5988 0808 00       		.uleb128 0
 5989 0809 2E6C0000 		.4byte	.LASF342
 5990 080d 05       		.byte	0x5
 5991 080e 00       		.uleb128 0
 5992 080f 9F3C0000 		.4byte	.LASF343
 5993 0813 05       		.byte	0x5
 5994 0814 00       		.uleb128 0
 5995 0815 D9100000 		.4byte	.LASF344
 5996 0819 05       		.byte	0x5
 5997 081a 00       		.uleb128 0
 5998 081b 106B0000 		.4byte	.LASF345
 5999 081f 05       		.byte	0x5
 6000 0820 00       		.uleb128 0
 6001 0821 95050000 		.4byte	.LASF346
 6002 0825 05       		.byte	0x5
 6003 0826 00       		.uleb128 0
 6004 0827 03180000 		.4byte	.LASF347
 6005 082b 05       		.byte	0x5
 6006 082c 00       		.uleb128 0
 6007 082d C8540000 		.4byte	.LASF348
 6008 0831 05       		.byte	0x5
 6009 0832 00       		.uleb128 0
 6010 0833 97310000 		.4byte	.LASF349
 6011 0837 05       		.byte	0x5
 6012 0838 00       		.uleb128 0
 6013 0839 648F0000 		.4byte	.LASF350
 6014 083d 05       		.byte	0x5
 6015 083e 00       		.uleb128 0
 6016 083f 1C7B0000 		.4byte	.LASF351
 6017 0843 05       		.byte	0x5
 6018 0844 00       		.uleb128 0
 6019 0845 197F0000 		.4byte	.LASF352
 6020 0849 05       		.byte	0x5
 6021 084a 00       		.uleb128 0
 6022 084b 056C0000 		.4byte	.LASF353
 6023 084f 05       		.byte	0x5
 6024 0850 00       		.uleb128 0
 6025 0851 575F0000 		.4byte	.LASF354
 6026 0855 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 146


 6027              		.section	.debug_macro,"G",%progbits,wm4.newlib.h.8.f2807fe490bc07755df529420a1a6ce0,comdat
 6028              	.Ldebug_macro2:
 6029 0000 0400     		.2byte	0x4
 6030 0002 00       		.byte	0
 6031 0003 05       		.byte	0x5
 6032 0004 08       		.uleb128 0x8
 6033 0005 A2100000 		.4byte	.LASF358
 6034 0009 05       		.byte	0x5
 6035 000a 0E       		.uleb128 0xe
 6036 000b B73F0000 		.4byte	.LASF359
 6037 000f 05       		.byte	0x5
 6038 0010 15       		.uleb128 0x15
 6039 0011 3E8E0000 		.4byte	.LASF360
 6040 0015 05       		.byte	0x5
 6041 0016 18       		.uleb128 0x18
 6042 0017 387C0000 		.4byte	.LASF361
 6043 001b 05       		.byte	0x5
 6044 001c 28       		.uleb128 0x28
 6045 001d 192C0000 		.4byte	.LASF362
 6046 0021 05       		.byte	0x5
 6047 0022 32       		.uleb128 0x32
 6048 0023 C8730000 		.4byte	.LASF363
 6049 0027 05       		.byte	0x5
 6050 0028 36       		.uleb128 0x36
 6051 0029 46470000 		.4byte	.LASF364
 6052 002d 05       		.byte	0x5
 6053 002e 39       		.uleb128 0x39
 6054 002f 69230000 		.4byte	.LASF365
 6055 0033 05       		.byte	0x5
 6056 0034 3C       		.uleb128 0x3c
 6057 0035 614C0000 		.4byte	.LASF366
 6058 0039 05       		.byte	0x5
 6059 003a 3F       		.uleb128 0x3f
 6060 003b D5140000 		.4byte	.LASF367
 6061 003f 05       		.byte	0x5
 6062 0040 48       		.uleb128 0x48
 6063 0041 EF530000 		.4byte	.LASF368
 6064 0045 05       		.byte	0x5
 6065 0046 4B       		.uleb128 0x4b
 6066 0047 A45D0000 		.4byte	.LASF369
 6067 004b 05       		.byte	0x5
 6068 004c 4E       		.uleb128 0x4e
 6069 004d 8F2E0000 		.4byte	.LASF370
 6070 0051 05       		.byte	0x5
 6071 0052 51       		.uleb128 0x51
 6072 0053 F8570000 		.4byte	.LASF371
 6073 0057 00       		.byte	0
 6074              		.section	.debug_macro,"G",%progbits,wm4.features.h.22.2e382148a0560adabf236cddd4e880f4,comdat
 6075              	.Ldebug_macro3:
 6076 0000 0400     		.2byte	0x4
 6077 0002 00       		.byte	0
 6078 0003 05       		.byte	0x5
 6079 0004 16       		.uleb128 0x16
 6080 0005 48260000 		.4byte	.LASF373
 6081 0009 05       		.byte	0x5
 6082 000a 1F       		.uleb128 0x1f
 6083 000b B01B0000 		.4byte	.LASF374
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 147


 6084 000f 05       		.byte	0x5
 6085 0010 20       		.uleb128 0x20
 6086 0011 48520000 		.4byte	.LASF375
 6087 0015 05       		.byte	0x5
 6088 0016 25       		.uleb128 0x25
 6089 0017 2A120000 		.4byte	.LASF376
 6090 001b 05       		.byte	0x5
 6091 001c 2C       		.uleb128 0x2c
 6092 001d E37D0000 		.4byte	.LASF377
 6093 0021 00       		.byte	0
 6094              		.section	.debug_macro,"G",%progbits,wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff,comdat
 6095              	.Ldebug_macro4:
 6096 0000 0400     		.2byte	0x4
 6097 0002 00       		.byte	0
 6098 0003 05       		.byte	0x5
 6099 0004 DC01     		.uleb128 0xdc
 6100 0006 C10D0000 		.4byte	.LASF378
 6101 000a 06       		.byte	0x6
 6102 000b E201     		.uleb128 0xe2
 6103 000d 5E110000 		.4byte	.LASF379
 6104 0011 05       		.byte	0x5
 6105 0012 E601     		.uleb128 0xe6
 6106 0014 DE5A0000 		.4byte	.LASF380
 6107 0018 05       		.byte	0x5
 6108 0019 F801     		.uleb128 0xf8
 6109 001b B5430000 		.4byte	.LASF381
 6110 001f 05       		.byte	0x5
 6111 0020 FC01     		.uleb128 0xfc
 6112 0022 0C580000 		.4byte	.LASF382
 6113 0026 05       		.byte	0x5
 6114 0027 8302     		.uleb128 0x103
 6115 0029 CA210000 		.4byte	.LASF383
 6116 002d 05       		.byte	0x5
 6117 002e 8902     		.uleb128 0x109
 6118 0030 911A0000 		.4byte	.LASF384
 6119 0034 00       		.byte	0
 6120              		.section	.debug_macro,"G",%progbits,wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51,comdat
 6121              	.Ldebug_macro5:
 6122 0000 0400     		.2byte	0x4
 6123 0002 00       		.byte	0
 6124 0003 05       		.byte	0x5
 6125 0004 17       		.uleb128 0x17
 6126 0005 ED730000 		.4byte	.LASF385
 6127 0009 05       		.byte	0x5
 6128 000a 2C       		.uleb128 0x2c
 6129 000b 45590000 		.4byte	.LASF386
 6130 000f 05       		.byte	0x5
 6131 0010 2D       		.uleb128 0x2d
 6132 0011 332D0000 		.4byte	.LASF387
 6133 0015 05       		.byte	0x5
 6134 0016 2E       		.uleb128 0x2e
 6135 0017 06500000 		.4byte	.LASF388
 6136 001b 05       		.byte	0x5
 6137 001c 32       		.uleb128 0x32
 6138 001d 5E870000 		.4byte	.LASF389
 6139 0021 05       		.byte	0x5
 6140 0022 33       		.uleb128 0x33
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 148


 6141 0023 258C0000 		.4byte	.LASF390
 6142 0027 05       		.byte	0x5
 6143 0028 34       		.uleb128 0x34
 6144 0029 406D0000 		.4byte	.LASF391
 6145 002d 05       		.byte	0x5
 6146 002e 35       		.uleb128 0x35
 6147 002f C6120000 		.4byte	.LASF392
 6148 0033 05       		.byte	0x5
 6149 0034 36       		.uleb128 0x36
 6150 0035 BF230000 		.4byte	.LASF393
 6151 0039 05       		.byte	0x5
 6152 003a 37       		.uleb128 0x37
 6153 003b 5D2C0000 		.4byte	.LASF394
 6154 003f 05       		.byte	0x5
 6155 0040 38       		.uleb128 0x38
 6156 0041 B1470000 		.4byte	.LASF395
 6157 0045 05       		.byte	0x5
 6158 0046 39       		.uleb128 0x39
 6159 0047 3A7F0000 		.4byte	.LASF396
 6160 004b 05       		.byte	0x5
 6161 004c 40       		.uleb128 0x40
 6162 004d 0C550000 		.4byte	.LASF397
 6163 0051 05       		.byte	0x5
 6164 0052 41       		.uleb128 0x41
 6165 0053 A9060000 		.4byte	.LASF398
 6166 0057 05       		.byte	0x5
 6167 0058 42       		.uleb128 0x42
 6168 0059 05590000 		.4byte	.LASF399
 6169 005d 05       		.byte	0x5
 6170 005e 43       		.uleb128 0x43
 6171 005f 11240000 		.4byte	.LASF400
 6172 0063 05       		.byte	0x5
 6173 0064 45       		.uleb128 0x45
 6174 0065 F31E0000 		.4byte	.LASF401
 6175 0069 05       		.byte	0x5
 6176 006a 46       		.uleb128 0x46
 6177 006b 2C6A0000 		.4byte	.LASF402
 6178 006f 05       		.byte	0x5
 6179 0070 47       		.uleb128 0x47
 6180 0071 D66B0000 		.4byte	.LASF403
 6181 0075 05       		.byte	0x5
 6182 0076 49       		.uleb128 0x49
 6183 0077 50020000 		.4byte	.LASF404
 6184 007b 05       		.byte	0x5
 6185 007c 4C       		.uleb128 0x4c
 6186 007d C0190000 		.4byte	.LASF405
 6187 0081 05       		.byte	0x5
 6188 0082 65       		.uleb128 0x65
 6189 0083 83770000 		.4byte	.LASF406
 6190 0087 05       		.byte	0x5
 6191 0088 7B       		.uleb128 0x7b
 6192 0089 4E160000 		.4byte	.LASF407
 6193 008d 05       		.byte	0x5
 6194 008e 8301     		.uleb128 0x83
 6195 0090 E4140000 		.4byte	.LASF408
 6196 0094 05       		.byte	0x5
 6197 0095 8401     		.uleb128 0x84
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 149


 6198 0097 0F700000 		.4byte	.LASF409
 6199 009b 00       		.byte	0
 6200              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2,comdat
 6201              	.Ldebug_macro6:
 6202 0000 0400     		.2byte	0x4
 6203 0002 00       		.byte	0
 6204 0003 05       		.byte	0x5
 6205 0004 0D       		.uleb128 0xd
 6206 0005 C2290000 		.4byte	.LASF410
 6207 0009 05       		.byte	0x5
 6208 000a 0E       		.uleb128 0xe
 6209 000b 9D810000 		.4byte	.LASF411
 6210 000f 05       		.byte	0x5
 6211 0010 0F       		.uleb128 0xf
 6212 0011 7E3E0000 		.4byte	.LASF412
 6213 0015 00       		.byte	0
 6214              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635,comdat
 6215              	.Ldebug_macro7:
 6216 0000 0400     		.2byte	0x4
 6217 0002 00       		.byte	0
 6218 0003 05       		.byte	0x5
 6219 0004 B801     		.uleb128 0xb8
 6220 0006 F42B0000 		.4byte	.LASF413
 6221 000a 05       		.byte	0x5
 6222 000b B901     		.uleb128 0xb9
 6223 000d 570A0000 		.4byte	.LASF414
 6224 0011 05       		.byte	0x5
 6225 0012 BA01     		.uleb128 0xba
 6226 0014 DA5C0000 		.4byte	.LASF415
 6227 0018 05       		.byte	0x5
 6228 0019 BB01     		.uleb128 0xbb
 6229 001b 2F130000 		.4byte	.LASF416
 6230 001f 05       		.byte	0x5
 6231 0020 BC01     		.uleb128 0xbc
 6232 0022 C68A0000 		.4byte	.LASF417
 6233 0026 05       		.byte	0x5
 6234 0027 BD01     		.uleb128 0xbd
 6235 0029 050E0000 		.4byte	.LASF418
 6236 002d 05       		.byte	0x5
 6237 002e BE01     		.uleb128 0xbe
 6238 0030 A55E0000 		.4byte	.LASF419
 6239 0034 05       		.byte	0x5
 6240 0035 BF01     		.uleb128 0xbf
 6241 0037 A7470000 		.4byte	.LASF420
 6242 003b 05       		.byte	0x5
 6243 003c C001     		.uleb128 0xc0
 6244 003e 656A0000 		.4byte	.LASF421
 6245 0042 05       		.byte	0x5
 6246 0043 C101     		.uleb128 0xc1
 6247 0045 1F520000 		.4byte	.LASF422
 6248 0049 05       		.byte	0x5
 6249 004a C201     		.uleb128 0xc2
 6250 004c 1B640000 		.4byte	.LASF423
 6251 0050 05       		.byte	0x5
 6252 0051 C301     		.uleb128 0xc3
 6253 0053 27200000 		.4byte	.LASF424
 6254 0057 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 150


 6255 0058 C401     		.uleb128 0xc4
 6256 005a A2180000 		.4byte	.LASF425
 6257 005e 05       		.byte	0x5
 6258 005f C501     		.uleb128 0xc5
 6259 0061 74200000 		.4byte	.LASF426
 6260 0065 05       		.byte	0x5
 6261 0066 C601     		.uleb128 0xc6
 6262 0068 3B820000 		.4byte	.LASF427
 6263 006c 05       		.byte	0x5
 6264 006d C701     		.uleb128 0xc7
 6265 006f 8E6F0000 		.4byte	.LASF428
 6266 0073 05       		.byte	0x5
 6267 0074 CE01     		.uleb128 0xce
 6268 0076 410D0000 		.4byte	.LASF429
 6269 007a 06       		.byte	0x6
 6270 007b EA01     		.uleb128 0xea
 6271 007d 49300000 		.4byte	.LASF430
 6272 0081 05       		.byte	0x5
 6273 0082 8702     		.uleb128 0x107
 6274 0084 7E870000 		.4byte	.LASF431
 6275 0088 05       		.byte	0x5
 6276 0089 8802     		.uleb128 0x108
 6277 008b 6D0F0000 		.4byte	.LASF432
 6278 008f 05       		.byte	0x5
 6279 0090 8902     		.uleb128 0x109
 6280 0092 125B0000 		.4byte	.LASF433
 6281 0096 05       		.byte	0x5
 6282 0097 8A02     		.uleb128 0x10a
 6283 0099 AC820000 		.4byte	.LASF434
 6284 009d 05       		.byte	0x5
 6285 009e 8B02     		.uleb128 0x10b
 6286 00a0 CE6A0000 		.4byte	.LASF435
 6287 00a4 05       		.byte	0x5
 6288 00a5 8C02     		.uleb128 0x10c
 6289 00a7 154C0000 		.4byte	.LASF436
 6290 00ab 05       		.byte	0x5
 6291 00ac 8D02     		.uleb128 0x10d
 6292 00ae 736A0000 		.4byte	.LASF437
 6293 00b2 05       		.byte	0x5
 6294 00b3 8E02     		.uleb128 0x10e
 6295 00b5 95320000 		.4byte	.LASF438
 6296 00b9 05       		.byte	0x5
 6297 00ba 8F02     		.uleb128 0x10f
 6298 00bc 0A3D0000 		.4byte	.LASF439
 6299 00c0 05       		.byte	0x5
 6300 00c1 9002     		.uleb128 0x110
 6301 00c3 99680000 		.4byte	.LASF440
 6302 00c7 05       		.byte	0x5
 6303 00c8 9102     		.uleb128 0x111
 6304 00ca E35C0000 		.4byte	.LASF441
 6305 00ce 05       		.byte	0x5
 6306 00cf 9202     		.uleb128 0x112
 6307 00d1 6F0D0000 		.4byte	.LASF442
 6308 00d5 05       		.byte	0x5
 6309 00d6 9302     		.uleb128 0x113
 6310 00d8 C56B0000 		.4byte	.LASF443
 6311 00dc 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 151


 6312 00dd 9402     		.uleb128 0x114
 6313 00df 3C6C0000 		.4byte	.LASF444
 6314 00e3 05       		.byte	0x5
 6315 00e4 9502     		.uleb128 0x115
 6316 00e6 06540000 		.4byte	.LASF445
 6317 00ea 06       		.byte	0x6
 6318 00eb A202     		.uleb128 0x122
 6319 00ed 58830000 		.4byte	.LASF446
 6320 00f1 06       		.byte	0x6
 6321 00f2 D702     		.uleb128 0x157
 6322 00f4 FF0B0000 		.4byte	.LASF447
 6323 00f8 06       		.byte	0x6
 6324 00f9 8D03     		.uleb128 0x18d
 6325 00fb 43100000 		.4byte	.LASF448
 6326 00ff 05       		.byte	0x5
 6327 0100 9203     		.uleb128 0x192
 6328 0102 F5340000 		.4byte	.LASF449
 6329 0106 06       		.byte	0x6
 6330 0107 9803     		.uleb128 0x198
 6331 0109 DE350000 		.4byte	.LASF450
 6332 010d 00       		.byte	0
 6333              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734,comdat
 6334              	.Ldebug_macro8:
 6335 0000 0400     		.2byte	0x4
 6336 0002 00       		.byte	0
 6337 0003 05       		.byte	0x5
 6338 0004 27       		.uleb128 0x27
 6339 0005 29440000 		.4byte	.LASF452
 6340 0009 05       		.byte	0x5
 6341 000a 28       		.uleb128 0x28
 6342 000b 795E0000 		.4byte	.LASF453
 6343 000f 05       		.byte	0x5
 6344 0010 2A       		.uleb128 0x2a
 6345 0011 FB430000 		.4byte	.LASF454
 6346 0015 05       		.byte	0x5
 6347 0016 8801     		.uleb128 0x88
 6348 0018 FF480000 		.4byte	.LASF455
 6349 001c 05       		.byte	0x5
 6350 001d 8901     		.uleb128 0x89
 6351 001f F5420000 		.4byte	.LASF456
 6352 0023 05       		.byte	0x5
 6353 0024 8A01     		.uleb128 0x8a
 6354 0026 3B550000 		.4byte	.LASF457
 6355 002a 05       		.byte	0x5
 6356 002b 8B01     		.uleb128 0x8b
 6357 002d 3B640000 		.4byte	.LASF458
 6358 0031 05       		.byte	0x5
 6359 0032 8C01     		.uleb128 0x8c
 6360 0034 877B0000 		.4byte	.LASF459
 6361 0038 05       		.byte	0x5
 6362 0039 8D01     		.uleb128 0x8d
 6363 003b EF0C0000 		.4byte	.LASF460
 6364 003f 05       		.byte	0x5
 6365 0040 8E01     		.uleb128 0x8e
 6366 0042 FC6A0000 		.4byte	.LASF461
 6367 0046 05       		.byte	0x5
 6368 0047 8F01     		.uleb128 0x8f
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 152


 6369 0049 055C0000 		.4byte	.LASF462
 6370 004d 06       		.byte	0x6
 6371 004e 9E01     		.uleb128 0x9e
 6372 0050 5F7B0000 		.4byte	.LASF463
 6373 0054 06       		.byte	0x6
 6374 0055 EA01     		.uleb128 0xea
 6375 0057 49300000 		.4byte	.LASF430
 6376 005b 06       		.byte	0x6
 6377 005c D702     		.uleb128 0x157
 6378 005e FF0B0000 		.4byte	.LASF447
 6379 0062 06       		.byte	0x6
 6380 0063 8D03     		.uleb128 0x18d
 6381 0065 43100000 		.4byte	.LASF448
 6382 0069 05       		.byte	0x5
 6383 006a 9203     		.uleb128 0x192
 6384 006c F5340000 		.4byte	.LASF449
 6385 0070 06       		.byte	0x6
 6386 0071 9803     		.uleb128 0x198
 6387 0073 DE350000 		.4byte	.LASF450
 6388 0077 05       		.byte	0x5
 6389 0078 9D03     		.uleb128 0x19d
 6390 007a 3B3F0000 		.4byte	.LASF464
 6391 007e 00       		.byte	0
 6392              		.section	.debug_macro,"G",%progbits,wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382,comdat
 6393              	.Ldebug_macro9:
 6394 0000 0400     		.2byte	0x4
 6395 0002 00       		.byte	0
 6396 0003 05       		.byte	0x5
 6397 0004 06       		.uleb128 0x6
 6398 0005 BB5B0000 		.4byte	.LASF467
 6399 0009 05       		.byte	0x5
 6400 000a 0F       		.uleb128 0xf
 6401 000b 754F0000 		.4byte	.LASF468
 6402 000f 05       		.byte	0x5
 6403 0010 21       		.uleb128 0x21
 6404 0011 AB3B0000 		.4byte	.LASF469
 6405 0015 05       		.byte	0x5
 6406 0016 2F       		.uleb128 0x2f
 6407 0017 392B0000 		.4byte	.LASF470
 6408 001b 05       		.byte	0x5
 6409 001c 45       		.uleb128 0x45
 6410 001d 3D200000 		.4byte	.LASF471
 6411 0021 05       		.byte	0x5
 6412 0022 5F       		.uleb128 0x5f
 6413 0023 7D600000 		.4byte	.LASF472
 6414 0027 05       		.byte	0x5
 6415 0028 7E       		.uleb128 0x7e
 6416 0029 B2560000 		.4byte	.LASF473
 6417 002d 05       		.byte	0x5
 6418 002e 9801     		.uleb128 0x98
 6419 0030 90140000 		.4byte	.LASF474
 6420 0034 05       		.byte	0x5
 6421 0035 AE01     		.uleb128 0xae
 6422 0037 99350000 		.4byte	.LASF475
 6423 003b 05       		.byte	0x5
 6424 003c C001     		.uleb128 0xc0
 6425 003e 184E0000 		.4byte	.LASF476
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 153


 6426 0042 06       		.byte	0x6
 6427 0043 D601     		.uleb128 0xd6
 6428 0045 77600000 		.4byte	.LASF477
 6429 0049 00       		.byte	0
 6430              		.section	.debug_macro,"G",%progbits,wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea,comdat
 6431              	.Ldebug_macro10:
 6432 0000 0400     		.2byte	0x4
 6433 0002 00       		.byte	0
 6434 0003 05       		.byte	0x5
 6435 0004 02       		.uleb128 0x2
 6436 0005 698E0000 		.4byte	.LASF478
 6437 0009 05       		.byte	0x5
 6438 000a 0B       		.uleb128 0xb
 6439 000b EA640000 		.4byte	.LASF479
 6440 000f 05       		.byte	0x5
 6441 0010 0C       		.uleb128 0xc
 6442 0011 73410000 		.4byte	.LASF480
 6443 0015 05       		.byte	0x5
 6444 0016 0D       		.uleb128 0xd
 6445 0017 5D580000 		.4byte	.LASF481
 6446 001b 05       		.byte	0x5
 6447 001c 0E       		.uleb128 0xe
 6448 001d 1A880000 		.4byte	.LASF482
 6449 0021 05       		.byte	0x5
 6450 0022 0F       		.uleb128 0xf
 6451 0023 C12E0000 		.4byte	.LASF483
 6452 0027 05       		.byte	0x5
 6453 0028 10       		.uleb128 0x10
 6454 0029 830C0000 		.4byte	.LASF484
 6455 002d 05       		.byte	0x5
 6456 002e 11       		.uleb128 0x11
 6457 002f F8440000 		.4byte	.LASF485
 6458 0033 05       		.byte	0x5
 6459 0034 12       		.uleb128 0x12
 6460 0035 27330000 		.4byte	.LASF486
 6461 0039 05       		.byte	0x5
 6462 003a 13       		.uleb128 0x13
 6463 003b 3D2A0000 		.4byte	.LASF487
 6464 003f 05       		.byte	0x5
 6465 0040 14       		.uleb128 0x14
 6466 0041 6B5F0000 		.4byte	.LASF488
 6467 0045 05       		.byte	0x5
 6468 0046 15       		.uleb128 0x15
 6469 0047 98490000 		.4byte	.LASF489
 6470 004b 05       		.byte	0x5
 6471 004c 16       		.uleb128 0x16
 6472 004d F67B0000 		.4byte	.LASF490
 6473 0051 00       		.byte	0
 6474              		.section	.debug_macro,"G",%progbits,wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08,comdat
 6475              	.Ldebug_macro11:
 6476 0000 0400     		.2byte	0x4
 6477 0002 00       		.byte	0
 6478 0003 05       		.byte	0x5
 6479 0004 36       		.uleb128 0x36
 6480 0005 A6380000 		.4byte	.LASF491
 6481 0009 06       		.byte	0x6
 6482 000a 38       		.uleb128 0x38
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 154


 6483 000b 41750000 		.4byte	.LASF492
 6484 000f 05       		.byte	0x5
 6485 0010 42       		.uleb128 0x42
 6486 0011 F5840000 		.4byte	.LASF493
 6487 0015 00       		.byte	0
 6488              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6,comdat
 6489              	.Ldebug_macro12:
 6490 0000 0400     		.2byte	0x4
 6491 0002 00       		.byte	0
 6492 0003 06       		.byte	0x6
 6493 0004 9E01     		.uleb128 0x9e
 6494 0006 5F7B0000 		.4byte	.LASF463
 6495 000a 06       		.byte	0x6
 6496 000b EA01     		.uleb128 0xea
 6497 000d 49300000 		.4byte	.LASF430
 6498 0011 06       		.byte	0x6
 6499 0012 D702     		.uleb128 0x157
 6500 0014 FF0B0000 		.4byte	.LASF447
 6501 0018 05       		.byte	0x5
 6502 0019 DC02     		.uleb128 0x15c
 6503 001b 7A290000 		.4byte	.LASF494
 6504 001f 06       		.byte	0x6
 6505 0020 E302     		.uleb128 0x163
 6506 0022 21220000 		.4byte	.LASF495
 6507 0026 06       		.byte	0x6
 6508 0027 8D03     		.uleb128 0x18d
 6509 0029 43100000 		.4byte	.LASF448
 6510 002d 05       		.byte	0x5
 6511 002e 9203     		.uleb128 0x192
 6512 0030 F5340000 		.4byte	.LASF449
 6513 0034 06       		.byte	0x6
 6514 0035 9803     		.uleb128 0x198
 6515 0037 DE350000 		.4byte	.LASF450
 6516 003b 05       		.byte	0x5
 6517 003c 9D03     		.uleb128 0x19d
 6518 003e 3B3F0000 		.4byte	.LASF464
 6519 0042 00       		.byte	0
 6520              		.section	.debug_macro,"G",%progbits,wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43,comdat
 6521              	.Ldebug_macro13:
 6522 0000 0400     		.2byte	0x4
 6523 0002 00       		.byte	0
 6524 0003 05       		.byte	0x5
 6525 0004 11       		.uleb128 0x11
 6526 0005 BD7B0000 		.4byte	.LASF496
 6527 0009 05       		.byte	0x5
 6528 000a 15       		.uleb128 0x15
 6529 000b 826F0000 		.4byte	.LASF497
 6530 000f 05       		.byte	0x5
 6531 0010 46       		.uleb128 0x46
 6532 0011 16580000 		.4byte	.LASF498
 6533 0015 05       		.byte	0x5
 6534 0016 62       		.uleb128 0x62
 6535 0017 DB8C0000 		.4byte	.LASF499
 6536 001b 05       		.byte	0x5
 6537 001c 68       		.uleb128 0x68
 6538 001d 72760000 		.4byte	.LASF500
 6539 0021 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 155


 6540 0022 B001     		.uleb128 0xb0
 6541 0024 C6440000 		.4byte	.LASF501
 6542 0028 05       		.byte	0x5
 6543 0029 B602     		.uleb128 0x136
 6544 002b D46E0000 		.4byte	.LASF502
 6545 002f 05       		.byte	0x5
 6546 0030 B702     		.uleb128 0x137
 6547 0032 48410000 		.4byte	.LASF503
 6548 0036 05       		.byte	0x5
 6549 0037 B802     		.uleb128 0x138
 6550 0039 311E0000 		.4byte	.LASF504
 6551 003d 05       		.byte	0x5
 6552 003e B902     		.uleb128 0x139
 6553 0040 A3790000 		.4byte	.LASF505
 6554 0044 05       		.byte	0x5
 6555 0045 BA02     		.uleb128 0x13a
 6556 0047 D9510000 		.4byte	.LASF506
 6557 004b 05       		.byte	0x5
 6558 004c BB02     		.uleb128 0x13b
 6559 004e F4540000 		.4byte	.LASF507
 6560 0052 05       		.byte	0x5
 6561 0053 BC02     		.uleb128 0x13c
 6562 0055 818A0000 		.4byte	.LASF508
 6563 0059 05       		.byte	0x5
 6564 005a C802     		.uleb128 0x148
 6565 005c 7A0F0000 		.4byte	.LASF509
 6566 0060 05       		.byte	0x5
 6567 0061 C902     		.uleb128 0x149
 6568 0063 A38E0000 		.4byte	.LASF510
 6569 0067 05       		.byte	0x5
 6570 0068 CA02     		.uleb128 0x14a
 6571 006a 5E030000 		.4byte	.LASF511
 6572 006e 05       		.byte	0x5
 6573 006f F304     		.uleb128 0x273
 6574 0071 1D150000 		.4byte	.LASF512
 6575 0075 05       		.byte	0x5
 6576 0076 8905     		.uleb128 0x289
 6577 0078 53240000 		.4byte	.LASF513
 6578 007c 05       		.byte	0x5
 6579 007d B905     		.uleb128 0x2b9
 6580 007f D6490000 		.4byte	.LASF514
 6581 0083 05       		.byte	0x5
 6582 0084 C905     		.uleb128 0x2c9
 6583 0086 1E830000 		.4byte	.LASF515
 6584 008a 05       		.byte	0x5
 6585 008b CA05     		.uleb128 0x2ca
 6586 008d 48100000 		.4byte	.LASF516
 6587 0091 05       		.byte	0x5
 6588 0092 CB05     		.uleb128 0x2cb
 6589 0094 6B6B0000 		.4byte	.LASF517
 6590 0098 05       		.byte	0x5
 6591 0099 CC05     		.uleb128 0x2cc
 6592 009b 35490000 		.4byte	.LASF518
 6593 009f 05       		.byte	0x5
 6594 00a0 CD05     		.uleb128 0x2cd
 6595 00a2 99330000 		.4byte	.LASF519
 6596 00a6 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 156


 6597 00a7 CE05     		.uleb128 0x2ce
 6598 00a9 8F610000 		.4byte	.LASF520
 6599 00ad 05       		.byte	0x5
 6600 00ae CF05     		.uleb128 0x2cf
 6601 00b0 0B440000 		.4byte	.LASF521
 6602 00b4 05       		.byte	0x5
 6603 00b5 D105     		.uleb128 0x2d1
 6604 00b7 A02F0000 		.4byte	.LASF522
 6605 00bb 05       		.byte	0x5
 6606 00bc D205     		.uleb128 0x2d2
 6607 00be 863A0000 		.4byte	.LASF523
 6608 00c2 05       		.byte	0x5
 6609 00c3 D305     		.uleb128 0x2d3
 6610 00c5 3E130000 		.4byte	.LASF524
 6611 00c9 05       		.byte	0x5
 6612 00ca D405     		.uleb128 0x2d4
 6613 00cc DB470000 		.4byte	.LASF525
 6614 00d0 05       		.byte	0x5
 6615 00d1 D505     		.uleb128 0x2d5
 6616 00d3 481D0000 		.4byte	.LASF526
 6617 00d7 05       		.byte	0x5
 6618 00d8 D605     		.uleb128 0x2d6
 6619 00da 13090000 		.4byte	.LASF527
 6620 00de 05       		.byte	0x5
 6621 00df D705     		.uleb128 0x2d7
 6622 00e1 A61E0000 		.4byte	.LASF528
 6623 00e5 05       		.byte	0x5
 6624 00e6 D805     		.uleb128 0x2d8
 6625 00e8 53680000 		.4byte	.LASF529
 6626 00ec 05       		.byte	0x5
 6627 00ed D905     		.uleb128 0x2d9
 6628 00ef 1A060000 		.4byte	.LASF530
 6629 00f3 05       		.byte	0x5
 6630 00f4 DA05     		.uleb128 0x2da
 6631 00f6 F1660000 		.4byte	.LASF531
 6632 00fa 05       		.byte	0x5
 6633 00fb DB05     		.uleb128 0x2db
 6634 00fd C7750000 		.4byte	.LASF532
 6635 0101 05       		.byte	0x5
 6636 0102 DC05     		.uleb128 0x2dc
 6637 0104 EC2A0000 		.4byte	.LASF533
 6638 0108 05       		.byte	0x5
 6639 0109 DD05     		.uleb128 0x2dd
 6640 010b 77090000 		.4byte	.LASF534
 6641 010f 05       		.byte	0x5
 6642 0110 DE05     		.uleb128 0x2de
 6643 0112 81370000 		.4byte	.LASF535
 6644 0116 05       		.byte	0x5
 6645 0117 DF05     		.uleb128 0x2df
 6646 0119 FB360000 		.4byte	.LASF536
 6647 011d 05       		.byte	0x5
 6648 011e E005     		.uleb128 0x2e0
 6649 0120 57640000 		.4byte	.LASF537
 6650 0124 05       		.byte	0x5
 6651 0125 E105     		.uleb128 0x2e1
 6652 0127 60660000 		.4byte	.LASF538
 6653 012b 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 157


 6654 012c E205     		.uleb128 0x2e2
 6655 012e 3C290000 		.4byte	.LASF539
 6656 0132 05       		.byte	0x5
 6657 0133 E305     		.uleb128 0x2e3
 6658 0135 AE4D0000 		.4byte	.LASF540
 6659 0139 05       		.byte	0x5
 6660 013a E405     		.uleb128 0x2e4
 6661 013c 59690000 		.4byte	.LASF541
 6662 0140 05       		.byte	0x5
 6663 0141 E505     		.uleb128 0x2e5
 6664 0143 661F0000 		.4byte	.LASF542
 6665 0147 05       		.byte	0x5
 6666 0148 E605     		.uleb128 0x2e6
 6667 014a 254F0000 		.4byte	.LASF543
 6668 014e 05       		.byte	0x5
 6669 014f E705     		.uleb128 0x2e7
 6670 0151 A4890000 		.4byte	.LASF544
 6671 0155 05       		.byte	0x5
 6672 0156 E805     		.uleb128 0x2e8
 6673 0158 AF000000 		.4byte	.LASF545
 6674 015c 05       		.byte	0x5
 6675 015d EF05     		.uleb128 0x2ef
 6676 015f 90030000 		.4byte	.LASF546
 6677 0163 05       		.byte	0x5
 6678 0164 F705     		.uleb128 0x2f7
 6679 0166 06790000 		.4byte	.LASF547
 6680 016a 05       		.byte	0x5
 6681 016b 8706     		.uleb128 0x307
 6682 016d 4E2B0000 		.4byte	.LASF548
 6683 0171 05       		.byte	0x5
 6684 0172 8A06     		.uleb128 0x30a
 6685 0174 54720000 		.4byte	.LASF549
 6686 0178 05       		.byte	0x5
 6687 0179 9006     		.uleb128 0x310
 6688 017b 09010000 		.4byte	.LASF550
 6689 017f 00       		.byte	0
 6690              		.section	.debug_macro,"G",%progbits,wm4.cdefs.h.47.fbe724f4232069283dea9c3aea4135c7,comdat
 6691              	.Ldebug_macro14:
 6692 0000 0400     		.2byte	0x4
 6693 0002 00       		.byte	0
 6694 0003 05       		.byte	0x5
 6695 0004 2F       		.uleb128 0x2f
 6696 0005 E0200000 		.4byte	.LASF552
 6697 0009 05       		.byte	0x5
 6698 000a 30       		.uleb128 0x30
 6699 000b 41630000 		.4byte	.LASF553
 6700 000f 05       		.byte	0x5
 6701 0010 31       		.uleb128 0x31
 6702 0011 0A4F0000 		.4byte	.LASF554
 6703 0015 05       		.byte	0x5
 6704 0016 34       		.uleb128 0x34
 6705 0017 C60B0000 		.4byte	.LASF555
 6706 001b 05       		.byte	0x5
 6707 001c 37       		.uleb128 0x37
 6708 001d 061D0000 		.4byte	.LASF556
 6709 0021 05       		.byte	0x5
 6710 0022 38       		.uleb128 0x38
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 158


 6711 0023 A3860000 		.4byte	.LASF557
 6712 0027 05       		.byte	0x5
 6713 0028 3A       		.uleb128 0x3a
 6714 0029 303D0000 		.4byte	.LASF558
 6715 002d 05       		.byte	0x5
 6716 002e 3B       		.uleb128 0x3b
 6717 002f 7B2E0000 		.4byte	.LASF559
 6718 0033 05       		.byte	0x5
 6719 0034 3C       		.uleb128 0x3c
 6720 0035 04200000 		.4byte	.LASF560
 6721 0039 05       		.byte	0x5
 6722 003a 3D       		.uleb128 0x3d
 6723 003b C57B0000 		.4byte	.LASF561
 6724 003f 05       		.byte	0x5
 6725 0040 40       		.uleb128 0x40
 6726 0041 4B0D0000 		.4byte	.LASF562
 6727 0045 05       		.byte	0x5
 6728 0046 41       		.uleb128 0x41
 6729 0047 05080000 		.4byte	.LASF563
 6730 004b 05       		.byte	0x5
 6731 004c 42       		.uleb128 0x42
 6732 004d 03700000 		.4byte	.LASF564
 6733 0051 05       		.byte	0x5
 6734 0052 4A       		.uleb128 0x4a
 6735 0053 25100000 		.4byte	.LASF565
 6736 0057 05       		.byte	0x5
 6737 0058 4D       		.uleb128 0x4d
 6738 0059 612B0000 		.4byte	.LASF566
 6739 005d 05       		.byte	0x5
 6740 005e 53       		.uleb128 0x53
 6741 005f B26B0000 		.4byte	.LASF567
 6742 0063 05       		.byte	0x5
 6743 0064 5A       		.uleb128 0x5a
 6744 0065 5F610000 		.4byte	.LASF568
 6745 0069 05       		.byte	0x5
 6746 006a 5B       		.uleb128 0x5b
 6747 006b 5E470000 		.4byte	.LASF569
 6748 006f 05       		.byte	0x5
 6749 0070 67       		.uleb128 0x67
 6750 0071 0E320000 		.4byte	.LASF570
 6751 0075 05       		.byte	0x5
 6752 0076 68       		.uleb128 0x68
 6753 0077 C8420000 		.4byte	.LASF571
 6754 007b 05       		.byte	0x5
 6755 007c 6C       		.uleb128 0x6c
 6756 007d 1F040000 		.4byte	.LASF572
 6757 0081 05       		.byte	0x5
 6758 0082 6D       		.uleb128 0x6d
 6759 0083 68730000 		.4byte	.LASF573
 6760 0087 05       		.byte	0x5
 6761 0088 6E       		.uleb128 0x6e
 6762 0089 00000000 		.4byte	.LASF574
 6763 008d 05       		.byte	0x5
 6764 008e 71       		.uleb128 0x71
 6765 008f 162B0000 		.4byte	.LASF575
 6766 0093 05       		.byte	0x5
 6767 0094 74       		.uleb128 0x74
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 159


 6768 0095 F2110000 		.4byte	.LASF576
 6769 0099 05       		.byte	0x5
 6770 009a 7B       		.uleb128 0x7b
 6771 009b 832F0000 		.4byte	.LASF577
 6772 009f 05       		.byte	0x5
 6773 00a0 7C       		.uleb128 0x7c
 6774 00a1 A15A0000 		.4byte	.LASF578
 6775 00a5 05       		.byte	0x5
 6776 00a6 7D       		.uleb128 0x7d
 6777 00a7 8B800000 		.4byte	.LASF579
 6778 00ab 05       		.byte	0x5
 6779 00ac 8101     		.uleb128 0x81
 6780 00ae A7610000 		.4byte	.LASF580
 6781 00b2 05       		.byte	0x5
 6782 00b3 8801     		.uleb128 0x88
 6783 00b5 FD6C0000 		.4byte	.LASF581
 6784 00b9 05       		.byte	0x5
 6785 00ba 8C01     		.uleb128 0x8c
 6786 00bc 155C0000 		.4byte	.LASF582
 6787 00c0 05       		.byte	0x5
 6788 00c1 8D01     		.uleb128 0x8d
 6789 00c3 AA200000 		.4byte	.LASF583
 6790 00c7 05       		.byte	0x5
 6791 00c8 9001     		.uleb128 0x90
 6792 00ca 3E5A0000 		.4byte	.LASF584
 6793 00ce 05       		.byte	0x5
 6794 00cf 9301     		.uleb128 0x93
 6795 00d1 6E310000 		.4byte	.LASF585
 6796 00d5 05       		.byte	0x5
 6797 00d6 9401     		.uleb128 0x94
 6798 00d8 002C0000 		.4byte	.LASF586
 6799 00dc 05       		.byte	0x5
 6800 00dd 9501     		.uleb128 0x95
 6801 00df 9A760000 		.4byte	.LASF587
 6802 00e3 05       		.byte	0x5
 6803 00e4 9701     		.uleb128 0x97
 6804 00e6 FC410000 		.4byte	.LASF588
 6805 00ea 05       		.byte	0x5
 6806 00eb 9801     		.uleb128 0x98
 6807 00ed 53820000 		.4byte	.LASF589
 6808 00f1 05       		.byte	0x5
 6809 00f2 9A01     		.uleb128 0x9a
 6810 00f4 79830000 		.4byte	.LASF590
 6811 00f8 05       		.byte	0x5
 6812 00f9 9C01     		.uleb128 0x9c
 6813 00fb EE180000 		.4byte	.LASF591
 6814 00ff 05       		.byte	0x5
 6815 0100 AD01     		.uleb128 0xad
 6816 0102 58190000 		.4byte	.LASF592
 6817 0106 05       		.byte	0x5
 6818 0107 AE01     		.uleb128 0xae
 6819 0109 EF0D0000 		.4byte	.LASF593
 6820 010d 05       		.byte	0x5
 6821 010e AF01     		.uleb128 0xaf
 6822 0110 DE030000 		.4byte	.LASF594
 6823 0114 05       		.byte	0x5
 6824 0115 B001     		.uleb128 0xb0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 160


 6825 0117 035B0000 		.4byte	.LASF595
 6826 011b 05       		.byte	0x5
 6827 011c B101     		.uleb128 0xb1
 6828 011e 622E0000 		.4byte	.LASF596
 6829 0122 05       		.byte	0x5
 6830 0123 B301     		.uleb128 0xb3
 6831 0125 94180000 		.4byte	.LASF597
 6832 0129 05       		.byte	0x5
 6833 012a B401     		.uleb128 0xb4
 6834 012c 9C660000 		.4byte	.LASF598
 6835 0130 05       		.byte	0x5
 6836 0131 B501     		.uleb128 0xb5
 6837 0133 36580000 		.4byte	.LASF599
 6838 0137 05       		.byte	0x5
 6839 0138 F601     		.uleb128 0xf6
 6840 013a 17600000 		.4byte	.LASF600
 6841 013e 05       		.byte	0x5
 6842 013f F701     		.uleb128 0xf7
 6843 0141 AB400000 		.4byte	.LASF601
 6844 0145 05       		.byte	0x5
 6845 0146 F801     		.uleb128 0xf8
 6846 0148 457F0000 		.4byte	.LASF602
 6847 014c 05       		.byte	0x5
 6848 014d F901     		.uleb128 0xf9
 6849 014f 20630000 		.4byte	.LASF603
 6850 0153 05       		.byte	0x5
 6851 0154 FA01     		.uleb128 0xfa
 6852 0156 FF8D0000 		.4byte	.LASF604
 6853 015a 05       		.byte	0x5
 6854 015b FB01     		.uleb128 0xfb
 6855 015d A9070000 		.4byte	.LASF605
 6856 0161 05       		.byte	0x5
 6857 0162 FC01     		.uleb128 0xfc
 6858 0164 253A0000 		.4byte	.LASF606
 6859 0168 05       		.byte	0x5
 6860 0169 9902     		.uleb128 0x119
 6861 016b 96230000 		.4byte	.LASF607
 6862 016f 05       		.byte	0x5
 6863 0170 A002     		.uleb128 0x120
 6864 0172 83880000 		.4byte	.LASF608
 6865 0176 05       		.byte	0x5
 6866 0177 A802     		.uleb128 0x128
 6867 0179 F3850000 		.4byte	.LASF609
 6868 017d 05       		.byte	0x5
 6869 017e AE02     		.uleb128 0x12e
 6870 0180 7A570000 		.4byte	.LASF610
 6871 0184 05       		.byte	0x5
 6872 0185 C602     		.uleb128 0x146
 6873 0187 4A350000 		.4byte	.LASF611
 6874 018b 05       		.byte	0x5
 6875 018c D902     		.uleb128 0x159
 6876 018e 61740000 		.4byte	.LASF612
 6877 0192 05       		.byte	0x5
 6878 0193 DF02     		.uleb128 0x15f
 6879 0195 6F590000 		.4byte	.LASF613
 6880 0199 05       		.byte	0x5
 6881 019a E002     		.uleb128 0x160
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 161


 6882 019c 07820000 		.4byte	.LASF614
 6883 01a0 05       		.byte	0x5
 6884 01a1 E702     		.uleb128 0x167
 6885 01a3 7E1D0000 		.4byte	.LASF615
 6886 01a7 05       		.byte	0x5
 6887 01a8 ED02     		.uleb128 0x16d
 6888 01aa 61260000 		.4byte	.LASF616
 6889 01ae 05       		.byte	0x5
 6890 01af F302     		.uleb128 0x173
 6891 01b1 CF410000 		.4byte	.LASF617
 6892 01b5 05       		.byte	0x5
 6893 01b6 F902     		.uleb128 0x179
 6894 01b8 FB3E0000 		.4byte	.LASF618
 6895 01bc 05       		.byte	0x5
 6896 01bd FF02     		.uleb128 0x17f
 6897 01bf 151D0000 		.4byte	.LASF619
 6898 01c3 05       		.byte	0x5
 6899 01c4 9103     		.uleb128 0x191
 6900 01c6 9C530000 		.4byte	.LASF620
 6901 01ca 05       		.byte	0x5
 6902 01cb B403     		.uleb128 0x1b4
 6903 01cd 181F0000 		.4byte	.LASF621
 6904 01d1 05       		.byte	0x5
 6905 01d2 B503     		.uleb128 0x1b5
 6906 01d4 264D0000 		.4byte	.LASF622
 6907 01d8 05       		.byte	0x5
 6908 01d9 BC03     		.uleb128 0x1bc
 6909 01db 74280000 		.4byte	.LASF623
 6910 01df 05       		.byte	0x5
 6911 01e0 BD03     		.uleb128 0x1bd
 6912 01e2 9B2B0000 		.4byte	.LASF624
 6913 01e6 05       		.byte	0x5
 6914 01e7 C303     		.uleb128 0x1c3
 6915 01e9 BF2A0000 		.4byte	.LASF625
 6916 01ed 05       		.byte	0x5
 6917 01ee C403     		.uleb128 0x1c4
 6918 01f0 F8790000 		.4byte	.LASF626
 6919 01f4 05       		.byte	0x5
 6920 01f5 CE03     		.uleb128 0x1ce
 6921 01f7 E8800000 		.4byte	.LASF627
 6922 01fb 05       		.byte	0x5
 6923 01fc E403     		.uleb128 0x1e4
 6924 01fe C5760000 		.4byte	.LASF628
 6925 0202 05       		.byte	0x5
 6926 0203 E603     		.uleb128 0x1e6
 6927 0205 AF7F0000 		.4byte	.LASF629
 6928 0209 05       		.byte	0x5
 6929 020a E803     		.uleb128 0x1e8
 6930 020c 45880000 		.4byte	.LASF630
 6931 0210 05       		.byte	0x5
 6932 0211 E903     		.uleb128 0x1e9
 6933 0213 497D0000 		.4byte	.LASF631
 6934 0217 05       		.byte	0x5
 6935 0218 EB03     		.uleb128 0x1eb
 6936 021a 788C0000 		.4byte	.LASF632
 6937 021e 05       		.byte	0x5
 6938 021f F503     		.uleb128 0x1f5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 162


 6939 0221 F05E0000 		.4byte	.LASF633
 6940 0225 05       		.byte	0x5
 6941 0226 FA03     		.uleb128 0x1fa
 6942 0228 677E0000 		.4byte	.LASF634
 6943 022c 05       		.byte	0x5
 6944 022d FF03     		.uleb128 0x1ff
 6945 022f A60F0000 		.4byte	.LASF635
 6946 0233 05       		.byte	0x5
 6947 0234 8204     		.uleb128 0x202
 6948 0236 F8450000 		.4byte	.LASF636
 6949 023a 05       		.byte	0x5
 6950 023b 8604     		.uleb128 0x206
 6951 023d 917C0000 		.4byte	.LASF637
 6952 0241 05       		.byte	0x5
 6953 0242 8804     		.uleb128 0x208
 6954 0244 2F220000 		.4byte	.LASF638
 6955 0248 05       		.byte	0x5
 6956 0249 AB04     		.uleb128 0x22b
 6957 024b 3B5B0000 		.4byte	.LASF639
 6958 024f 05       		.byte	0x5
 6959 0250 AF04     		.uleb128 0x22f
 6960 0252 E5720000 		.4byte	.LASF640
 6961 0256 05       		.byte	0x5
 6962 0257 B304     		.uleb128 0x233
 6963 0259 FB040000 		.4byte	.LASF641
 6964 025d 05       		.byte	0x5
 6965 025e B704     		.uleb128 0x237
 6966 0260 D12B0000 		.4byte	.LASF642
 6967 0264 05       		.byte	0x5
 6968 0265 BB04     		.uleb128 0x23b
 6969 0267 FE5D0000 		.4byte	.LASF643
 6970 026b 05       		.byte	0x5
 6971 026c BF04     		.uleb128 0x23f
 6972 026e 0B260000 		.4byte	.LASF644
 6973 0272 05       		.byte	0x5
 6974 0273 C304     		.uleb128 0x243
 6975 0275 4E7C0000 		.4byte	.LASF645
 6976 0279 05       		.byte	0x5
 6977 027a C704     		.uleb128 0x247
 6978 027c 2A8D0000 		.4byte	.LASF646
 6979 0280 05       		.byte	0x5
 6980 0281 BF05     		.uleb128 0x2bf
 6981 0283 31520000 		.4byte	.LASF647
 6982 0287 05       		.byte	0x5
 6983 0288 C005     		.uleb128 0x2c0
 6984 028a C8620000 		.4byte	.LASF648
 6985 028e 05       		.byte	0x5
 6986 028f C105     		.uleb128 0x2c1
 6987 0291 EA620000 		.4byte	.LASF649
 6988 0295 05       		.byte	0x5
 6989 0296 C205     		.uleb128 0x2c2
 6990 0298 E2070000 		.4byte	.LASF650
 6991 029c 00       		.byte	0
 6992              		.section	.debug_macro,"G",%progbits,wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d,comdat
 6993              	.Ldebug_macro15:
 6994 0000 0400     		.2byte	0x4
 6995 0002 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 163


 6996 0003 05       		.byte	0x5
 6997 0004 08       		.uleb128 0x8
 6998 0005 E3300000 		.4byte	.LASF652
 6999 0009 06       		.byte	0x6
 7000 000a 0D       		.uleb128 0xd
 7001 000b FD550000 		.4byte	.LASF653
 7002 000f 05       		.byte	0x5
 7003 0010 10       		.uleb128 0x10
 7004 0011 4A1C0000 		.4byte	.LASF654
 7005 0015 00       		.byte	0
 7006              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043,comdat
 7007              	.Ldebug_macro16:
 7008 0000 0400     		.2byte	0x4
 7009 0002 00       		.byte	0
 7010 0003 05       		.byte	0x5
 7011 0004 36       		.uleb128 0x36
 7012 0005 98000000 		.4byte	.LASF655
 7013 0009 05       		.byte	0x5
 7014 000a 3A       		.uleb128 0x3a
 7015 000b 968A0000 		.4byte	.LASF656
 7016 000f 05       		.byte	0x5
 7017 0010 3B       		.uleb128 0x3b
 7018 0011 D31B0000 		.4byte	.LASF657
 7019 0015 05       		.byte	0x5
 7020 0016 3D       		.uleb128 0x3d
 7021 0017 603C0000 		.4byte	.LASF658
 7022 001b 05       		.byte	0x5
 7023 001c 41       		.uleb128 0x41
 7024 001d 324C0000 		.4byte	.LASF659
 7025 0021 05       		.byte	0x5
 7026 0022 8E01     		.uleb128 0x8e
 7027 0024 DE730000 		.4byte	.LASF660
 7028 0028 00       		.byte	0
 7029              		.section	.debug_macro,"G",%progbits,wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd,comdat
 7030              	.Ldebug_macro17:
 7031 0000 0400     		.2byte	0x4
 7032 0002 00       		.byte	0
 7033 0003 05       		.byte	0x5
 7034 0004 08       		.uleb128 0x8
 7035 0005 B1750000 		.4byte	.LASF661
 7036 0009 05       		.byte	0x5
 7037 000a 0F       		.uleb128 0xf
 7038 000b C2290000 		.4byte	.LASF410
 7039 000f 05       		.byte	0x5
 7040 0010 10       		.uleb128 0x10
 7041 0011 7E3E0000 		.4byte	.LASF412
 7042 0015 00       		.byte	0
 7043              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c,comdat
 7044              	.Ldebug_macro18:
 7045 0000 0400     		.2byte	0x4
 7046 0002 00       		.byte	0
 7047 0003 06       		.byte	0x6
 7048 0004 9E01     		.uleb128 0x9e
 7049 0006 5F7B0000 		.4byte	.LASF463
 7050 000a 06       		.byte	0x6
 7051 000b EA01     		.uleb128 0xea
 7052 000d 49300000 		.4byte	.LASF430
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 164


 7053 0011 06       		.byte	0x6
 7054 0012 D702     		.uleb128 0x157
 7055 0014 FF0B0000 		.4byte	.LASF447
 7056 0018 06       		.byte	0x6
 7057 0019 8D03     		.uleb128 0x18d
 7058 001b 43100000 		.4byte	.LASF448
 7059 001f 05       		.byte	0x5
 7060 0020 9203     		.uleb128 0x192
 7061 0022 F5340000 		.4byte	.LASF449
 7062 0026 06       		.byte	0x6
 7063 0027 9803     		.uleb128 0x198
 7064 0029 DE350000 		.4byte	.LASF450
 7065 002d 05       		.byte	0x5
 7066 002e 9D03     		.uleb128 0x19d
 7067 0030 3B3F0000 		.4byte	.LASF464
 7068 0034 00       		.byte	0
 7069              		.section	.debug_macro,"G",%progbits,wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217,comdat
 7070              	.Ldebug_macro19:
 7071 0000 0400     		.2byte	0x4
 7072 0002 00       		.byte	0
 7073 0003 05       		.byte	0x5
 7074 0004 0A       		.uleb128 0xa
 7075 0005 BA830000 		.4byte	.LASF665
 7076 0009 05       		.byte	0x5
 7077 000a 10       		.uleb128 0x10
 7078 000b 594F0000 		.4byte	.LASF666
 7079 000f 05       		.byte	0x5
 7080 0010 1A       		.uleb128 0x1a
 7081 0011 60670000 		.4byte	.LASF667
 7082 0015 05       		.byte	0x5
 7083 0016 21       		.uleb128 0x21
 7084 0017 2B2E0000 		.4byte	.LASF668
 7085 001b 00       		.byte	0
 7086              		.section	.debug_macro,"G",%progbits,wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0,comdat
 7087              	.Ldebug_macro20:
 7088 0000 0400     		.2byte	0x4
 7089 0002 00       		.byte	0
 7090 0003 05       		.byte	0x5
 7091 0004 16       		.uleb128 0x16
 7092 0005 C2690000 		.4byte	.LASF669
 7093 0009 05       		.byte	0x5
 7094 000a 1C       		.uleb128 0x1c
 7095 000b 688A0000 		.4byte	.LASF670
 7096 000f 05       		.byte	0x5
 7097 0010 22       		.uleb128 0x22
 7098 0011 D3430000 		.4byte	.LASF671
 7099 0015 05       		.byte	0x5
 7100 0016 28       		.uleb128 0x28
 7101 0017 A88F0000 		.4byte	.LASF672
 7102 001b 05       		.byte	0x5
 7103 001c 2E       		.uleb128 0x2e
 7104 001d AC3C0000 		.4byte	.LASF673
 7105 0021 05       		.byte	0x5
 7106 0022 34       		.uleb128 0x34
 7107 0023 4A360000 		.4byte	.LASF674
 7108 0027 05       		.byte	0x5
 7109 0028 3A       		.uleb128 0x3a
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 165


 7110 0029 247C0000 		.4byte	.LASF675
 7111 002d 05       		.byte	0x5
 7112 002e 40       		.uleb128 0x40
 7113 002f 1C450000 		.4byte	.LASF676
 7114 0033 05       		.byte	0x5
 7115 0034 4C       		.uleb128 0x4c
 7116 0035 4A570000 		.4byte	.LASF677
 7117 0039 05       		.byte	0x5
 7118 003a 56       		.uleb128 0x56
 7119 003b 77540000 		.4byte	.LASF678
 7120 003f 05       		.byte	0x5
 7121 0040 60       		.uleb128 0x60
 7122 0041 560D0000 		.4byte	.LASF679
 7123 0045 05       		.byte	0x5
 7124 0046 6A       		.uleb128 0x6a
 7125 0047 7D230000 		.4byte	.LASF680
 7126 004b 05       		.byte	0x5
 7127 004c AD01     		.uleb128 0xad
 7128 004e BD5A0000 		.4byte	.LASF681
 7129 0052 05       		.byte	0x5
 7130 0053 AE01     		.uleb128 0xae
 7131 0055 AD810000 		.4byte	.LASF682
 7132 0059 05       		.byte	0x5
 7133 005a AF01     		.uleb128 0xaf
 7134 005c 8A1E0000 		.4byte	.LASF683
 7135 0060 05       		.byte	0x5
 7136 0061 C501     		.uleb128 0xc5
 7137 0063 1A0F0000 		.4byte	.LASF684
 7138 0067 05       		.byte	0x5
 7139 0068 C601     		.uleb128 0xc6
 7140 006a 1C5B0000 		.4byte	.LASF685
 7141 006e 05       		.byte	0x5
 7142 006f C701     		.uleb128 0xc7
 7143 0071 B4180000 		.4byte	.LASF686
 7144 0075 05       		.byte	0x5
 7145 0076 CF01     		.uleb128 0xcf
 7146 0078 947B0000 		.4byte	.LASF687
 7147 007c 05       		.byte	0x5
 7148 007d D001     		.uleb128 0xd0
 7149 007f 3F2D0000 		.4byte	.LASF688
 7150 0083 05       		.byte	0x5
 7151 0084 D101     		.uleb128 0xd1
 7152 0086 D0170000 		.4byte	.LASF689
 7153 008a 05       		.byte	0x5
 7154 008b DB01     		.uleb128 0xdb
 7155 008d A7010000 		.4byte	.LASF690
 7156 0091 05       		.byte	0x5
 7157 0092 DC01     		.uleb128 0xdc
 7158 0094 A4320000 		.4byte	.LASF691
 7159 0098 05       		.byte	0x5
 7160 0099 DD01     		.uleb128 0xdd
 7161 009b 3C310000 		.4byte	.LASF692
 7162 009f 05       		.byte	0x5
 7163 00a0 E501     		.uleb128 0xe5
 7164 00a2 564D0000 		.4byte	.LASF693
 7165 00a6 05       		.byte	0x5
 7166 00a7 E601     		.uleb128 0xe6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 166


 7167 00a9 D9550000 		.4byte	.LASF694
 7168 00ad 05       		.byte	0x5
 7169 00ae E701     		.uleb128 0xe7
 7170 00b0 A86A0000 		.4byte	.LASF695
 7171 00b4 05       		.byte	0x5
 7172 00b5 F101     		.uleb128 0xf1
 7173 00b7 0F6C0000 		.4byte	.LASF696
 7174 00bb 05       		.byte	0x5
 7175 00bc F201     		.uleb128 0xf2
 7176 00be CD450000 		.4byte	.LASF697
 7177 00c2 05       		.byte	0x5
 7178 00c3 F301     		.uleb128 0xf3
 7179 00c5 D50C0000 		.4byte	.LASF698
 7180 00c9 05       		.byte	0x5
 7181 00ca 8102     		.uleb128 0x101
 7182 00cc D82F0000 		.4byte	.LASF699
 7183 00d0 05       		.byte	0x5
 7184 00d1 8202     		.uleb128 0x102
 7185 00d3 8B210000 		.4byte	.LASF700
 7186 00d7 05       		.byte	0x5
 7187 00d8 8302     		.uleb128 0x103
 7188 00da 7D790000 		.4byte	.LASF701
 7189 00de 05       		.byte	0x5
 7190 00df 9302     		.uleb128 0x113
 7191 00e1 51770000 		.4byte	.LASF702
 7192 00e5 05       		.byte	0x5
 7193 00e6 9402     		.uleb128 0x114
 7194 00e8 B5040000 		.4byte	.LASF703
 7195 00ec 05       		.byte	0x5
 7196 00ed 9502     		.uleb128 0x115
 7197 00ef 8C570000 		.4byte	.LASF704
 7198 00f3 05       		.byte	0x5
 7199 00f4 A302     		.uleb128 0x123
 7200 00f6 83110000 		.4byte	.LASF705
 7201 00fa 05       		.byte	0x5
 7202 00fb A402     		.uleb128 0x124
 7203 00fd 55330000 		.4byte	.LASF706
 7204 0101 05       		.byte	0x5
 7205 0102 A502     		.uleb128 0x125
 7206 0104 37790000 		.4byte	.LASF707
 7207 0108 05       		.byte	0x5
 7208 0109 B302     		.uleb128 0x133
 7209 010b 75530000 		.4byte	.LASF708
 7210 010f 05       		.byte	0x5
 7211 0110 B402     		.uleb128 0x134
 7212 0112 8C360000 		.4byte	.LASF709
 7213 0116 05       		.byte	0x5
 7214 0117 B502     		.uleb128 0x135
 7215 0119 72180000 		.4byte	.LASF710
 7216 011d 05       		.byte	0x5
 7217 011e C302     		.uleb128 0x143
 7218 0120 A81F0000 		.4byte	.LASF711
 7219 0124 05       		.byte	0x5
 7220 0125 C402     		.uleb128 0x144
 7221 0127 EC870000 		.4byte	.LASF712
 7222 012b 05       		.byte	0x5
 7223 012c C502     		.uleb128 0x145
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 167


 7224 012e 7F860000 		.4byte	.LASF713
 7225 0132 05       		.byte	0x5
 7226 0133 D302     		.uleb128 0x153
 7227 0135 06130000 		.4byte	.LASF714
 7228 0139 05       		.byte	0x5
 7229 013a D402     		.uleb128 0x154
 7230 013c 906B0000 		.4byte	.LASF715
 7231 0140 05       		.byte	0x5
 7232 0141 D502     		.uleb128 0x155
 7233 0143 C6610000 		.4byte	.LASF716
 7234 0147 05       		.byte	0x5
 7235 0148 E302     		.uleb128 0x163
 7236 014a 795B0000 		.4byte	.LASF717
 7237 014e 05       		.byte	0x5
 7238 014f E402     		.uleb128 0x164
 7239 0151 12080000 		.4byte	.LASF718
 7240 0155 05       		.byte	0x5
 7241 0156 E502     		.uleb128 0x165
 7242 0158 E24F0000 		.4byte	.LASF719
 7243 015c 05       		.byte	0x5
 7244 015d F302     		.uleb128 0x173
 7245 015f BC490000 		.4byte	.LASF720
 7246 0163 05       		.byte	0x5
 7247 0164 F402     		.uleb128 0x174
 7248 0166 901C0000 		.4byte	.LASF721
 7249 016a 05       		.byte	0x5
 7250 016b FC02     		.uleb128 0x17c
 7251 016d F2310000 		.4byte	.LASF722
 7252 0171 05       		.byte	0x5
 7253 0172 8403     		.uleb128 0x184
 7254 0174 11140000 		.4byte	.LASF723
 7255 0178 05       		.byte	0x5
 7256 0179 8A03     		.uleb128 0x18a
 7257 017b CF320000 		.4byte	.LASF724
 7258 017f 05       		.byte	0x5
 7259 0180 8B03     		.uleb128 0x18b
 7260 0182 BF590000 		.4byte	.LASF725
 7261 0186 05       		.byte	0x5
 7262 0187 8F03     		.uleb128 0x18f
 7263 0189 24680000 		.4byte	.LASF726
 7264 018d 05       		.byte	0x5
 7265 018e 9303     		.uleb128 0x193
 7266 0190 F28E0000 		.4byte	.LASF727
 7267 0194 05       		.byte	0x5
 7268 0195 9803     		.uleb128 0x198
 7269 0197 8C5D0000 		.4byte	.LASF728
 7270 019b 05       		.byte	0x5
 7271 019c A303     		.uleb128 0x1a3
 7272 019e FE720000 		.4byte	.LASF729
 7273 01a2 05       		.byte	0x5
 7274 01a3 AD03     		.uleb128 0x1ad
 7275 01a5 DC270000 		.4byte	.LASF730
 7276 01a9 05       		.byte	0x5
 7277 01aa B203     		.uleb128 0x1b2
 7278 01ac 48030000 		.4byte	.LASF731
 7279 01b0 05       		.byte	0x5
 7280 01b1 B903     		.uleb128 0x1b9
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 168


 7281 01b3 5F3D0000 		.4byte	.LASF732
 7282 01b7 05       		.byte	0x5
 7283 01b8 BA03     		.uleb128 0x1ba
 7284 01ba 347B0000 		.4byte	.LASF733
 7285 01be 05       		.byte	0x5
 7286 01bf C503     		.uleb128 0x1c5
 7287 01c1 A90D0000 		.4byte	.LASF734
 7288 01c5 05       		.byte	0x5
 7289 01c6 C603     		.uleb128 0x1c6
 7290 01c8 FB320000 		.4byte	.LASF735
 7291 01cc 05       		.byte	0x5
 7292 01cd D103     		.uleb128 0x1d1
 7293 01cf EB6F0000 		.4byte	.LASF736
 7294 01d3 05       		.byte	0x5
 7295 01d4 D203     		.uleb128 0x1d2
 7296 01d6 16530000 		.4byte	.LASF737
 7297 01da 05       		.byte	0x5
 7298 01db DE03     		.uleb128 0x1de
 7299 01dd E3360000 		.4byte	.LASF738
 7300 01e1 05       		.byte	0x5
 7301 01e2 DF03     		.uleb128 0x1df
 7302 01e4 CF6C0000 		.4byte	.LASF739
 7303 01e8 05       		.byte	0x5
 7304 01e9 EE03     		.uleb128 0x1ee
 7305 01eb 4D280000 		.4byte	.LASF740
 7306 01ef 05       		.byte	0x5
 7307 01f0 EF03     		.uleb128 0x1ef
 7308 01f2 5B600000 		.4byte	.LASF741
 7309 01f6 00       		.byte	0
 7310              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8,comda
 7311              	.Ldebug_macro21:
 7312 0000 0400     		.2byte	0x4
 7313 0002 00       		.byte	0
 7314 0003 05       		.byte	0x5
 7315 0004 44       		.uleb128 0x44
 7316 0005 0D310000 		.4byte	.LASF743
 7317 0009 05       		.byte	0x5
 7318 000a 5C       		.uleb128 0x5c
 7319 000b 22340000 		.4byte	.LASF744
 7320 000f 05       		.byte	0x5
 7321 0010 5D       		.uleb128 0x5d
 7322 0011 BB370000 		.4byte	.LASF745
 7323 0015 05       		.byte	0x5
 7324 0016 5E       		.uleb128 0x5e
 7325 0017 83290000 		.4byte	.LASF746
 7326 001b 05       		.byte	0x5
 7327 001c 5F       		.uleb128 0x5f
 7328 001d AC360000 		.4byte	.LASF747
 7329 0021 05       		.byte	0x5
 7330 0022 60       		.uleb128 0x60
 7331 0023 FB860000 		.4byte	.LASF748
 7332 0027 05       		.byte	0x5
 7333 0028 61       		.uleb128 0x61
 7334 0029 C6390000 		.4byte	.LASF749
 7335 002d 05       		.byte	0x5
 7336 002e 62       		.uleb128 0x62
 7337 002f F9560000 		.4byte	.LASF750
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 169


 7338 0033 05       		.byte	0x5
 7339 0034 63       		.uleb128 0x63
 7340 0035 2D610000 		.4byte	.LASF751
 7341 0039 05       		.byte	0x5
 7342 003a 64       		.uleb128 0x64
 7343 003b D11F0000 		.4byte	.LASF752
 7344 003f 05       		.byte	0x5
 7345 0040 65       		.uleb128 0x65
 7346 0041 728D0000 		.4byte	.LASF753
 7347 0045 05       		.byte	0x5
 7348 0046 66       		.uleb128 0x66
 7349 0047 A7280000 		.4byte	.LASF754
 7350 004b 05       		.byte	0x5
 7351 004c 67       		.uleb128 0x67
 7352 004d 8D010000 		.4byte	.LASF755
 7353 0051 05       		.byte	0x5
 7354 0052 68       		.uleb128 0x68
 7355 0053 415E0000 		.4byte	.LASF756
 7356 0057 05       		.byte	0x5
 7357 0058 69       		.uleb128 0x69
 7358 0059 E4440000 		.4byte	.LASF757
 7359 005d 05       		.byte	0x5
 7360 005e 6B       		.uleb128 0x6b
 7361 005f 99590000 		.4byte	.LASF758
 7362 0063 05       		.byte	0x5
 7363 0064 6D       		.uleb128 0x6d
 7364 0065 1F510000 		.4byte	.LASF759
 7365 0069 05       		.byte	0x5
 7366 006a 6E       		.uleb128 0x6e
 7367 006b 74030000 		.4byte	.LASF760
 7368 006f 05       		.byte	0x5
 7369 0070 6F       		.uleb128 0x6f
 7370 0071 C2360000 		.4byte	.LASF761
 7371 0075 05       		.byte	0x5
 7372 0076 70       		.uleb128 0x70
 7373 0077 3C420000 		.4byte	.LASF762
 7374 007b 05       		.byte	0x5
 7375 007c 71       		.uleb128 0x71
 7376 007d 51450000 		.4byte	.LASF763
 7377 0081 05       		.byte	0x5
 7378 0082 72       		.uleb128 0x72
 7379 0083 743C0000 		.4byte	.LASF764
 7380 0087 05       		.byte	0x5
 7381 0088 77       		.uleb128 0x77
 7382 0089 335C0000 		.4byte	.LASF765
 7383 008d 05       		.byte	0x5
 7384 008e 78       		.uleb128 0x78
 7385 008f 18410000 		.4byte	.LASF766
 7386 0093 05       		.byte	0x5
 7387 0094 79       		.uleb128 0x79
 7388 0095 84340000 		.4byte	.LASF767
 7389 0099 05       		.byte	0x5
 7390 009a 7A       		.uleb128 0x7a
 7391 009b 6C360000 		.4byte	.LASF768
 7392 009f 05       		.byte	0x5
 7393 00a0 7B       		.uleb128 0x7b
 7394 00a1 C7060000 		.4byte	.LASF769
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 170


 7395 00a5 05       		.byte	0x5
 7396 00a6 7C       		.uleb128 0x7c
 7397 00a7 ED2D0000 		.4byte	.LASF770
 7398 00ab 05       		.byte	0x5
 7399 00ac 7D       		.uleb128 0x7d
 7400 00ad 5D5C0000 		.4byte	.LASF771
 7401 00b1 05       		.byte	0x5
 7402 00b2 7E       		.uleb128 0x7e
 7403 00b3 ED020000 		.4byte	.LASF772
 7404 00b7 05       		.byte	0x5
 7405 00b8 8101     		.uleb128 0x81
 7406 00ba BC320000 		.4byte	.LASF773
 7407 00be 05       		.byte	0x5
 7408 00bf 8201     		.uleb128 0x82
 7409 00c1 1D3D0000 		.4byte	.LASF774
 7410 00c5 05       		.byte	0x5
 7411 00c6 8301     		.uleb128 0x83
 7412 00c8 BD2C0000 		.4byte	.LASF775
 7413 00cc 05       		.byte	0x5
 7414 00cd 8401     		.uleb128 0x84
 7415 00cf 930F0000 		.4byte	.LASF776
 7416 00d3 05       		.byte	0x5
 7417 00d4 8701     		.uleb128 0x87
 7418 00d6 FE290000 		.4byte	.LASF777
 7419 00da 05       		.byte	0x5
 7420 00db 8801     		.uleb128 0x88
 7421 00dd C5100000 		.4byte	.LASF778
 7422 00e1 05       		.byte	0x5
 7423 00e2 8901     		.uleb128 0x89
 7424 00e4 168D0000 		.4byte	.LASF779
 7425 00e8 05       		.byte	0x5
 7426 00e9 8A01     		.uleb128 0x8a
 7427 00eb 5B650000 		.4byte	.LASF780
 7428 00ef 05       		.byte	0x5
 7429 00f0 9001     		.uleb128 0x90
 7430 00f2 23490000 		.4byte	.LASF781
 7431 00f6 05       		.byte	0x5
 7432 00f7 9401     		.uleb128 0x94
 7433 00f9 AA8B0000 		.4byte	.LASF782
 7434 00fd 05       		.byte	0x5
 7435 00fe 9601     		.uleb128 0x96
 7436 0100 54490000 		.4byte	.LASF783
 7437 0104 05       		.byte	0x5
 7438 0105 9C01     		.uleb128 0x9c
 7439 0107 37370000 		.4byte	.LASF784
 7440 010b 00       		.byte	0
 7441              		.section	.debug_macro,"G",%progbits,wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066,comdat
 7442              	.Ldebug_macro22:
 7443 0000 0400     		.2byte	0x4
 7444 0002 00       		.byte	0
 7445 0003 05       		.byte	0x5
 7446 0004 43       		.uleb128 0x43
 7447 0005 9A340000 		.4byte	.LASF785
 7448 0009 05       		.byte	0x5
 7449 000a 4C       		.uleb128 0x4c
 7450 000b 983E0000 		.4byte	.LASF786
 7451 000f 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 171


 7452 0010 4E       		.uleb128 0x4e
 7453 0011 233C0000 		.4byte	.LASF787
 7454 0015 05       		.byte	0x5
 7455 0016 4F       		.uleb128 0x4f
 7456 0017 A25B0000 		.4byte	.LASF788
 7457 001b 05       		.byte	0x5
 7458 001c 51       		.uleb128 0x51
 7459 001d 15330000 		.4byte	.LASF789
 7460 0021 05       		.byte	0x5
 7461 0022 52       		.uleb128 0x52
 7462 0023 3A8B0000 		.4byte	.LASF790
 7463 0027 05       		.byte	0x5
 7464 0028 53       		.uleb128 0x53
 7465 0029 EF5C0000 		.4byte	.LASF791
 7466 002d 05       		.byte	0x5
 7467 002e 54       		.uleb128 0x54
 7468 002f 8F550000 		.4byte	.LASF792
 7469 0033 05       		.byte	0x5
 7470 0034 57       		.uleb128 0x57
 7471 0035 A3310000 		.4byte	.LASF793
 7472 0039 05       		.byte	0x5
 7473 003a 58       		.uleb128 0x58
 7474 003b 038B0000 		.4byte	.LASF794
 7475 003f 05       		.byte	0x5
 7476 0040 59       		.uleb128 0x59
 7477 0041 BD1B0000 		.4byte	.LASF795
 7478 0045 00       		.byte	0
 7479              		.section	.debug_macro,"G",%progbits,wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946,comdat
 7480              	.Ldebug_macro23:
 7481 0000 0400     		.2byte	0x4
 7482 0002 00       		.byte	0
 7483 0003 05       		.byte	0x5
 7484 0004 44       		.uleb128 0x44
 7485 0005 0F840000 		.4byte	.LASF797
 7486 0009 05       		.byte	0x5
 7487 000a 55       		.uleb128 0x55
 7488 000b BB130000 		.4byte	.LASF798
 7489 000f 05       		.byte	0x5
 7490 0010 56       		.uleb128 0x56
 7491 0011 5C750000 		.4byte	.LASF799
 7492 0015 05       		.byte	0x5
 7493 0016 57       		.uleb128 0x57
 7494 0017 85310000 		.4byte	.LASF800
 7495 001b 05       		.byte	0x5
 7496 001c 58       		.uleb128 0x58
 7497 001d 976F0000 		.4byte	.LASF801
 7498 0021 05       		.byte	0x5
 7499 0022 59       		.uleb128 0x59
 7500 0023 10500000 		.4byte	.LASF802
 7501 0027 05       		.byte	0x5
 7502 0028 5A       		.uleb128 0x5a
 7503 0029 8E380000 		.4byte	.LASF803
 7504 002d 05       		.byte	0x5
 7505 002e 5B       		.uleb128 0x5b
 7506 002f 2B670000 		.4byte	.LASF804
 7507 0033 05       		.byte	0x5
 7508 0034 6A       		.uleb128 0x6a
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 172


 7509 0035 96650000 		.4byte	.LASF805
 7510 0039 05       		.byte	0x5
 7511 003a 6F       		.uleb128 0x6f
 7512 003b 2E500000 		.4byte	.LASF806
 7513 003f 05       		.byte	0x5
 7514 0040 70       		.uleb128 0x70
 7515 0041 C7810000 		.4byte	.LASF807
 7516 0045 05       		.byte	0x5
 7517 0046 71       		.uleb128 0x71
 7518 0047 9E830000 		.4byte	.LASF808
 7519 004b 05       		.byte	0x5
 7520 004c 77       		.uleb128 0x77
 7521 004d C34C0000 		.4byte	.LASF809
 7522 0051 05       		.byte	0x5
 7523 0052 78       		.uleb128 0x78
 7524 0053 15420000 		.4byte	.LASF810
 7525 0057 05       		.byte	0x5
 7526 0058 79       		.uleb128 0x79
 7527 0059 460C0000 		.4byte	.LASF811
 7528 005d 05       		.byte	0x5
 7529 005e 7A       		.uleb128 0x7a
 7530 005f 3B560000 		.4byte	.LASF812
 7531 0063 05       		.byte	0x5
 7532 0064 7B       		.uleb128 0x7b
 7533 0065 B14F0000 		.4byte	.LASF813
 7534 0069 05       		.byte	0x5
 7535 006a 8301     		.uleb128 0x83
 7536 006c AC580000 		.4byte	.LASF814
 7537 0070 05       		.byte	0x5
 7538 0071 8401     		.uleb128 0x84
 7539 0073 D83D0000 		.4byte	.LASF815
 7540 0077 05       		.byte	0x5
 7541 0078 8501     		.uleb128 0x85
 7542 007a 357E0000 		.4byte	.LASF816
 7543 007e 05       		.byte	0x5
 7544 007f 8601     		.uleb128 0x86
 7545 0081 403B0000 		.4byte	.LASF817
 7546 0085 05       		.byte	0x5
 7547 0086 8701     		.uleb128 0x87
 7548 0088 3C380000 		.4byte	.LASF818
 7549 008c 05       		.byte	0x5
 7550 008d 8801     		.uleb128 0x88
 7551 008f 46500000 		.4byte	.LASF819
 7552 0093 05       		.byte	0x5
 7553 0094 8E01     		.uleb128 0x8e
 7554 0096 C0650000 		.4byte	.LASF820
 7555 009a 05       		.byte	0x5
 7556 009b 8F01     		.uleb128 0x8f
 7557 009d B6330000 		.4byte	.LASF821
 7558 00a1 05       		.byte	0x5
 7559 00a2 9501     		.uleb128 0x95
 7560 00a4 EA350000 		.4byte	.LASF822
 7561 00a8 05       		.byte	0x5
 7562 00a9 9B01     		.uleb128 0x9b
 7563 00ab F27A0000 		.4byte	.LASF823
 7564 00af 05       		.byte	0x5
 7565 00b0 AF01     		.uleb128 0xaf
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 173


 7566 00b2 EC6E0000 		.4byte	.LASF824
 7567 00b6 05       		.byte	0x5
 7568 00b7 B001     		.uleb128 0xb0
 7569 00b9 59510000 		.4byte	.LASF825
 7570 00bd 05       		.byte	0x5
 7571 00be B401     		.uleb128 0xb4
 7572 00c0 6B710000 		.4byte	.LASF826
 7573 00c4 05       		.byte	0x5
 7574 00c5 BC01     		.uleb128 0xbc
 7575 00c7 2C8C0000 		.4byte	.LASF827
 7576 00cb 05       		.byte	0x5
 7577 00cc C001     		.uleb128 0xc0
 7578 00ce 48820000 		.4byte	.LASF828
 7579 00d2 00       		.byte	0
 7580              		.section	.debug_macro,"G",%progbits,wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5,comdat
 7581              	.Ldebug_macro24:
 7582 0000 0400     		.2byte	0x4
 7583 0002 00       		.byte	0
 7584 0003 05       		.byte	0x5
 7585 0004 C502     		.uleb128 0x145
 7586 0006 47710000 		.4byte	.LASF829
 7587 000a 05       		.byte	0x5
 7588 000b D902     		.uleb128 0x159
 7589 000d 1D290000 		.4byte	.LASF830
 7590 0011 00       		.byte	0
 7591              		.section	.debug_macro,"G",%progbits,wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168,comdat
 7592              	.Ldebug_macro25:
 7593 0000 0400     		.2byte	0x4
 7594 0002 00       		.byte	0
 7595 0003 05       		.byte	0x5
 7596 0004 43       		.uleb128 0x43
 7597 0005 DA620000 		.4byte	.LASF831
 7598 0009 05       		.byte	0x5
 7599 000a 9101     		.uleb128 0x91
 7600 000c 3D600000 		.4byte	.LASF832
 7601 0010 05       		.byte	0x5
 7602 0011 9201     		.uleb128 0x92
 7603 0013 F81A0000 		.4byte	.LASF833
 7604 0017 05       		.byte	0x5
 7605 0018 9301     		.uleb128 0x93
 7606 001a 2F5D0000 		.4byte	.LASF834
 7607 001e 00       		.byte	0
 7608              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e,comdat
 7609              	.Ldebug_macro26:
 7610 0000 0400     		.2byte	0x4
 7611 0002 00       		.byte	0
 7612 0003 05       		.byte	0x5
 7613 0004 AB01     		.uleb128 0xab
 7614 0006 118F0000 		.4byte	.LASF835
 7615 000a 05       		.byte	0x5
 7616 000b AF01     		.uleb128 0xaf
 7617 000d 1C840000 		.4byte	.LASF836
 7618 0011 05       		.byte	0x5
 7619 0012 B301     		.uleb128 0xb3
 7620 0014 105D0000 		.4byte	.LASF837
 7621 0018 05       		.byte	0x5
 7622 0019 B701     		.uleb128 0xb7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 174


 7623 001b E32E0000 		.4byte	.LASF838
 7624 001f 05       		.byte	0x5
 7625 0020 BB01     		.uleb128 0xbb
 7626 0022 A5050000 		.4byte	.LASF839
 7627 0026 05       		.byte	0x5
 7628 0027 BF01     		.uleb128 0xbf
 7629 0029 5E860000 		.4byte	.LASF840
 7630 002d 05       		.byte	0x5
 7631 002e C701     		.uleb128 0xc7
 7632 0030 902A0000 		.4byte	.LASF841
 7633 0034 05       		.byte	0x5
 7634 0035 D301     		.uleb128 0xd3
 7635 0037 5E140000 		.4byte	.LASF842
 7636 003b 05       		.byte	0x5
 7637 003c DF01     		.uleb128 0xdf
 7638 003e 35240000 		.4byte	.LASF843
 7639 0042 05       		.byte	0x5
 7640 0043 EF01     		.uleb128 0xef
 7641 0045 E86B0000 		.4byte	.LASF844
 7642 0049 05       		.byte	0x5
 7643 004a F301     		.uleb128 0xf3
 7644 004c C28F0000 		.4byte	.LASF845
 7645 0050 05       		.byte	0x5
 7646 0051 F701     		.uleb128 0xf7
 7647 0053 F1740000 		.4byte	.LASF846
 7648 0057 05       		.byte	0x5
 7649 0058 FE01     		.uleb128 0xfe
 7650 005a 000D0000 		.4byte	.LASF847
 7651 005e 05       		.byte	0x5
 7652 005f 9302     		.uleb128 0x113
 7653 0061 E6100000 		.4byte	.LASF848
 7654 0065 05       		.byte	0x5
 7655 0066 9702     		.uleb128 0x117
 7656 0068 BF630000 		.4byte	.LASF849
 7657 006c 05       		.byte	0x5
 7658 006d A402     		.uleb128 0x124
 7659 006f 231C0000 		.4byte	.LASF850
 7660 0073 05       		.byte	0x5
 7661 0074 A802     		.uleb128 0x128
 7662 0076 C0220000 		.4byte	.LASF851
 7663 007a 05       		.byte	0x5
 7664 007b AC02     		.uleb128 0x12c
 7665 007d 5F0C0000 		.4byte	.LASF852
 7666 0081 05       		.byte	0x5
 7667 0082 B902     		.uleb128 0x139
 7668 0084 2A7D0000 		.4byte	.LASF853
 7669 0088 05       		.byte	0x5
 7670 0089 C002     		.uleb128 0x140
 7671 008b F7070000 		.4byte	.LASF854
 7672 008f 05       		.byte	0x5
 7673 0090 C602     		.uleb128 0x146
 7674 0092 D6070000 		.4byte	.LASF855
 7675 0096 05       		.byte	0x5
 7676 0097 CC02     		.uleb128 0x14c
 7677 0099 31010000 		.4byte	.LASF856
 7678 009d 05       		.byte	0x5
 7679 009e D202     		.uleb128 0x152
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 175


 7680 00a0 DE860000 		.4byte	.LASF857
 7681 00a4 05       		.byte	0x5
 7682 00a5 D702     		.uleb128 0x157
 7683 00a7 05340000 		.4byte	.LASF858
 7684 00ab 05       		.byte	0x5
 7685 00ac DC02     		.uleb128 0x15c
 7686 00ae FB030000 		.4byte	.LASF859
 7687 00b2 05       		.byte	0x5
 7688 00b3 E202     		.uleb128 0x162
 7689 00b5 DA540000 		.4byte	.LASF860
 7690 00b9 05       		.byte	0x5
 7691 00ba EB02     		.uleb128 0x16b
 7692 00bc 670B0000 		.4byte	.LASF861
 7693 00c0 05       		.byte	0x5
 7694 00c1 F302     		.uleb128 0x173
 7695 00c3 45210000 		.4byte	.LASF862
 7696 00c7 05       		.byte	0x5
 7697 00c8 FB02     		.uleb128 0x17b
 7698 00ca AB6E0000 		.4byte	.LASF863
 7699 00ce 05       		.byte	0x5
 7700 00cf 8303     		.uleb128 0x183
 7701 00d1 AA7D0000 		.4byte	.LASF864
 7702 00d5 05       		.byte	0x5
 7703 00d6 8D03     		.uleb128 0x18d
 7704 00d8 D75D0000 		.4byte	.LASF865
 7705 00dc 05       		.byte	0x5
 7706 00dd 9103     		.uleb128 0x191
 7707 00df 471F0000 		.4byte	.LASF866
 7708 00e3 05       		.byte	0x5
 7709 00e4 9503     		.uleb128 0x195
 7710 00e6 742B0000 		.4byte	.LASF867
 7711 00ea 05       		.byte	0x5
 7712 00eb 9903     		.uleb128 0x199
 7713 00ed 19540000 		.4byte	.LASF868
 7714 00f1 05       		.byte	0x5
 7715 00f2 9D03     		.uleb128 0x19d
 7716 00f4 DD7C0000 		.4byte	.LASF869
 7717 00f8 05       		.byte	0x5
 7718 00f9 A103     		.uleb128 0x1a1
 7719 00fb 725C0000 		.4byte	.LASF870
 7720 00ff 05       		.byte	0x5
 7721 0100 A503     		.uleb128 0x1a5
 7722 0102 122A0000 		.4byte	.LASF871
 7723 0106 05       		.byte	0x5
 7724 0107 A903     		.uleb128 0x1a9
 7725 0109 FB750000 		.4byte	.LASF872
 7726 010d 05       		.byte	0x5
 7727 010e AD03     		.uleb128 0x1ad
 7728 0110 576F0000 		.4byte	.LASF873
 7729 0114 05       		.byte	0x5
 7730 0115 B103     		.uleb128 0x1b1
 7731 0117 4D6D0000 		.4byte	.LASF874
 7732 011b 05       		.byte	0x5
 7733 011c B503     		.uleb128 0x1b5
 7734 011e E23A0000 		.4byte	.LASF875
 7735 0122 05       		.byte	0x5
 7736 0123 B903     		.uleb128 0x1b9
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 176


 7737 0125 3D0A0000 		.4byte	.LASF876
 7738 0129 05       		.byte	0x5
 7739 012a BD03     		.uleb128 0x1bd
 7740 012c 8E7F0000 		.4byte	.LASF877
 7741 0130 05       		.byte	0x5
 7742 0131 C103     		.uleb128 0x1c1
 7743 0133 976C0000 		.4byte	.LASF878
 7744 0137 05       		.byte	0x5
 7745 0138 C503     		.uleb128 0x1c5
 7746 013a 93120000 		.4byte	.LASF879
 7747 013e 05       		.byte	0x5
 7748 013f C903     		.uleb128 0x1c9
 7749 0141 D37B0000 		.4byte	.LASF880
 7750 0145 05       		.byte	0x5
 7751 0146 CD03     		.uleb128 0x1cd
 7752 0148 A8600000 		.4byte	.LASF881
 7753 014c 05       		.byte	0x5
 7754 014d D103     		.uleb128 0x1d1
 7755 014f E3630000 		.4byte	.LASF882
 7756 0153 05       		.byte	0x5
 7757 0154 D503     		.uleb128 0x1d5
 7758 0156 798E0000 		.4byte	.LASF883
 7759 015a 05       		.byte	0x5
 7760 015b D903     		.uleb128 0x1d9
 7761 015d 0E5A0000 		.4byte	.LASF884
 7762 0161 05       		.byte	0x5
 7763 0162 DD03     		.uleb128 0x1dd
 7764 0164 814D0000 		.4byte	.LASF885
 7765 0168 05       		.byte	0x5
 7766 0169 E103     		.uleb128 0x1e1
 7767 016b F1200000 		.4byte	.LASF886
 7768 016f 05       		.byte	0x5
 7769 0170 E503     		.uleb128 0x1e5
 7770 0172 733B0000 		.4byte	.LASF887
 7771 0176 05       		.byte	0x5
 7772 0177 E903     		.uleb128 0x1e9
 7773 0179 53590000 		.4byte	.LASF888
 7774 017d 05       		.byte	0x5
 7775 017e ED03     		.uleb128 0x1ed
 7776 0180 D7310000 		.4byte	.LASF889
 7777 0184 05       		.byte	0x5
 7778 0185 F103     		.uleb128 0x1f1
 7779 0187 D11E0000 		.4byte	.LASF890
 7780 018b 05       		.byte	0x5
 7781 018c F503     		.uleb128 0x1f5
 7782 018e AD390000 		.4byte	.LASF891
 7783 0192 05       		.byte	0x5
 7784 0193 F903     		.uleb128 0x1f9
 7785 0195 42620000 		.4byte	.LASF892
 7786 0199 05       		.byte	0x5
 7787 019a FD03     		.uleb128 0x1fd
 7788 019c 83750000 		.4byte	.LASF893
 7789 01a0 05       		.byte	0x5
 7790 01a1 8104     		.uleb128 0x201
 7791 01a3 B65C0000 		.4byte	.LASF894
 7792 01a7 05       		.byte	0x5
 7793 01a8 8504     		.uleb128 0x205
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 177


 7794 01aa 342F0000 		.4byte	.LASF895
 7795 01ae 05       		.byte	0x5
 7796 01af 8904     		.uleb128 0x209
 7797 01b1 765A0000 		.4byte	.LASF896
 7798 01b5 05       		.byte	0x5
 7799 01b6 8D04     		.uleb128 0x20d
 7800 01b8 AF0C0000 		.4byte	.LASF897
 7801 01bc 05       		.byte	0x5
 7802 01bd 9104     		.uleb128 0x211
 7803 01bf AE1A0000 		.4byte	.LASF898
 7804 01c3 05       		.byte	0x5
 7805 01c4 9504     		.uleb128 0x215
 7806 01c6 55620000 		.4byte	.LASF899
 7807 01ca 05       		.byte	0x5
 7808 01cb 9904     		.uleb128 0x219
 7809 01cd 8A300000 		.4byte	.LASF900
 7810 01d1 05       		.byte	0x5
 7811 01d2 9D04     		.uleb128 0x21d
 7812 01d4 810D0000 		.4byte	.LASF901
 7813 01d8 05       		.byte	0x5
 7814 01d9 A104     		.uleb128 0x221
 7815 01db AB640000 		.4byte	.LASF902
 7816 01df 05       		.byte	0x5
 7817 01e0 A504     		.uleb128 0x225
 7818 01e2 71140000 		.4byte	.LASF903
 7819 01e6 05       		.byte	0x5
 7820 01e7 A904     		.uleb128 0x229
 7821 01e9 34770000 		.4byte	.LASF904
 7822 01ed 05       		.byte	0x5
 7823 01ee AD04     		.uleb128 0x22d
 7824 01f0 D2790000 		.4byte	.LASF905
 7825 01f4 05       		.byte	0x5
 7826 01f5 B104     		.uleb128 0x231
 7827 01f7 681E0000 		.4byte	.LASF906
 7828 01fb 05       		.byte	0x5
 7829 01fc B504     		.uleb128 0x235
 7830 01fe 48890000 		.4byte	.LASF907
 7831 0202 05       		.byte	0x5
 7832 0203 B904     		.uleb128 0x239
 7833 0205 7F020000 		.4byte	.LASF908
 7834 0209 05       		.byte	0x5
 7835 020a BD04     		.uleb128 0x23d
 7836 020c 630A0000 		.4byte	.LASF909
 7837 0210 05       		.byte	0x5
 7838 0211 C104     		.uleb128 0x241
 7839 0213 B7820000 		.4byte	.LASF910
 7840 0217 05       		.byte	0x5
 7841 0218 C504     		.uleb128 0x245
 7842 021a 263E0000 		.4byte	.LASF911
 7843 021e 05       		.byte	0x5
 7844 021f C904     		.uleb128 0x249
 7845 0221 35040000 		.4byte	.LASF912
 7846 0225 05       		.byte	0x5
 7847 0226 CD04     		.uleb128 0x24d
 7848 0228 50340000 		.4byte	.LASF913
 7849 022c 05       		.byte	0x5
 7850 022d D104     		.uleb128 0x251
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 178


 7851 022f 8B620000 		.4byte	.LASF914
 7852 0233 05       		.byte	0x5
 7853 0234 D504     		.uleb128 0x255
 7854 0236 301B0000 		.4byte	.LASF915
 7855 023a 05       		.byte	0x5
 7856 023b D904     		.uleb128 0x259
 7857 023d 06350000 		.4byte	.LASF916
 7858 0241 05       		.byte	0x5
 7859 0242 DD04     		.uleb128 0x25d
 7860 0244 AB680000 		.4byte	.LASF917
 7861 0248 05       		.byte	0x5
 7862 0249 E104     		.uleb128 0x261
 7863 024b 562F0000 		.4byte	.LASF918
 7864 024f 05       		.byte	0x5
 7865 0250 F704     		.uleb128 0x277
 7866 0252 2D5F0000 		.4byte	.LASF919
 7867 0256 05       		.byte	0x5
 7868 0257 FB04     		.uleb128 0x27b
 7869 0259 16730000 		.4byte	.LASF920
 7870 025d 05       		.byte	0x5
 7871 025e FF04     		.uleb128 0x27f
 7872 0260 90540000 		.4byte	.LASF921
 7873 0264 05       		.byte	0x5
 7874 0265 8305     		.uleb128 0x283
 7875 0267 3E0F0000 		.4byte	.LASF922
 7876 026b 05       		.byte	0x5
 7877 026c 8705     		.uleb128 0x287
 7878 026e 31400000 		.4byte	.LASF923
 7879 0272 05       		.byte	0x5
 7880 0273 8B05     		.uleb128 0x28b
 7881 0275 6E450000 		.4byte	.LASF924
 7882 0279 05       		.byte	0x5
 7883 027a 9305     		.uleb128 0x293
 7884 027c A66D0000 		.4byte	.LASF925
 7885 0280 05       		.byte	0x5
 7886 0281 9B05     		.uleb128 0x29b
 7887 0283 38540000 		.4byte	.LASF926
 7888 0287 05       		.byte	0x5
 7889 0288 9F05     		.uleb128 0x29f
 7890 028a 491E0000 		.4byte	.LASF927
 7891 028e 05       		.byte	0x5
 7892 028f A305     		.uleb128 0x2a3
 7893 0291 EA3C0000 		.4byte	.LASF928
 7894 0295 05       		.byte	0x5
 7895 0296 A705     		.uleb128 0x2a7
 7896 0298 E11A0000 		.4byte	.LASF929
 7897 029c 05       		.byte	0x5
 7898 029d AB05     		.uleb128 0x2ab
 7899 029f 2C6E0000 		.4byte	.LASF930
 7900 02a3 05       		.byte	0x5
 7901 02a4 AF05     		.uleb128 0x2af
 7902 02a6 49730000 		.4byte	.LASF931
 7903 02aa 05       		.byte	0x5
 7904 02ab B305     		.uleb128 0x2b3
 7905 02ad 9C880000 		.4byte	.LASF932
 7906 02b1 05       		.byte	0x5
 7907 02b2 B705     		.uleb128 0x2b7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 179


 7908 02b4 AF5E0000 		.4byte	.LASF933
 7909 02b8 05       		.byte	0x5
 7910 02b9 BB05     		.uleb128 0x2bb
 7911 02bb CC850000 		.4byte	.LASF934
 7912 02bf 05       		.byte	0x5
 7913 02c0 C705     		.uleb128 0x2c7
 7914 02c2 69110000 		.4byte	.LASF935
 7915 02c6 05       		.byte	0x5
 7916 02c7 CB05     		.uleb128 0x2cb
 7917 02c9 F97C0000 		.4byte	.LASF936
 7918 02cd 05       		.byte	0x5
 7919 02ce D505     		.uleb128 0x2d5
 7920 02d0 0B400000 		.4byte	.LASF937
 7921 02d4 05       		.byte	0x5
 7922 02d5 D905     		.uleb128 0x2d9
 7923 02d7 56180000 		.4byte	.LASF938
 7924 02db 05       		.byte	0x5
 7925 02dc DA05     		.uleb128 0x2da
 7926 02de C4510000 		.4byte	.LASF939
 7927 02e2 05       		.byte	0x5
 7928 02e3 DB05     		.uleb128 0x2db
 7929 02e5 463D0000 		.4byte	.LASF940
 7930 02e9 05       		.byte	0x5
 7931 02ea DC05     		.uleb128 0x2dc
 7932 02ec 36450000 		.4byte	.LASF941
 7933 02f0 05       		.byte	0x5
 7934 02f1 DD05     		.uleb128 0x2dd
 7935 02f3 85500000 		.4byte	.LASF942
 7936 02f7 05       		.byte	0x5
 7937 02f8 DE05     		.uleb128 0x2de
 7938 02fa F1510000 		.4byte	.LASF943
 7939 02fe 05       		.byte	0x5
 7940 02ff DF05     		.uleb128 0x2df
 7941 0301 15620000 		.4byte	.LASF944
 7942 0305 05       		.byte	0x5
 7943 0306 E005     		.uleb128 0x2e0
 7944 0308 C31D0000 		.4byte	.LASF945
 7945 030c 05       		.byte	0x5
 7946 030d E105     		.uleb128 0x2e1
 7947 030f F4230000 		.4byte	.LASF946
 7948 0313 05       		.byte	0x5
 7949 0314 E205     		.uleb128 0x2e2
 7950 0316 048C0000 		.4byte	.LASF947
 7951 031a 05       		.byte	0x5
 7952 031b E305     		.uleb128 0x2e3
 7953 031d 24750000 		.4byte	.LASF948
 7954 0321 05       		.byte	0x5
 7955 0322 E405     		.uleb128 0x2e4
 7956 0324 422C0000 		.4byte	.LASF949
 7957 0328 05       		.byte	0x5
 7958 0329 E505     		.uleb128 0x2e5
 7959 032b 9E2E0000 		.4byte	.LASF950
 7960 032f 05       		.byte	0x5
 7961 0330 E605     		.uleb128 0x2e6
 7962 0332 4C6E0000 		.4byte	.LASF951
 7963 0336 05       		.byte	0x5
 7964 0337 E705     		.uleb128 0x2e7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 180


 7965 0339 E6210000 		.4byte	.LASF952
 7966 033d 05       		.byte	0x5
 7967 033e EB05     		.uleb128 0x2eb
 7968 0340 A6570000 		.4byte	.LASF953
 7969 0344 05       		.byte	0x5
 7970 0345 EC05     		.uleb128 0x2ec
 7971 0347 B46C0000 		.4byte	.LASF954
 7972 034b 05       		.byte	0x5
 7973 034c ED05     		.uleb128 0x2ed
 7974 034e 4D8B0000 		.4byte	.LASF955
 7975 0352 05       		.byte	0x5
 7976 0353 EE05     		.uleb128 0x2ee
 7977 0355 EA610000 		.4byte	.LASF956
 7978 0359 00       		.byte	0
 7979              		.section	.debug_macro,"G",%progbits,wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370,comdat
 7980              	.Ldebug_macro27:
 7981 0000 0400     		.2byte	0x4
 7982 0002 00       		.byte	0
 7983 0003 05       		.byte	0x5
 7984 0004 60       		.uleb128 0x60
 7985 0005 DC460000 		.4byte	.LASF958
 7986 0009 05       		.byte	0x5
 7987 000a 7F       		.uleb128 0x7f
 7988 000b C03C0000 		.4byte	.LASF959
 7989 000f 05       		.byte	0x5
 7990 0010 AB01     		.uleb128 0xab
 7991 0012 63840000 		.4byte	.LASF960
 7992 0016 05       		.byte	0x5
 7993 0017 B401     		.uleb128 0xb4
 7994 0019 17390000 		.4byte	.LASF961
 7995 001d 05       		.byte	0x5
 7996 001e BD01     		.uleb128 0xbd
 7997 0020 D5690000 		.4byte	.LASF962
 7998 0024 05       		.byte	0x5
 7999 0025 C701     		.uleb128 0xc7
 8000 0027 1F760000 		.4byte	.LASF963
 8001 002b 05       		.byte	0x5
 8002 002c D001     		.uleb128 0xd0
 8003 002e AD1C0000 		.4byte	.LASF964
 8004 0032 05       		.byte	0x5
 8005 0033 D801     		.uleb128 0xd8
 8006 0035 76040000 		.4byte	.LASF965
 8007 0039 05       		.byte	0x5
 8008 003a E001     		.uleb128 0xe0
 8009 003c 523A0000 		.4byte	.LASF966
 8010 0040 05       		.byte	0x5
 8011 0041 E801     		.uleb128 0xe8
 8012 0043 F9730000 		.4byte	.LASF967
 8013 0047 05       		.byte	0x5
 8014 0048 F101     		.uleb128 0xf1
 8015 004a EC880000 		.4byte	.LASF968
 8016 004e 05       		.byte	0x5
 8017 004f F601     		.uleb128 0xf6
 8018 0051 A8800000 		.4byte	.LASF969
 8019 0055 05       		.byte	0x5
 8020 0056 8C02     		.uleb128 0x10c
 8021 0058 AB770000 		.4byte	.LASF970
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 181


 8022 005c 05       		.byte	0x5
 8023 005d AA02     		.uleb128 0x12a
 8024 005f DE060000 		.4byte	.LASF971
 8025 0063 05       		.byte	0x5
 8026 0064 B502     		.uleb128 0x135
 8027 0066 87150000 		.4byte	.LASF972
 8028 006a 05       		.byte	0x5
 8029 006b BD02     		.uleb128 0x13d
 8030 006d 932D0000 		.4byte	.LASF973
 8031 0071 05       		.byte	0x5
 8032 0072 C402     		.uleb128 0x144
 8033 0074 6B190000 		.4byte	.LASF974
 8034 0078 00       		.byte	0
 8035              		.section	.debug_macro,"G",%progbits,wm4.task.h.84.e110bc08aaffa67ce542955b890201b4,comdat
 8036              	.Ldebug_macro28:
 8037 0000 0400     		.2byte	0x4
 8038 0002 00       		.byte	0
 8039 0003 05       		.byte	0x5
 8040 0004 54       		.uleb128 0x54
 8041 0005 C96F0000 		.4byte	.LASF975
 8042 0009 05       		.byte	0x5
 8043 000a 55       		.uleb128 0x55
 8044 000b 3F510000 		.4byte	.LASF976
 8045 000f 05       		.byte	0x5
 8046 0010 56       		.uleb128 0x56
 8047 0011 D3120000 		.4byte	.LASF977
 8048 0015 05       		.byte	0x5
 8049 0016 57       		.uleb128 0x57
 8050 0017 EF710000 		.4byte	.LASF978
 8051 001b 05       		.byte	0x5
 8052 001c B201     		.uleb128 0xb2
 8053 001e 74680000 		.4byte	.LASF979
 8054 0022 05       		.byte	0x5
 8055 0023 BC01     		.uleb128 0xbc
 8056 0025 56310000 		.4byte	.LASF980
 8057 0029 05       		.byte	0x5
 8058 002a CA01     		.uleb128 0xca
 8059 002c 092D0000 		.4byte	.LASF981
 8060 0030 05       		.byte	0x5
 8061 0031 D801     		.uleb128 0xd8
 8062 0033 7E6D0000 		.4byte	.LASF982
 8063 0037 05       		.byte	0x5
 8064 0038 E201     		.uleb128 0xe2
 8065 003a 43530000 		.4byte	.LASF983
 8066 003e 05       		.byte	0x5
 8067 003f EC01     		.uleb128 0xec
 8068 0041 C2110000 		.4byte	.LASF984
 8069 0045 05       		.byte	0x5
 8070 0046 F101     		.uleb128 0xf1
 8071 0048 AF550000 		.4byte	.LASF985
 8072 004c 05       		.byte	0x5
 8073 004d F201     		.uleb128 0xf2
 8074 004f 97870000 		.4byte	.LASF986
 8075 0053 05       		.byte	0x5
 8076 0054 F301     		.uleb128 0xf3
 8077 0056 6B820000 		.4byte	.LASF987
 8078 005a 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 182


 8079 005b CA02     		.uleb128 0x14a
 8080 005d 9B260000 		.4byte	.LASF988
 8081 0061 05       		.byte	0x5
 8082 0062 8F03     		.uleb128 0x18f
 8083 0064 31700000 		.4byte	.LASF989
 8084 0068 00       		.byte	0
 8085              		.section	.debug_macro,"G",%progbits,wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94,comdat
 8086              	.Ldebug_macro29:
 8087 0000 0400     		.2byte	0x4
 8088 0002 00       		.byte	0
 8089 0003 05       		.byte	0x5
 8090 0004 44       		.uleb128 0x44
 8091 0005 52600000 		.4byte	.LASF990
 8092 0009 05       		.byte	0x5
 8093 000a 65       		.uleb128 0x65
 8094 000b 52000000 		.4byte	.LASF991
 8095 000f 05       		.byte	0x5
 8096 0010 66       		.uleb128 0x66
 8097 0011 AA410000 		.4byte	.LASF992
 8098 0015 05       		.byte	0x5
 8099 0016 67       		.uleb128 0x67
 8100 0017 11190000 		.4byte	.LASF993
 8101 001b 05       		.byte	0x5
 8102 001c 6A       		.uleb128 0x6a
 8103 001d 29150000 		.4byte	.LASF994
 8104 0021 05       		.byte	0x5
 8105 0022 6B       		.uleb128 0x6b
 8106 0023 76810000 		.4byte	.LASF995
 8107 0027 05       		.byte	0x5
 8108 0028 6C       		.uleb128 0x6c
 8109 0029 CC600000 		.4byte	.LASF996
 8110 002d 05       		.byte	0x5
 8111 002e 6D       		.uleb128 0x6d
 8112 002f 356B0000 		.4byte	.LASF997
 8113 0033 05       		.byte	0x5
 8114 0034 6E       		.uleb128 0x6e
 8115 0035 561B0000 		.4byte	.LASF998
 8116 0039 05       		.byte	0x5
 8117 003a 6F       		.uleb128 0x6f
 8118 003b D08A0000 		.4byte	.LASF999
 8119 003f 05       		.byte	0x5
 8120 0040 A901     		.uleb128 0xa9
 8121 0042 5A420000 		.4byte	.LASF1000
 8122 0046 05       		.byte	0x5
 8123 0047 FB01     		.uleb128 0xfb
 8124 0049 5B520000 		.4byte	.LASF1001
 8125 004d 05       		.byte	0x5
 8126 004e CD02     		.uleb128 0x14d
 8127 0050 B1090000 		.4byte	.LASF1002
 8128 0054 05       		.byte	0x5
 8129 0055 A103     		.uleb128 0x1a1
 8130 0057 02430000 		.4byte	.LASF1003
 8131 005b 05       		.byte	0x5
 8132 005c F403     		.uleb128 0x1f4
 8133 005e DC890000 		.4byte	.LASF1004
 8134 0062 05       		.byte	0x5
 8135 0063 AC05     		.uleb128 0x2ac
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 183


 8136 0065 70080000 		.4byte	.LASF1005
 8137 0069 05       		.byte	0x5
 8138 006a AA06     		.uleb128 0x32a
 8139 006c 72480000 		.4byte	.LASF1006
 8140 0070 05       		.byte	0x5
 8141 0071 8108     		.uleb128 0x401
 8142 0073 640E0000 		.4byte	.LASF1007
 8143 0077 05       		.byte	0x5
 8144 0078 C808     		.uleb128 0x448
 8145 007a DD190000 		.4byte	.LASF1008
 8146 007e 05       		.byte	0x5
 8147 007f 9F09     		.uleb128 0x49f
 8148 0081 74670000 		.4byte	.LASF1009
 8149 0085 05       		.byte	0x5
 8150 0086 E909     		.uleb128 0x4e9
 8151 0088 447A0000 		.4byte	.LASF1010
 8152 008c 05       		.byte	0x5
 8153 008d AB0B     		.uleb128 0x5ab
 8154 008f 544E0000 		.4byte	.LASF1011
 8155 0093 05       		.byte	0x5
 8156 0094 AC0B     		.uleb128 0x5ac
 8157 0096 34440000 		.4byte	.LASF1012
 8158 009a 05       		.byte	0x5
 8159 009b AD0B     		.uleb128 0x5ad
 8160 009d 3E850000 		.4byte	.LASF1013
 8161 00a1 05       		.byte	0x5
 8162 00a2 AE0B     		.uleb128 0x5ae
 8163 00a4 9D5F0000 		.4byte	.LASF1014
 8164 00a8 05       		.byte	0x5
 8165 00a9 D40B     		.uleb128 0x5d4
 8166 00ab B6380000 		.4byte	.LASF1015
 8167 00af 00       		.byte	0
 8168              		.section	.debug_line,"",%progbits
 8169              	.Ldebug_line0:
 8170 0000 03080000 		.section	.debug_str,"MS",%progbits,1
 8170      0200D702 
 8170      00000201 
 8170      FB0E0D00 
 8170      01010101 
 8171              	.LASF574:
 8172 0000 5F5F474E 		.ascii	"__GNUCLIKE___SECTION 1\000"
 8172      55434C49 
 8172      4B455F5F 
 8172      5F534543 
 8172      54494F4E 
 8173              	.LASF1107:
 8174 0017 70764974 		.ascii	"pvItemToQueue\000"
 8174      656D546F 
 8174      51756575 
 8174      6500
 8175              	.LASF1103:
 8176 0025 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8176      75654372 
 8176      65617465 
 8176      436F756E 
 8176      74696E67 
 8177              	.LASF294:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 184


 8178 0043 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
 8178      415F4642 
 8178      49545F5F 
 8178      203800
 8179              	.LASF991:
 8180 0052 71756575 		.ascii	"queueSEND_TO_BACK ( ( BaseT_t ) 0 )\000"
 8180      6553454E 
 8180      445F544F 
 8180      5F424143 
 8180      4B202820 
 8181              	.LASF1041:
 8182 0076 696E7438 		.ascii	"int8_t\000"
 8182      5F7400
 8183              	.LASF184:
 8184 007d 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
 8184      43313238 
 8184      5F455053 
 8184      494C4F4E 
 8184      5F5F2031 
 8185              	.LASF655:
 8186 0098 5F5F636F 		.ascii	"__compar_fn_t_defined \000"
 8186      6D706172 
 8186      5F666E5F 
 8186      745F6465 
 8186      66696E65 
 8187              	.LASF545:
 8188 00af 5F524545 		.ascii	"_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._ge"
 8188      4E545F47 
 8188      45544441 
 8188      54455F45 
 8188      52525F50 
 8189 00e2 74646174 		.ascii	"tdate_err))\000"
 8189      655F6572 
 8189      72292900 
 8190              	.LASF306:
 8191 00ee 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 8191      41525F55 
 8191      4E534947 
 8191      4E45445F 
 8191      5F203100 
 8192              	.LASF1027:
 8193 0102 73697A65 		.ascii	"size_t\000"
 8193      5F7400
 8194              	.LASF550:
 8195 0109 5F474C4F 		.ascii	"_GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)\000"
 8195      42414C5F 
 8195      41544558 
 8195      49542028 
 8195      5F474C4F 
 8196              	.LASF856:
 8197 0131 74726163 		.ascii	"traceTASK_SWITCHED_IN() \000"
 8197      65544153 
 8197      4B5F5357 
 8197      49544348 
 8197      45445F49 
 8198              	.LASF186:
 8199 014a 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 185


 8199      52414354 
 8199      5F464249 
 8199      545F5F20 
 8199      3700
 8200              	.LASF1039:
 8201 015c 73697A65 		.ascii	"sizetype\000"
 8201      74797065 
 8201      00
 8202              	.LASF71:
 8203 0165 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 9223372036854775807LL\000"
 8203      4E475F4C 
 8203      4F4E475F 
 8203      4D41585F 
 8203      5F203932 
 8204              	.LASF755:
 8205 018d 636F6E66 		.ascii	"configIDLE_SHOULD_YIELD 0\000"
 8205      69674944 
 8205      4C455F53 
 8205      484F554C 
 8205      445F5949 
 8206              	.LASF690:
 8207 01a7 494E5431 		.ascii	"INT16_MIN (-__INT16_MAX__ - 1)\000"
 8207      365F4D49 
 8207      4E20282D 
 8207      5F5F494E 
 8207      5431365F 
 8208              	.LASF258:
 8209 01c6 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 8209      41434355 
 8209      4D5F4D49 
 8209      4E5F5F20 
 8209      282D3058 
 8210              	.LASF250:
 8211 01ed 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 8211      4343554D 
 8211      5F455053 
 8211      494C4F4E 
 8211      5F5F2030 
 8212              	.LASF1084:
 8213 020a 70635175 		.ascii	"pcQueueName\000"
 8213      6575654E 
 8213      616D6500 
 8214              	.LASF183:
 8215 0216 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 8215      43313238 
 8215      5F4D4158 
 8215      5F5F2039 
 8215      2E393939 
 8216 0249 36313434 		.ascii	"6144DL\000"
 8216      444C00
 8217              	.LASF404:
 8218 0250 5F4C4F4E 		.ascii	"_LONG_DOUBLE long double\000"
 8218      475F444F 
 8218      55424C45 
 8218      206C6F6E 
 8218      6720646F 
 8219              	.LASF79:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 186


 8220 0269 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
 8220      544D4158 
 8220      5F432863 
 8220      29206320 
 8220      2323204C 
 8221              	.LASF908:
 8222 027f 74726163 		.ascii	"traceEVENT_GROUP_SYNC_END(xEventGroup,uxBitsToSet,u"
 8222      65455645 
 8222      4E545F47 
 8222      524F5550 
 8222      5F53594E 
 8223 02b2 78426974 		.ascii	"xBitsToWaitFor,xTimeoutOccurred) ( void ) xTimeoutO"
 8223      73546F57 
 8223      61697446 
 8223      6F722C78 
 8223      54696D65 
 8224 02e5 63637572 		.ascii	"ccurred\000"
 8224      72656400 
 8225              	.LASF772:
 8226 02ed 494E434C 		.ascii	"INCLUDE_uxTaskGetStackHighWaterMark 1\000"
 8226      5544455F 
 8226      75785461 
 8226      736B4765 
 8226      74537461 
 8227              	.LASF171:
 8228 0313 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 8228      4333325F 
 8228      5355424E 
 8228      4F524D41 
 8228      4C5F4D49 
 8229              	.LASF275:
 8230 033a 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 8230      5F494249 
 8230      545F5F20 
 8230      3000
 8231              	.LASF731:
 8232 0348 57494E54 		.ascii	"WINT_MIN __WINT_MIN__\000"
 8232      5F4D494E 
 8232      205F5F57 
 8232      494E545F 
 8232      4D494E5F 
 8233              	.LASF511:
 8234 035e 5F524545 		.ascii	"_REENT_SIGNAL_SIZE 24\000"
 8234      4E545F53 
 8234      49474E41 
 8234      4C5F5349 
 8234      5A452032 
 8235              	.LASF760:
 8236 0374 636F6E66 		.ascii	"configUSE_ALTERNATIVE_API 0\000"
 8236      69675553 
 8236      455F414C 
 8236      5445524E 
 8236      41544956 
 8237              	.LASF546:
 8238 0390 5F4B6D61 		.ascii	"_Kmax (sizeof (size_t) << 3)\000"
 8238      78202873 
 8238      697A656F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 187


 8238      66202873 
 8238      697A655F 
 8239              	.LASF11:
 8240 03ad 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 8240      4F4D4943 
 8240      5F434F4E 
 8240      53554D45 
 8240      203100
 8241              	.LASF208:
 8242 03c0 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 8242      52414354 
 8242      5F4D494E 
 8242      5F5F2028 
 8242      2D302E35 
 8243              	.LASF594:
 8244 03de 5F5F434F 		.ascii	"__CONCAT(x,y) __CONCAT1(x,y)\000"
 8244      4E434154 
 8244      28782C79 
 8244      29205F5F 
 8244      434F4E43 
 8245              	.LASF859:
 8246 03fb 74726163 		.ascii	"traceLOW_POWER_IDLE_END() \000"
 8246      654C4F57 
 8246      5F504F57 
 8246      45525F49 
 8246      444C455F 
 8247              	.LASF1116:
 8248 0416 70764275 		.ascii	"pvBuffer\000"
 8248      66666572 
 8248      00
 8249              	.LASF572:
 8250 041f 5F5F474E 		.ascii	"__GNUCLIKE___TYPEOF 1\000"
 8250      55434C49 
 8250      4B455F5F 
 8250      5F545950 
 8250      454F4620 
 8251              	.LASF912:
 8252 0435 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS_FROM_ISR(xEventGroup,ux"
 8252      65455645 
 8252      4E545F47 
 8252      524F5550 
 8252      5F434C45 
 8253 0468 42697473 		.ascii	"BitsToClear) \000"
 8253      546F436C 
 8253      65617229 
 8253      2000
 8254              	.LASF965:
 8255 0476 6C697374 		.ascii	"listGET_HEAD_ENTRY(pxList) ( ( ( pxList )->xListEnd"
 8255      4745545F 
 8255      48454144 
 8255      5F454E54 
 8255      52592870 
 8256 04a9 20292E70 		.ascii	" ).pxNext )\000"
 8256      784E6578 
 8256      74202900 
 8257              	.LASF703:
 8258 04b5 494E5436 		.ascii	"INT64_MAX __INT64_MAX__\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 188


 8258      345F4D41 
 8258      58205F5F 
 8258      494E5436 
 8258      345F4D41 
 8259              	.LASF15:
 8260 04cd 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 8260      5A454F46 
 8260      5F4C4F4E 
 8260      475F4C4F 
 8260      4E475F5F 
 8261              	.LASF142:
 8262 04e4 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 8262      4C5F4D41 
 8262      585F3130 
 8262      5F455850 
 8262      5F5F2033 
 8263              	.LASF641:
 8264 04fb 5F5F5243 		.ascii	"__RCSID_SOURCE(s) struct __hack\000"
 8264      5349445F 
 8264      534F5552 
 8264      43452873 
 8264      29207374 
 8265              	.LASF198:
 8266 051b 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
 8266      4143545F 
 8266      4D494E5F 
 8266      5F20282D 
 8266      302E3552 
 8267              	.LASF264:
 8268 0536 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 8268      4C414343 
 8268      554D5F4D 
 8268      41585F5F 
 8268      20305846 
 8269              	.LASF234:
 8270 0562 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 8270      41434355 
 8270      4D5F4D41 
 8270      585F5F20 
 8270      30584646 
 8271              	.LASF168:
 8272 057f 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
 8272      4333325F 
 8272      4D494E5F 
 8272      5F203145 
 8272      2D393544 
 8273              	.LASF346:
 8274 0595 5F5F4152 		.ascii	"__ARM_NEON_FP 4\000"
 8274      4D5F4E45 
 8274      4F4E5F46 
 8274      50203400 
 8275              	.LASF839:
 8276 05a5 494E434C 		.ascii	"INCLUDE_pcTaskGetTaskName 0\000"
 8276      5544455F 
 8276      70635461 
 8276      736B4765 
 8276      74546173 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 189


 8277              	.LASF271:
 8278 05c1 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 8278      5F494249 
 8278      545F5F20 
 8278      3000
 8279              	.LASF25:
 8280 05cf 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 8280      4445525F 
 8280      5044505F 
 8280      454E4449 
 8280      414E5F5F 
 8281              	.LASF29:
 8282 05e9 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 8282      5A455F54 
 8282      5950455F 
 8282      5F20756E 
 8282      7369676E 
 8283              	.LASF174:
 8284 0604 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 8284      4336345F 
 8284      4D41585F 
 8284      4558505F 
 8284      5F203338 
 8285              	.LASF530:
 8286 061a 5F524545 		.ascii	"_REENT_MP_FREELIST(ptr) ((ptr)->_freelist)\000"
 8286      4E545F4D 
 8286      505F4652 
 8286      45454C49 
 8286      53542870 
 8287              	.LASF134:
 8288 0645 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 8288      545F4841 
 8288      535F4445 
 8288      4E4F524D 
 8288      5F5F2031 
 8289              	.LASF38:
 8290 065a 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 8290      54385F54 
 8290      5950455F 
 8290      5F207369 
 8290      676E6564 
 8291              	.LASF334:
 8292 0674 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 8292      4D5F4152 
 8292      43485F50 
 8292      524F4649 
 8292      4C452037 
 8293              	.LASF1119:
 8294 068a 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8294      75655265 
 8294      63656976 
 8294      6546726F 
 8294      6D495352 
 8295              	.LASF1061:
 8296 069f 7854494D 		.ascii	"xTIME_OUT\000"
 8296      455F4F55 
 8296      5400
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 190


 8297              	.LASF398:
 8298 06a9 5F455846 		.ascii	"_EXFUN(name,proto) name proto\000"
 8298      554E286E 
 8298      616D652C 
 8298      70726F74 
 8298      6F29206E 
 8299              	.LASF769:
 8300 06c7 494E434C 		.ascii	"INCLUDE_vTaskSuspend 1\000"
 8300      5544455F 
 8300      76546173 
 8300      6B537573 
 8300      70656E64 
 8301              	.LASF971:
 8302 06de 6C697374 		.ascii	"listGET_OWNER_OF_HEAD_ENTRY(pxList) ( (&( ( pxList "
 8302      4745545F 
 8302      4F574E45 
 8302      525F4F46 
 8302      5F484541 
 8303 0711 292D3E78 		.ascii	")->xListEnd ))->pxNext->pvOwner )\000"
 8303      4C697374 
 8303      456E6420 
 8303      29292D3E 
 8303      70784E65 
 8304              	.LASF157:
 8305 0733 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 8305      43494D41 
 8305      4C5F4449 
 8305      475F5F20 
 8305      313700
 8306              	.LASF153:
 8307 0746 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 8307      424C5F4D 
 8307      494E5F45 
 8307      58505F5F 
 8307      20282D31 
 8308              	.LASF151:
 8309 075f 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 8309      424C5F4D 
 8309      414E545F 
 8309      4449475F 
 8309      5F203533 
 8310              	.LASF1117:
 8311 0774 784A7573 		.ascii	"xJustPeeking\000"
 8311      74506565 
 8311      6B696E67 
 8311      00
 8312              	.LASF101:
 8313 0781 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 8313      4E54385F 
 8313      43286329 
 8313      206300
 8314              	.LASF39:
 8315 0790 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 8315      5431365F 
 8315      54595045 
 8315      5F5F2073 
 8315      686F7274 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 191


 8316              	.LASF605:
 8317 07a9 5F5F616C 		.ascii	"__aligned(x) __attribute__((__aligned__(x)))\000"
 8317      69676E65 
 8317      64287829 
 8317      205F5F61 
 8317      74747269 
 8318              	.LASF855:
 8319 07d6 74726163 		.ascii	"traceEND() \000"
 8319      65454E44 
 8319      28292000 
 8320              	.LASF650:
 8321 07e2 5F5F4953 		.ascii	"__ISO_C_VISIBLE 2011\000"
 8321      4F5F435F 
 8321      56495349 
 8321      424C4520 
 8321      32303131 
 8322              	.LASF854:
 8323 07f7 74726163 		.ascii	"traceSTART() \000"
 8323      65535441 
 8323      52542829 
 8323      2000
 8324              	.LASF563:
 8325 0805 5F5F756E 		.ascii	"__unbounded \000"
 8325      626F756E 
 8325      64656420 
 8325      00
 8326              	.LASF718:
 8327 0812 494E545F 		.ascii	"INT_FAST64_MAX __INT_FAST64_MAX__\000"
 8327      46415354 
 8327      36345F4D 
 8327      4158205F 
 8327      5F494E54 
 8328              	.LASF307:
 8329 0834 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 8329      435F4841 
 8329      56455F53 
 8329      594E435F 
 8329      434F4D50 
 8330              	.LASF54:
 8331 0859 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 8331      545F4641 
 8331      5354385F 
 8331      54595045 
 8331      5F5F2069 
 8332              	.LASF1005:
 8333 0870 78517565 		.ascii	"xQueuePeek(xQueue,pvBuffer,xTicksToWait) xQueueGene"
 8333      75655065 
 8333      656B2878 
 8333      51756575 
 8333      652C7076 
 8334 08a3 72696352 		.ascii	"ricReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWai"
 8334      65636569 
 8334      76652820 
 8334      28207851 
 8334      75657565 
 8335 08d6 7420292C 		.ascii	"t ), pdTRUE )\000"
 8335      20706454 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 192


 8335      52554520 
 8335      2900
 8336              	.LASF1:
 8337 08e4 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 8337      44435F48 
 8337      4F535445 
 8337      445F5F20 
 8337      3100
 8338              	.LASF221:
 8339 08f6 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 8339      4C465241 
 8339      43545F46 
 8339      4249545F 
 8339      5F203634 
 8340              	.LASF1085:
 8341 090b 7848616E 		.ascii	"xHandle\000"
 8341      646C6500 
 8342              	.LASF527:
 8343 0913 5F524545 		.ascii	"_REENT_MP_RESULT(ptr) ((ptr)->_result)\000"
 8343      4E545F4D 
 8343      505F5245 
 8343      53554C54 
 8343      28707472 
 8344              	.LASF57:
 8345 093a 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 8345      545F4641 
 8345      53543634 
 8345      5F545950 
 8345      455F5F20 
 8346              	.LASF32:
 8347 095c 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 8347      4E545F54 
 8347      5950455F 
 8347      5F20756E 
 8347      7369676E 
 8348              	.LASF534:
 8349 0977 5F524545 		.ascii	"_REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok"
 8349      4E545F53 
 8349      5452544F 
 8349      4B5F4C41 
 8349      53542870 
 8350 09aa 5F6C6173 		.ascii	"_last)\000"
 8350      742900
 8351              	.LASF1002:
 8352 09b1 78517565 		.ascii	"xQueueSendToBack(xQueue,pvItemToQueue,xTicksToWait)"
 8352      75655365 
 8352      6E64546F 
 8352      4261636B 
 8352      28785175 
 8353 09e4 20785175 		.ascii	" xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), "
 8353      65756547 
 8353      656E6572 
 8353      69635365 
 8353      6E642820 
 8354 0a17 28207854 		.ascii	"( xTicksToWait ), queueSEND_TO_BACK )\000"
 8354      69636B73 
 8354      546F5761 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 193


 8354      69742029 
 8354      2C207175 
 8355              	.LASF876:
 8356 0a3d 74726163 		.ascii	"traceQUEUE_SEND(pxQueue) \000"
 8356      65515545 
 8356      55455F53 
 8356      454E4428 
 8356      70785175 
 8357              	.LASF414:
 8358 0a57 5F5F5349 		.ascii	"__SIZE_T__ \000"
 8358      5A455F54 
 8358      5F5F2000 
 8359              	.LASF909:
 8360 0a63 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_BLOCK(xEventGroup,uxBits"
 8360      65455645 
 8360      4E545F47 
 8360      524F5550 
 8360      5F574149 
 8361 0a96 546F5761 		.ascii	"ToWaitFor) \000"
 8361      6974466F 
 8361      72292000 
 8362              	.LASF91:
 8363 0aa2 5F5F5549 		.ascii	"__UINT64_MAX__ 18446744073709551615ULL\000"
 8363      4E543634 
 8363      5F4D4158 
 8363      5F5F2031 
 8363      38343436 
 8364              	.LASF1139:
 8365 0ac9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8365      4320342E 
 8365      392E3320 
 8365      32303135 
 8365      30333033 
 8366 0afc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -g"
 8366      20726576 
 8366      6973696F 
 8366      6E203232 
 8366      31323230 
 8367 0b2f 67646233 		.ascii	"gdb3 -O0 -std=gnu90 -ffunction-sections -fdata-sect"
 8367      202D4F30 
 8367      202D7374 
 8367      643D676E 
 8367      75393020 
 8368 0b62 696F6E73 		.ascii	"ions\000"
 8368      00
 8369              	.LASF861:
 8370 0b67 74726163 		.ascii	"traceTASK_PRIORITY_INHERIT(pxTCBOfMutexHolder,uxInh"
 8370      65544153 
 8370      4B5F5052 
 8370      494F5249 
 8370      54595F49 
 8371 0b9a 65726974 		.ascii	"eritedPriority) \000"
 8371      65645072 
 8371      696F7269 
 8371      74792920 
 8371      00
 8372              	.LASF194:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 194


 8373 0bab 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
 8373      46524143 
 8373      545F4D41 
 8373      585F5F20 
 8373      30584646 
 8374              	.LASF555:
 8375 0bc6 5F5F4153 		.ascii	"__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) "
 8375      4D4E414D 
 8375      4528636E 
 8375      616D6529 
 8375      205F5F58 
 8376 0bf9 636E616D 		.ascii	"cname\000"
 8376      6500
 8377              	.LASF447:
 8378 0bff 5F5F6E65 		.ascii	"__need_wchar_t\000"
 8378      65645F77 
 8378      63686172 
 8378      5F7400
 8379              	.LASF1024:
 8380 0c0e 71756575 		.ascii	"queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_A"
 8380      65594945 
 8380      4C445F49 
 8380      465F5553 
 8380      494E475F 
 8381 0c41 50492829 		.ascii	"PI()\000"
 8381      00
 8382              	.LASF811:
 8383 0c46 706F7274 		.ascii	"portYIELD() vPortYield()\000"
 8383      5949454C 
 8383      44282920 
 8383      76506F72 
 8383      74596965 
 8384              	.LASF852:
 8385 0c5f 706F7274 		.ascii	"portSETUP_TCB(pxTCB) ( void ) pxTCB\000"
 8385      53455455 
 8385      505F5443 
 8385      42287078 
 8385      54434229 
 8386              	.LASF484:
 8387 0c83 5F5F6C6F 		.ascii	"__lock_close_recursive(lock) (_CAST_VOID 0)\000"
 8387      636B5F63 
 8387      6C6F7365 
 8387      5F726563 
 8387      75727369 
 8388              	.LASF897:
 8389 0caf 74726163 		.ascii	"traceTASK_INCREMENT_TICK(xTickCount) \000"
 8389      65544153 
 8389      4B5F494E 
 8389      4352454D 
 8389      454E545F 
 8390              	.LASF698:
 8391 0cd5 55494E54 		.ascii	"UINT32_MAX __UINT32_MAX__\000"
 8391      33325F4D 
 8391      4158205F 
 8391      5F55494E 
 8391      5433325F 
 8392              	.LASF460:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 195


 8393 0cef 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
 8393      5F505452 
 8393      44494646 
 8393      5F545F20 
 8393      00
 8394              	.LASF847:
 8395 0d00 636F6E66 		.ascii	"configASSERT_DEFINED 1\000"
 8395      69674153 
 8395      53455254 
 8395      5F444546 
 8395      494E4544 
 8396              	.LASF1070:
 8397 0d17 70635461 		.ascii	"pcTail\000"
 8397      696C00
 8398              	.LASF291:
 8399 0d1e 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 8399      5F494249 
 8399      545F5F20 
 8399      333200
 8400              	.LASF211:
 8401 0d2d 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 8401      46524143 
 8401      545F4642 
 8401      49545F5F 
 8401      20333200 
 8402              	.LASF429:
 8403 0d41 5F5F7369 		.ascii	"__size_t \000"
 8403      7A655F74 
 8403      2000
 8404              	.LASF562:
 8405 0d4b 5F5F626F 		.ascii	"__bounded \000"
 8405      756E6465 
 8405      642000
 8406              	.LASF679:
 8407 0d56 5F5F696E 		.ascii	"__int_fast32_t_defined 1\000"
 8407      745F6661 
 8407      73743332 
 8407      5F745F64 
 8407      6566696E 
 8408              	.LASF442:
 8409 0d6f 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 8409      6E745F77 
 8409      63686172 
 8409      5F745F68 
 8409      2000
 8410              	.LASF901:
 8411 0d81 74726163 		.ascii	"traceTIMER_EXPIRED(pxTimer) \000"
 8411      6554494D 
 8411      45525F45 
 8411      58504952 
 8411      45442870 
 8412              	.LASF1066:
 8413 0d9e 70635265 		.ascii	"pcReadFrom\000"
 8413      61644672 
 8413      6F6D00
 8414              	.LASF734:
 8415 0da9 494E5431 		.ascii	"INT16_C(x) __INT16_C(x)\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 196


 8415      365F4328 
 8415      7829205F 
 8415      5F494E54 
 8415      31365F43 
 8416              	.LASF378:
 8417 0dc1 5F504F49 		.ascii	"_POINTER_INT long\000"
 8417      4E544552 
 8417      5F494E54 
 8417      206C6F6E 
 8417      6700
 8418              	.LASF190:
 8419 0dd3 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 8419      52414354 
 8419      5F455053 
 8419      494C4F4E 
 8419      5F5F2030 
 8420              	.LASF593:
 8421 0def 5F5F434F 		.ascii	"__CONCAT1(x,y) x ## y\000"
 8421      4E434154 
 8421      3128782C 
 8421      79292078 
 8421      20232320 
 8422              	.LASF418:
 8423 0e05 5F545F53 		.ascii	"_T_SIZE \000"
 8423      495A4520 
 8423      00
 8424              	.LASF97:
 8425 0e0e 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 8425      5433325F 
 8425      43286329 
 8425      20632023 
 8425      23204C00 
 8426              	.LASF280:
 8427 0e22 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 8427      515F4642 
 8427      49545F5F 
 8427      20333200 
 8428              	.LASF24:
 8429 0e32 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 8429      4445525F 
 8429      4249475F 
 8429      454E4449 
 8429      414E5F5F 
 8430              	.LASF270:
 8431 0e4c 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 8431      5F464249 
 8431      545F5F20 
 8431      333100
 8432              	.LASF1122:
 8433 0e5b 75785265 		.ascii	"uxReturn\000"
 8433      7475726E 
 8433      00
 8434              	.LASF1007:
 8435 0e64 78517565 		.ascii	"xQueueSendToFrontFromISR(xQueue,pvItemToQueue,pxHig"
 8435      75655365 
 8435      6E64546F 
 8435      46726F6E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 197


 8435      7446726F 
 8436 0e97 68657250 		.ascii	"herPriorityTaskWoken) xQueueGenericSendFromISR( ( x"
 8436      72696F72 
 8436      69747954 
 8436      61736B57 
 8436      6F6B656E 
 8437 0eca 51756575 		.ascii	"Queue ), ( pvItemToQueue ), ( pxHigherPriorityTaskW"
 8437      6520292C 
 8437      20282070 
 8437      76497465 
 8437      6D546F51 
 8438 0efd 6F6B656E 		.ascii	"oken ), queueSEND_TO_FRONT )\000"
 8438      20292C20 
 8438      71756575 
 8438      6553454E 
 8438      445F544F 
 8439              	.LASF684:
 8440 0f1a 494E5438 		.ascii	"INT8_MIN (-__INT8_MAX__ - 1)\000"
 8440      5F4D494E 
 8440      20282D5F 
 8440      5F494E54 
 8440      385F4D41 
 8441              	.LASF1048:
 8442 0f37 70784E65 		.ascii	"pxNext\000"
 8442      787400
 8443              	.LASF922:
 8444 0f3e 706F7274 		.ascii	"portYIELD_WITHIN_API portYIELD\000"
 8444      5949454C 
 8444      445F5749 
 8444      5448494E 
 8444      5F415049 
 8445              	.LASF278:
 8446 0f5d 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 8446      515F4642 
 8446      49545F5F 
 8446      20313600 
 8447              	.LASF432:
 8448 0f6d 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 8448      4841525F 
 8448      545F5F20 
 8448      00
 8449              	.LASF509:
 8450 0f7a 5F524545 		.ascii	"_REENT_EMERGENCY_SIZE 25\000"
 8450      4E545F45 
 8450      4D455247 
 8450      454E4359 
 8450      5F53495A 
 8451              	.LASF776:
 8452 0f93 636F6E66 		.ascii	"configIP_ADDR3 201\000"
 8452      69674950 
 8452      5F414444 
 8452      52332032 
 8452      303100
 8453              	.LASF635:
 8454 0fa6 5F5F7765 		.ascii	"__weak_reference(sym,alias) __asm__(\".weak \" #ali"
 8454      616B5F72 
 8454      65666572 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 198


 8454      656E6365 
 8454      2873796D 
 8455 0fd7 6173293B 		.ascii	"as); __asm__(\".equ \" #alias \", \" #sym)\000"
 8455      205F5F61 
 8455      736D5F5F 
 8455      28222E65 
 8455      71752022 
 8456              	.LASF1092:
 8457 0ffe 75785175 		.ascii	"uxQueueLength\000"
 8457      6575654C 
 8457      656E6774 
 8457      6800
 8458              	.LASF170:
 8459 100c 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 8459      4333325F 
 8459      45505349 
 8459      4C4F4E5F 
 8459      5F203145 
 8460              	.LASF565:
 8461 1025 5F5F6861 		.ascii	"__has_extension __has_feature\000"
 8461      735F6578 
 8461      74656E73 
 8461      696F6E20 
 8461      5F5F6861 
 8462              	.LASF448:
 8463 1043 4E554C4C 		.ascii	"NULL\000"
 8463      00
 8464              	.LASF516:
 8465 1048 5F524545 		.ascii	"_REENT_CHECK_MP(ptr) \000"
 8465      4E545F43 
 8465      4845434B 
 8465      5F4D5028 
 8465      70747229 
 8466              	.LASF247:
 8467 105e 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 8467      4343554D 
 8467      5F494249 
 8467      545F5F20 
 8467      333200
 8468              	.LASF1098:
 8469 1071 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8469      75654769 
 8469      76654D75 
 8469      74657852 
 8469      65637572 
 8470              	.LASF1030:
 8471 108a 5F5F7569 		.ascii	"__uint8_t\000"
 8471      6E74385F 
 8471      7400
 8472              	.LASF287:
 8473 1094 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 8473      5F494249 
 8473      545F5F20 
 8473      3800
 8474              	.LASF358:
 8475 10a2 5F5F4E45 		.ascii	"__NEWLIB_H__ 1\000"
 8475      574C4942 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 199


 8475      5F485F5F 
 8475      203100
 8476              	.LASF85:
 8477 10b1 5F5F494E 		.ascii	"__INT16_MAX__ 32767\000"
 8477      5431365F 
 8477      4D41585F 
 8477      5F203332 
 8477      37363700 
 8478              	.LASF778:
 8479 10c5 636F6E66 		.ascii	"configNET_MASK1 255\000"
 8479      69674E45 
 8479      545F4D41 
 8479      534B3120 
 8479      32353500 
 8480              	.LASF344:
 8481 10d9 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 8481      505F4650 
 8481      5F5F2031 
 8481      00
 8482              	.LASF848:
 8483 10e6 494E434C 		.ascii	"INCLUDE_xTaskGetSchedulerState 0\000"
 8483      5544455F 
 8483      78546173 
 8483      6B476574 
 8483      53636865 
 8484              	.LASF218:
 8485 1107 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
 8485      46524143 
 8485      545F4D49 
 8485      4E5F5F20 
 8485      282D302E 
 8486              	.LASF1140:
 8487 1128 46726565 		.ascii	"FreeRTOS/queue.c\000"
 8487      52544F53 
 8487      2F717565 
 8487      75652E63 
 8487      00
 8488              	.LASF78:
 8489 1139 5F5F494E 		.ascii	"__INTMAX_MAX__ 9223372036854775807LL\000"
 8489      544D4158 
 8489      5F4D4158 
 8489      5F5F2039 
 8489      32323333 
 8490              	.LASF379:
 8491 115e 5F5F5241 		.ascii	"__RAND_MAX\000"
 8491      4E445F4D 
 8491      415800
 8492              	.LASF935:
 8493 1169 6D74434F 		.ascii	"mtCOVERAGE_TEST_MARKER() \000"
 8493      56455241 
 8493      47455F54 
 8493      4553545F 
 8493      4D41524B 
 8494              	.LASF705:
 8495 1183 494E545F 		.ascii	"INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)\000"
 8495      4C454153 
 8495      5436345F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 200


 8495      4D494E20 
 8495      282D5F5F 
 8496              	.LASF62:
 8497 11ae 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 8497      54505452 
 8497      5F545950 
 8497      455F5F20 
 8497      696E7400 
 8498              	.LASF984:
 8499 11c2 7461736B 		.ascii	"taskENABLE_INTERRUPTS() portENABLE_INTERRUPTS()\000"
 8499      454E4142 
 8499      4C455F49 
 8499      4E544552 
 8499      52555054 
 8500              	.LASF576:
 8501 11f2 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_CONSTANT_P 1\000"
 8501      55434C49 
 8501      4B455F42 
 8501      55494C54 
 8501      494E5F43 
 8502              	.LASF119:
 8503 1212 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 8503      435F4945 
 8503      435F3535 
 8503      395F434F 
 8503      4D504C45 
 8504              	.LASF376:
 8505 122a 5F5F474E 		.ascii	"__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_M"
 8505      55435F50 
 8505      52455245 
 8505      51286D61 
 8505      6A2C6D69 
 8506 125d 494E4F52 		.ascii	"INOR__ >= ((maj) << 16) + (min))\000"
 8506      5F5F203E 
 8506      3D202828 
 8506      6D616A29 
 8506      203C3C20 
 8507              	.LASF203:
 8508 127e 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 8508      52414354 
 8508      5F4D494E 
 8508      5F5F2030 
 8508      2E305552 
 8509              	.LASF879:
 8510 1293 74726163 		.ascii	"traceQUEUE_PEEK(pxQueue) \000"
 8510      65515545 
 8510      55455F50 
 8510      45454B28 
 8510      70785175 
 8511              	.LASF164:
 8512 12ad 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 8512      424C5F48 
 8512      41535F51 
 8512      55494554 
 8512      5F4E414E 
 8513              	.LASF392:
 8514 12c6 5F434F4E 		.ascii	"_CONST const\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 201


 8514      53542063 
 8514      6F6E7374 
 8514      00
 8515              	.LASF977:
 8516 12d3 74736B4B 		.ascii	"tskKERNEL_VERSION_MINOR 1\000"
 8516      45524E45 
 8516      4C5F5645 
 8516      5253494F 
 8516      4E5F4D49 
 8517              	.LASF1136:
 8518 12ed 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8518      75654973 
 8518      51756575 
 8518      6546756C 
 8518      6C46726F 
 8519              	.LASF714:
 8520 1306 494E545F 		.ascii	"INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)\000"
 8520      46415354 
 8520      33325F4D 
 8520      494E2028 
 8520      2D5F5F49 
 8521              	.LASF416:
 8522 132f 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 8522      5F53495A 
 8522      455F545F 
 8522      482000
 8523              	.LASF524:
 8524 133e 5F524545 		.ascii	"_REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._s"
 8524      4E545F52 
 8524      414E4434 
 8524      385F5345 
 8524      45442870 
 8525 1371 65656429 		.ascii	"eed)\000"
 8525      00
 8526              	.LASF50:
 8527 1376 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 8527      4E545F4C 
 8527      45415354 
 8527      385F5459 
 8527      50455F5F 
 8528              	.LASF1133:
 8529 1399 70727649 		.ascii	"prvIsQueueEmpty\000"
 8529      73517565 
 8529      7565456D 
 8529      70747900 
 8530              	.LASF236:
 8531 13a9 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 8531      43554D5F 
 8531      46424954 
 8531      5F5F2031 
 8531      3500
 8532              	.LASF798:
 8533 13bb 706F7274 		.ascii	"portCHAR char\000"
 8533      43484152 
 8533      20636861 
 8533      7200
 8534              	.LASF242:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 202


 8535 13c9 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
 8535      4343554D 
 8535      5F494249 
 8535      545F5F20 
 8535      313600
 8536              	.LASF1034:
 8537 13dc 6C6F6E67 		.ascii	"long int\000"
 8537      20696E74 
 8537      00
 8538              	.LASF115:
 8539 13e5 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 18446744073709551615ULL\000"
 8539      4E545F46 
 8539      41535436 
 8539      345F4D41 
 8539      585F5F20 
 8540              	.LASF723:
 8541 1411 53495A45 		.ascii	"SIZE_MAX __SIZE_MAX__\000"
 8541      5F4D4158 
 8541      205F5F53 
 8541      495A455F 
 8541      4D41585F 
 8542              	.LASF1093:
 8543 1427 70785175 		.ascii	"pxQueue\000"
 8543      65756500 
 8544              	.LASF145:
 8545 142f 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 8545      4C5F4D49 
 8545      4E5F5F20 
 8545      2828646F 
 8545      75626C65 
 8546              	.LASF842:
 8547 145e 636F6E66 		.ascii	"configUSE_TIMERS 0\000"
 8547      69675553 
 8547      455F5449 
 8547      4D455253 
 8547      203000
 8548              	.LASF903:
 8549 1471 74726163 		.ascii	"traceMALLOC(pvAddress,uiSize) \000"
 8549      654D414C 
 8549      4C4F4328 
 8549      70764164 
 8549      64726573 
 8550              	.LASF474:
 8551 1490 5F5F5F69 		.ascii	"___int_least16_t_defined 1\000"
 8551      6E745F6C 
 8551      65617374 
 8551      31365F74 
 8551      5F646566 
 8552              	.LASF72:
 8553 14ab 5F5F5743 		.ascii	"__WCHAR_MAX__ 4294967295U\000"
 8553      4841525F 
 8553      4D41585F 
 8553      5F203432 
 8553      39343936 
 8554              	.LASF1068:
 8555 14c5 51756575 		.ascii	"QueueDefinition\000"
 8555      65446566 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 203


 8555      696E6974 
 8555      696F6E00 
 8556              	.LASF367:
 8557 14d5 5F4C4442 		.ascii	"_LDBL_EQ_DBL 1\000"
 8557      4C5F4551 
 8557      5F44424C 
 8557      203100
 8558              	.LASF408:
 8559 14e4 5F4E4F49 		.ascii	"_NOINLINE __attribute__ ((__noinline__))\000"
 8559      4E4C494E 
 8559      45205F5F 
 8559      61747472 
 8559      69627574 
 8560              	.LASF298:
 8561 150d 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 8561      415F4642 
 8561      49545F5F 
 8561      20333200 
 8562              	.LASF512:
 8563 151d 5F4E5F4C 		.ascii	"_N_LISTS 30\000"
 8563      49535453 
 8563      20333000 
 8564              	.LASF994:
 8565 1529 71756575 		.ascii	"queueQUEUE_TYPE_BASE ( ( uint8_t ) 0U )\000"
 8565      65515545 
 8565      55455F54 
 8565      5950455F 
 8565      42415345 
 8566              	.LASF235:
 8567 1551 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 8567      41434355 
 8567      4D5F4550 
 8567      53494C4F 
 8567      4E5F5F20 
 8568              	.LASF81:
 8569 156f 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
 8569      4E544D41 
 8569      585F4328 
 8569      63292063 
 8569      20232320 
 8570              	.LASF972:
 8571 1587 6C697374 		.ascii	"listIS_CONTAINED_WITHIN(pxList,pxListItem) ( ( Base"
 8571      49535F43 
 8571      4F4E5441 
 8571      494E4544 
 8571      5F574954 
 8572 15ba 545F7420 		.ascii	"T_t ) ( ( pxListItem )->pvContainer == ( void * ) ("
 8572      29202820 
 8572      28207078 
 8572      4C697374 
 8572      4974656D 
 8573 15ed 2070784C 		.ascii	" pxList ) ) )\000"
 8573      69737420 
 8573      29202920 
 8573      2900
 8574              	.LASF28:
 8575 15fb 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 204


 8575      5A454F46 
 8575      5F504F49 
 8575      4E544552 
 8575      5F5F2034 
 8576              	.LASF46:
 8577 1610 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 8577      545F4C45 
 8577      41535438 
 8577      5F545950 
 8577      455F5F20 
 8578              	.LASF310:
 8579 1630 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 8579      435F4154 
 8579      4F4D4943 
 8579      5F424F4F 
 8579      4C5F4C4F 
 8580              	.LASF407:
 8581 164e 5F454C49 		.ascii	"_ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__a"
 8581      4441424C 
 8581      455F494E 
 8581      4C494E45 
 8581      20657874 
 8582 1681 6C776179 		.ascii	"lways_inline__))\000"
 8582      735F696E 
 8582      6C696E65 
 8582      5F5F2929 
 8582      00
 8583              	.LASF1135:
 8584 1692 70727649 		.ascii	"prvIsQueueFull\000"
 8584      73517565 
 8584      75654675 
 8584      6C6C00
 8585              	.LASF1025:
 8586 16a1 7072764C 		.ascii	"prvLockQueue(pxQueue) taskENTER_CRITICAL(); { if( ("
 8586      6F636B51 
 8586      75657565 
 8586      28707851 
 8586      75657565 
 8587 16d4 20707851 		.ascii	" pxQueue )->xRxLock == queueUNLOCKED ) { ( pxQueue "
 8587      75657565 
 8587      20292D3E 
 8587      7852784C 
 8587      6F636B20 
 8588 1707 292D3E78 		.ascii	")->xRxLock = queueLOCKED_UNMODIFIED; } if( ( pxQueu"
 8588      52784C6F 
 8588      636B203D 
 8588      20717565 
 8588      75654C4F 
 8589 173a 6520292D 		.ascii	"e )->xTxLock == queueUNLOCKED ) { ( pxQueue )->xTxL"
 8589      3E785478 
 8589      4C6F636B 
 8589      203D3D20 
 8589      71756575 
 8590 176d 6F636B20 		.ascii	"ock = queueLOCKED_UNMODIFIED; } } taskEXIT_CRITICAL"
 8590      3D207175 
 8590      6575654C 
 8590      4F434B45 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 205


 8590      445F554E 
 8591 17a0 282900   		.ascii	"()\000"
 8592              	.LASF288:
 8593 17a3 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 8593      5F464249 
 8593      545F5F20 
 8593      313500
 8594              	.LASF109:
 8595 17b2 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 2147483647\000"
 8595      545F4641 
 8595      53543136 
 8595      5F4D4158 
 8595      5F5F2032 
 8596              	.LASF689:
 8597 17d0 55494E54 		.ascii	"UINT_LEAST8_MAX __UINT_LEAST8_MAX__\000"
 8597      5F4C4541 
 8597      5354385F 
 8597      4D415820 
 8597      5F5F5549 
 8598              	.LASF292:
 8599 17f4 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 8599      5F464249 
 8599      545F5F20 
 8599      363300
 8600              	.LASF347:
 8601 1803 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 8601      554D425F 
 8601      494E5445 
 8601      52574F52 
 8601      4B5F5F20 
 8602              	.LASF224:
 8603 1819 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 8603      4C465241 
 8603      43545F4D 
 8603      41585F5F 
 8603      20305846 
 8604              	.LASF84:
 8605 1845 5F5F494E 		.ascii	"__INT8_MAX__ 127\000"
 8605      54385F4D 
 8605      41585F5F 
 8605      20313237 
 8605      00
 8606              	.LASF938:
 8607 1856 65546173 		.ascii	"eTaskStateGet eTaskGetState\000"
 8607      6B537461 
 8607      74654765 
 8607      74206554 
 8607      61736B47 
 8608              	.LASF710:
 8609 1872 55494E54 		.ascii	"UINT_FAST8_MAX __UINT_FAST8_MAX__\000"
 8609      5F464153 
 8609      54385F4D 
 8609      4158205F 
 8609      5F55494E 
 8610              	.LASF597:
 8611 1894 5F5F636F 		.ascii	"__const const\000"
 8611      6E737420 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 206


 8611      636F6E73 
 8611      7400
 8612              	.LASF425:
 8613 18a2 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 8613      455F545F 
 8613      4445434C 
 8613      41524544 
 8613      2000
 8614              	.LASF686:
 8615 18b4 55494E54 		.ascii	"UINT8_MAX __UINT8_MAX__\000"
 8615      385F4D41 
 8615      58205F5F 
 8615      55494E54 
 8615      385F4D41 
 8616              	.LASF36:
 8617 18cc 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 8617      41523332 
 8617      5F545950 
 8617      455F5F20 
 8617      6C6F6E67 
 8618              	.LASF591:
 8619 18ee 5F5F4343 		.ascii	"__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\000"
 8619      5F535550 
 8619      504F5254 
 8619      535F4459 
 8619      4E414D49 
 8620              	.LASF993:
 8621 1911 71756575 		.ascii	"queueOVERWRITE ( ( BaseT_t ) 2 )\000"
 8621      654F5645 
 8621      52575249 
 8621      54452028 
 8621      20282042 
 8622              	.LASF127:
 8623 1932 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 8623      545F4D41 
 8623      585F4558 
 8623      505F5F20 
 8623      31323800 
 8624              	.LASF14:
 8625 1946 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 8625      5A454F46 
 8625      5F4C4F4E 
 8625      475F5F20 
 8625      3400
 8626              	.LASF592:
 8627 1958 5F5F5028 		.ascii	"__P(protos) protos\000"
 8627      70726F74 
 8627      6F732920 
 8627      70726F74 
 8627      6F7300
 8628              	.LASF974:
 8629 196b 6C697374 		.ascii	"listLIST_IS_INITIALISED(pxList) ( ( pxList )->xList"
 8629      4C495354 
 8629      5F49535F 
 8629      494E4954 
 8629      49414C49 
 8630 199e 456E642E 		.ascii	"End.xItemValue == portMAX_DELAY )\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 207


 8630      78497465 
 8630      6D56616C 
 8630      7565203D 
 8630      3D20706F 
 8631              	.LASF405:
 8632 19c0 5F504152 		.ascii	"_PARAMS(paramlist) paramlist\000"
 8632      414D5328 
 8632      70617261 
 8632      6D6C6973 
 8632      74292070 
 8633              	.LASF1008:
 8634 19dd 78517565 		.ascii	"xQueueSendToBackFromISR(xQueue,pvItemToQueue,pxHigh"
 8634      75655365 
 8634      6E64546F 
 8634      4261636B 
 8634      46726F6D 
 8635 1a10 65725072 		.ascii	"erPriorityTaskWoken) xQueueGenericSendFromISR( ( xQ"
 8635      696F7269 
 8635      74795461 
 8635      736B576F 
 8635      6B656E29 
 8636 1a43 75657565 		.ascii	"ueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWo"
 8636      20292C20 
 8636      28207076 
 8636      4974656D 
 8636      546F5175 
 8637 1a76 6B656E20 		.ascii	"ken ), queueSEND_TO_BACK )\000"
 8637      292C2071 
 8637      75657565 
 8637      53454E44 
 8637      5F544F5F 
 8638              	.LASF384:
 8639 1a91 5F524541 		.ascii	"_READ_WRITE_BUFSIZE_TYPE int\000"
 8639      445F5752 
 8639      4954455F 
 8639      42554653 
 8639      495A455F 
 8640              	.LASF898:
 8641 1aae 74726163 		.ascii	"traceTIMER_CREATE(pxNewTimer) \000"
 8641      6554494D 
 8641      45525F43 
 8641      52454154 
 8641      45287078 
 8642              	.LASF18:
 8643 1acd 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 8643      5A454F46 
 8643      5F444F55 
 8643      424C455F 
 8643      5F203800 
 8644              	.LASF929:
 8645 1ae1 636F6E66 		.ascii	"configUSE_QUEUE_SETS 0\000"
 8645      69675553 
 8645      455F5155 
 8645      4555455F 
 8645      53455453 
 8646              	.LASF833:
 8647 1af8 50524956 		.ascii	"PRIVILEGED_DATA \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 208


 8647      494C4547 
 8647      45445F44 
 8647      41544120 
 8647      00
 8648              	.LASF1112:
 8649 1b09 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8649      75654765 
 8649      6E657269 
 8649      6353656E 
 8649      6446726F 
 8650              	.LASF1079:
 8651 1b22 75785175 		.ascii	"uxQueueNumber\000"
 8651      6575654E 
 8651      756D6265 
 8651      7200
 8652              	.LASF915:
 8653 1b30 74726163 		.ascii	"traceEVENT_GROUP_DELETE(xEventGroup) \000"
 8653      65455645 
 8653      4E545F47 
 8653      524F5550 
 8653      5F44454C 
 8654              	.LASF998:
 8655 1b56 71756575 		.ascii	"queueQUEUE_TYPE_BINARY_SEMAPHORE ( ( uint8_t ) 3U )"
 8655      65515545 
 8655      55455F54 
 8655      5950455F 
 8655      42494E41 
 8656 1b89 00       		.ascii	"\000"
 8657              	.LASF176:
 8658 1b8a 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 8658      4336345F 
 8658      4D41585F 
 8658      5F20392E 
 8658      39393939 
 8659              	.LASF374:
 8660 1bb0 5F5F4E45 		.ascii	"__NEWLIB__ 2\000"
 8660      574C4942 
 8660      5F5F2032 
 8660      00
 8661              	.LASF795:
 8662 1bbd 65727251 		.ascii	"errQUEUE_YIELD ( -5 )\000"
 8662      55455545 
 8662      5F594945 
 8662      4C442028 
 8662      202D3520 
 8663              	.LASF657:
 8664 1bd3 45584954 		.ascii	"EXIT_SUCCESS 0\000"
 8664      5F535543 
 8664      43455353 
 8664      203000
 8665              	.LASF300:
 8666 1be2 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 8666      415F4642 
 8666      49545F5F 
 8666      20363400 
 8667              	.LASF180:
 8668 1bf2 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 209


 8668      43313238 
 8668      5F4D494E 
 8668      5F455850 
 8668      5F5F2028 
 8669              	.LASF129:
 8670 1c0d 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 8670      545F4445 
 8670      43494D41 
 8670      4C5F4449 
 8670      475F5F20 
 8671              	.LASF850:
 8672 1c23 706F7274 		.ascii	"portCLEAN_UP_TCB(pxTCB) ( void ) pxTCB\000"
 8672      434C4541 
 8672      4E5F5550 
 8672      5F544342 
 8672      28707854 
 8673              	.LASF654:
 8674 1c4a 616C6C6F 		.ascii	"alloca(size) __builtin_alloca(size)\000"
 8674      63612873 
 8674      697A6529 
 8674      205F5F62 
 8674      75696C74 
 8675              	.LASF1065:
 8676 1c6e 51756575 		.ascii	"QueueHandle_t\000"
 8676      6548616E 
 8676      646C655F 
 8676      7400
 8677              	.LASF1029:
 8678 1c7c 7369676E 		.ascii	"signed char\000"
 8678      65642063 
 8678      68617200 
 8679              	.LASF1042:
 8680 1c88 75696E74 		.ascii	"uint8_t\000"
 8680      385F7400 
 8681              	.LASF721:
 8682 1c90 494E544D 		.ascii	"INTMAX_MIN (-INTMAX_MAX - 1)\000"
 8682      41585F4D 
 8682      494E2028 
 8682      2D494E54 
 8682      4D41585F 
 8683              	.LASF964:
 8684 1cad 6C697374 		.ascii	"listGET_ITEM_VALUE_OF_HEAD_ENTRY(pxList) ( ( ( pxLi"
 8684      4745545F 
 8684      4954454D 
 8684      5F56414C 
 8684      55455F4F 
 8685 1ce0 73742029 		.ascii	"st )->xListEnd ).pxNext->xItemValue )\000"
 8685      2D3E784C 
 8685      69737445 
 8685      6E642029 
 8685      2E70784E 
 8686              	.LASF556:
 8687 1d06 5F5F7074 		.ascii	"__ptr_t void *\000"
 8687      725F7420 
 8687      766F6964 
 8687      202A00
 8688              	.LASF619:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 210


 8689 1d15 5F5F7265 		.ascii	"__returns_twice __attribute__((__returns_twice__))\000"
 8689      7475726E 
 8689      735F7477 
 8689      69636520 
 8689      5F5F6174 
 8690              	.LASF526:
 8691 1d48 5F524545 		.ascii	"_REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._ad"
 8691      4E545F52 
 8691      414E4434 
 8691      385F4144 
 8691      44287074 
 8692 1d7b 642900   		.ascii	"d)\000"
 8693              	.LASF615:
 8694 1d7e 5F5F616C 		.ascii	"__always_inline __attribute__((__always_inline__))\000"
 8694      77617973 
 8694      5F696E6C 
 8694      696E6520 
 8694      5F5F6174 
 8695              	.LASF196:
 8696 1db1 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 8696      4143545F 
 8696      46424954 
 8696      5F5F2031 
 8696      3500
 8697              	.LASF945:
 8698 1dc3 7854696D 		.ascii	"xTimeOutType TimeOut_t\000"
 8698      654F7574 
 8698      54797065 
 8698      2054696D 
 8698      654F7574 
 8699              	.LASF260:
 8700 1dda 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 8700      41434355 
 8700      4D5F4550 
 8700      53494C4F 
 8700      4E5F5F20 
 8701              	.LASF313:
 8702 1df9 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 8702      435F4154 
 8702      4F4D4943 
 8702      5F434841 
 8702      5233325F 
 8703              	.LASF4:
 8704 1e1b 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 3\000"
 8704      55435F50 
 8704      41544348 
 8704      4C455645 
 8704      4C5F5F20 
 8705              	.LASF504:
 8706 1e31 5F52414E 		.ascii	"_RAND48_SEED_2 (0x1234)\000"
 8706      4434385F 
 8706      53454544 
 8706      5F322028 
 8706      30783132 
 8707              	.LASF927:
 8708 1e49 636F6E66 		.ascii	"configPRE_SLEEP_PROCESSING(x) \000"
 8708      69675052 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 211


 8708      455F534C 
 8708      4545505F 
 8708      50524F43 
 8709              	.LASF906:
 8710 1e68 74726163 		.ascii	"traceEVENT_GROUP_CREATE_FAILED() \000"
 8710      65455645 
 8710      4E545F47 
 8710      524F5550 
 8710      5F435245 
 8711              	.LASF683:
 8712 1e8a 55494E54 		.ascii	"UINTPTR_MAX __UINTPTR_MAX__\000"
 8712      5054525F 
 8712      4D415820 
 8712      5F5F5549 
 8712      4E545054 
 8713              	.LASF528:
 8714 1ea6 5F524545 		.ascii	"_REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)\000"
 8714      4E545F4D 
 8714      505F5245 
 8714      53554C54 
 8714      5F4B2870 
 8715              	.LASF890:
 8716 1ed1 74726163 		.ascii	"traceTASK_DELETE(pxTaskToDelete) \000"
 8716      65544153 
 8716      4B5F4445 
 8716      4C455445 
 8716      28707854 
 8717              	.LASF401:
 8718 1ef3 5F444546 		.ascii	"_DEFUN(name,arglist,args) name(args)\000"
 8718      554E286E 
 8718      616D652C 
 8718      6172676C 
 8718      6973742C 
 8719              	.LASF621:
 8720 1f18 5F5F7072 		.ascii	"__predict_true(exp) __builtin_expect((exp), 1)\000"
 8720      65646963 
 8720      745F7472 
 8720      75652865 
 8720      78702920 
 8721              	.LASF866:
 8722 1f47 74726163 		.ascii	"traceQUEUE_CREATE(pxNewQueue) \000"
 8722      65515545 
 8722      55455F43 
 8722      52454154 
 8722      45287078 
 8723              	.LASF542:
 8724 1f66 5F524545 		.ascii	"_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wc"
 8724      4E545F57 
 8724      43535254 
 8724      4F4D4253 
 8724      5F535441 
 8725 1f99 7372746F 		.ascii	"srtombs_state)\000"
 8725      6D62735F 
 8725      73746174 
 8725      652900
 8726              	.LASF711:
 8727 1fa8 494E545F 		.ascii	"INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 212


 8727      46415354 
 8727      31365F4D 
 8727      494E2028 
 8727      2D5F5F49 
 8728              	.LASF752:
 8729 1fd1 636F6E66 		.ascii	"configMAX_TASK_NAME_LEN ( 12 )\000"
 8729      69674D41 
 8729      585F5441 
 8729      534B5F4E 
 8729      414D455F 
 8730              	.LASF1072:
 8731 1ff0 78546173 		.ascii	"xTasksWaitingToSend\000"
 8731      6B735761 
 8731      6974696E 
 8731      67546F53 
 8731      656E6400 
 8732              	.LASF560:
 8733 2004 5F5F6174 		.ascii	"__attribute_format_strfmon__(a,b) \000"
 8733      74726962 
 8733      7574655F 
 8733      666F726D 
 8733      61745F73 
 8734              	.LASF424:
 8735 2027 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 8735      5F53495A 
 8735      455F545F 
 8735      44454649 
 8735      4E45445F 
 8736              	.LASF471:
 8737 203d 5F5F5F69 		.ascii	"___int32_t_defined 1\000"
 8737      6E743332 
 8737      5F745F64 
 8737      6566696E 
 8737      65642031 
 8738              	.LASF60:
 8739 2052 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 8739      4E545F46 
 8739      41535433 
 8739      325F5459 
 8739      50455F5F 
 8740              	.LASF426:
 8741 2074 5F5F5F69 		.ascii	"___int_size_t_h \000"
 8741      6E745F73 
 8741      697A655F 
 8741      745F6820 
 8741      00
 8742              	.LASF17:
 8743 2085 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 8743      5A454F46 
 8743      5F464C4F 
 8743      41545F5F 
 8743      203400
 8744              	.LASF227:
 8745 2098 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 8745      4343554D 
 8745      5F494249 
 8745      545F5F20 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 213


 8745      3800
 8746              	.LASF583:
 8747 20aa 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_RELOPS \000"
 8747      55434C49 
 8747      4B455F4D 
 8747      4154485F 
 8747      4255494C 
 8748              	.LASF128:
 8749 20ca 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 8749      545F4D41 
 8749      585F3130 
 8749      5F455850 
 8749      5F5F2033 
 8750              	.LASF552:
 8751 20e0 5F5F504D 		.ascii	"__PMT(args) args\000"
 8751      54286172 
 8751      67732920 
 8751      61726773 
 8751      00
 8752              	.LASF886:
 8753 20f1 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR_FAILED(pxQueue) \000"
 8753      65515545 
 8753      55455F50 
 8753      45454B5F 
 8753      46524F4D 
 8754              	.LASF199:
 8755 211b 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 8755      4143545F 
 8755      4D41585F 
 8755      5F203058 
 8755      37464646 
 8756              	.LASF118:
 8757 2135 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 8757      435F4945 
 8757      435F3535 
 8757      39203000 
 8758              	.LASF862:
 8759 2145 74726163 		.ascii	"traceTASK_PRIORITY_DISINHERIT(pxTCBOfMutexHolder,ux"
 8759      65544153 
 8759      4B5F5052 
 8759      494F5249 
 8759      54595F44 
 8760 2178 4F726967 		.ascii	"OriginalPriority) \000"
 8760      696E616C 
 8760      5072696F 
 8760      72697479 
 8760      292000
 8761              	.LASF700:
 8762 218b 494E545F 		.ascii	"INT_LEAST32_MAX __INT_LEAST32_MAX__\000"
 8762      4C454153 
 8762      5433325F 
 8762      4D415820 
 8762      5F5F494E 
 8763              	.LASF1096:
 8764 21af 78526574 		.ascii	"xReturn\000"
 8764      75726E00 
 8765              	.LASF7:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 214


 8766 21b7 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
 8766      4F4D4943 
 8766      5F534551 
 8766      5F435354 
 8766      203500
 8767              	.LASF383:
 8768 21ca 5F524541 		.ascii	"_READ_WRITE_RETURN_TYPE int\000"
 8768      445F5752 
 8768      4954455F 
 8768      52455455 
 8768      524E5F54 
 8769              	.LASF952:
 8770 21e6 706F7274 		.ascii	"portTICK_RATE_MS portTICK_PERIOD_MS\000"
 8770      5449434B 
 8770      5F524154 
 8770      455F4D53 
 8770      20706F72 
 8771              	.LASF135:
 8772 220a 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 8772      545F4841 
 8772      535F494E 
 8772      46494E49 
 8772      54595F5F 
 8773              	.LASF495:
 8774 2221 5F5F6E65 		.ascii	"__need_wint_t\000"
 8774      65645F77 
 8774      696E745F 
 8774      7400
 8775              	.LASF638:
 8776 222f 5F5F7379 		.ascii	"__sym_default(sym,impl,verid) __asm__(\".symver \" "
 8776      6D5F6465 
 8776      6661756C 
 8776      74287379 
 8776      6D2C696D 
 8777 2260 23696D70 		.ascii	"#impl \", \" #sym \"@@\" #verid)\000"
 8777      6C20222C 
 8777      20222023 
 8777      73796D20 
 8777      22404022 
 8778              	.LASF1091:
 8779 227d 78517565 		.ascii	"xQueueGenericCreate\000"
 8779      75654765 
 8779      6E657269 
 8779      63437265 
 8779      61746500 
 8780              	.LASF112:
 8781 2291 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 4294967295U\000"
 8781      4E545F46 
 8781      41535438 
 8781      5F4D4158 
 8781      5F5F2034 
 8782              	.LASF274:
 8783 22b0 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 8783      5F464249 
 8783      545F5F20 
 8783      31323700 
 8784              	.LASF851:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 215


 8785 22c0 706F7274 		.ascii	"portPRE_TASK_DELETE_HOOK(pvTaskToDelete,pxYieldPend"
 8785      5052455F 
 8785      5441534B 
 8785      5F44454C 
 8785      4554455F 
 8786 22f3 696E6729 		.ascii	"ing) \000"
 8786      2000
 8787              	.LASF155:
 8788 22f9 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 8788      424C5F4D 
 8788      41585F45 
 8788      58505F5F 
 8788      20313032 
 8789              	.LASF185:
 8790 230f 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 8790      43313238 
 8790      5F535542 
 8790      4E4F524D 
 8790      414C5F4D 
 8791 2342 30303030 		.ascii	"000000001E-6143DL\000"
 8791      30303030 
 8791      31452D36 
 8791      31343344 
 8791      4C00
 8792              	.LASF89:
 8793 2354 5F5F5549 		.ascii	"__UINT16_MAX__ 65535\000"
 8793      4E543136 
 8793      5F4D4158 
 8793      5F5F2036 
 8793      35353335 
 8794              	.LASF365:
 8795 2369 5F484156 		.ascii	"_HAVE_LONG_DOUBLE 1\000"
 8795      455F4C4F 
 8795      4E475F44 
 8795      4F55424C 
 8795      45203100 
 8796              	.LASF680:
 8797 237d 5F5F696E 		.ascii	"__int_fast64_t_defined 1\000"
 8797      745F6661 
 8797      73743634 
 8797      5F745F64 
 8797      6566696E 
 8798              	.LASF607:
 8799 2396 5F416C69 		.ascii	"_Alignas(x) __aligned(x)\000"
 8799      676E6173 
 8799      28782920 
 8799      5F5F616C 
 8799      69676E65 
 8800              	.LASF1063:
 8801 23af 7854696D 		.ascii	"xTimeOnEntering\000"
 8801      654F6E45 
 8801      6E746572 
 8801      696E6700 
 8802              	.LASF393:
 8803 23bf 5F564F4C 		.ascii	"_VOLATILE volatile\000"
 8803      4154494C 
 8803      4520766F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 216


 8803      6C617469 
 8803      6C6500
 8804              	.LASF339:
 8805 23d2 5F5F7468 		.ascii	"__thumb2__ 1\000"
 8805      756D6232 
 8805      5F5F2031 
 8805      00
 8806              	.LASF261:
 8807 23df 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
 8807      4C414343 
 8807      554D5F46 
 8807      4249545F 
 8807      5F203332 
 8808              	.LASF946:
 8809 23f4 784D656D 		.ascii	"xMemoryRegion MemoryRegion_t\000"
 8809      6F727952 
 8809      6567696F 
 8809      6E204D65 
 8809      6D6F7279 
 8810              	.LASF400:
 8811 2411 5F455846 		.ascii	"_EXFNPTR(name,proto) (* name) proto\000"
 8811      4E505452 
 8811      286E616D 
 8811      652C7072 
 8811      6F746F29 
 8812              	.LASF843:
 8813 2435 706F7274 		.ascii	"portCRITICAL_NESTING_IN_TCB 0\000"
 8813      43524954 
 8813      4943414C 
 8813      5F4E4553 
 8813      54494E47 
 8814              	.LASF513:
 8815 2453 5F524545 		.ascii	"_REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1"
 8815      4E545F49 
 8815      4E495428 
 8815      76617229 
 8815      207B2030 
 8816 2486 5D2C2026 		.ascii	"], &(var).__sf[2], 0, \"\", 0, \"C\", 0, _NULL, _NU"
 8816      28766172 
 8816      292E5F5F 
 8816      73665B32 
 8816      5D2C2030 
 8817 24b5 4C4C2C20 		.ascii	"LL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, \"\", "
 8817      302C205F 
 8817      4E554C4C 
 8817      2C205F4E 
 8817      554C4C2C 
 8818 24e6 7B302C20 		.ascii	"{0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_"
 8818      302C2030 
 8818      2C20302C 
 8818      20302C20 
 8818      302C2030 
 8819 2519 302C205F 		.ascii	"0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0"
 8819      52414E44 
 8819      34385F53 
 8819      4545445F 
 8819      312C205F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 217


 8820 254c 2C205F52 		.ascii	", _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {"
 8820      414E4434 
 8820      385F4D55 
 8820      4C545F31 
 8820      2C205F52 
 8821 257f 302C207B 		.ascii	"0, {0}}, {0, {0}}, {0, {0}}, \"\", \"\", 0, {0, {0}"
 8821      307D7D2C 
 8821      207B302C 
 8821      207B307D 
 8821      7D2C207B 
 8822 25ae 7D2C207B 		.ascii	"}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REE"
 8822      302C207B 
 8822      307D7D2C 
 8822      207B302C 
 8822      207B307D 
 8823 25e1 4E545F49 		.ascii	"NT_INIT_ATEXIT _NULL, {_NULL, 0, _NULL} }\000"
 8823      4E49545F 
 8823      41544558 
 8823      4954205F 
 8823      4E554C4C 
 8824              	.LASF644:
 8825 260b 5F5F4445 		.ascii	"__DECONST(type,var) ((type)(__uintptr_t)(const void"
 8825      434F4E53 
 8825      54287479 
 8825      70652C76 
 8825      61722920 
 8826 263e 202A2928 		.ascii	" *)(var))\000"
 8826      76617229 
 8826      2900
 8827              	.LASF373:
 8828 2648 5F535953 		.ascii	"_SYS_FEATURES_H \000"
 8828      5F464541 
 8828      54555245 
 8828      535F4820 
 8828      00
 8829              	.LASF1058:
 8830 2659 7078496E 		.ascii	"pxIndex\000"
 8830      64657800 
 8831              	.LASF616:
 8832 2661 5F5F6E6F 		.ascii	"__noinline __attribute__ ((__noinline__))\000"
 8832      696E6C69 
 8832      6E65205F 
 8832      5F617474 
 8832      72696275 
 8833              	.LASF651:
 8834 268b 5F4D4143 		.ascii	"_MACHSTDLIB_H_ \000"
 8834      48535444 
 8834      4C49425F 
 8834      485F2000 
 8835              	.LASF988:
 8836 269b 78546173 		.ascii	"xTaskCreate(pvTaskCode,pcName,usStackDepth,pvParame"
 8836      6B437265 
 8836      61746528 
 8836      70765461 
 8836      736B436F 
 8837 26ce 74657273 		.ascii	"ters,uxPriority,pxCreatedTask) xTaskGenericCreate( "
 8837      2C757850 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 218


 8837      72696F72 
 8837      6974792C 
 8837      70784372 
 8838 2701 28207076 		.ascii	"( pvTaskCode ), ( pcName ), ( usStackDepth ), ( pvP"
 8838      5461736B 
 8838      436F6465 
 8838      20292C20 
 8838      28207063 
 8839 2734 6172616D 		.ascii	"arameters ), ( uxPriority ), ( pxCreatedTask ), ( N"
 8839      65746572 
 8839      7320292C 
 8839      20282075 
 8839      78507269 
 8840 2767 554C4C20 		.ascii	"ULL ), ( NULL ) )\000"
 8840      292C2028 
 8840      204E554C 
 8840      4C202920 
 8840      2900
 8841              	.LASF19:
 8842 2779 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 8842      5A454F46 
 8842      5F4C4F4E 
 8842      475F444F 
 8842      55424C45 
 8843              	.LASF1097:
 8844 2792 78517565 		.ascii	"xQueueCreateMutex\000"
 8844      75654372 
 8844      65617465 
 8844      4D757465 
 8844      7800
 8845              	.LASF322:
 8846 27a4 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 8846      41474D41 
 8846      5F524544 
 8846      4546494E 
 8846      455F4558 
 8847              	.LASF31:
 8848 27c0 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 8848      4841525F 
 8848      54595045 
 8848      5F5F2075 
 8848      6E736967 
 8849              	.LASF730:
 8850 27dc 57494E54 		.ascii	"WINT_MAX __WINT_MAX__\000"
 8850      5F4D4158 
 8850      205F5F57 
 8850      494E545F 
 8850      4D41585F 
 8851              	.LASF1067:
 8852 27f2 75785265 		.ascii	"uxRecursiveCallCount\000"
 8852      63757273 
 8852      69766543 
 8852      616C6C43 
 8852      6F756E74 
 8853              	.LASF796:
 8854 2807 504F5254 		.ascii	"PORTABLE_H \000"
 8854      41424C45 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 219


 8854      5F482000 
 8855              	.LASF1040:
 8856 2813 63686172 		.ascii	"char\000"
 8856      00
 8857              	.LASF297:
 8858 2818 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 8858      415F4942 
 8858      49545F5F 
 8858      20313600 
 8859              	.LASF308:
 8860 2828 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 8860      435F4841 
 8860      56455F53 
 8860      594E435F 
 8860      434F4D50 
 8861              	.LASF740:
 8862 284d 494E544D 		.ascii	"INTMAX_C(x) __INTMAX_C(x)\000"
 8862      41585F43 
 8862      28782920 
 8862      5F5F494E 
 8862      544D4158 
 8863              	.LASF1126:
 8864 2867 76517565 		.ascii	"vQueueDelete\000"
 8864      75654465 
 8864      6C657465 
 8864      00
 8865              	.LASF623:
 8866 2874 5F5F6869 		.ascii	"__hidden __attribute__((__visibility__(\"hidden\"))"
 8866      6464656E 
 8866      205F5F61 
 8866      74747269 
 8866      62757465 
 8867 28a5 2900     		.ascii	")\000"
 8868              	.LASF754:
 8869 28a7 636F6E66 		.ascii	"configUSE_16_BIT_TICKS 0\000"
 8869      69675553 
 8869      455F3136 
 8869      5F424954 
 8869      5F544943 
 8870              	.LASF66:
 8871 28c0 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1002\000"
 8871      585F4142 
 8871      495F5645 
 8871      5253494F 
 8871      4E203130 
 8872              	.LASF1064:
 8873 28d7 54696D65 		.ascii	"TimeOut_t\000"
 8873      4F75745F 
 8873      7400
 8874              	.LASF61:
 8875 28e1 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 8875      4E545F46 
 8875      41535436 
 8875      345F5459 
 8875      50455F5F 
 8876              	.LASF1054:
 8877 290d 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 220


 8877      495F4C49 
 8877      53545F49 
 8877      54454D00 
 8878              	.LASF830:
 8879 291d 706F7274 		.ascii	"portNUM_CONFIGURABLE_REGIONS 1\000"
 8879      4E554D5F 
 8879      434F4E46 
 8879      49475552 
 8879      41424C45 
 8880              	.LASF539:
 8881 293c 5F524545 		.ascii	"_REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrt"
 8881      4E545F4D 
 8881      4252544F 
 8881      57435F53 
 8881      54415445 
 8882 296f 6F77635F 		.ascii	"owc_state)\000"
 8882      73746174 
 8882      652900
 8883              	.LASF494:
 8884 297a 5F57494E 		.ascii	"_WINT_T \000"
 8884      545F5420 
 8884      00
 8885              	.LASF746:
 8886 2983 636F6E66 		.ascii	"configMAX_PRIORITIES ( 8 )\000"
 8886      69674D41 
 8886      585F5052 
 8886      494F5249 
 8886      54494553 
 8887              	.LASF131:
 8888 299e 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 8888      545F4D49 
 8888      4E5F5F20 
 8888      312E3137 
 8888      35343934 
 8889              	.LASF410:
 8890 29c2 5F5F6E65 		.ascii	"__need_size_t \000"
 8890      65645F73 
 8890      697A655F 
 8890      742000
 8891              	.LASF286:
 8892 29d1 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
 8892      5F464249 
 8892      545F5F20 
 8892      3700
 8893              	.LASF318:
 8894 29df 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 8894      435F4154 
 8894      4F4D4943 
 8894      5F4C4C4F 
 8894      4E475F4C 
 8895              	.LASF777:
 8896 29fe 636F6E66 		.ascii	"configNET_MASK0 255\000"
 8896      69674E45 
 8896      545F4D41 
 8896      534B3020 
 8896      32353500 
 8897              	.LASF871:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 221


 8898 2a12 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 8898      65474956 
 8898      455F4D55 
 8898      5445585F 
 8898      52454355 
 8899              	.LASF487:
 8900 2a3d 5F5F6C6F 		.ascii	"__lock_try_acquire(lock) (_CAST_VOID 0)\000"
 8900      636B5F74 
 8900      72795F61 
 8900      63717569 
 8900      7265286C 
 8901              	.LASF166:
 8902 2a65 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 8902      4333325F 
 8902      4D494E5F 
 8902      4558505F 
 8902      5F20282D 
 8903              	.LASF192:
 8904 2a7d 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 8904      46524143 
 8904      545F4942 
 8904      49545F5F 
 8904      203000
 8905              	.LASF841:
 8906 2a90 494E434C 		.ascii	"INCLUDE_eTaskGetState 0\000"
 8906      5544455F 
 8906      65546173 
 8906      6B476574 
 8906      53746174 
 8907              	.LASF193:
 8908 2aa8 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 8908      46524143 
 8908      545F4D49 
 8908      4E5F5F20 
 8908      302E3055 
 8909              	.LASF625:
 8910 2abf 5F5F6F66 		.ascii	"__offsetof(type,field) offsetof(type, field)\000"
 8910      66736574 
 8910      6F662874 
 8910      7970652C 
 8910      6669656C 
 8911              	.LASF533:
 8912 2aec 5F524545 		.ascii	"_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\000"
 8912      4E545F45 
 8912      4D455247 
 8912      454E4359 
 8912      28707472 
 8913              	.LASF575:
 8914 2b16 5F5F474E 		.ascii	"__GNUCLIKE_CTOR_SECTION_HANDLING 1\000"
 8914      55434C49 
 8914      4B455F43 
 8914      544F525F 
 8914      53454354 
 8915              	.LASF470:
 8916 2b39 5F5F5F69 		.ascii	"___int16_t_defined 1\000"
 8916      6E743136 
 8916      5F745F64 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 222


 8916      6566696E 
 8916      65642031 
 8917              	.LASF548:
 8918 2b4e 5F524545 		.ascii	"_REENT _impure_ptr\000"
 8918      4E54205F 
 8918      696D7075 
 8918      72655F70 
 8918      747200
 8919              	.LASF566:
 8920 2b61 5F5F6861 		.ascii	"__has_feature(x) 0\000"
 8920      735F6665 
 8920      61747572 
 8920      65287829 
 8920      203000
 8921              	.LASF867:
 8922 2b74 74726163 		.ascii	"traceQUEUE_CREATE_FAILED(ucQueueType) \000"
 8922      65515545 
 8922      55455F43 
 8922      52454154 
 8922      455F4641 
 8923              	.LASF624:
 8924 2b9b 5F5F6578 		.ascii	"__exported __attribute__((__visibility__(\"default\""
 8924      706F7274 
 8924      6564205F 
 8924      5F617474 
 8924      72696275 
 8925 2bcd 29292900 		.ascii	")))\000"
 8926              	.LASF642:
 8927 2bd1 5F5F5343 		.ascii	"__SCCSID(s) struct __hack\000"
 8927      43534944 
 8927      28732920 
 8927      73747275 
 8927      6374205F 
 8928              	.LASF1045:
 8929 2beb 55426173 		.ascii	"UBaseT_t\000"
 8929      65545F74 
 8929      00
 8930              	.LASF413:
 8931 2bf4 5F5F7369 		.ascii	"__size_t__ \000"
 8931      7A655F74 
 8931      5F5F2000 
 8932              	.LASF586:
 8933 2c00 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE 1\000"
 8933      5F535550 
 8933      504F5254 
 8933      535F5F5F 
 8933      494E4C49 
 8934              	.LASF362:
 8935 2c19 5F4D425F 		.ascii	"_MB_LEN_MAX 1\000"
 8935      4C454E5F 
 8935      4D415820 
 8935      3100
 8936              	.LASF290:
 8937 2c27 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 8937      5F464249 
 8937      545F5F20 
 8937      333100
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 223


 8938              	.LASF1051:
 8939 2c36 7076436F 		.ascii	"pvContainer\000"
 8939      6E746169 
 8939      6E657200 
 8940              	.LASF949:
 8941 2c42 7854696D 		.ascii	"xTimerHandle TimerHandle_t\000"
 8941      65724861 
 8941      6E646C65 
 8941      2054696D 
 8941      65724861 
 8942              	.LASF394:
 8943 2c5d 5F534947 		.ascii	"_SIGNED signed\000"
 8943      4E454420 
 8943      7369676E 
 8943      656400
 8944              	.LASF133:
 8945 2c6c 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 8945      545F4445 
 8945      4E4F524D 
 8945      5F4D494E 
 8945      5F5F2031 
 8946              	.LASF158:
 8947 2c97 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 8947      424C5F4D 
 8947      41585F5F 
 8947      20312E37 
 8947      39373639 
 8948              	.LASF775:
 8949 2cbd 636F6E66 		.ascii	"configIP_ADDR2 0\000"
 8949      69674950 
 8949      5F414444 
 8949      52322030 
 8949      00
 8950              	.LASF94:
 8951 2cce 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 32767\000"
 8951      545F4C45 
 8951      41535431 
 8951      365F4D41 
 8951      585F5F20 
 8952              	.LASF265:
 8953 2ce8 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 8953      4C414343 
 8953      554D5F45 
 8953      5053494C 
 8953      4F4E5F5F 
 8954              	.LASF981:
 8955 2d09 7461736B 		.ascii	"taskENTER_CRITICAL() portENTER_CRITICAL()\000"
 8955      454E5445 
 8955      525F4352 
 8955      49544943 
 8955      414C2829 
 8956              	.LASF387:
 8957 2d33 5F454E44 		.ascii	"_END_STD_C \000"
 8957      5F535444 
 8957      5F432000 
 8958              	.LASF688:
 8959 2d3f 494E545F 		.ascii	"INT_LEAST8_MAX __INT_LEAST8_MAX__\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 224


 8959      4C454153 
 8959      54385F4D 
 8959      4158205F 
 8959      5F494E54 
 8960              	.LASF65:
 8961 2d61 5F5F6861 		.ascii	"__has_include_next(STR) __has_include_next__(STR)\000"
 8961      735F696E 
 8961      636C7564 
 8961      655F6E65 
 8961      78742853 
 8962              	.LASF973:
 8963 2d93 6C697374 		.ascii	"listLIST_ITEM_CONTAINER(pxListItem) ( ( pxListItem "
 8963      4C495354 
 8963      5F495445 
 8963      4D5F434F 
 8963      4E544149 
 8964 2dc6 292D3E70 		.ascii	")->pvContainer )\000"
 8964      76436F6E 
 8964      7461696E 
 8964      65722029 
 8964      00
 8965              	.LASF105:
 8966 2dd7 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 8966      4E543332 
 8966      5F432863 
 8966      29206320 
 8966      23232055 
 8967              	.LASF770:
 8968 2ded 494E434C 		.ascii	"INCLUDE_vTaskDelayUntil 1\000"
 8968      5544455F 
 8968      76546173 
 8968      6B44656C 
 8968      6179556E 
 8969              	.LASF87:
 8970 2e07 5F5F494E 		.ascii	"__INT64_MAX__ 9223372036854775807LL\000"
 8970      5436345F 
 8970      4D41585F 
 8970      5F203932 
 8970      32333337 
 8971              	.LASF668:
 8972 2e2b 5F5F6861 		.ascii	"__have_long32 1\000"
 8972      76655F6C 
 8972      6F6E6733 
 8972      32203100 
 8973              	.LASF132:
 8974 2e3b 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 8974      545F4550 
 8974      53494C4F 
 8974      4E5F5F20 
 8974      312E3139 
 8975              	.LASF596:
 8976 2e62 5F5F5853 		.ascii	"__XSTRING(x) __STRING(x)\000"
 8976      5452494E 
 8976      47287829 
 8976      205F5F53 
 8976      5452494E 
 8977              	.LASF559:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 225


 8978 2e7b 5F5F6174 		.ascii	"__attribute_pure__ \000"
 8978      74726962 
 8978      7574655F 
 8978      70757265 
 8978      5F5F2000 
 8979              	.LASF370:
 8980 2e8f 5F574944 		.ascii	"_WIDE_ORIENT 1\000"
 8980      455F4F52 
 8980      49454E54 
 8980      203100
 8981              	.LASF950:
 8982 2e9e 78436F52 		.ascii	"xCoRoutineHandle CoRoutineHandle_t\000"
 8982      6F757469 
 8982      6E654861 
 8982      6E646C65 
 8982      20436F52 
 8983              	.LASF483:
 8984 2ec1 5F5F6C6F 		.ascii	"__lock_close(lock) (_CAST_VOID 0)\000"
 8984      636B5F63 
 8984      6C6F7365 
 8984      286C6F63 
 8984      6B292028 
 8985              	.LASF838:
 8986 2ee3 494E434C 		.ascii	"INCLUDE_xSemaphoreGetMutexHolder INCLUDE_xQueueGetM"
 8986      5544455F 
 8986      7853656D 
 8986      6170686F 
 8986      72654765 
 8987 2f16 75746578 		.ascii	"utexHolder\000"
 8987      486F6C64 
 8987      657200
 8988              	.LASF1086:
 8989 2f21 78517565 		.ascii	"xQueueRegistryItem\000"
 8989      75655265 
 8989      67697374 
 8989      72794974 
 8989      656D00
 8990              	.LASF895:
 8991 2f34 74726163 		.ascii	"traceTASK_RESUME(pxTaskToResume) \000"
 8991      65544153 
 8991      4B5F5245 
 8991      53554D45 
 8991      28707854 
 8992              	.LASF918:
 8993 2f56 74726163 		.ascii	"traceQUEUE_REGISTRY_ADD(xQueue,pcQueueName) \000"
 8993      65515545 
 8993      55455F52 
 8993      45474953 
 8993      5452595F 
 8994              	.LASF577:
 8995 2f83 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VARARGS 1\000"
 8995      55434C49 
 8995      4B455F42 
 8995      55494C54 
 8995      494E5F56 
 8996              	.LASF522:
 8997 2fa0 5F524545 		.ascii	"_REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_sign"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 226


 8997      4E545F53 
 8997      49474E47 
 8997      414D2870 
 8997      74722920 
 8998 2fd3 67616D29 		.ascii	"gam)\000"
 8998      00
 8999              	.LASF699:
 9000 2fd8 494E545F 		.ascii	"INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)\000"
 9000      4C454153 
 9000      5433325F 
 9000      4D494E20 
 9000      282D5F5F 
 9001              	.LASF315:
 9002 3003 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 9002      435F4154 
 9002      4F4D4943 
 9002      5F53484F 
 9002      52545F4C 
 9003              	.LASF1083:
 9004 3022 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 9004      455F5245 
 9004      47495354 
 9004      52595F49 
 9004      54454D00 
 9005              	.LASF231:
 9006 3036 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 9006      41434355 
 9006      4D5F4642 
 9006      49545F5F 
 9006      203800
 9007              	.LASF430:
 9008 3049 5F5F6E65 		.ascii	"__need_size_t\000"
 9008      65645F73 
 9008      697A655F 
 9008      7400
 9009              	.LASF319:
 9010 3057 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 9010      435F4154 
 9010      4F4D4943 
 9010      5F544553 
 9010      545F414E 
 9011              	.LASF465:
 9012 307b 5F535953 		.ascii	"_SYS__TYPES_H \000"
 9012      5F5F5459 
 9012      5045535F 
 9012      482000
 9013              	.LASF900:
 9014 308a 74726163 		.ascii	"traceTIMER_COMMAND_SEND(xTimer,xMessageID,xMessageV"
 9014      6554494D 
 9014      45525F43 
 9014      4F4D4D41 
 9014      4E445F53 
 9015 30bd 616C7565 		.ascii	"alueValue,xReturn) \000"
 9015      56616C75 
 9015      652C7852 
 9015      65747572 
 9015      6E292000 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 227


 9016              	.LASF67:
 9017 30d1 5F5F5343 		.ascii	"__SCHAR_MAX__ 127\000"
 9017      4841525F 
 9017      4D41585F 
 9017      5F203132 
 9017      3700
 9018              	.LASF652:
 9019 30e3 5F4E4557 		.ascii	"_NEWLIB_ALLOCA_H \000"
 9019      4C49425F 
 9019      414C4C4F 
 9019      43415F48 
 9019      2000
 9020              	.LASF163:
 9021 30f5 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 9021      424C5F48 
 9021      41535F49 
 9021      4E46494E 
 9021      4954595F 
 9022              	.LASF743:
 9023 310d 46524545 		.ascii	"FREERTOS_CONFIG_H \000"
 9023      52544F53 
 9023      5F434F4E 
 9023      4649475F 
 9023      482000
 9024              	.LASF169:
 9025 3120 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 9025      4333325F 
 9025      4D41585F 
 9025      5F20392E 
 9025      39393939 
 9026              	.LASF692:
 9027 313c 55494E54 		.ascii	"UINT16_MAX __UINT16_MAX__\000"
 9027      31365F4D 
 9027      4158205F 
 9027      5F55494E 
 9027      5431365F 
 9028              	.LASF980:
 9029 3156 7461736B 		.ascii	"taskYIELD() portYIELD()\000"
 9029      5949454C 
 9029      44282920 
 9029      706F7274 
 9029      5949454C 
 9030              	.LASF585:
 9031 316e 5F5F4343 		.ascii	"__CC_SUPPORTS_INLINE 1\000"
 9031      5F535550 
 9031      504F5254 
 9031      535F494E 
 9031      4C494E45 
 9032              	.LASF800:
 9033 3185 706F7274 		.ascii	"portDOUBLE double\000"
 9033      444F5542 
 9033      4C452064 
 9033      6F75626C 
 9033      6500
 9034              	.LASF349:
 9035 3197 5F5F4152 		.ascii	"__ARM_PCS 1\000"
 9035      4D5F5043 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 228


 9035      53203100 
 9036              	.LASF793:
 9037 31a3 65727243 		.ascii	"errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY ( -1 )\000"
 9037      4F554C44 
 9037      5F4E4F54 
 9037      5F414C4C 
 9037      4F434154 
 9038              	.LASF1069:
 9039 31d0 70634865 		.ascii	"pcHead\000"
 9039      616400
 9040              	.LASF889:
 9041 31d7 74726163 		.ascii	"traceTASK_CREATE_FAILED() \000"
 9041      65544153 
 9041      4B5F4352 
 9041      45415445 
 9041      5F464149 
 9042              	.LASF722:
 9043 31f2 55494E54 		.ascii	"UINTMAX_MAX __UINTMAX_MAX__\000"
 9043      4D41585F 
 9043      4D415820 
 9043      5F5F5549 
 9043      4E544D41 
 9044              	.LASF570:
 9045 320e 5F5F474E 		.ascii	"__GNUCLIKE_ASM 3\000"
 9045      55434C49 
 9045      4B455F41 
 9045      534D2033 
 9045      00
 9046              	.LASF83:
 9047 321f 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 9047      475F4154 
 9047      4F4D4943 
 9047      5F4D494E 
 9047      5F5F2028 
 9048              	.LASF243:
 9049 324c 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 9049      4343554D 
 9049      5F4D494E 
 9049      5F5F2030 
 9049      2E30554B 
 9050              	.LASF1022:
 9051 3261 71756575 		.ascii	"queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )"
 9051      6553454D 
 9051      4150484F 
 9051      52455F51 
 9051      55455545 
 9052 3294 00       		.ascii	"\000"
 9053              	.LASF438:
 9054 3295 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 9054      5F574348 
 9054      41525F54 
 9054      5F2000
 9055              	.LASF691:
 9056 32a4 494E5431 		.ascii	"INT16_MAX __INT16_MAX__\000"
 9056      365F4D41 
 9056      58205F5F 
 9056      494E5431 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 229


 9056      365F4D41 
 9057              	.LASF773:
 9058 32bc 636F6E66 		.ascii	"configIP_ADDR0 192\000"
 9058      69674950 
 9058      5F414444 
 9058      52302031 
 9058      393200
 9059              	.LASF724:
 9060 32cf 5349475F 		.ascii	"SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)\000"
 9060      41544F4D 
 9060      49435F4D 
 9060      494E2028 
 9060      2D5F5F53 
 9061              	.LASF735:
 9062 32fb 55494E54 		.ascii	"UINT16_C(x) __UINT16_C(x)\000"
 9062      31365F43 
 9062      28782920 
 9062      5F5F5549 
 9062      4E543136 
 9063              	.LASF789:
 9064 3315 70645041 		.ascii	"pdPASS ( pdTRUE )\000"
 9064      53532028 
 9064      20706454 
 9064      52554520 
 9064      2900
 9065              	.LASF486:
 9066 3327 5F5F6C6F 		.ascii	"__lock_acquire_recursive(lock) (_CAST_VOID 0)\000"
 9066      636B5F61 
 9066      63717569 
 9066      72655F72 
 9066      65637572 
 9067              	.LASF706:
 9068 3355 494E545F 		.ascii	"INT_LEAST64_MAX __INT_LEAST64_MAX__\000"
 9068      4C454153 
 9068      5436345F 
 9068      4D415820 
 9068      5F5F494E 
 9069              	.LASF1076:
 9070 3379 75784974 		.ascii	"uxItemSize\000"
 9070      656D5369 
 9070      7A6500
 9071              	.LASF148:
 9072 3384 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 9072      4C5F4841 
 9072      535F4445 
 9072      4E4F524D 
 9072      5F5F2031 
 9073              	.LASF519:
 9074 3399 5F524545 		.ascii	"_REENT_CHECK_EMERGENCY(ptr) \000"
 9074      4E545F43 
 9074      4845434B 
 9074      5F454D45 
 9074      5247454E 
 9075              	.LASF821:
 9076 33b6 706F7274 		.ascii	"portTASK_FUNCTION(vFunction,pvParameters) void vFun"
 9076      5441534B 
 9076      5F46554E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 230


 9076      4354494F 
 9076      4E287646 
 9077 33e9 6374696F 		.ascii	"ction( void *pvParameters )\000"
 9077      6E282076 
 9077      6F696420 
 9077      2A707650 
 9077      6172616D 
 9078              	.LASF858:
 9079 3405 74726163 		.ascii	"traceLOW_POWER_IDLE_BEGIN() \000"
 9079      654C4F57 
 9079      5F504F57 
 9079      45525F49 
 9079      444C455F 
 9080              	.LASF744:
 9081 3422 636F6E66 		.ascii	"configUSE_PREEMPTION 1\000"
 9081      69675553 
 9081      455F5052 
 9081      45454D50 
 9081      54494F4E 
 9082              	.LASF92:
 9083 3439 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 127\000"
 9083      545F4C45 
 9083      41535438 
 9083      5F4D4158 
 9083      5F5F2031 
 9084              	.LASF913:
 9085 3450 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS(xEventGroup,uxBitsToSet) "
 9085      65455645 
 9085      4E545F47 
 9085      524F5550 
 9085      5F534554 
 9086 3483 00       		.ascii	"\000"
 9087              	.LASF767:
 9088 3484 494E434C 		.ascii	"INCLUDE_vTaskDelete 1\000"
 9088      5544455F 
 9088      76546173 
 9088      6B44656C 
 9088      65746520 
 9089              	.LASF785:
 9090 349a 50524F4A 		.ascii	"PROJDEFS_H \000"
 9090      44454653 
 9090      5F482000 
 9091              	.LASF178:
 9092 34a6 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
 9092      4336345F 
 9092      5355424E 
 9092      4F524D41 
 9092      4C5F4D49 
 9093              	.LASF195:
 9094 34d7 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 9094      46524143 
 9094      545F4550 
 9094      53494C4F 
 9094      4E5F5F20 
 9095              	.LASF449:
 9096 34f5 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 9096      20282876 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 231


 9096      6F696420 
 9096      2A293029 
 9096      00
 9097              	.LASF916:
 9098 3506 74726163 		.ascii	"tracePEND_FUNC_CALL(xFunctionToPend,pvParameter1,ul"
 9098      6550454E 
 9098      445F4655 
 9098      4E435F43 
 9098      414C4C28 
 9099 3539 50617261 		.ascii	"Parameter2,ret) \000"
 9099      6D657465 
 9099      72322C72 
 9099      65742920 
 9099      00
 9100              	.LASF611:
 9101 354a 5F546872 		.ascii	"_Thread_local __thread\000"
 9101      6561645F 
 9101      6C6F6361 
 9101      6C205F5F 
 9101      74687265 
 9102              	.LASF111:
 9103 3561 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 9223372036854775807LL\000"
 9103      545F4641 
 9103      53543634 
 9103      5F4D4158 
 9103      5F5F2039 
 9104              	.LASF1105:
 9105 358a 7578496E 		.ascii	"uxInitialCount\000"
 9105      69746961 
 9105      6C436F75 
 9105      6E7400
 9106              	.LASF475:
 9107 3599 5F5F5F69 		.ascii	"___int_least32_t_defined 1\000"
 9107      6E745F6C 
 9107      65617374 
 9107      33325F74 
 9107      5F646566 
 9108              	.LASF259:
 9109 35b4 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 9109      41434355 
 9109      4D5F4D41 
 9109      585F5F20 
 9109      30583746 
 9110              	.LASF450:
 9111 35de 5F5F6E65 		.ascii	"__need_NULL\000"
 9111      65645F4E 
 9111      554C4C00 
 9112              	.LASF822:
 9113 35ea 706F7274 		.ascii	"portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime) vPo"
 9113      53555050 
 9113      52455353 
 9113      5F544943 
 9113      4B535F41 
 9114 361d 72745375 		.ascii	"rtSuppressTicksAndSleep( xExpectedIdleTime )\000"
 9114      70707265 
 9114      73735469 
 9114      636B7341 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 232


 9114      6E64536C 
 9115              	.LASF674:
 9116 364a 5F5F696E 		.ascii	"__int_least32_t_defined 1\000"
 9116      745F6C65 
 9116      61737433 
 9116      325F745F 
 9116      64656669 
 9117              	.LASF1077:
 9118 3664 7852784C 		.ascii	"xRxLock\000"
 9118      6F636B00 
 9119              	.LASF768:
 9120 366c 494E434C 		.ascii	"INCLUDE_vTaskCleanUpResources 0\000"
 9120      5544455F 
 9120      76546173 
 9120      6B436C65 
 9120      616E5570 
 9121              	.LASF709:
 9122 368c 494E545F 		.ascii	"INT_FAST8_MAX __INT_FAST8_MAX__\000"
 9122      46415354 
 9122      385F4D41 
 9122      58205F5F 
 9122      494E545F 
 9123              	.LASF747:
 9124 36ac 636F6E66 		.ascii	"configUSE_TICK_HOOK 1\000"
 9124      69675553 
 9124      455F5449 
 9124      434B5F48 
 9124      4F4F4B20 
 9125              	.LASF761:
 9126 36c2 636F6E66 		.ascii	"configCHECK_FOR_STACK_OVERFLOW 0\000"
 9126      69674348 
 9126      45434B5F 
 9126      464F525F 
 9126      53544143 
 9127              	.LASF738:
 9128 36e3 494E5436 		.ascii	"INT64_C(x) __INT64_C(x)\000"
 9128      345F4328 
 9128      7829205F 
 9128      5F494E54 
 9128      36345F43 
 9129              	.LASF536:
 9130 36fb 5F524545 		.ascii	"_REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtow"
 9130      4E545F4D 
 9130      42544F57 
 9130      435F5354 
 9130      41544528 
 9131 372e 635F7374 		.ascii	"c_state)\000"
 9131      61746529 
 9131      00
 9132              	.LASF784:
 9133 3737 636F6E66 		.ascii	"configASSERT(x) if( ( x ) == 0 ) { taskDISABLE_INTE"
 9133      69674153 
 9133      53455254 
 9133      28782920 
 9133      69662820 
 9134 376a 52525550 		.ascii	"RRUPTS(); for( ;; ); }\000"
 9134      54532829 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 233


 9134      3B20666F 
 9134      7228203B 
 9134      3B20293B 
 9135              	.LASF535:
 9136 3781 5F524545 		.ascii	"_REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_"
 9136      4E545F4D 
 9136      424C454E 
 9136      5F535441 
 9136      54452870 
 9137 37b4 73746174 		.ascii	"state)\000"
 9137      652900
 9138              	.LASF745:
 9139 37bb 636F6E66 		.ascii	"configUSE_IDLE_HOOK 0\000"
 9139      69675553 
 9139      455F4944 
 9139      4C455F48 
 9139      4F4F4B20 
 9140              	.LASF266:
 9141 37d1 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 9141      5F464249 
 9141      545F5F20 
 9141      3700
 9142              	.LASF320:
 9143 37df 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 9143      435F4154 
 9143      4F4D4943 
 9143      5F504F49 
 9143      4E544552 
 9144              	.LASF326:
 9145 3800 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 9145      4D5F4645 
 9145      41545552 
 9145      455F5142 
 9145      49542031 
 9146              	.LASF331:
 9147 3815 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 9147      4D5F4645 
 9147      41545552 
 9147      455F434C 
 9147      5A203100 
 9148              	.LASF8:
 9149 3829 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 9149      4F4D4943 
 9149      5F414351 
 9149      55495245 
 9149      203200
 9150              	.LASF818:
 9151 383c 706F7274 		.ascii	"portENTER_CRITICAL() vPortEnterCritical()\000"
 9151      454E5445 
 9151      525F4352 
 9151      49544943 
 9151      414C2829 
 9152              	.LASF80:
 9153 3866 5F5F5549 		.ascii	"__UINTMAX_MAX__ 18446744073709551615ULL\000"
 9153      4E544D41 
 9153      585F4D41 
 9153      585F5F20 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 234


 9153      31383434 
 9154              	.LASF803:
 9155 388e 706F7274 		.ascii	"portSTACK_TYPE uint32_t\000"
 9155      53544143 
 9155      4B5F5459 
 9155      50452075 
 9155      696E7433 
 9156              	.LASF491:
 9157 38a6 756E7369 		.ascii	"unsigned signed\000"
 9157      676E6564 
 9157      20736967 
 9157      6E656400 
 9158              	.LASF1015:
 9159 38b6 78517565 		.ascii	"xQueueReset(xQueue) xQueueGenericReset( xQueue, pdF"
 9159      75655265 
 9159      73657428 
 9159      78517565 
 9159      75652920 
 9160 38e9 414C5345 		.ascii	"ALSE )\000"
 9160      202900
 9161              	.LASF45:
 9162 38f0 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 9162      4E543634 
 9162      5F545950 
 9162      455F5F20 
 9162      6C6F6E67 
 9163              	.LASF961:
 9164 3917 6C697374 		.ascii	"listGET_LIST_ITEM_OWNER(pxListItem) ( ( pxListItem "
 9164      4745545F 
 9164      4C495354 
 9164      5F495445 
 9164      4D5F4F57 
 9165 394a 292D3E70 		.ascii	")->pvOwner )\000"
 9165      764F776E 
 9165      65722029 
 9165      00
 9166              	.LASF333:
 9167 3957 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 9167      4D5F5349 
 9167      5A454F46 
 9167      5F574348 
 9167      41525F54 
 9168              	.LASF1100:
 9169 396e 70784D75 		.ascii	"pxMutex\000"
 9169      74657800 
 9170              	.LASF64:
 9171 3976 5F5F6861 		.ascii	"__has_include(STR) __has_include__(STR)\000"
 9171      735F696E 
 9171      636C7564 
 9171      65285354 
 9171      5229205F 
 9172              	.LASF1062:
 9173 399e 784F7665 		.ascii	"xOverflowCount\000"
 9173      72666C6F 
 9173      77436F75 
 9173      6E7400
 9174              	.LASF891:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 235


 9175 39ad 74726163 		.ascii	"traceTASK_DELAY_UNTIL() \000"
 9175      65544153 
 9175      4B5F4445 
 9175      4C41595F 
 9175      554E5449 
 9176              	.LASF749:
 9177 39c6 636F6E66 		.ascii	"configTICK_RATE_HZ ( ( portTickType ) 1200 )\000"
 9177      69675449 
 9177      434B5F52 
 9177      4154455F 
 9177      485A2028 
 9178              	.LASF146:
 9179 39f3 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 9179      4C5F4550 
 9179      53494C4F 
 9179      4E5F5F20 
 9179      2828646F 
 9180              	.LASF606:
 9181 3a25 5F5F7365 		.ascii	"__section(x) __attribute__((__section__(x)))\000"
 9181      6374696F 
 9181      6E287829 
 9181      205F5F61 
 9181      74747269 
 9182              	.LASF966:
 9183 3a52 6C697374 		.ascii	"listGET_NEXT(pxListItem) ( ( pxListItem )->pxNext )"
 9183      4745545F 
 9183      4E455854 
 9183      2870784C 
 9183      69737449 
 9184 3a85 00       		.ascii	"\000"
 9185              	.LASF523:
 9186 3a86 5F524545 		.ascii	"_REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_nex"
 9186      4E545F52 
 9186      414E445F 
 9186      4E455854 
 9186      28707472 
 9187 3ab9 742900   		.ascii	"t)\000"
 9188              	.LASF1044:
 9189 3abc 42617365 		.ascii	"BaseT_t\000"
 9189      545F7400 
 9190              	.LASF239:
 9191 3ac4 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 9191      43554D5F 
 9191      4D41585F 
 9191      5F203058 
 9191      37464646 
 9192              	.LASF875:
 9193 3ae2 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE_FAILED() \000"
 9193      65435245 
 9193      4154455F 
 9193      434F554E 
 9193      54494E47 
 9194              	.LASF154:
 9195 3b0b 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 9195      424C5F4D 
 9195      494E5F31 
 9195      305F4558 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 236


 9195      505F5F20 
 9196              	.LASF1134:
 9197 3b26 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 9197      75654973 
 9197      51756575 
 9197      65456D70 
 9197      74794672 
 9198              	.LASF817:
 9199 3b40 706F7274 		.ascii	"portENABLE_INTERRUPTS() vPortClearInterruptMask(0)\000"
 9199      454E4142 
 9199      4C455F49 
 9199      4E544552 
 9199      52555054 
 9200              	.LASF887:
 9201 3b73 74726163 		.ascii	"traceQUEUE_DELETE(pxQueue) \000"
 9201      65515545 
 9201      55455F44 
 9201      454C4554 
 9201      45287078 
 9202              	.LASF321:
 9203 3b8f 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 9203      435F4841 
 9203      56455F44 
 9203      57415246 
 9203      325F4346 
 9204              	.LASF469:
 9205 3bab 5F5F5F69 		.ascii	"___int8_t_defined 1\000"
 9205      6E74385F 
 9205      745F6465 
 9205      66696E65 
 9205      64203100 
 9206              	.LASF188:
 9207 3bbf 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 9207      52414354 
 9207      5F4D494E 
 9207      5F5F2028 
 9207      2D302E35 
 9208              	.LASF1036:
 9209 3bdd 6C6F6E67 		.ascii	"long unsigned int\000"
 9209      20756E73 
 9209      69676E65 
 9209      6420696E 
 9209      7400
 9210              	.LASF289:
 9211 3bef 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 9211      5F494249 
 9211      545F5F20 
 9211      313600
 9212              	.LASF1082:
 9213 3bfe 51756575 		.ascii	"Queue_t\000"
 9213      655F7400 
 9214              	.LASF1120:
 9215 3c06 78517565 		.ascii	"xQueuePeekFromISR\000"
 9215      75655065 
 9215      656B4672 
 9215      6F6D4953 
 9215      5200
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 237


 9216              	.LASF2:
 9217 3c18 5F5F474E 		.ascii	"__GNUC__ 4\000"
 9217      55435F5F 
 9217      203400
 9218              	.LASF787:
 9219 3c23 70644641 		.ascii	"pdFALSE ( ( BaseT_t ) 0 )\000"
 9219      4C534520 
 9219      28202820 
 9219      42617365 
 9219      545F7420 
 9220              	.LASF43:
 9221 3c3d 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 9221      4E543136 
 9221      5F545950 
 9221      455F5F20 
 9221      73686F72 
 9222              	.LASF658:
 9223 3c60 52414E44 		.ascii	"RAND_MAX __RAND_MAX\000"
 9223      5F4D4158 
 9223      205F5F52 
 9223      414E445F 
 9223      4D415800 
 9224              	.LASF764:
 9225 3c74 636F6E66 		.ascii	"configGENERATE_RUN_TIME_STATS 0\000"
 9225      69674745 
 9225      4E455241 
 9225      54455F52 
 9225      554E5F54 
 9226              	.LASF1035:
 9227 3c94 5F5F7569 		.ascii	"__uint32_t\000"
 9227      6E743332 
 9227      5F7400
 9228              	.LASF343:
 9229 3c9f 5F5F534F 		.ascii	"__SOFTFP__ 1\000"
 9229      46544650 
 9229      5F5F2031 
 9229      00
 9230              	.LASF673:
 9231 3cac 5F5F696E 		.ascii	"__int32_t_defined 1\000"
 9231      7433325F 
 9231      745F6465 
 9231      66696E65 
 9231      64203100 
 9232              	.LASF959:
 9233 3cc0 636F6E66 		.ascii	"configLIST_VOLATILE \000"
 9233      69674C49 
 9233      53545F56 
 9233      4F4C4154 
 9233      494C4520 
 9234              	.LASF167:
 9235 3cd5 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 9235      4333325F 
 9235      4D41585F 
 9235      4558505F 
 9235      5F203937 
 9236              	.LASF928:
 9237 3cea 636F6E66 		.ascii	"configPOST_SLEEP_PROCESSING(x) \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 238


 9237      6967504F 
 9237      53545F53 
 9237      4C454550 
 9237      5F50524F 
 9238              	.LASF439:
 9239 3d0a 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 9239      41525F54 
 9239      5F444546 
 9239      494E4544 
 9239      5F2000
 9240              	.LASF774:
 9241 3d1d 636F6E66 		.ascii	"configIP_ADDR1 168\000"
 9241      69674950 
 9241      5F414444 
 9241      52312031 
 9241      363800
 9242              	.LASF558:
 9243 3d30 5F5F6174 		.ascii	"__attribute_malloc__ \000"
 9243      74726962 
 9243      7574655F 
 9243      6D616C6C 
 9243      6F635F5F 
 9244              	.LASF940:
 9245 3d46 78546173 		.ascii	"xTaskHandle TaskHandle_t\000"
 9245      6B48616E 
 9245      646C6520 
 9245      5461736B 
 9245      48616E64 
 9246              	.LASF732:
 9247 3d5f 494E5438 		.ascii	"INT8_C(x) __INT8_C(x)\000"
 9247      5F432878 
 9247      29205F5F 
 9247      494E5438 
 9247      5F432878 
 9248              	.LASF58:
 9249 3d75 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 9249      4E545F46 
 9249      41535438 
 9249      5F545950 
 9249      455F5F20 
 9250              	.LASF257:
 9251 3d96 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 9251      41434355 
 9251      4D5F4942 
 9251      49545F5F 
 9251      20333200 
 9252              	.LASF200:
 9253 3daa 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 9253      4143545F 
 9253      45505349 
 9253      4C4F4E5F 
 9253      5F203078 
 9254              	.LASF1020:
 9255 3dc5 75785175 		.ascii	"uxQueueType pcHead\000"
 9255      65756554 
 9255      79706520 
 9255      70634865 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 239


 9255      616400
 9256              	.LASF815:
 9257 3dd8 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK_FROM_ISR(x) vPortClearInte"
 9257      434C4541 
 9257      525F494E 
 9257      54455252 
 9257      5550545F 
 9258 3e0b 72727570 		.ascii	"rruptMask(x)\000"
 9258      744D6173 
 9258      6B287829 
 9258      00
 9259              	.LASF1109:
 9260 3e18 78456E74 		.ascii	"xEntryTimeSet\000"
 9260      72795469 
 9260      6D655365 
 9260      7400
 9261              	.LASF911:
 9262 3e26 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS(xEventGroup,uxBitsToCle"
 9262      65455645 
 9262      4E545F47 
 9262      524F5550 
 9262      5F434C45 
 9263 3e59 61722920 		.ascii	"ar) \000"
 9263      00
 9264              	.LASF88:
 9265 3e5e 5F5F5549 		.ascii	"__UINT8_MAX__ 255\000"
 9265      4E54385F 
 9265      4D41585F 
 9265      5F203235 
 9265      3500
 9266              	.LASF337:
 9267 3e70 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 9267      43535F33 
 9267      325F5F20 
 9267      3100
 9268              	.LASF412:
 9269 3e7e 5F5F6E65 		.ascii	"__need_NULL \000"
 9269      65645F4E 
 9269      554C4C20 
 9269      00
 9270              	.LASF1102:
 9271 3e8b 78546963 		.ascii	"xTicksToWait\000"
 9271      6B73546F 
 9271      57616974 
 9271      00
 9272              	.LASF786:
 9273 3e98 70644D53 		.ascii	"pdMS_TO_TICKS(xTimeInMs) ( ( ( TickT_t ) ( xTimeInM"
 9273      5F544F5F 
 9273      5449434B 
 9273      53287854 
 9273      696D6549 
 9274 3ecb 73202920 		.ascii	"s ) * configTICK_RATE_HZ ) / ( TickT_t ) 1000 )\000"
 9274      2A20636F 
 9274      6E666967 
 9274      5449434B 
 9274      5F524154 
 9275              	.LASF618:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 240


 9276 3efb 5F5F6661 		.ascii	"__fastcall __attribute__((__fastcall__))\000"
 9276      73746361 
 9276      6C6C205F 
 9276      5F617474 
 9276      72696275 
 9277              	.LASF69:
 9278 3f24 5F5F494E 		.ascii	"__INT_MAX__ 2147483647\000"
 9278      545F4D41 
 9278      585F5F20 
 9278      32313437 
 9278      34383336 
 9279              	.LASF464:
 9280 3f3b 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 9280      65746F66 
 9280      28545950 
 9280      452C4D45 
 9280      4D424552 
 9281 3f6e 42455229 		.ascii	"BER)\000"
 9281      00
 9282              	.LASF107:
 9283 3f73 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 9283      4E543634 
 9283      5F432863 
 9283      29206320 
 9283      23232055 
 9284              	.LASF53:
 9285 3f8a 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 9285      4E545F4C 
 9285      45415354 
 9285      36345F54 
 9285      5950455F 
 9286              	.LASF359:
 9287 3fb7 5F4E4557 		.ascii	"_NEWLIB_VERSION \"2.2.0\"\000"
 9287      4C49425F 
 9287      56455253 
 9287      494F4E20 
 9287      22322E32 
 9288              	.LASF191:
 9289 3fcf 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 9289      46524143 
 9289      545F4642 
 9289      49545F5F 
 9289      203800
 9290              	.LASF160:
 9291 3fe2 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 9291      424C5F45 
 9291      5053494C 
 9291      4F4E5F5F 
 9291      20322E32 
 9292              	.LASF937:
 9293 400b 636F6E66 		.ascii	"configENABLE_BACKWARD_COMPATIBILITY 1\000"
 9293      6967454E 
 9293      41424C45 
 9293      5F424143 
 9293      4B574152 
 9294              	.LASF923:
 9295 4031 7076506F 		.ascii	"pvPortMallocAligned(x,puxStackBuffer) ( ( ( puxStac"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 241


 9295      72744D61 
 9295      6C6C6F63 
 9295      416C6967 
 9295      6E656428 
 9296 4064 6B427566 		.ascii	"kBuffer ) == NULL ) ? ( pvPortMalloc( ( x ) ) ) : ("
 9296      66657220 
 9296      29203D3D 
 9296      204E554C 
 9296      4C202920 
 9297 4097 20707578 		.ascii	" puxStackBuffer ) )\000"
 9297      53746163 
 9297      6B427566 
 9297      66657220 
 9297      29202900 
 9298              	.LASF601:
 9299 40ab 5F5F7075 		.ascii	"__pure2 __attribute__((__const__))\000"
 9299      72653220 
 9299      5F5F6174 
 9299      74726962 
 9299      7574655F 
 9300              	.LASF312:
 9301 40ce 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 9301      435F4154 
 9301      4F4D4943 
 9301      5F434841 
 9301      5231365F 
 9302              	.LASF141:
 9303 40f0 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 9303      4C5F4D41 
 9303      585F4558 
 9303      505F5F20 
 9303      31303234 
 9304              	.LASF9:
 9305 4105 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 9305      4F4D4943 
 9305      5F52454C 
 9305      45415345 
 9305      203300
 9306              	.LASF766:
 9307 4118 494E434C 		.ascii	"INCLUDE_uxTaskPriorityGet 1\000"
 9307      5544455F 
 9307      75785461 
 9307      736B5072 
 9307      696F7269 
 9308              	.LASF123:
 9309 4134 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 9309      545F4D41 
 9309      4E545F44 
 9309      49475F5F 
 9309      20323400 
 9310              	.LASF503:
 9311 4148 5F52414E 		.ascii	"_RAND48_SEED_1 (0xabcd)\000"
 9311      4434385F 
 9311      53454544 
 9311      5F312028 
 9311      30786162 
 9312              	.LASF246:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 242


 9313 4160 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
 9313      4343554D 
 9313      5F464249 
 9313      545F5F20 
 9313      333100
 9314              	.LASF480:
 9315 4173 5F5F4C4F 		.ascii	"__LOCK_INIT_RECURSIVE(class,lock) static int lock ="
 9315      434B5F49 
 9315      4E49545F 
 9315      52454355 
 9315      52534956 
 9316 41a6 20303B00 		.ascii	" 0;\000"
 9317              	.LASF992:
 9318 41aa 71756575 		.ascii	"queueSEND_TO_FRONT ( ( BaseT_t ) 1 )\000"
 9318      6553454E 
 9318      445F544F 
 9318      5F46524F 
 9318      4E542028 
 9319              	.LASF617:
 9320 41cf 5F5F6E6F 		.ascii	"__nonnull(x) __attribute__((__nonnull__(x)))\000"
 9320      6E6E756C 
 9320      6C287829 
 9320      205F5F61 
 9320      74747269 
 9321              	.LASF588:
 9322 41fc 5F5F4343 		.ascii	"__CC_SUPPORTS___FUNC__ 1\000"
 9322      5F535550 
 9322      504F5254 
 9322      535F5F5F 
 9322      46554E43 
 9323              	.LASF810:
 9324 4215 706F7274 		.ascii	"portNVIC_PENDSVSET_BIT ( 1UL << 28UL )\000"
 9324      4E564943 
 9324      5F50454E 
 9324      44535653 
 9324      45545F42 
 9325              	.LASF762:
 9326 423c 636F6E66 		.ascii	"configUSE_RECURSIVE_MUTEXES 1\000"
 9326      69675553 
 9326      455F5245 
 9326      43555253 
 9326      4956455F 
 9327              	.LASF1000:
 9328 425a 78517565 		.ascii	"xQueueCreate(uxQueueLength,uxItemSize) xQueueGeneri"
 9328      75654372 
 9328      65617465 
 9328      28757851 
 9328      75657565 
 9329 428d 63437265 		.ascii	"cCreate( uxQueueLength, uxItemSize, queueQUEUE_TYPE"
 9329      61746528 
 9329      20757851 
 9329      75657565 
 9329      4C656E67 
 9330 42c0 5F424153 		.ascii	"_BASE )\000"
 9330      45202900 
 9331              	.LASF571:
 9332 42c8 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_CONSTANTS \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 243


 9332      55434C49 
 9332      4B455F4D 
 9332      4154485F 
 9332      4255494C 
 9333              	.LASF1129:
 9334 42eb 78506F73 		.ascii	"xPosition\000"
 9334      6974696F 
 9334      6E00
 9335              	.LASF456:
 9336 42f5 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 9336      54524449 
 9336      46465F20 
 9336      00
 9337              	.LASF1003:
 9338 4302 78517565 		.ascii	"xQueueSend(xQueue,pvItemToQueue,xTicksToWait) xQueu"
 9338      75655365 
 9338      6E642878 
 9338      51756575 
 9338      652C7076 
 9339 4335 6547656E 		.ascii	"eGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTic"
 9339      65726963 
 9339      53656E64 
 9339      28202820 
 9339      78517565 
 9340 4368 6B73546F 		.ascii	"ksToWait ), queueSEND_TO_BACK )\000"
 9340      57616974 
 9340      20292C20 
 9340      71756575 
 9340      6553454E 
 9341              	.LASF161:
 9342 4388 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 9342      424C5F44 
 9342      454E4F52 
 9342      4D5F4D49 
 9342      4E5F5F20 
 9343              	.LASF381:
 9344 43b5 5F5F4558 		.ascii	"__EXPORT \000"
 9344      504F5254 
 9344      2000
 9345              	.LASF327:
 9346 43bf 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 9346      4D5F4645 
 9346      41545552 
 9346      455F5341 
 9346      54203100 
 9347              	.LASF671:
 9348 43d3 5F5F696E 		.ascii	"__int16_t_defined 1\000"
 9348      7431365F 
 9348      745F6465 
 9348      66696E65 
 9348      64203100 
 9349              	.LASF222:
 9350 43e7 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 9350      4C465241 
 9350      43545F49 
 9350      4249545F 
 9350      5F203000 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 244


 9351              	.LASF454:
 9352 43fb 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 9352      495F5354 
 9352      44444546 
 9352      5F482000 
 9353              	.LASF521:
 9354 440b 5F524545 		.ascii	"_REENT_CHECK_SIGNAL_BUF(ptr) \000"
 9354      4E545F43 
 9354      4845434B 
 9354      5F534947 
 9354      4E414C5F 
 9355              	.LASF452:
 9356 4429 5F535444 		.ascii	"_STDDEF_H \000"
 9356      4445465F 
 9356      482000
 9357              	.LASF1012:
 9358 4434 78517565 		.ascii	"xQueueAltSendToBack(xQueue,pvItemToQueue,xTicksToWa"
 9358      7565416C 
 9358      7453656E 
 9358      64546F42 
 9358      61636B28 
 9359 4467 69742920 		.ascii	"it) xQueueAltGenericSend( ( xQueue ), ( pvItemToQue"
 9359      78517565 
 9359      7565416C 
 9359      7447656E 
 9359      65726963 
 9360 449a 75652029 		.ascii	"ue ), ( xTicksToWait ), queueSEND_TO_BACK )\000"
 9360      2C202820 
 9360      78546963 
 9360      6B73546F 
 9360      57616974 
 9361              	.LASF501:
 9362 44c6 5F524545 		.ascii	"_REENT_SMALL_CHECK_INIT(ptr) \000"
 9362      4E545F53 
 9362      4D414C4C 
 9362      5F434845 
 9362      434B5F49 
 9363              	.LASF757:
 9364 44e4 636F6E66 		.ascii	"configUSE_MUTEXES 1\000"
 9364      69675553 
 9364      455F4D55 
 9364      54455845 
 9364      53203100 
 9365              	.LASF485:
 9366 44f8 5F5F6C6F 		.ascii	"__lock_acquire(lock) (_CAST_VOID 0)\000"
 9366      636B5F61 
 9366      63717569 
 9366      7265286C 
 9366      6F636B29 
 9367              	.LASF676:
 9368 451c 5F5F696E 		.ascii	"__int_least64_t_defined 1\000"
 9368      745F6C65 
 9368      61737436 
 9368      345F745F 
 9368      64656669 
 9369              	.LASF941:
 9370 4536 78517565 		.ascii	"xQueueHandle QueueHandle_t\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 245


 9370      75654861 
 9370      6E646C65 
 9370      20517565 
 9370      75654861 
 9371              	.LASF763:
 9372 4551 636F6E66 		.ascii	"configQUEUE_REGISTRY_SIZE 10\000"
 9372      69675155 
 9372      4555455F 
 9372      52454749 
 9372      53545259 
 9373              	.LASF924:
 9374 456e 76506F72 		.ascii	"vPortFreeAligned(pvBlockToFree) vPortFree( pvBlockT"
 9374      74467265 
 9374      65416C69 
 9374      676E6564 
 9374      28707642 
 9375 45a1 6F467265 		.ascii	"oFree )\000"
 9375      65202900 
 9376              	.LASF130:
 9377 45a9 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 9377      545F4D41 
 9377      585F5F20 
 9377      332E3430 
 9377      32383233 
 9378              	.LASF697:
 9379 45cd 494E5433 		.ascii	"INT32_MAX __INT32_MAX__\000"
 9379      325F4D41 
 9379      58205F5F 
 9379      494E5433 
 9379      325F4D41 
 9380              	.LASF241:
 9381 45e5 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 9381      4343554D 
 9381      5F464249 
 9381      545F5F20 
 9381      313600
 9382              	.LASF636:
 9383 45f8 5F5F7761 		.ascii	"__warn_references(sym,msg) __asm__(\".section .gnu."
 9383      726E5F72 
 9383      65666572 
 9383      656E6365 
 9383      73287379 
 9384 462a 7761726E 		.ascii	"warning.\" #sym); __asm__(\".asciz \\\"\" msg \"\\\""
 9384      696E672E 
 9384      22202373 
 9384      796D293B 
 9384      205F5F61 
 9385 4656 22293B20 		.ascii	"\"); __asm__(\".previous\")\000"
 9385      5F5F6173 
 9385      6D5F5F28 
 9385      222E7072 
 9385      6576696F 
 9386              	.LASF205:
 9387 466f 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 9387      52414354 
 9387      5F455053 
 9387      494C4F4E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 246


 9387      5F5F2030 
 9388              	.LASF73:
 9389 468c 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 9389      4841525F 
 9389      4D494E5F 
 9389      5F203055 
 9389      00
 9390              	.LASF90:
 9391 469d 5F5F5549 		.ascii	"__UINT32_MAX__ 4294967295UL\000"
 9391      4E543332 
 9391      5F4D4158 
 9391      5F5F2034 
 9391      32393439 
 9392              	.LASF1137:
 9393 46b9 76517565 		.ascii	"vQueueAddToRegistry\000"
 9393      75654164 
 9393      64546F52 
 9393      65676973 
 9393      74727900 
 9394              	.LASF277:
 9395 46cd 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 9395      515F4942 
 9395      49545F5F 
 9395      203000
 9396              	.LASF958:
 9397 46dc 4C495354 		.ascii	"LIST_H \000"
 9397      5F482000 
 9398              	.LASF175:
 9399 46e4 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 9399      4336345F 
 9399      4D494E5F 
 9399      5F203145 
 9399      2D333833 
 9400              	.LASF1138:
 9401 46fb 76517565 		.ascii	"vQueueUnregisterQueue\000"
 9401      7565556E 
 9401      72656769 
 9401      73746572 
 9401      51756575 
 9402              	.LASF317:
 9403 4711 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 9403      435F4154 
 9403      4F4D4943 
 9403      5F4C4F4E 
 9403      475F4C4F 
 9404              	.LASF253:
 9405 472f 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 9405      41434355 
 9405      4D5F4D49 
 9405      4E5F5F20 
 9405      302E3055 
 9406              	.LASF364:
 9407 4746 5F415445 		.ascii	"_ATEXIT_DYNAMIC_ALLOC 1\000"
 9407      5849545F 
 9407      44594E41 
 9407      4D49435F 
 9407      414C4C4F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 247


 9408              	.LASF569:
 9409 475e 5F5F454E 		.ascii	"__END_DECLS \000"
 9409      445F4445 
 9409      434C5320 
 9409      00
 9410              	.LASF1114:
 9411 476b 75785361 		.ascii	"uxSavedInterruptStatus\000"
 9411      76656449 
 9411      6E746572 
 9411      72757074 
 9411      53746174 
 9412              	.LASF336:
 9413 4782 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 9413      4D5F4152 
 9413      43482037 
 9413      00
 9414              	.LASF40:
 9415 478f 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 9415      5433325F 
 9415      54595045 
 9415      5F5F206C 
 9415      6F6E6720 
 9416              	.LASF420:
 9417 47a7 5F53495A 		.ascii	"_SIZE_T_ \000"
 9417      455F545F 
 9417      2000
 9418              	.LASF395:
 9419 47b1 5F444F54 		.ascii	"_DOTS , ...\000"
 9419      53202C20 
 9419      2E2E2E00 
 9420              	.LASF122:
 9421 47bd 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 9421      545F5241 
 9421      4449585F 
 9421      5F203200 
 9422              	.LASF1037:
 9423 47cd 6C6F6E67 		.ascii	"long long int\000"
 9423      206C6F6E 
 9423      6720696E 
 9423      7400
 9424              	.LASF525:
 9425 47db 5F524545 		.ascii	"_REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._m"
 9425      4E545F52 
 9425      414E4434 
 9425      385F4D55 
 9425      4C542870 
 9426 480e 756C7429 		.ascii	"ult)\000"
 9426      00
 9427              	.LASF104:
 9428 4813 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 4294967295UL\000"
 9428      4E545F4C 
 9428      45415354 
 9428      33325F4D 
 9428      41585F5F 
 9429              	.LASF1023:
 9430 4835 71756575 		.ascii	"queueMUTEX_GIVE_BLOCK_TIME ( ( TickT_t ) 0U )\000"
 9430      654D5554 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 248


 9430      45585F47 
 9430      4956455F 
 9430      424C4F43 
 9431              	.LASF1110:
 9432 4863 78596965 		.ascii	"xYieldRequired\000"
 9432      6C645265 
 9432      71756972 
 9432      656400
 9433              	.LASF1006:
 9434 4872 78517565 		.ascii	"xQueueReceive(xQueue,pvBuffer,xTicksToWait) xQueueG"
 9434      75655265 
 9434      63656976 
 9434      65287851 
 9434      75657565 
 9435 48a5 656E6572 		.ascii	"enericReceive( ( xQueue ), ( pvBuffer ), ( xTicksTo"
 9435      69635265 
 9435      63656976 
 9435      65282028 
 9435      20785175 
 9436 48d8 57616974 		.ascii	"Wait ), pdFALSE )\000"
 9436      20292C20 
 9436      70644641 
 9436      4C534520 
 9436      2900
 9437              	.LASF1130:
 9438 48ea 70727643 		.ascii	"prvCopyDataFromQueue\000"
 9438      6F707944 
 9438      61746146 
 9438      726F6D51 
 9438      75657565 
 9439              	.LASF455:
 9440 48ff 5F505452 		.ascii	"_PTRDIFF_T \000"
 9440      44494646 
 9440      5F542000 
 9441              	.LASF56:
 9442 490b 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 9442      545F4641 
 9442      53543332 
 9442      5F545950 
 9442      455F5F20 
 9443              	.LASF781:
 9444 4923 636F6E66 		.ascii	"configPRIO_BITS 5\000"
 9444      69675052 
 9444      494F5F42 
 9444      49545320 
 9444      3500
 9445              	.LASF518:
 9446 4935 5F524545 		.ascii	"_REENT_CHECK_ASCTIME_BUF(ptr) \000"
 9446      4E545F43 
 9446      4845434B 
 9446      5F415343 
 9446      54494D45 
 9447              	.LASF783:
 9448 4954 636F6E66 		.ascii	"configMAX_SYSCALL_INTERRUPT_PRIORITY ( 5 << (8 - co"
 9448      69674D41 
 9448      585F5359 
 9448      5343414C 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 249


 9448      4C5F494E 
 9449 4987 6E666967 		.ascii	"nfigPRIO_BITS) )\000"
 9449      5052494F 
 9449      5F424954 
 9449      53292029 
 9449      00
 9450              	.LASF489:
 9451 4998 5F5F6C6F 		.ascii	"__lock_release(lock) (_CAST_VOID 0)\000"
 9451      636B5F72 
 9451      656C6561 
 9451      7365286C 
 9451      6F636B29 
 9452              	.LASF720:
 9453 49bc 494E544D 		.ascii	"INTMAX_MAX __INTMAX_MAX__\000"
 9453      41585F4D 
 9453      4158205F 
 9453      5F494E54 
 9453      4D41585F 
 9454              	.LASF514:
 9455 49d6 5F524545 		.ascii	"_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(va"
 9455      4E545F49 
 9455      4E49545F 
 9455      50545228 
 9455      76617229 
 9456 4a09 72292929 		.ascii	"r))); (var)->_stdin = &(var)->__sf[0]; (var)->_stdo"
 9456      3B202876 
 9456      6172292D 
 9456      3E5F7374 
 9456      64696E20 
 9457 4a3c 7574203D 		.ascii	"ut = &(var)->__sf[1]; (var)->_stderr = &(var)->__sf"
 9457      20262876 
 9457      6172292D 
 9457      3E5F5F73 
 9457      665B315D 
 9458 4a6f 5B325D3B 		.ascii	"[2]; (var)->_current_locale = \"C\"; (var)->_new._r"
 9458      20287661 
 9458      72292D3E 
 9458      5F637572 
 9458      72656E74 
 9459 4aa0 65656E74 		.ascii	"eent._rand_next = 1; (var)->_new._reent._r48._seed["
 9459      2E5F7261 
 9459      6E645F6E 
 9459      65787420 
 9459      3D20313B 
 9460 4ad3 305D203D 		.ascii	"0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed["
 9460      205F5241 
 9460      4E443438 
 9460      5F534545 
 9460      445F303B 
 9461 4b06 315D203D 		.ascii	"1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed["
 9461      205F5241 
 9461      4E443438 
 9461      5F534545 
 9461      445F313B 
 9462 4b39 325D203D 		.ascii	"2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult["
 9462      205F5241 
 9462      4E443438 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 250


 9462      5F534545 
 9462      445F323B 
 9463 4b6c 305D203D 		.ascii	"0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult["
 9463      205F5241 
 9463      4E443438 
 9463      5F4D554C 
 9463      545F303B 
 9464 4b9f 315D203D 		.ascii	"1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult["
 9464      205F5241 
 9464      4E443438 
 9464      5F4D554C 
 9464      545F313B 
 9465 4bd2 325D203D 		.ascii	"2] = _RAND48_MULT_2; (var)->_new._reent._r48._add ="
 9465      205F5241 
 9465      4E443438 
 9465      5F4D554C 
 9465      545F323B 
 9466 4c05 205F5241 		.ascii	" _RAND48_ADD; }\000"
 9466      4E443438 
 9466      5F414444 
 9466      3B207D00 
 9467              	.LASF436:
 9468 4c15 5F5F5743 		.ascii	"__WCHAR_T \000"
 9468      4841525F 
 9468      542000
 9469              	.LASF372:
 9470 4c20 5F5F5359 		.ascii	"__SYS_CONFIG_H__ \000"
 9470      535F434F 
 9470      4E464947 
 9470      5F485F5F 
 9470      2000
 9471              	.LASF659:
 9472 4c32 4D425F43 		.ascii	"MB_CUR_MAX __locale_mb_cur_max()\000"
 9472      55525F4D 
 9472      4158205F 
 9472      5F6C6F63 
 9472      616C655F 
 9473              	.LASF1108:
 9474 4c53 78436F70 		.ascii	"xCopyPosition\000"
 9474      79506F73 
 9474      6974696F 
 9474      6E00
 9475              	.LASF366:
 9476 4c61 5F484156 		.ascii	"_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\000"
 9476      455F4343 
 9476      5F494E48 
 9476      49424954 
 9476      5F4C4F4F 
 9477              	.LASF41:
 9478 4c84 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 9478      5436345F 
 9478      54595045 
 9478      5F5F206C 
 9478      6F6E6720 
 9479              	.LASF206:
 9480 4ca1 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 9480      52414354 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 251


 9480      5F464249 
 9480      545F5F20 
 9480      333100
 9481              	.LASF21:
 9482 4cb4 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 9482      41525F42 
 9482      49545F5F 
 9482      203800
 9483              	.LASF809:
 9484 4cc3 706F7274 		.ascii	"portNVIC_INT_CTRL_REG ( * ( ( volatile uint32_t * )"
 9484      4E564943 
 9484      5F494E54 
 9484      5F435452 
 9484      4C5F5245 
 9485 4cf6 20307865 		.ascii	" 0xe000ed04 ) )\000"
 9485      30303065 
 9485      64303420 
 9485      29202900 
 9486              	.LASF323:
 9487 4d06 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 9487      5A454F46 
 9487      5F574348 
 9487      41525F54 
 9487      5F5F2034 
 9488              	.LASF1053:
 9489 4d1b 784C4953 		.ascii	"xLIST_ITEM\000"
 9489      545F4954 
 9489      454D00
 9490              	.LASF622:
 9491 4d26 5F5F7072 		.ascii	"__predict_false(exp) __builtin_expect((exp), 0)\000"
 9491      65646963 
 9491      745F6661 
 9491      6C736528 
 9491      65787029 
 9492              	.LASF693:
 9493 4d56 494E545F 		.ascii	"INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)\000"
 9493      4C454153 
 9493      5431365F 
 9493      4D494E20 
 9493      282D5F5F 
 9494              	.LASF885:
 9495 4d81 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue) \000"
 9495      65515545 
 9495      55455F52 
 9495      45434549 
 9495      56455F46 
 9496              	.LASF540:
 9497 4dae 5F524545 		.ascii	"_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mb"
 9497      4E545F4D 
 9497      42535254 
 9497      4F574353 
 9497      5F535441 
 9498 4de1 7372746F 		.ascii	"srtowcs_state)\000"
 9498      7763735F 
 9498      73746174 
 9498      652900
 9499              	.LASF1080:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 252


 9500 4df0 75635175 		.ascii	"ucQueueType\000"
 9500      65756554 
 9500      79706500 
 9501              	.LASF204:
 9502 4dfc 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 9502      52414354 
 9502      5F4D4158 
 9502      5F5F2030 
 9502      58464646 
 9503              	.LASF476:
 9504 4e18 5F5F5F69 		.ascii	"___int_least64_t_defined 1\000"
 9504      6E745F6C 
 9504      65617374 
 9504      36345F74 
 9504      5F646566 
 9505              	.LASF1017:
 9506 4e33 71756575 		.ascii	"queueUNLOCKED ( ( BaseT_t ) -1 )\000"
 9506      65554E4C 
 9506      4F434B45 
 9506      44202820 
 9506      28204261 
 9507              	.LASF1011:
 9508 4e54 78517565 		.ascii	"xQueueAltSendToFront(xQueue,pvItemToQueue,xTicksToW"
 9508      7565416C 
 9508      7453656E 
 9508      64546F46 
 9508      726F6E74 
 9509 4e87 61697429 		.ascii	"ait) xQueueAltGenericSend( ( xQueue ), ( pvItemToQu"
 9509      20785175 
 9509      65756541 
 9509      6C744765 
 9509      6E657269 
 9510 4eba 65756520 		.ascii	"eue ), ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9510      292C2028 
 9510      20785469 
 9510      636B7354 
 9510      6F576169 
 9511              	.LASF44:
 9512 4ee8 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 9512      4E543332 
 9512      5F545950 
 9512      455F5F20 
 9512      6C6F6E67 
 9513              	.LASF554:
 9514 4f0a 5F5F5448 		.ascii	"__THROW \000"
 9514      524F5720 
 9514      00
 9515              	.LASF187:
 9516 4f13 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
 9516      52414354 
 9516      5F494249 
 9516      545F5F20 
 9516      3000
 9517              	.LASF543:
 9518 4f25 5F524545 		.ascii	"_REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)"
 9518      4E545F4C 
 9518      3634415F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 253


 9518      42554628 
 9518      70747229 
 9519 4f58 00       		.ascii	"\000"
 9520              	.LASF666:
 9521 4f59 5F5F5354 		.ascii	"__STDINT_EXP(x) __ ##x ##__\000"
 9521      44494E54 
 9521      5F455850 
 9521      28782920 
 9521      5F5F2023 
 9522              	.LASF468:
 9523 4f75 5F5F4558 		.ascii	"__EXP(x) __ ##x ##__\000"
 9523      50287829 
 9523      205F5F20 
 9523      23237820 
 9523      23235F5F 
 9524              	.LASF26:
 9525 4f8a 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 9525      54455F4F 
 9525      52444552 
 9525      5F5F205F 
 9525      5F4F5244 
 9526              	.LASF813:
 9527 4fb1 706F7274 		.ascii	"portYIELD_FROM_ISR(x) portEND_SWITCHING_ISR( x )\000"
 9527      5949454C 
 9527      445F4652 
 9527      4F4D5F49 
 9527      53522878 
 9528              	.LASF719:
 9529 4fe2 55494E54 		.ascii	"UINT_FAST64_MAX __UINT_FAST64_MAX__\000"
 9529      5F464153 
 9529      5436345F 
 9529      4D415820 
 9529      5F5F5549 
 9530              	.LASF388:
 9531 5006 5F4E4F54 		.ascii	"_NOTHROW \000"
 9531      48524F57 
 9531      2000
 9532              	.LASF802:
 9533 5010 706F7274 		.ascii	"portSHORT short\000"
 9533      53484F52 
 9533      54207368 
 9533      6F727400 
 9534              	.LASF357:
 9535 5020 5F414E53 		.ascii	"_ANSIDECL_H_ \000"
 9535      49444543 
 9535      4C5F485F 
 9535      2000
 9536              	.LASF806:
 9537 502e 706F7274 		.ascii	"portSTACK_GROWTH ( -1 )\000"
 9537      53544143 
 9537      4B5F4752 
 9537      4F575448 
 9537      2028202D 
 9538              	.LASF819:
 9539 5046 706F7274 		.ascii	"portEXIT_CRITICAL() vPortExitCritical()\000"
 9539      45584954 
 9539      5F435249 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 254


 9539      54494341 
 9539      4C282920 
 9540              	.LASF303:
 9541 506e 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 9541      45525F4C 
 9541      4142454C 
 9541      5F505245 
 9541      4649585F 
 9542              	.LASF942:
 9543 5085 7853656D 		.ascii	"xSemaphoreHandle SemaphoreHandle_t\000"
 9543      6170686F 
 9543      72654861 
 9543      6E646C65 
 9543      2053656D 
 9544              	.LASF110:
 9545 50a8 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 2147483647\000"
 9545      545F4641 
 9545      53543332 
 9545      5F4D4158 
 9545      5F5F2032 
 9546              	.LASF201:
 9547 50c6 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 9547      52414354 
 9547      5F464249 
 9547      545F5F20 
 9547      313600
 9548              	.LASF957:
 9549 50d9 494E435F 		.ascii	"INC_TASK_H \000"
 9549      5441534B 
 9549      5F482000 
 9550              	.LASF282:
 9551 50e5 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 9551      515F4642 
 9551      49545F5F 
 9551      20363400 
 9552              	.LASF1074:
 9553 50f5 75784D65 		.ascii	"uxMessagesWaiting\000"
 9553      73736167 
 9553      65735761 
 9553      6974696E 
 9553      6700
 9554              	.LASF156:
 9555 5107 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 9555      424C5F4D 
 9555      41585F31 
 9555      305F4558 
 9555      505F5F20 
 9556              	.LASF759:
 9557 511f 636F6E66 		.ascii	"configUSE_COUNTING_SEMAPHORES 1\000"
 9557      69675553 
 9557      455F434F 
 9557      554E5449 
 9557      4E475F53 
 9558              	.LASF976:
 9559 513f 74736B4B 		.ascii	"tskKERNEL_VERSION_MAJOR 8\000"
 9559      45524E45 
 9559      4C5F5645 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 255


 9559      5253494F 
 9559      4E5F4D41 
 9560              	.LASF825:
 9561 5159 706F7274 		.ascii	"portRESET_READY_PRIORITY(uxPriority,uxReadyPrioriti"
 9561      52455345 
 9561      545F5245 
 9561      4144595F 
 9561      5052494F 
 9562 518c 65732920 		.ascii	"es) ( uxReadyPriorities ) &= ~( 1UL << ( uxPriority"
 9562      28207578 
 9562      52656164 
 9562      79507269 
 9562      6F726974 
 9563 51bf 20292029 		.ascii	" ) )\000"
 9563      00
 9564              	.LASF939:
 9565 51c4 706F7274 		.ascii	"portTickType TickT_t\000"
 9565      5469636B 
 9565      54797065 
 9565      20546963 
 9565      6B545F74 
 9566              	.LASF506:
 9567 51d9 5F52414E 		.ascii	"_RAND48_MULT_1 (0xdeec)\000"
 9567      4434385F 
 9567      4D554C54 
 9567      5F312028 
 9567      30786465 
 9568              	.LASF943:
 9569 51f1 78517565 		.ascii	"xQueueSetHandle QueueSetHandle_t\000"
 9569      75655365 
 9569      7448616E 
 9569      646C6520 
 9569      51756575 
 9570              	.LASF1026:
 9571 5212 756E7369 		.ascii	"unsigned int\000"
 9571      676E6564 
 9571      20696E74 
 9571      00
 9572              	.LASF422:
 9573 521f 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 9573      455F545F 
 9573      44454649 
 9573      4E45445F 
 9573      2000
 9574              	.LASF647:
 9575 5231 5F5F504F 		.ascii	"__POSIX_VISIBLE 200809\000"
 9575      5349585F 
 9575      56495349 
 9575      424C4520 
 9575      32303038 
 9576              	.LASF375:
 9577 5248 5F5F4E45 		.ascii	"__NEWLIB_MINOR__ 2\000"
 9577      574C4942 
 9577      5F4D494E 
 9577      4F525F5F 
 9577      203200
 9578              	.LASF1001:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 256


 9579 525b 78517565 		.ascii	"xQueueSendToFront(xQueue,pvItemToQueue,xTicksToWait"
 9579      75655365 
 9579      6E64546F 
 9579      46726F6E 
 9579      74287851 
 9580 528e 29207851 		.ascii	") xQueueGenericSend( ( xQueue ), ( pvItemToQueue ),"
 9580      75657565 
 9580      47656E65 
 9580      72696353 
 9580      656E6428 
 9581 52c1 20282078 		.ascii	" ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9581      5469636B 
 9581      73546F57 
 9581      61697420 
 9581      292C2071 
 9582              	.LASF125:
 9583 52e9 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 9583      545F4D49 
 9583      4E5F4558 
 9583      505F5F20 
 9583      282D3132 
 9584              	.LASF121:
 9585 5300 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 9585      435F4556 
 9585      414C5F4D 
 9585      4554484F 
 9585      445F5F20 
 9586              	.LASF737:
 9587 5316 55494E54 		.ascii	"UINT32_C(x) __UINT32_C(x)\000"
 9587      33325F43 
 9587      28782920 
 9587      5F5F5549 
 9587      4E543332 
 9588              	.LASF232:
 9589 5330 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
 9589      41434355 
 9589      4D5F4942 
 9589      49545F5F 
 9589      203800
 9590              	.LASF983:
 9591 5343 7461736B 		.ascii	"taskDISABLE_INTERRUPTS() portDISABLE_INTERRUPTS()\000"
 9591      44495341 
 9591      424C455F 
 9591      494E5445 
 9591      52525550 
 9592              	.LASF708:
 9593 5375 494E545F 		.ascii	"INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)\000"
 9593      46415354 
 9593      385F4D49 
 9593      4E20282D 
 9593      5F5F494E 
 9594              	.LASF620:
 9595 539c 5F5F7265 		.ascii	"__restrict \000"
 9595      73747269 
 9595      63742000 
 9596              	.LASF117:
 9597 53a8 5F5F5549 		.ascii	"__UINTPTR_MAX__ 4294967295U\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 257


 9597      4E545054 
 9597      525F4D41 
 9597      585F5F20 
 9597      34323934 
 9598              	.LASF124:
 9599 53c4 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 9599      545F4449 
 9599      475F5F20 
 9599      3600
 9600              	.LASF245:
 9601 53d2 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 9601      4343554D 
 9601      5F455053 
 9601      494C4F4E 
 9601      5F5F2030 
 9602              	.LASF368:
 9603 53ef 5F465657 		.ascii	"_FVWRITE_IN_STREAMIO 1\000"
 9603      52495445 
 9603      5F494E5F 
 9603      53545245 
 9603      414D494F 
 9604              	.LASF445:
 9605 5406 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 9605      41525F54 
 9605      5F444543 
 9605      4C415245 
 9605      442000
 9606              	.LASF868:
 9607 5419 74726163 		.ascii	"traceCREATE_MUTEX(pxNewQueue) \000"
 9607      65435245 
 9607      4154455F 
 9607      4D555445 
 9607      58287078 
 9608              	.LASF926:
 9609 5438 636F6E66 		.ascii	"configUSE_TICKLESS_IDLE 0\000"
 9609      69675553 
 9609      455F5449 
 9609      434B4C45 
 9609      53535F49 
 9610              	.LASF451:
 9611 5452 5F535953 		.ascii	"_SYS_REENT_H_ \000"
 9611      5F524545 
 9611      4E545F48 
 9611      5F2000
 9612              	.LASF120:
 9613 5461 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 9613      545F4556 
 9613      414C5F4D 
 9613      4554484F 
 9613      445F5F20 
 9614              	.LASF678:
 9615 5477 5F5F696E 		.ascii	"__int_fast16_t_defined 1\000"
 9615      745F6661 
 9615      73743136 
 9615      5F745F64 
 9615      6566696E 
 9616              	.LASF921:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 258


 9617 5490 706F7274 		.ascii	"portPRIVILEGE_BIT ( ( UBaseT_t ) 0x00 )\000"
 9617      50524956 
 9617      494C4547 
 9617      455F4249 
 9617      54202820 
 9618              	.LASF1057:
 9619 54b8 75784E75 		.ascii	"uxNumberOfItems\000"
 9619      6D626572 
 9619      4F664974 
 9619      656D7300 
 9620              	.LASF348:
 9621 54c8 5F5F4152 		.ascii	"__ARM_ARCH_7M__ 1\000"
 9621      4D5F4152 
 9621      43485F37 
 9621      4D5F5F20 
 9621      3100
 9622              	.LASF860:
 9623 54da 74726163 		.ascii	"traceTASK_SWITCHED_OUT() \000"
 9623      65544153 
 9623      4B5F5357 
 9623      49544348 
 9623      45445F4F 
 9624              	.LASF507:
 9625 54f4 5F52414E 		.ascii	"_RAND48_MULT_2 (0x0005)\000"
 9625      4434385F 
 9625      4D554C54 
 9625      5F322028 
 9625      30783030 
 9626              	.LASF397:
 9627 550c 5F455846 		.ascii	"_EXFUN_NOTHROW(name,proto) name proto _NOTHROW\000"
 9627      554E5F4E 
 9627      4F544852 
 9627      4F57286E 
 9627      616D652C 
 9628              	.LASF457:
 9629 553b 5F545F50 		.ascii	"_T_PTRDIFF \000"
 9629      54524449 
 9629      46462000 
 9630              	.LASF276:
 9631 5547 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 9631      515F4642 
 9631      49545F5F 
 9631      203800
 9632              	.LASF173:
 9633 5556 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 9633      4336345F 
 9633      4D494E5F 
 9633      4558505F 
 9633      5F20282D 
 9634              	.LASF244:
 9635 556f 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 9635      4343554D 
 9635      5F4D4158 
 9635      5F5F2030 
 9635      58464646 
 9636              	.LASF792:
 9637 558f 65727251 		.ascii	"errQUEUE_FULL ( ( BaseT_t ) 0 )\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 259


 9637      55455545 
 9637      5F46554C 
 9637      4C202820 
 9637      28204261 
 9638              	.LASF985:
 9639 55af 7461736B 		.ascii	"taskSCHEDULER_SUSPENDED ( ( BaseT_t ) 0 )\000"
 9639      53434845 
 9639      44554C45 
 9639      525F5355 
 9639      5350454E 
 9640              	.LASF694:
 9641 55d9 494E545F 		.ascii	"INT_LEAST16_MAX __INT_LEAST16_MAX__\000"
 9641      4C454153 
 9641      5431365F 
 9641      4D415820 
 9641      5F5F494E 
 9642              	.LASF653:
 9643 55fd 616C6C6F 		.ascii	"alloca\000"
 9643      636100
 9644              	.LASF209:
 9645 5604 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 9645      52414354 
 9645      5F4D4158 
 9645      5F5F2030 
 9645      58374646 
 9646              	.LASF325:
 9647 5624 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 9647      5A454F46 
 9647      5F505452 
 9647      44494646 
 9647      5F545F5F 
 9648              	.LASF812:
 9649 563b 706F7274 		.ascii	"portEND_SWITCHING_ISR(xSwitchRequired) if( xSwitchR"
 9649      454E445F 
 9649      53574954 
 9649      4348494E 
 9649      475F4953 
 9650 566e 65717569 		.ascii	"equired ) portNVIC_INT_CTRL_REG = portNVIC_PENDSVSE"
 9650      72656420 
 9650      2920706F 
 9650      72744E56 
 9650      49435F49 
 9651 56a1 545F4249 		.ascii	"T_BIT\000"
 9651      5400
 9652              	.LASF0:
 9653 56a7 5F5F5354 		.ascii	"__STDC__ 1\000"
 9653      44435F5F 
 9653      203100
 9654              	.LASF473:
 9655 56b2 5F5F5F69 		.ascii	"___int_least8_t_defined 1\000"
 9655      6E745F6C 
 9655      65617374 
 9655      385F745F 
 9655      64656669 
 9656              	.LASF27:
 9657 56cc 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 9657      4F41545F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 260


 9657      574F5244 
 9657      5F4F5244 
 9657      45525F5F 
 9658              	.LASF750:
 9659 56f9 636F6E66 		.ascii	"configMINIMAL_STACK_SIZE ( ( unsigned short ) 256 )"
 9659      69674D49 
 9659      4E494D41 
 9659      4C5F5354 
 9659      41434B5F 
 9660 572c 00       		.ascii	"\000"
 9661              	.LASF42:
 9662 572d 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 9662      4E54385F 
 9662      54595045 
 9662      5F5F2075 
 9662      6E736967 
 9663              	.LASF677:
 9664 574a 5F5F696E 		.ascii	"__int_fast8_t_defined 1\000"
 9664      745F6661 
 9664      7374385F 
 9664      745F6465 
 9664      66696E65 
 9665              	.LASF37:
 9666 5762 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 9666      475F4154 
 9666      4F4D4943 
 9666      5F545950 
 9666      455F5F20 
 9667              	.LASF610:
 9668 577a 5F4E6F72 		.ascii	"_Noreturn __dead2\000"
 9668      65747572 
 9668      6E205F5F 
 9668      64656164 
 9668      3200
 9669              	.LASF704:
 9670 578c 55494E54 		.ascii	"UINT64_MAX __UINT64_MAX__\000"
 9670      36345F4D 
 9670      4158205F 
 9670      5F55494E 
 9670      5436345F 
 9671              	.LASF953:
 9672 57a6 746D7254 		.ascii	"tmrTIMER_CALLBACK TimerCallbackFunction_t\000"
 9672      494D4552 
 9672      5F43414C 
 9672      4C424143 
 9672      4B205469 
 9673              	.LASF1060:
 9674 57d0 4C697374 		.ascii	"List_t\000"
 9674      5F7400
 9675              	.LASF1071:
 9676 57d7 70635772 		.ascii	"pcWriteTo\000"
 9676      69746554 
 9676      6F00
 9677              	.LASF179:
 9678 57e1 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 9678      43313238 
 9678      5F4D414E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 261


 9678      545F4449 
 9678      475F5F20 
 9679              	.LASF371:
 9680 57f8 5F554E42 		.ascii	"_UNBUF_STREAM_OPT 1\000"
 9680      55465F53 
 9680      54524541 
 9680      4D5F4F50 
 9680      54203100 
 9681              	.LASF382:
 9682 580c 5F5F494D 		.ascii	"__IMPORT \000"
 9682      504F5254 
 9682      2000
 9683              	.LASF498:
 9684 5816 5F415445 		.ascii	"_ATEXIT_SIZE 32\000"
 9684      5849545F 
 9684      53495A45 
 9684      20333200 
 9685              	.LASF296:
 9686 5826 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 9686      415F4642 
 9686      49545F5F 
 9686      20313600 
 9687              	.LASF599:
 9688 5836 5F5F766F 		.ascii	"__volatile volatile\000"
 9688      6C617469 
 9688      6C652076 
 9688      6F6C6174 
 9688      696C6500 
 9689              	.LASF466:
 9690 584a 5F4D4143 		.ascii	"_MACHINE__TYPES_H \000"
 9690      48494E45 
 9690      5F5F5459 
 9690      5045535F 
 9690      482000
 9691              	.LASF481:
 9692 585d 5F5F6C6F 		.ascii	"__lock_init(lock) (_CAST_VOID 0)\000"
 9692      636B5F69 
 9692      6E697428 
 9692      6C6F636B 
 9692      2920285F 
 9693              	.LASF356:
 9694 587e 5F5F4945 		.ascii	"__IEEE_LITTLE_ENDIAN \000"
 9694      45455F4C 
 9694      4954544C 
 9694      455F454E 
 9694      4449414E 
 9695              	.LASF136:
 9696 5894 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 9696      545F4841 
 9696      535F5155 
 9696      4945545F 
 9696      4E414E5F 
 9697              	.LASF814:
 9698 58ac 706F7274 		.ascii	"portSET_INTERRUPT_MASK_FROM_ISR() ulPortSetInterrup"
 9698      5345545F 
 9698      494E5445 
 9698      52525550 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 262


 9698      545F4D41 
 9699 58df 744D6173 		.ascii	"tMask()\000"
 9699      6B282900 
 9700              	.LASF311:
 9701 58e7 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 9701      435F4154 
 9701      4F4D4943 
 9701      5F434841 
 9701      525F4C4F 
 9702              	.LASF399:
 9703 5905 5F455850 		.ascii	"_EXPARM(name,proto) (* name) proto\000"
 9703      41524D28 
 9703      6E616D65 
 9703      2C70726F 
 9703      746F2920 
 9704              	.LASF210:
 9705 5928 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 9705      52414354 
 9705      5F455053 
 9705      494C4F4E 
 9705      5F5F2030 
 9706              	.LASF386:
 9707 5945 5F424547 		.ascii	"_BEGIN_STD_C \000"
 9707      494E5F53 
 9707      54445F43 
 9707      2000
 9708              	.LASF888:
 9709 5953 74726163 		.ascii	"traceTASK_CREATE(pxNewTCB) \000"
 9709      65544153 
 9709      4B5F4352 
 9709      45415445 
 9709      2870784E 
 9710              	.LASF613:
 9711 596f 5F5F6D61 		.ascii	"__malloc_like __attribute__((__malloc__))\000"
 9711      6C6C6F63 
 9711      5F6C696B 
 9711      65205F5F 
 9711      61747472 
 9712              	.LASF758:
 9713 5999 636F6E66 		.ascii	"configMAX_CO_ROUTINE_PRIORITIES ( 2 )\000"
 9713      69674D41 
 9713      585F434F 
 9713      5F524F55 
 9713      54494E45 
 9714              	.LASF725:
 9715 59bf 5349475F 		.ascii	"SIG_ATOMIC_MAX __STDINT_EXP(INT_MAX)\000"
 9715      41544F4D 
 9715      49435F4D 
 9715      4158205F 
 9715      5F535444 
 9716              	.LASF332:
 9717 59e4 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 9717      4D5F5349 
 9717      5A454F46 
 9717      5F4D494E 
 9717      494D414C 
 9718              	.LASF1031:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 263


 9719 5a00 756E7369 		.ascii	"unsigned char\000"
 9719      676E6564 
 9719      20636861 
 9719      7200
 9720              	.LASF884:
 9721 5a0e 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR(pxQueue) \000"
 9721      65515545 
 9721      55455F52 
 9721      45434549 
 9721      56455F46 
 9722              	.LASF335:
 9723 5a34 5F5F6172 		.ascii	"__arm__ 1\000"
 9723      6D5F5F20 
 9723      3100
 9724              	.LASF584:
 9725 5a3e 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_MEMCPY 1\000"
 9725      55434C49 
 9725      4B455F42 
 9725      55494C54 
 9725      494E5F4D 
 9726              	.LASF1033:
 9727 5a5a 73686F72 		.ascii	"short unsigned int\000"
 9727      7420756E 
 9727      7369676E 
 9727      65642069 
 9727      6E7400
 9728              	.LASF1059:
 9729 5a6d 784C6973 		.ascii	"xListEnd\000"
 9729      74456E64 
 9729      00
 9730              	.LASF896:
 9731 5a76 74726163 		.ascii	"traceTASK_RESUME_FROM_ISR(pxTaskToResume) \000"
 9731      65544153 
 9731      4B5F5245 
 9731      53554D45 
 9731      5F46524F 
 9732              	.LASF578:
 9733 5aa1 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_STDARG 1\000"
 9733      55434C49 
 9733      4B455F42 
 9733      55494C54 
 9733      494E5F53 
 9734              	.LASF681:
 9735 5abd 494E5450 		.ascii	"INTPTR_MIN (-__INTPTR_MAX__ - 1)\000"
 9735      54525F4D 
 9735      494E2028 
 9735      2D5F5F49 
 9735      4E545054 
 9736              	.LASF380:
 9737 5ade 5F5F5241 		.ascii	"__RAND_MAX 0x7fffffff\000"
 9737      4E445F4D 
 9737      41582030 
 9737      78376666 
 9737      66666666 
 9738              	.LASF1142:
 9739 5af4 78517565 		.ascii	"xQueueRegistry\000"
 9739      75655265 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 264


 9739      67697374 
 9739      727900
 9740              	.LASF595:
 9741 5b03 5F5F5354 		.ascii	"__STRING(x) #x\000"
 9741      52494E47 
 9741      28782920 
 9741      237800
 9742              	.LASF433:
 9743 5b12 5F574348 		.ascii	"_WCHAR_T \000"
 9743      41525F54 
 9743      2000
 9744              	.LASF685:
 9745 5b1c 494E5438 		.ascii	"INT8_MAX __INT8_MAX__\000"
 9745      5F4D4158 
 9745      205F5F49 
 9745      4E54385F 
 9745      4D41585F 
 9746              	.LASF1111:
 9747 5b32 7854696D 		.ascii	"xTimeOut\000"
 9747      654F7574 
 9747      00
 9748              	.LASF639:
 9749 5b3b 5F5F4642 		.ascii	"__FBSDID(s) struct __hack\000"
 9749      53444944 
 9749      28732920 
 9749      73747275 
 9749      6374205F 
 9750              	.LASF165:
 9751 5b55 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 9751      4333325F 
 9751      4D414E54 
 9751      5F444947 
 9751      5F5F2037 
 9752              	.LASF1131:
 9753 5b6a 70727655 		.ascii	"prvUnlockQueue\000"
 9753      6E6C6F63 
 9753      6B517565 
 9753      756500
 9754              	.LASF717:
 9755 5b79 494E545F 		.ascii	"INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)\000"
 9755      46415354 
 9755      36345F4D 
 9755      494E2028 
 9755      2D5F5F49 
 9756              	.LASF788:
 9757 5ba2 70645452 		.ascii	"pdTRUE ( ( BaseT_t ) 1 )\000"
 9757      55452028 
 9757      20282042 
 9757      61736554 
 9757      5F742029 
 9758              	.LASF467:
 9759 5bbb 5F4D4143 		.ascii	"_MACHINE__DEFAULT_TYPES_H \000"
 9759      48494E45 
 9759      5F5F4445 
 9759      4641554C 
 9759      545F5459 
 9760              	.LASF22:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 265


 9761 5bd6 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 9761      47474553 
 9761      545F414C 
 9761      49474E4D 
 9761      454E545F 
 9762              	.LASF233:
 9763 5bee 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 9763      41434355 
 9763      4D5F4D49 
 9763      4E5F5F20 
 9763      302E3055 
 9764              	.LASF462:
 9765 5c05 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 9765      5F505452 
 9765      44494646 
 9765      5F542000 
 9766              	.LASF582:
 9767 5c15 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_NEXT_ARG 1\000"
 9767      55434C49 
 9767      4B455F42 
 9767      55494C54 
 9767      494E5F4E 
 9768              	.LASF765:
 9769 5c33 494E434C 		.ascii	"INCLUDE_vTaskPrioritySet 1\000"
 9769      5544455F 
 9769      76546173 
 9769      6B507269 
 9769      6F726974 
 9770              	.LASF293:
 9771 5c4e 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 9771      5F494249 
 9771      545F5F20 
 9771      363400
 9772              	.LASF771:
 9773 5c5d 494E434C 		.ascii	"INCLUDE_vTaskDelay 1\000"
 9773      5544455F 
 9773      76546173 
 9773      6B44656C 
 9773      61792031 
 9774              	.LASF870:
 9775 5c72 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE(pxMutex) \000"
 9775      65474956 
 9775      455F4D55 
 9775      5445585F 
 9775      52454355 
 9776              	.LASF113:
 9777 5c96 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 4294967295U\000"
 9777      4E545F46 
 9777      41535431 
 9777      365F4D41 
 9777      585F5F20 
 9778              	.LASF894:
 9779 5cb6 74726163 		.ascii	"traceTASK_SUSPEND(pxTaskToSuspend) \000"
 9779      65544153 
 9779      4B5F5355 
 9779      5350454E 
 9779      44287078 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 266


 9780              	.LASF415:
 9781 5cda 5F53495A 		.ascii	"_SIZE_T \000"
 9781      455F5420 
 9781      00
 9782              	.LASF441:
 9783 5ce3 5F574348 		.ascii	"_WCHAR_T_H \000"
 9783      41525F54 
 9783      5F482000 
 9784              	.LASF791:
 9785 5cef 65727251 		.ascii	"errQUEUE_EMPTY ( ( BaseT_t ) 0 )\000"
 9785      55455545 
 9785      5F454D50 
 9785      54592028 
 9785      20282042 
 9786              	.LASF837:
 9787 5d10 494E434C 		.ascii	"INCLUDE_xQueueGetMutexHolder 0\000"
 9787      5544455F 
 9787      78517565 
 9787      75654765 
 9787      744D7574 
 9788              	.LASF834:
 9789 5d2f 706F7274 		.ascii	"portUSING_MPU_WRAPPERS 0\000"
 9789      5553494E 
 9789      475F4D50 
 9789      555F5752 
 9789      41505045 
 9790              	.LASF340:
 9791 5d48 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 9791      4D5F4152 
 9791      43485F49 
 9791      53415F54 
 9791      48554D42 
 9792              	.LASF106:
 9793 5d5f 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 18446744073709551615ULL\000"
 9793      4E545F4C 
 9793      45415354 
 9793      36345F4D 
 9793      41585F5F 
 9794              	.LASF728:
 9795 5d8c 57434841 		.ascii	"WCHAR_MIN __WCHAR_MIN__\000"
 9795      525F4D49 
 9795      4E205F5F 
 9795      57434841 
 9795      525F4D49 
 9796              	.LASF369:
 9797 5da4 5F465345 		.ascii	"_FSEEK_OPTIMIZATION 1\000"
 9797      454B5F4F 
 9797      5054494D 
 9797      495A4154 
 9797      494F4E20 
 9798              	.LASF108:
 9799 5dba 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 2147483647\000"
 9799      545F4641 
 9799      5354385F 
 9799      4D41585F 
 9799      5F203231 
 9800              	.LASF865:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 267


 9801 5dd7 74726163 		.ascii	"traceMOVED_TASK_TO_READY_STATE(pxTCB) \000"
 9801      654D4F56 
 9801      45445F54 
 9801      41534B5F 
 9801      544F5F52 
 9802              	.LASF643:
 9803 5dfe 5F5F434F 		.ascii	"__COPYRIGHT(s) struct __hack\000"
 9803      50595249 
 9803      47485428 
 9803      73292073 
 9803      74727563 
 9804              	.LASF202:
 9805 5e1b 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 9805      52414354 
 9805      5F494249 
 9805      545F5F20 
 9805      3000
 9806              	.LASF329:
 9807 5e2d 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 9807      4D5F3332 
 9807      4249545F 
 9807      53544154 
 9807      45203100 
 9808              	.LASF756:
 9809 5e41 636F6E66 		.ascii	"configUSE_CO_ROUTINES 0\000"
 9809      69675553 
 9809      455F434F 
 9809      5F524F55 
 9809      54494E45 
 9810              	.LASF93:
 9811 5e59 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 9811      54385F43 
 9811      28632920 
 9811      6300
 9812              	.LASF207:
 9813 5e67 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 9813      52414354 
 9813      5F494249 
 9813      545F5F20 
 9813      3000
 9814              	.LASF453:
 9815 5e79 5F535444 		.ascii	"_STDDEF_H_ \000"
 9815      4445465F 
 9815      485F2000 
 9816              	.LASF1050:
 9817 5e85 70764F77 		.ascii	"pvOwner\000"
 9817      6E657200 
 9818              	.LASF139:
 9819 5e8d 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 9819      4C5F4D49 
 9819      4E5F4558 
 9819      505F5F20 
 9819      282D3130 
 9820              	.LASF419:
 9821 5ea5 5F5F5349 		.ascii	"__SIZE_T \000"
 9821      5A455F54 
 9821      2000
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 268


 9822              	.LASF933:
 9823 5eaf 636F6E66 		.ascii	"configUSE_NEWLIB_REENTRANT 0\000"
 9823      69675553 
 9823      455F4E45 
 9823      574C4942 
 9823      5F524545 
 9824              	.LASF663:
 9825 5ecc 494E435F 		.ascii	"INC_FREERTOS_H \000"
 9825      46524545 
 9825      52544F53 
 9825      5F482000 
 9826              	.LASF251:
 9827 5edc 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 9827      41434355 
 9827      4D5F4642 
 9827      49545F5F 
 9827      20333200 
 9828              	.LASF633:
 9829 5ef0 5F5F7072 		.ascii	"__printf0like(fmtarg,firstvararg) \000"
 9829      696E7466 
 9829      306C696B 
 9829      6528666D 
 9829      74617267 
 9830              	.LASF86:
 9831 5f13 5F5F494E 		.ascii	"__INT32_MAX__ 2147483647L\000"
 9831      5433325F 
 9831      4D41585F 
 9831      5F203231 
 9831      34373438 
 9832              	.LASF919:
 9833 5f2d 706F7274 		.ascii	"portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \000"
 9833      434F4E46 
 9833      49475552 
 9833      455F5449 
 9833      4D45525F 
 9834              	.LASF354:
 9835 5f57 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 9835      45535F49 
 9835      4E495446 
 9835      494E495F 
 9835      5F203100 
 9836              	.LASF488:
 9837 5f6b 5F5F6C6F 		.ascii	"__lock_try_acquire_recursive(lock) (_CAST_VOID 0)\000"
 9837      636B5F74 
 9837      72795F61 
 9837      63717569 
 9837      72655F72 
 9838              	.LASF1014:
 9839 5f9d 78517565 		.ascii	"xQueueAltPeek(xQueue,pvBuffer,xTicksToWait) xQueueA"
 9839      7565416C 
 9839      74506565 
 9839      6B287851 
 9839      75657565 
 9840 5fd0 6C744765 		.ascii	"ltGenericReceive( ( xQueue ), ( pvBuffer ), ( xTick"
 9840      6E657269 
 9840      63526563 
 9840      65697665 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 269


 9840      28202820 
 9841 6003 73546F57 		.ascii	"sToWait ), pdTRUE )\000"
 9841      61697420 
 9841      292C2070 
 9841      64545255 
 9841      45202900 
 9842              	.LASF600:
 9843 6017 5F5F6465 		.ascii	"__dead2 __attribute__((__noreturn__))\000"
 9843      61643220 
 9843      5F5F6174 
 9843      74726962 
 9843      7574655F 
 9844              	.LASF832:
 9845 603d 50524956 		.ascii	"PRIVILEGED_FUNCTION \000"
 9845      494C4547 
 9845      45445F46 
 9845      554E4354 
 9845      494F4E20 
 9846              	.LASF990:
 9847 6052 51554555 		.ascii	"QUEUE_H \000"
 9847      455F4820 
 9847      00
 9848              	.LASF741:
 9849 605b 55494E54 		.ascii	"UINTMAX_C(x) __UINTMAX_C(x)\000"
 9849      4D41585F 
 9849      43287829 
 9849      205F5F55 
 9849      494E544D 
 9850              	.LASF477:
 9851 6077 5F5F4558 		.ascii	"__EXP\000"
 9851      5000
 9852              	.LASF472:
 9853 607d 5F5F5F69 		.ascii	"___int64_t_defined 1\000"
 9853      6E743634 
 9853      5F745F64 
 9853      6566696E 
 9853      65642031 
 9854              	.LASF162:
 9855 6092 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 9855      424C5F48 
 9855      41535F44 
 9855      454E4F52 
 9855      4D5F5F20 
 9856              	.LASF881:
 9857 60a8 74726163 		.ascii	"traceQUEUE_RECEIVE_FAILED(pxQueue) \000"
 9857      65515545 
 9857      55455F52 
 9857      45434549 
 9857      56455F46 
 9858              	.LASF996:
 9859 60cc 71756575 		.ascii	"queueQUEUE_TYPE_MUTEX ( ( uint8_t ) 1U )\000"
 9859      65515545 
 9859      55455F54 
 9859      5950455F 
 9859      4D555445 
 9860              	.LASF309:
 9861 60f5 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 270


 9861      435F4841 
 9861      56455F53 
 9861      594E435F 
 9861      434F4D50 
 9862              	.LASF1090:
 9863 611a 78517565 		.ascii	"xQueueGenericReset\000"
 9863      75654765 
 9863      6E657269 
 9863      63526573 
 9863      657400
 9864              	.LASF751:
 9865 612d 636F6E66 		.ascii	"configTOTAL_HEAP_SIZE ( ( size_t ) ( 8 * 1024 ) )\000"
 9865      6967544F 
 9865      54414C5F 
 9865      48454150 
 9865      5F53495A 
 9866              	.LASF568:
 9867 615f 5F5F4245 		.ascii	"__BEGIN_DECLS \000"
 9867      47494E5F 
 9867      4445434C 
 9867      532000
 9868              	.LASF238:
 9869 616e 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 9869      43554D5F 
 9869      4D494E5F 
 9869      5F20282D 
 9869      30583150 
 9870              	.LASF520:
 9871 618f 5F524545 		.ascii	"_REENT_CHECK_MISC(ptr) \000"
 9871      4E545F43 
 9871      4845434B 
 9871      5F4D4953 
 9871      43287074 
 9872              	.LASF580:
 9873 61a7 5F5F474E 		.ascii	"__GNUC_VA_LIST_COMPATIBILITY 1\000"
 9873      55435F56 
 9873      415F4C49 
 9873      53545F43 
 9873      4F4D5041 
 9874              	.LASF716:
 9875 61c6 55494E54 		.ascii	"UINT_FAST32_MAX __UINT_FAST32_MAX__\000"
 9875      5F464153 
 9875      5433325F 
 9875      4D415820 
 9875      5F5F5549 
 9876              	.LASF956:
 9877 61ea 784C6973 		.ascii	"xList List_t\000"
 9877      74204C69 
 9877      73745F74 
 9877      00
 9878              	.LASF48:
 9879 61f7 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
 9879      545F4C45 
 9879      41535433 
 9879      325F5459 
 9879      50455F5F 
 9880              	.LASF944:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 271


 9881 6215 78517565 		.ascii	"xQueueSetMemberHandle QueueSetMemberHandle_t\000"
 9881      75655365 
 9881      744D656D 
 9881      62657248 
 9881      616E646C 
 9882              	.LASF892:
 9883 6242 74726163 		.ascii	"traceTASK_DELAY() \000"
 9883      65544153 
 9883      4B5F4445 
 9883      4C415928 
 9883      292000
 9884              	.LASF899:
 9885 6255 74726163 		.ascii	"traceTIMER_CREATE_FAILED() \000"
 9885      6554494D 
 9885      45525F43 
 9885      52454154 
 9885      455F4641 
 9886              	.LASF1028:
 9887 6271 5F5F696E 		.ascii	"__int8_t\000"
 9887      74385F74 
 9887      00
 9888              	.LASF197:
 9889 627a 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 9889      4143545F 
 9889      49424954 
 9889      5F5F2030 
 9889      00
 9890              	.LASF914:
 9891 628b 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS_FROM_ISR(xEventGroup,uxBi"
 9891      65455645 
 9891      4E545F47 
 9891      524F5550 
 9891      5F534554 
 9892 62be 7473546F 		.ascii	"tsToSet) \000"
 9892      53657429 
 9892      2000
 9893              	.LASF648:
 9894 62c8 5F5F5853 		.ascii	"__XSI_VISIBLE 700\000"
 9894      495F5649 
 9894      5349424C 
 9894      45203730 
 9894      3000
 9895              	.LASF831:
 9896 62da 4D50555F 		.ascii	"MPU_WRAPPERS_H \000"
 9896      57524150 
 9896      50455253 
 9896      5F482000 
 9897              	.LASF649:
 9898 62ea 5F5F4253 		.ascii	"__BSD_VISIBLE 1\000"
 9898      445F5649 
 9898      5349424C 
 9898      45203100 
 9899              	.LASF23:
 9900 62fa 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 9900      4445525F 
 9900      4C495454 
 9900      4C455F45 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 272


 9900      4E444941 
 9901              	.LASF1075:
 9902 6317 75784C65 		.ascii	"uxLength\000"
 9902      6E677468 
 9902      00
 9903              	.LASF603:
 9904 6320 5F5F7573 		.ascii	"__used __attribute__((__used__))\000"
 9904      6564205F 
 9904      5F617474 
 9904      72696275 
 9904      74655F5F 
 9905              	.LASF553:
 9906 6341 5F5F444F 		.ascii	"__DOTS , ...\000"
 9906      5453202C 
 9906      202E2E2E 
 9906      00
 9907              	.LASF172:
 9908 634e 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 9908      4336345F 
 9908      4D414E54 
 9908      5F444947 
 9908      5F5F2031 
 9909              	.LASF1038:
 9910 6364 6C6F6E67 		.ascii	"long long unsigned int\000"
 9910      206C6F6E 
 9910      6720756E 
 9910      7369676E 
 9910      65642069 
 9911              	.LASF126:
 9912 637b 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 9912      545F4D49 
 9912      4E5F3130 
 9912      5F455850 
 9912      5F5F2028 
 9913              	.LASF252:
 9914 6394 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 9914      41434355 
 9914      4D5F4942 
 9914      49545F5F 
 9914      20333200 
 9915              	.LASF1073:
 9916 63a8 78546173 		.ascii	"xTasksWaitingToReceive\000"
 9916      6B735761 
 9916      6974696E 
 9916      67546F52 
 9916      65636569 
 9917              	.LASF849:
 9918 63bf 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle 0\000"
 9918      5544455F 
 9918      78546173 
 9918      6B476574 
 9918      43757272 
 9919              	.LASF882:
 9920 63e3 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR(pxQueue) \000"
 9920      65515545 
 9920      55455F53 
 9920      454E445F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 273


 9920      46524F4D 
 9921              	.LASF30:
 9922 6406 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 9922      52444946 
 9922      465F5459 
 9922      50455F5F 
 9922      20696E74 
 9923              	.LASF423:
 9924 641b 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 9924      455F545F 
 9924      44454649 
 9924      4E454420 
 9924      00
 9925              	.LASF272:
 9926 642c 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 9926      5F464249 
 9926      545F5F20 
 9926      363300
 9927              	.LASF458:
 9928 643b 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 9928      52444946 
 9928      465F5420 
 9928      00
 9929              	.LASF279:
 9930 6448 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 9930      515F4942 
 9930      49545F5F 
 9930      203000
 9931              	.LASF537:
 9932 6457 5F524545 		.ascii	"_REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctom"
 9932      4E545F57 
 9932      43544F4D 
 9932      425F5354 
 9932      41544528 
 9933 648a 625F7374 		.ascii	"b_state)\000"
 9933      61746529 
 9933      00
 9934              	.LASF55:
 9935 6493 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 9935      545F4641 
 9935      53543136 
 9935      5F545950 
 9935      455F5F20 
 9936              	.LASF902:
 9937 64ab 74726163 		.ascii	"traceTIMER_COMMAND_RECEIVED(pxTimer,xMessageID,xMes"
 9937      6554494D 
 9937      45525F43 
 9937      4F4D4D41 
 9937      4E445F52 
 9938 64de 73616765 		.ascii	"sageValue) \000"
 9938      56616C75 
 9938      65292000 
 9939              	.LASF479:
 9940 64ea 5F5F4C4F 		.ascii	"__LOCK_INIT(class,lock) static int lock = 0;\000"
 9940      434B5F49 
 9940      4E495428 
 9940      636C6173 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 274


 9940      732C6C6F 
 9941              	.LASF228:
 9942 6517 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 9942      4343554D 
 9942      5F4D494E 
 9942      5F5F2028 
 9942      2D305831 
 9943              	.LASF214:
 9944 6539 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 9944      46524143 
 9944      545F4D41 
 9944      585F5F20 
 9944      30584646 
 9945              	.LASF780:
 9946 655b 636F6E66 		.ascii	"configNET_MASK3 0\000"
 9946      69674E45 
 9946      545F4D41 
 9946      534B3320 
 9946      3000
 9947              	.LASF51:
 9948 656d 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 9948      4E545F4C 
 9948      45415354 
 9948      31365F54 
 9948      5950455F 
 9949              	.LASF805:
 9950 6596 706F7274 		.ascii	"portMAX_DELAY ( TickType_t ) 0xffffffffUL\000"
 9950      4D41585F 
 9950      44454C41 
 9950      59202820 
 9950      5469636B 
 9951              	.LASF820:
 9952 65c0 706F7274 		.ascii	"portTASK_FUNCTION_PROTO(vFunction,pvParameters) voi"
 9952      5441534B 
 9952      5F46554E 
 9952      4354494F 
 9952      4E5F5052 
 9953 65f3 64207646 		.ascii	"d vFunction( void *pvParameters )\000"
 9953      756E6374 
 9953      696F6E28 
 9953      20766F69 
 9953      64202A70 
 9954              	.LASF249:
 9955 6615 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 9955      4343554D 
 9955      5F4D4158 
 9955      5F5F2030 
 9955      58374646 
 9956              	.LASF35:
 9957 663d 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
 9957      41523136 
 9957      5F545950 
 9957      455F5F20 
 9957      73686F72 
 9958              	.LASF538:
 9959 6660 5F524545 		.ascii	"_REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrle"
 9959      4E545F4D 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 275


 9959      42524C45 
 9959      4E5F5354 
 9959      41544528 
 9960 6693 6E5F7374 		.ascii	"n_state)\000"
 9960      61746529 
 9960      00
 9961              	.LASF598:
 9962 669c 5F5F7369 		.ascii	"__signed signed\000"
 9962      676E6564 
 9962      20736967 
 9962      6E656400 
 9963              	.LASF102:
 9964 66ac 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 65535\000"
 9964      4E545F4C 
 9964      45415354 
 9964      31365F4D 
 9964      41585F5F 
 9965              	.LASF284:
 9966 66c7 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 9966      515F4642 
 9966      49545F5F 
 9966      20313238 
 9966      00
 9967              	.LASF1101:
 9968 66d8 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 9968      75655461 
 9968      6B654D75 
 9968      74657852 
 9968      65637572 
 9969              	.LASF531:
 9970 66f1 5F524545 		.ascii	"_REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctim"
 9970      4E545F41 
 9970      53435449 
 9970      4D455F42 
 9970      55462870 
 9971 6724 655F6275 		.ascii	"e_buf)\000"
 9971      662900
 9972              	.LASF804:
 9973 672b 706F7274 		.ascii	"portBASE_TYPE long\000"
 9973      42415345 
 9973      5F545950 
 9973      45206C6F 
 9973      6E6700
 9974              	.LASF12:
 9975 673e 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 9975      4E495445 
 9975      5F4D4154 
 9975      485F4F4E 
 9975      4C595F5F 
 9976              	.LASF1049:
 9977 6755 70785072 		.ascii	"pxPrevious\000"
 9977      6576696F 
 9977      757300
 9978              	.LASF667:
 9979 6760 5F5F6861 		.ascii	"__have_longlong64 1\000"
 9979      76655F6C 
 9979      6F6E676C 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 276


 9979      6F6E6736 
 9979      34203100 
 9980              	.LASF1009:
 9981 6774 78517565 		.ascii	"xQueueOverwriteFromISR(xQueue,pvItemToQueue,pxHighe"
 9981      75654F76 
 9981      65727772 
 9981      69746546 
 9981      726F6D49 
 9982 67a7 72507269 		.ascii	"rPriorityTaskWoken) xQueueGenericSendFromISR( ( xQu"
 9982      6F726974 
 9982      79546173 
 9982      6B576F6B 
 9982      656E2920 
 9983 67da 65756520 		.ascii	"eue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWok"
 9983      292C2028 
 9983      20707649 
 9983      74656D54 
 9983      6F517565 
 9984 680d 656E2029 		.ascii	"en ), queueOVERWRITE )\000"
 9984      2C207175 
 9984      6575654F 
 9984      56455257 
 9984      52495445 
 9985              	.LASF726:
 9986 6824 50545244 		.ascii	"PTRDIFF_MAX __PTRDIFF_MAX__\000"
 9986      4946465F 
 9986      4D415820 
 9986      5F5F5054 
 9986      52444946 
 9987              	.LASF16:
 9988 6840 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 9988      5A454F46 
 9988      5F53484F 
 9988      52545F5F 
 9988      203200
 9989              	.LASF529:
 9990 6853 5F524545 		.ascii	"_REENT_MP_P5S(ptr) ((ptr)->_p5s)\000"
 9990      4E545F4D 
 9990      505F5035 
 9990      53287074 
 9990      72292028 
 9991              	.LASF979:
 9992 6874 74736B49 		.ascii	"tskIDLE_PRIORITY ( ( UBaseT_t ) 0U )\000"
 9992      444C455F 
 9992      5052494F 
 9992      52495459 
 9992      20282028 
 9993              	.LASF440:
 9994 6899 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 9994      41525F54 
 9994      5F444546 
 9994      494E4544 
 9994      2000
 9995              	.LASF917:
 9996 68ab 74726163 		.ascii	"tracePEND_FUNC_CALL_FROM_ISR(xFunctionToPend,pvPara"
 9996      6550454E 
 9996      445F4655 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 277


 9996      4E435F43 
 9996      414C4C5F 
 9997 68de 6D657465 		.ascii	"meter1,ulParameter2,ret) \000"
 9997      72312C75 
 9997      6C506172 
 9997      616D6574 
 9997      6572322C 
 9998              	.LASF254:
 9999 68f8 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 9999      41434355 
 9999      4D5F4D41 
 9999      585F5F20 
 9999      30584646 
 10000              	.LASF213:
 10001 6922 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 10001      46524143 
 10001      545F4D49 
 10001      4E5F5F20 
 10001      302E3055 
 10002              	.LASF1106:
 10003 6939 78517565 		.ascii	"xQueueGenericSend\000"
 10003      75654765 
 10003      6E657269 
 10003      6353656E 
 10003      6400
 10004              	.LASF273:
 10005 694b 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 10005      5F494249 
 10005      545F5F20 
 10005      3000
 10006              	.LASF541:
 10007 6959 5F524545 		.ascii	"_REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrt"
 10007      4E545F57 
 10007      4352544F 
 10007      4D425F53 
 10007      54415445 
 10008 698c 6F6D625F 		.ascii	"omb_state)\000"
 10008      73746174 
 10008      652900
 10009              	.LASF1121:
 10010 6997 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 10010      6575654D 
 10010      65737361 
 10010      67657357 
 10010      61697469 
 10011              	.LASF1128:
 10012 69ae 75635175 		.ascii	"ucQueueGetQueueType\000"
 10012      65756547 
 10012      65745175 
 10012      65756554 
 10012      79706500 
 10013              	.LASF669:
 10014 69c2 5F5F696E 		.ascii	"__int8_t_defined 1\000"
 10014      74385F74 
 10014      5F646566 
 10014      696E6564 
 10014      203100
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 278


 10015              	.LASF962:
 10016 69d5 6C697374 		.ascii	"listSET_LIST_ITEM_VALUE(pxListItem,xValue) ( ( pxLi"
 10016      5345545F 
 10016      4C495354 
 10016      5F495445 
 10016      4D5F5641 
 10017 6a08 73744974 		.ascii	"stItem )->xItemValue = ( xValue ) )\000"
 10017      656D2029 
 10017      2D3E7849 
 10017      74656D56 
 10017      616C7565 
 10018              	.LASF402:
 10019 6a2c 5F444546 		.ascii	"_DEFUN_VOID(name) name(_NOARGS)\000"
 10019      554E5F56 
 10019      4F494428 
 10019      6E616D65 
 10019      29206E61 
 10020              	.LASF74:
 10021 6a4c 5F5F5749 		.ascii	"__WINT_MAX__ 4294967295U\000"
 10021      4E545F4D 
 10021      41585F5F 
 10021      20343239 
 10021      34393637 
 10022              	.LASF421:
 10023 6a65 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 10023      5F53495A 
 10023      455F545F 
 10023      2000
 10024              	.LASF437:
 10025 6a73 5F574348 		.ascii	"_WCHAR_T_ \000"
 10025      41525F54 
 10025      5F2000
 10026              	.LASF98:
 10027 6a7e 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 9223372036854775807LL\000"
 10027      545F4C45 
 10027      41535436 
 10027      345F4D41 
 10027      585F5F20 
 10028              	.LASF695:
 10029 6aa8 55494E54 		.ascii	"UINT_LEAST16_MAX __UINT_LEAST16_MAX__\000"
 10029      5F4C4541 
 10029      53543136 
 10029      5F4D4158 
 10029      205F5F55 
 10030              	.LASF435:
 10031 6ace 5F545F57 		.ascii	"_T_WCHAR \000"
 10031      43484152 
 10031      2000
 10032              	.LASF1016:
 10033 6ad8 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE\000"
 10033      57524150 
 10033      50455253 
 10033      5F494E43 
 10033      4C554445 
 10034              	.LASF461:
 10035 6afc 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 10035      6E745F70 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 279


 10035      74726469 
 10035      66665F74 
 10035      5F682000 
 10036              	.LASF345:
 10037 6b10 5F5F4152 		.ascii	"__ARM_FP 12\000"
 10037      4D5F4650 
 10037      20313200 
 10038              	.LASF77:
 10039 6b1c 5F5F5349 		.ascii	"__SIZE_MAX__ 4294967295U\000"
 10039      5A455F4D 
 10039      41585F5F 
 10039      20343239 
 10039      34393637 
 10040              	.LASF997:
 10041 6b35 71756575 		.ascii	"queueQUEUE_TYPE_COUNTING_SEMAPHORE ( ( uint8_t ) 2U"
 10041      65515545 
 10041      55455F54 
 10041      5950455F 
 10041      434F554E 
 10042 6b68 202900   		.ascii	" )\000"
 10043              	.LASF517:
 10044 6b6b 5F524545 		.ascii	"_REENT_CHECK_TM(ptr) \000"
 10044      4E545F43 
 10044      4845434B 
 10044      5F544D28 
 10044      70747229 
 10045              	.LASF285:
 10046 6b81 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 10046      515F4942 
 10046      49545F5F 
 10046      203000
 10047              	.LASF715:
 10048 6b90 494E545F 		.ascii	"INT_FAST32_MAX __INT_FAST32_MAX__\000"
 10048      46415354 
 10048      33325F4D 
 10048      4158205F 
 10048      5F494E54 
 10049              	.LASF567:
 10050 6bb2 5F5F6861 		.ascii	"__has_builtin(x) 0\000"
 10050      735F6275 
 10050      696C7469 
 10050      6E287829 
 10050      203000
 10051              	.LASF443:
 10052 6bc5 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 10052      545F5743 
 10052      4841525F 
 10052      545F4820 
 10052      00
 10053              	.LASF403:
 10054 6bd6 5F434153 		.ascii	"_CAST_VOID (void)\000"
 10054      545F564F 
 10054      49442028 
 10054      766F6964 
 10054      2900
 10055              	.LASF844:
 10056 6be8 494E434C 		.ascii	"INCLUDE_xTaskResumeFromISR 1\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 280


 10056      5544455F 
 10056      78546173 
 10056      6B526573 
 10056      756D6546 
 10057              	.LASF353:
 10058 6c05 5F5F454C 		.ascii	"__ELF__ 1\000"
 10058      465F5F20 
 10058      3100
 10059              	.LASF696:
 10060 6c0f 494E5433 		.ascii	"INT32_MIN (-__INT32_MAX__ - 1)\000"
 10060      325F4D49 
 10060      4E20282D 
 10060      5F5F494E 
 10060      5433325F 
 10061              	.LASF342:
 10062 6c2e 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 10062      554D4245 
 10062      4C5F5F20 
 10062      3100
 10063              	.LASF444:
 10064 6c3c 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 10064      5F574348 
 10064      41525F54 
 10064      2000
 10065              	.LASF662:
 10066 6c4a 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE \000"
 10066      57524150 
 10066      50455253 
 10066      5F494E43 
 10066      4C554445 
 10067              	.LASF267:
 10068 6c6f 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 10068      5F494249 
 10068      545F5F20 
 10068      3000
 10069              	.LASF116:
 10070 6c7d 5F5F494E 		.ascii	"__INTPTR_MAX__ 2147483647\000"
 10070      54505452 
 10070      5F4D4158 
 10070      5F5F2032 
 10070      31343734 
 10071              	.LASF878:
 10072 6c97 74726163 		.ascii	"traceQUEUE_RECEIVE(pxQueue) \000"
 10072      65515545 
 10072      55455F52 
 10072      45434549 
 10072      56452870 
 10073              	.LASF954:
 10074 6cb4 70645441 		.ascii	"pdTASK_CODE TaskFunction_t\000"
 10074      534B5F43 
 10074      4F444520 
 10074      5461736B 
 10074      46756E63 
 10075              	.LASF739:
 10076 6ccf 55494E54 		.ascii	"UINT64_C(x) __UINT64_C(x)\000"
 10076      36345F43 
 10076      28782920 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 281


 10076      5F5F5549 
 10076      4E543634 
 10077              	.LASF256:
 10078 6ce9 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 10078      41434355 
 10078      4D5F4642 
 10078      49545F5F 
 10078      20333100 
 10079              	.LASF581:
 10080 6cfd 5F5F636F 		.ascii	"__compiler_membar() __asm __volatile(\" \" : : : \""
 10080      6D70696C 
 10080      65725F6D 
 10080      656D6261 
 10080      72282920 
 10081 6d2d 6D656D6F 		.ascii	"memory\")\000"
 10081      72792229 
 10081      00
 10082              	.LASF1089:
 10083 6d36 784E6577 		.ascii	"xNewQueue\000"
 10083      51756575 
 10083      6500
 10084              	.LASF391:
 10085 6d40 5F4E4F41 		.ascii	"_NOARGS void\000"
 10085      52475320 
 10085      766F6964 
 10085      00
 10086              	.LASF874:
 10087 6d4d 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE() \000"
 10087      65435245 
 10087      4154455F 
 10087      434F554E 
 10087      54494E47 
 10088              	.LASF281:
 10089 6d6f 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 10089      515F4942 
 10089      49545F5F 
 10089      203000
 10090              	.LASF982:
 10091 6d7e 7461736B 		.ascii	"taskEXIT_CRITICAL() portEXIT_CRITICAL()\000"
 10091      45584954 
 10091      5F435249 
 10091      54494341 
 10091      4C282920 
 10092              	.LASF925:
 10093 6da6 636F6E66 		.ascii	"configEXPECTED_IDLE_TIME_BEFORE_SLEEP 2\000"
 10093      69674558 
 10093      50454354 
 10093      45445F49 
 10093      444C455F 
 10094              	.LASF52:
 10095 6dce 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 10095      4E545F4C 
 10095      45415354 
 10095      33325F54 
 10095      5950455F 
 10096              	.LASF1099:
 10097 6df6 784D7574 		.ascii	"xMutex\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 282


 10097      657800
 10098              	.LASF3:
 10099 6dfd 5F5F474E 		.ascii	"__GNUC_MINOR__ 9\000"
 10099      55435F4D 
 10099      494E4F52 
 10099      5F5F2039 
 10099      00
 10100              	.LASF33:
 10101 6e0e 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 10101      544D4158 
 10101      5F545950 
 10101      455F5F20 
 10101      6C6F6E67 
 10102              	.LASF930:
 10103 6e2c 706F7274 		.ascii	"portTASK_USES_FLOATING_POINT() \000"
 10103      5441534B 
 10103      5F555345 
 10103      535F464C 
 10103      4F415449 
 10104              	.LASF951:
 10105 6e4c 70645441 		.ascii	"pdTASK_HOOK_CODE TaskHookFunction_t\000"
 10105      534B5F48 
 10105      4F4F4B5F 
 10105      434F4445 
 10105      20546173 
 10106              	.LASF316:
 10107 6e70 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 10107      435F4154 
 10107      4F4D4943 
 10107      5F494E54 
 10107      5F4C4F43 
 10108              	.LASF1124:
 10109 6e8d 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 10109      6575654D 
 10109      65737361 
 10109      67657357 
 10109      61697469 
 10110              	.LASF863:
 10111 6eab 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue) \000"
 10111      65424C4F 
 10111      434B494E 
 10111      475F4F4E 
 10111      5F515545 
 10112              	.LASF502:
 10113 6ed4 5F52414E 		.ascii	"_RAND48_SEED_0 (0x330e)\000"
 10113      4434385F 
 10113      53454544 
 10113      5F302028 
 10113      30783333 
 10114              	.LASF824:
 10115 6eec 706F7274 		.ascii	"portRECORD_READY_PRIORITY(uxPriority,uxReadyPriorit"
 10115      5245434F 
 10115      52445F52 
 10115      45414459 
 10115      5F505249 
 10116 6f1f 69657329 		.ascii	"ies) ( uxReadyPriorities ) |= ( 1UL << ( uxPriority"
 10116      20282075 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 283


 10116      78526561 
 10116      64795072 
 10116      696F7269 
 10117 6f52 20292029 		.ascii	" ) )\000"
 10117      00
 10118              	.LASF873:
 10119 6f57 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 10119      6554414B 
 10119      455F4D55 
 10119      5445585F 
 10119      52454355 
 10120              	.LASF497:
 10121 6f82 5F5F4C6F 		.ascii	"__Long long\000"
 10121      6E67206C 
 10121      6F6E6700 
 10122              	.LASF428:
 10123 6f8e 5F53495A 		.ascii	"_SIZET_ \000"
 10123      45545F20 
 10123      00
 10124              	.LASF801:
 10125 6f97 706F7274 		.ascii	"portLONG long\000"
 10125      4C4F4E47 
 10125      206C6F6E 
 10125      6700
 10126              	.LASF355:
 10127 6fa5 5F535444 		.ascii	"_STDLIB_H_ \000"
 10127      4C49425F 
 10127      485F2000 
 10128              	.LASF150:
 10129 6fb1 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 10129      4C5F4841 
 10129      535F5155 
 10129      4945545F 
 10129      4E414E5F 
 10130              	.LASF975:
 10131 6fc9 74736B4B 		.ascii	"tskKERNEL_VERSION_NUMBER \"V8.1.2\"\000"
 10131      45524E45 
 10131      4C5F5645 
 10131      5253494F 
 10131      4E5F4E55 
 10132              	.LASF736:
 10133 6feb 494E5433 		.ascii	"INT32_C(x) __INT32_C(x)\000"
 10133      325F4328 
 10133      7829205F 
 10133      5F494E54 
 10133      33325F43 
 10134              	.LASF564:
 10135 7003 5F5F7074 		.ascii	"__ptrvalue \000"
 10135      7276616C 
 10135      75652000 
 10136              	.LASF409:
 10137 700f 5F4E4F49 		.ascii	"_NOINLINE_STATIC _NOINLINE static\000"
 10137      4E4C494E 
 10137      455F5354 
 10137      41544943 
 10137      205F4E4F 
 10138              	.LASF989:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 284


 10139 7031 78546173 		.ascii	"xTaskCreateRestricted(x,pxCreatedTask) xTaskGeneric"
 10139      6B437265 
 10139      61746552 
 10139      65737472 
 10139      69637465 
 10140 7064 43726561 		.ascii	"Create( ((x)->pvTaskCode), ((x)->pcName), ((x)->usS"
 10140      74652820 
 10140      28287829 
 10140      2D3E7076 
 10140      5461736B 
 10141 7097 7461636B 		.ascii	"tackDepth), ((x)->pvParameters), ((x)->uxPriority),"
 10141      44657074 
 10141      68292C20 
 10141      28287829 
 10141      2D3E7076 
 10142 70ca 20287078 		.ascii	" (pxCreatedTask), ((x)->puxStackBuffer), ((x)->xReg"
 10142      43726561 
 10142      74656454 
 10142      61736B29 
 10142      2C202828 
 10143 70fd 696F6E73 		.ascii	"ions) )\000"
 10143      29202900 
 10144              	.LASF219:
 10145 7105 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 10145      46524143 
 10145      545F4D41 
 10145      585F5F20 
 10145      30583746 
 10146              	.LASF181:
 10147 712f 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 10147      43313238 
 10147      5F4D4158 
 10147      5F455850 
 10147      5F5F2036 
 10148              	.LASF829:
 10149 7147 706F7274 		.ascii	"portBYTE_ALIGNMENT_MASK ( 0x0007U )\000"
 10149      42595445 
 10149      5F414C49 
 10149      474E4D45 
 10149      4E545F4D 
 10150              	.LASF826:
 10151 716b 706F7274 		.ascii	"portGET_HIGHEST_PRIORITY(uxTopPriority,uxReadyPrior"
 10151      4745545F 
 10151      48494748 
 10151      4553545F 
 10151      5052494F 
 10152 719e 69746965 		.ascii	"ities) uxTopPriority = ( 31 - ucPortCountLeadingZer"
 10152      73292075 
 10152      78546F70 
 10152      5072696F 
 10152      72697479 
 10153 71d1 6F732820 		.ascii	"os( ( uxReadyPriorities ) ) )\000"
 10153      28207578 
 10153      52656164 
 10153      79507269 
 10153      6F726974 
 10154              	.LASF978:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 285


 10155 71ef 74736B4B 		.ascii	"tskKERNEL_VERSION_BUILD 2\000"
 10155      45524E45 
 10155      4C5F5645 
 10155      5253494F 
 10155      4E5F4255 
 10156              	.LASF76:
 10157 7209 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 2147483647\000"
 10157      52444946 
 10157      465F4D41 
 10157      585F5F20 
 10157      32313437 
 10158              	.LASF1019:
 10159 7224 70784D75 		.ascii	"pxMutexHolder pcTail\000"
 10159      74657848 
 10159      6F6C6465 
 10159      72207063 
 10159      5461696C 
 10160              	.LASF229:
 10161 7239 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 10161      4343554D 
 10161      5F4D4158 
 10161      5F5F2030 
 10161      58374646 
 10162              	.LASF549:
 10163 7254 5F474C4F 		.ascii	"_GLOBAL_REENT _global_impure_ptr\000"
 10163      42414C5F 
 10163      5245454E 
 10163      54205F67 
 10163      6C6F6261 
 10164              	.LASF63:
 10165 7275 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 10165      4E545054 
 10165      525F5459 
 10165      50455F5F 
 10165      20756E73 
 10166              	.LASF302:
 10167 7293 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 10167      47495354 
 10167      45525F50 
 10167      52454649 
 10167      585F5F20 
 10168              	.LASF1055:
 10169 72a8 4D696E69 		.ascii	"MiniListItem_t\000"
 10169      4C697374 
 10169      4974656D 
 10169      5F7400
 10170              	.LASF138:
 10171 72b7 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 10171      4C5F4449 
 10171      475F5F20 
 10171      313500
 10172              	.LASF215:
 10173 72c6 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 10173      46524143 
 10173      545F4550 
 10173      53494C4F 
 10173      4E5F5F20 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 286


 10174              	.LASF640:
 10175 72e5 5F5F5243 		.ascii	"__RCSID(s) struct __hack\000"
 10175      53494428 
 10175      73292073 
 10175      74727563 
 10175      74205F5F 
 10176              	.LASF729:
 10177 72fe 57434841 		.ascii	"WCHAR_MAX __WCHAR_MAX__\000"
 10177      525F4D41 
 10177      58205F5F 
 10177      57434841 
 10177      525F4D41 
 10178              	.LASF920:
 10179 7316 636F6E66 		.ascii	"configUSE_MALLOC_FAILED_HOOK 0\000"
 10179      69675553 
 10179      455F4D41 
 10179      4C4C4F43 
 10179      5F464149 
 10180              	.LASF20:
 10181 7335 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 10181      5A454F46 
 10181      5F53495A 
 10181      455F545F 
 10181      5F203400 
 10182              	.LASF931:
 10183 7349 636F6E66 		.ascii	"configUSE_TIME_SLICING 1\000"
 10183      69675553 
 10183      455F5449 
 10183      4D455F53 
 10183      4C494349 
 10184              	.LASF1056:
 10185 7362 784C4953 		.ascii	"xLIST\000"
 10185      5400
 10186              	.LASF573:
 10187 7368 5F5F474E 		.ascii	"__GNUCLIKE___OFFSETOF 1\000"
 10187      55434C49 
 10187      4B455F5F 
 10187      5F4F4646 
 10187      5345544F 
 10188              	.LASF182:
 10189 7380 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 10189      43313238 
 10189      5F4D494E 
 10189      5F5F2031 
 10189      452D3631 
 10190              	.LASF99:
 10191 7399 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 10191      5436345F 
 10191      43286329 
 10191      20632023 
 10191      23204C4C 
 10192              	.LASF1113:
 10193 73ae 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 10193      67686572 
 10193      5072696F 
 10193      72697479 
 10193      5461736B 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 287


 10194              	.LASF363:
 10195 73c8 48415645 		.ascii	"HAVE_INITFINI_ARRAY 1\000"
 10195      5F494E49 
 10195      5446494E 
 10195      495F4152 
 10195      52415920 
 10196              	.LASF660:
 10197 73de 73747274 		.ascii	"strtodf strtof\000"
 10197      6F646620 
 10197      73747274 
 10197      6F6600
 10198              	.LASF385:
 10199 73ed 5F484156 		.ascii	"_HAVE_STDC \000"
 10199      455F5354 
 10199      44432000 
 10200              	.LASF967:
 10201 73f9 6C697374 		.ascii	"listGET_END_MARKER(pxList) ( ( ListItem_t const * )"
 10201      4745545F 
 10201      454E445F 
 10201      4D41524B 
 10201      45522870 
 10202 742c 20282026 		.ascii	" ( &( ( pxList )->xListEnd ) ) )\000"
 10202      28202820 
 10202      70784C69 
 10202      73742029 
 10202      2D3E784C 
 10203              	.LASF742:
 10204 744d 5F474343 		.ascii	"_GCC_WRAP_STDINT_H \000"
 10204      5F575241 
 10204      505F5354 
 10204      44494E54 
 10204      5F482000 
 10205              	.LASF612:
 10206 7461 5F5F6765 		.ascii	"__generic(expr,t,yes,no) __builtin_choose_expr( __b"
 10206      6E657269 
 10206      63286578 
 10206      70722C74 
 10206      2C796573 
 10207 7494 75696C74 		.ascii	"uiltin_types_compatible_p(__typeof(expr), t), yes, "
 10207      696E5F74 
 10207      79706573 
 10207      5F636F6D 
 10207      70617469 
 10208 74c7 6E6F2900 		.ascii	"no)\000"
 10209              	.LASF159:
 10210 74cb 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 10210      424C5F4D 
 10210      494E5F5F 
 10210      20322E32 
 10210      32353037 
 10211              	.LASF846:
 10212 74f1 494E434C 		.ascii	"INCLUDE_xTimerPendFunctionCall 0\000"
 10212      5544455F 
 10212      7854696D 
 10212      65725065 
 10212      6E644675 
 10213              	.LASF237:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 288


 10214 7512 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
 10214      43554D5F 
 10214      49424954 
 10214      5F5F2031 
 10214      3600
 10215              	.LASF948:
 10216 7524 78546173 		.ascii	"xTaskStatusType TaskStatus_t\000"
 10216      6B537461 
 10216      74757354 
 10216      79706520 
 10216      5461736B 
 10217              	.LASF492:
 10218 7541 756E7369 		.ascii	"unsigned\000"
 10218      676E6564 
 10218      00
 10219              	.LASF1095:
 10220 754a 78517565 		.ascii	"xQueueSizeInBytes\000"
 10220      75655369 
 10220      7A65496E 
 10220      42797465 
 10220      7300
 10221              	.LASF799:
 10222 755c 706F7274 		.ascii	"portFLOAT float\000"
 10222      464C4F41 
 10222      5420666C 
 10222      6F617400 
 10223              	.LASF1118:
 10224 756c 70634F72 		.ascii	"pcOriginalReadPosition\000"
 10224      6967696E 
 10224      616C5265 
 10224      6164506F 
 10224      73697469 
 10225              	.LASF893:
 10226 7583 74726163 		.ascii	"traceTASK_PRIORITY_SET(pxTask,uxNewPriority) \000"
 10226      65544153 
 10226      4B5F5052 
 10226      494F5249 
 10226      54595F53 
 10227              	.LASF661:
 10228 75b1 5F535452 		.ascii	"_STRING_H_ \000"
 10228      494E475F 
 10228      485F2000 
 10229              	.LASF1032:
 10230 75bd 73686F72 		.ascii	"short int\000"
 10230      7420696E 
 10230      7400
 10231              	.LASF532:
 10232 75c7 5F524545 		.ascii	"_REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)"
 10232      4E545F54 
 10232      4D287074 
 10232      72292028 
 10232      26287074 
 10233 75fa 00       		.ascii	"\000"
 10234              	.LASF872:
 10235 75fb 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE(pxMutex) \000"
 10235      6554414B 
 10235      455F4D55 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 289


 10235      5445585F 
 10235      52454355 
 10236              	.LASF963:
 10237 761f 6C697374 		.ascii	"listGET_LIST_ITEM_VALUE(pxListItem) ( ( pxListItem "
 10237      4745545F 
 10237      4C495354 
 10237      5F495445 
 10237      4D5F5641 
 10238 7652 292D3E78 		.ascii	")->xItemValue )\000"
 10238      4974656D 
 10238      56616C75 
 10238      65202900 
 10239              	.LASF103:
 10240 7662 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 10240      4E543136 
 10240      5F432863 
 10240      29206300 
 10241              	.LASF500:
 10242 7672 5F524545 		.ascii	"_REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,\000"
 10242      4E545F49 
 10242      4E49545F 
 10242      41544558 
 10242      4954205F 
 10243              	.LASF587:
 10244 769a 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE__ 1\000"
 10244      5F535550 
 10244      504F5254 
 10244      535F5F5F 
 10244      494E4C49 
 10245              	.LASF299:
 10246 76b5 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 10246      415F4942 
 10246      49545F5F 
 10246      20333200 
 10247              	.LASF628:
 10248 76c5 5F5F7072 		.ascii	"__printflike(fmtarg,firstvararg) __attribute__((__f"
 10248      696E7466 
 10248      6C696B65 
 10248      28666D74 
 10248      6172672C 
 10249 76f8 6F726D61 		.ascii	"ormat__ (__printf__, fmtarg, firstvararg)))\000"
 10249      745F5F20 
 10249      285F5F70 
 10249      72696E74 
 10249      665F5F2C 
 10250              	.LASF305:
 10251 7724 5F5F4E4F 		.ascii	"__NO_INLINE__ 1\000"
 10251      5F494E4C 
 10251      494E455F 
 10251      5F203100 
 10252              	.LASF904:
 10253 7734 74726163 		.ascii	"traceFREE(pvAddress,uiSize) \000"
 10253      65465245 
 10253      45287076 
 10253      41646472 
 10253      6573732C 
 10254              	.LASF702:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 290


 10255 7751 494E5436 		.ascii	"INT64_MIN (-__INT64_MAX__ - 1)\000"
 10255      345F4D49 
 10255      4E20282D 
 10255      5F5F494E 
 10255      5436345F 
 10256              	.LASF6:
 10257 7770 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 10257      4F4D4943 
 10257      5F52454C 
 10257      41584544 
 10257      203000
 10258              	.LASF406:
 10259 7783 5F415454 		.ascii	"_ATTRIBUTE(attrs) __attribute__ (attrs)\000"
 10259      52494255 
 10259      54452861 
 10259      74747273 
 10259      29205F5F 
 10260              	.LASF970:
 10261 77ab 6C697374 		.ascii	"listGET_OWNER_OF_NEXT_ENTRY(pxTCB,pxList) { List_t "
 10261      4745545F 
 10261      4F574E45 
 10261      525F4F46 
 10261      5F4E4558 
 10262 77de 2A20636F 		.ascii	"* const pxConstList = ( pxList ); ( pxConstList )->"
 10262      6E737420 
 10262      7078436F 
 10262      6E73744C 
 10262      69737420 
 10263 7811 7078496E 		.ascii	"pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( v"
 10263      64657820 
 10263      3D202820 
 10263      7078436F 
 10263      6E73744C 
 10264 7844 6F696420 		.ascii	"oid * ) ( pxConstList )->pxIndex == ( void * ) &( ("
 10264      2A202920 
 10264      28207078 
 10264      436F6E73 
 10264      744C6973 
 10265 7877 20707843 		.ascii	" pxConstList )->xListEnd ) ) { ( pxConstList )->pxI"
 10265      6F6E7374 
 10265      4C697374 
 10265      20292D3E 
 10265      784C6973 
 10266 78aa 6E646578 		.ascii	"ndex = ( pxConstList )->pxIndex->pxNext; } ( pxTCB "
 10266      203D2028 
 10266      20707843 
 10266      6F6E7374 
 10266      4C697374 
 10267 78dd 29203D20 		.ascii	") = ( pxConstList )->pxIndex->pvOwner; }\000"
 10267      28207078 
 10267      436F6E73 
 10267      744C6973 
 10267      7420292D 
 10268              	.LASF547:
 10269 7906 5F5F4154 		.ascii	"__ATTRIBUTE_IMPURE_PTR__ \000"
 10269      54524942 
 10269      5554455F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 291


 10269      494D5055 
 10269      52455F50 
 10270              	.LASF149:
 10271 7920 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 10271      4C5F4841 
 10271      535F494E 
 10271      46494E49 
 10271      54595F5F 
 10272              	.LASF707:
 10273 7937 55494E54 		.ascii	"UINT_LEAST64_MAX __UINT_LEAST64_MAX__\000"
 10273      5F4C4541 
 10273      53543634 
 10273      5F4D4158 
 10273      205F5F55 
 10274              	.LASF96:
 10275 795d 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 2147483647L\000"
 10275      545F4C45 
 10275      41535433 
 10275      325F4D41 
 10275      585F5F20 
 10276              	.LASF701:
 10277 797d 55494E54 		.ascii	"UINT_LEAST32_MAX __UINT_LEAST32_MAX__\000"
 10277      5F4C4541 
 10277      53543332 
 10277      5F4D4158 
 10277      205F5F55 
 10278              	.LASF505:
 10279 79a3 5F52414E 		.ascii	"_RAND48_MULT_0 (0xe66d)\000"
 10279      4434385F 
 10279      4D554C54 
 10279      5F302028 
 10279      30786536 
 10280              	.LASF1123:
 10281 79bb 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 10281      65756553 
 10281      70616365 
 10281      73417661 
 10281      696C6162 
 10282              	.LASF905:
 10283 79d2 74726163 		.ascii	"traceEVENT_GROUP_CREATE(xEventGroup) \000"
 10283      65455645 
 10283      4E545F47 
 10283      524F5550 
 10283      5F435245 
 10284              	.LASF626:
 10285 79f8 5F5F7261 		.ascii	"__rangeof(type,start,end) (__offsetof(type, end) - "
 10285      6E67656F 
 10285      66287479 
 10285      70652C73 
 10285      74617274 
 10286 7a2b 5F5F6F66 		.ascii	"__offsetof(type, start))\000"
 10286      66736574 
 10286      6F662874 
 10286      7970652C 
 10286      20737461 
 10287              	.LASF1010:
 10288 7a44 78517565 		.ascii	"xQueueSendFromISR(xQueue,pvItemToQueue,pxHigherPrio"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 292


 10288      75655365 
 10288      6E644672 
 10288      6F6D4953 
 10288      52287851 
 10289 7a77 72697479 		.ascii	"rityTaskWoken) xQueueGenericSendFromISR( ( xQueue )"
 10289      5461736B 
 10289      576F6B65 
 10289      6E292078 
 10289      51756575 
 10290 7aaa 2C202820 		.ascii	", ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ),"
 10290      70764974 
 10290      656D546F 
 10290      51756575 
 10290      6520292C 
 10291 7add 20717565 		.ascii	" queueSEND_TO_BACK )\000"
 10291      75655345 
 10291      4E445F54 
 10291      4F5F4241 
 10291      434B2029 
 10292              	.LASF823:
 10293 7af2 636F6E66 		.ascii	"configUSE_PORT_OPTIMISED_TASK_SELECTION 1\000"
 10293      69675553 
 10293      455F504F 
 10293      52545F4F 
 10293      5054494D 
 10294              	.LASF351:
 10295 7b1c 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 10295      4D5F4152 
 10295      43485F45 
 10295      58545F49 
 10295      4449565F 
 10296              	.LASF733:
 10297 7b34 55494E54 		.ascii	"UINT8_C(x) __UINT8_C(x)\000"
 10297      385F4328 
 10297      7829205F 
 10297      5F55494E 
 10297      54385F43 
 10298              	.LASF68:
 10299 7b4c 5F5F5348 		.ascii	"__SHRT_MAX__ 32767\000"
 10299      52545F4D 
 10299      41585F5F 
 10299      20333237 
 10299      363700
 10300              	.LASF463:
 10301 7b5f 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 10301      65645F70 
 10301      74726469 
 10301      66665F74 
 10301      00
 10302              	.LASF143:
 10303 7b70 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 10303      4C5F4445 
 10303      43494D41 
 10303      4C5F4449 
 10303      475F5F20 
 10304              	.LASF459:
 10305 7b87 5F505452 		.ascii	"_PTRDIFF_T_ \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 293


 10305      44494646 
 10305      5F545F20 
 10305      00
 10306              	.LASF687:
 10307 7b94 494E545F 		.ascii	"INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)\000"
 10307      4C454153 
 10307      54385F4D 
 10307      494E2028 
 10307      2D5F5F49 
 10308              	.LASF496:
 10309 7bbd 5F4E554C 		.ascii	"_NULL 0\000"
 10309      4C203000 
 10310              	.LASF561:
 10311 7bc5 5F5F666C 		.ascii	"__flexarr [0]\000"
 10311      65786172 
 10311      72205B30 
 10311      5D00
 10312              	.LASF880:
 10313 7bd3 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR(pxQueue) \000"
 10313      65515545 
 10313      55455F50 
 10313      45454B5F 
 10313      46524F4D 
 10314              	.LASF490:
 10315 7bf6 5F5F6C6F 		.ascii	"__lock_release_recursive(lock) (_CAST_VOID 0)\000"
 10315      636B5F72 
 10315      656C6561 
 10315      73655F72 
 10315      65637572 
 10316              	.LASF675:
 10317 7c24 5F5F696E 		.ascii	"__int64_t_defined 1\000"
 10317      7436345F 
 10317      745F6465 
 10317      66696E65 
 10317      64203100 
 10318              	.LASF361:
 10319 7c38 5F57414E 		.ascii	"_WANT_REGISTER_FINI 1\000"
 10319      545F5245 
 10319      47495354 
 10319      45525F46 
 10319      494E4920 
 10320              	.LASF645:
 10321 7c4e 5F5F4445 		.ascii	"__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatil"
 10321      564F4C41 
 10321      54494C45 
 10321      28747970 
 10321      652C7661 
 10322 7c81 6520766F 		.ascii	"e void *)(var))\000"
 10322      6964202A 
 10322      29287661 
 10322      72292900 
 10323              	.LASF637:
 10324 7c91 5F5F7379 		.ascii	"__sym_compat(sym,impl,verid) __asm__(\".symver \" #"
 10324      6D5F636F 
 10324      6D706174 
 10324      2873796D 
 10324      2C696D70 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 294


 10325 7cc2 696D706C 		.ascii	"impl \", \" #sym \"@\" #verid)\000"
 10325      20222C20 
 10325      22202373 
 10325      796D2022 
 10325      40222023 
 10326              	.LASF869:
 10327 7cdd 74726163 		.ascii	"traceCREATE_MUTEX_FAILED() \000"
 10327      65435245 
 10327      4154455F 
 10327      4D555445 
 10327      585F4641 
 10328              	.LASF936:
 10329 7cf9 706F7274 		.ascii	"portASSERT_IF_IN_ISR() \000"
 10329      41535345 
 10329      52545F49 
 10329      465F494E 
 10329      5F495352 
 10330              	.LASF70:
 10331 7d11 5F5F4C4F 		.ascii	"__LONG_MAX__ 2147483647L\000"
 10331      4E475F4D 
 10331      41585F5F 
 10331      20323134 
 10331      37343833 
 10332              	.LASF853:
 10333 7d2a 706F7274 		.ascii	"portPOINTER_SIZE_TYPE uint32_t\000"
 10333      504F494E 
 10333      5445525F 
 10333      53495A45 
 10333      5F545950 
 10334              	.LASF631:
 10335 7d49 5F5F7374 		.ascii	"__strfmonlike(fmtarg,firstvararg) __attribute__((__"
 10335      72666D6F 
 10335      6E6C696B 
 10335      6528666D 
 10335      74617267 
 10336 7d7c 666F726D 		.ascii	"format__ (__strfmon__, fmtarg, firstvararg)))\000"
 10336      61745F5F 
 10336      20285F5F 
 10336      73747266 
 10336      6D6F6E5F 
 10337              	.LASF864:
 10338 7daa 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_SEND(pxQueue) \000"
 10338      65424C4F 
 10338      434B494E 
 10338      475F4F4E 
 10338      5F515545 
 10339              	.LASF1052:
 10340 7dd0 4C697374 		.ascii	"ListItem_t\000"
 10340      4974656D 
 10340      5F7400
 10341              	.LASF1046:
 10342 7ddb 5469636B 		.ascii	"TickT_t\000"
 10342      545F7400 
 10343              	.LASF377:
 10344 7de3 5F5F474E 		.ascii	"__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\000"
 10344      55435F50 
 10344      52455245 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 295


 10344      515F5F28 
 10344      6D612C6D 
 10345              	.LASF301:
 10346 7e10 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 10346      415F4942 
 10346      49545F5F 
 10346      20363400 
 10347              	.LASF262:
 10348 7e20 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 10348      4C414343 
 10348      554D5F49 
 10348      4249545F 
 10348      5F203332 
 10349              	.LASF816:
 10350 7e35 706F7274 		.ascii	"portDISABLE_INTERRUPTS() ulPortSetInterruptMask()\000"
 10350      44495341 
 10350      424C455F 
 10350      494E5445 
 10350      52525550 
 10351              	.LASF634:
 10352 7e67 5F5F7374 		.ascii	"__strong_reference(sym,aliassym) extern __typeof (s"
 10352      726F6E67 
 10352      5F726566 
 10352      6572656E 
 10352      63652873 
 10353 7e9a 796D2920 		.ascii	"ym) aliassym __attribute__ ((__alias__ (#sym)))\000"
 10353      616C6961 
 10353      7373796D 
 10353      205F5F61 
 10353      74747269 
 10354              	.LASF225:
 10355 7eca 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 10355      4C465241 
 10355      43545F45 
 10355      5053494C 
 10355      4F4E5F5F 
 10356              	.LASF324:
 10357 7eeb 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 10357      5A454F46 
 10357      5F57494E 
 10357      545F545F 
 10357      5F203400 
 10358              	.LASF328:
 10359 7eff 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 10359      4D5F4645 
 10359      41545552 
 10359      455F554E 
 10359      414C4947 
 10360              	.LASF352:
 10361 7f19 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 10361      585F5459 
 10361      5045494E 
 10361      464F5F45 
 10361      5155414C 
 10362              	.LASF396:
 10363 7f3a 5F564F49 		.ascii	"_VOID void\000"
 10363      4420766F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 296


 10363      696400
 10364              	.LASF602:
 10365 7f45 5F5F756E 		.ascii	"__unused __attribute__((__unused__))\000"
 10365      75736564 
 10365      205F5F61 
 10365      74747269 
 10365      62757465 
 10366              	.LASF248:
 10367 7f6a 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 10367      4343554D 
 10367      5F4D494E 
 10367      5F5F2028 
 10367      2D305831 
 10368              	.LASF877:
 10369 7f8e 74726163 		.ascii	"traceQUEUE_SEND_FAILED(pxQueue) \000"
 10369      65515545 
 10369      55455F53 
 10369      454E445F 
 10369      4641494C 
 10370              	.LASF629:
 10371 7faf 5F5F7363 		.ascii	"__scanflike(fmtarg,firstvararg) __attribute__((__fo"
 10371      616E666C 
 10371      696B6528 
 10371      666D7461 
 10371      72672C66 
 10372 7fe2 726D6174 		.ascii	"rmat__ (__scanf__, fmtarg, firstvararg)))\000"
 10372      5F5F2028 
 10372      5F5F7363 
 10372      616E665F 
 10372      5F2C2066 
 10373              	.LASF147:
 10374 800c 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
 10374      4C5F4445 
 10374      4E4F524D 
 10374      5F4D494E 
 10374      5F5F2028 
 10375 803f 4C2900   		.ascii	"L)\000"
 10376              	.LASF263:
 10377 8042 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
 10377      4C414343 
 10377      554D5F4D 
 10377      494E5F5F 
 10377      20302E30 
 10378              	.LASF551:
 10379 805b 5F535953 		.ascii	"_SYS_CDEFS_H_ \000"
 10379      5F434445 
 10379      46535F48 
 10379      5F2000
 10380              	.LASF314:
 10381 806a 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 10381      435F4154 
 10381      4F4D4943 
 10381      5F574348 
 10381      41525F54 
 10382              	.LASF579:
 10383 808b 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VAALIST 1\000"
 10383      55434C49 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 297


 10383      4B455F42 
 10383      55494C54 
 10383      494E5F56 
 10384              	.LASF969:
 10385 80a8 6C697374 		.ascii	"listCURRENT_LIST_LENGTH(pxList) ( ( pxList )->uxNum"
 10385      43555252 
 10385      454E545F 
 10385      4C495354 
 10385      5F4C454E 
 10386 80db 6265724F 		.ascii	"berOfItems )\000"
 10386      66497465 
 10386      6D732029 
 10386      00
 10387              	.LASF627:
 10388 80e8 5F5F636F 		.ascii	"__containerof(x,s,m) ({ const volatile __typeof__(("
 10388      6E746169 
 10388      6E65726F 
 10388      6628782C 
 10388      732C6D29 
 10389 811b 2873202A 		.ascii	"(s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const vol"
 10389      2930292D 
 10389      3E6D2920 
 10389      2A5F5F78 
 10389      203D2028 
 10390 814e 6174696C 		.ascii	"atile char *)__x - __offsetof(s, m));})\000"
 10390      65206368 
 10390      6172202A 
 10390      295F5F78 
 10390      202D205F 
 10391              	.LASF995:
 10392 8176 71756575 		.ascii	"queueQUEUE_TYPE_SET ( ( uint8_t ) 0U )\000"
 10392      65515545 
 10392      55455F54 
 10392      5950455F 
 10392      53455420 
 10393              	.LASF411:
 10394 819d 5F5F6E65 		.ascii	"__need_wchar_t \000"
 10394      65645F77 
 10394      63686172 
 10394      5F742000 
 10395              	.LASF682:
 10396 81ad 494E5450 		.ascii	"INTPTR_MAX __INTPTR_MAX__\000"
 10396      54525F4D 
 10396      4158205F 
 10396      5F494E54 
 10396      5054525F 
 10397              	.LASF807:
 10398 81c7 706F7274 		.ascii	"portTICK_PERIOD_MS ( ( TickType_t ) 1000 / configTI"
 10398      5449434B 
 10398      5F504552 
 10398      494F445F 
 10398      4D532028 
 10399 81fa 434B5F52 		.ascii	"CK_RATE_HZ )\000"
 10399      4154455F 
 10399      485A2029 
 10399      00
 10400              	.LASF614:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 298


 10401 8207 5F5F7075 		.ascii	"__pure __attribute__((__pure__))\000"
 10401      7265205F 
 10401      5F617474 
 10401      72696275 
 10401      74655F5F 
 10402              	.LASF1132:
 10403 8228 70727643 		.ascii	"prvCopyDataToQueue\000"
 10403      6F707944 
 10403      61746154 
 10403      6F517565 
 10403      756500
 10404              	.LASF427:
 10405 823b 5F474343 		.ascii	"_GCC_SIZE_T \000"
 10405      5F53495A 
 10405      455F5420 
 10405      00
 10406              	.LASF828:
 10407 8248 706F7274 		.ascii	"portNOP() \000"
 10407      4E4F5028 
 10407      292000
 10408              	.LASF589:
 10409 8253 5F5F4343 		.ascii	"__CC_SUPPORTS_WARNING 1\000"
 10409      5F535550 
 10409      504F5254 
 10409      535F5741 
 10409      524E494E 
 10410              	.LASF987:
 10411 826b 7461736B 		.ascii	"taskSCHEDULER_RUNNING ( ( BaseT_t ) 2 )\000"
 10411      53434845 
 10411      44554C45 
 10411      525F5255 
 10411      4E4E494E 
 10412              	.LASF223:
 10413 8293 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 10413      4C465241 
 10413      43545F4D 
 10413      494E5F5F 
 10413      20302E30 
 10414              	.LASF434:
 10415 82ac 5F545F57 		.ascii	"_T_WCHAR_ \000"
 10415      43484152 
 10415      5F2000
 10416              	.LASF910:
 10417 82b7 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_END(xEventGroup,uxBitsTo"
 10417      65455645 
 10417      4E545F47 
 10417      524F5550 
 10417      5F574149 
 10418 82ea 57616974 		.ascii	"WaitFor,xTimeoutOccurred) ( void ) xTimeoutOccurred"
 10418      466F722C 
 10418      7854696D 
 10418      656F7574 
 10418      4F636375 
 10419 831d 00       		.ascii	"\000"
 10420              	.LASF515:
 10421 831e 5F524545 		.ascii	"_REENT_CHECK_RAND48(ptr) \000"
 10421      4E545F43 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 299


 10421      4845434B 
 10421      5F52414E 
 10421      44343828 
 10422              	.LASF283:
 10423 8338 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 10423      515F4942 
 10423      49545F5F 
 10423      203000
 10424              	.LASF13:
 10425 8347 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 10425      5A454F46 
 10425      5F494E54 
 10425      5F5F2034 
 10425      00
 10426              	.LASF446:
 10427 8358 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 10427      5F574348 
 10427      41525F54 
 10427      5F00
 10428              	.LASF217:
 10429 8366 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 10429      46524143 
 10429      545F4942 
 10429      49545F5F 
 10429      203000
 10430              	.LASF590:
 10431 8379 5F5F4343 		.ascii	"__CC_SUPPORTS_VARADIC_XXX 1\000"
 10431      5F535550 
 10431      504F5254 
 10431      535F5641 
 10431      52414449 
 10432              	.LASF1043:
 10433 8395 75696E74 		.ascii	"uint32_t\000"
 10433      33325F74 
 10433      00
 10434              	.LASF808:
 10435 839e 706F7274 		.ascii	"portBYTE_ALIGNMENT 8\000"
 10435      42595445 
 10435      5F414C49 
 10435      474E4D45 
 10435      4E542038 
 10436              	.LASF1088:
 10437 83b3 78517565 		.ascii	"xQueue\000"
 10437      756500
 10438              	.LASF665:
 10439 83ba 5F535953 		.ascii	"_SYS__INTSUP_H \000"
 10439      5F5F494E 
 10439      54535550 
 10439      5F482000 
 10440              	.LASF1087:
 10441 83ca 51756575 		.ascii	"QueueRegistryItem_t\000"
 10441      65526567 
 10441      69737472 
 10441      79497465 
 10441      6D5F7400 
 10442              	.LASF230:
 10443 83de 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 300


 10443      4343554D 
 10443      5F455053 
 10443      494C4F4E 
 10443      5F5F2030 
 10444              	.LASF1127:
 10445 83fa 76517565 		.ascii	"vQueueSetQueueNumber\000"
 10445      75655365 
 10445      74517565 
 10445      75654E75 
 10445      6D626572 
 10446              	.LASF797:
 10447 840f 504F5254 		.ascii	"PORTMACRO_H \000"
 10447      4D414352 
 10447      4F5F4820 
 10447      00
 10448              	.LASF836:
 10449 841c 494E434C 		.ascii	"INCLUDE_xTimerGetTimerDaemonTaskHandle 0\000"
 10449      5544455F 
 10449      7854696D 
 10449      65724765 
 10449      7454696D 
 10450              	.LASF82:
 10451 8445 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 2147483647\000"
 10451      475F4154 
 10451      4F4D4943 
 10451      5F4D4158 
 10451      5F5F2032 
 10452              	.LASF960:
 10453 8463 6C697374 		.ascii	"listSET_LIST_ITEM_OWNER(pxListItem,pxOwner) ( ( pxL"
 10453      5345545F 
 10453      4C495354 
 10453      5F495445 
 10453      4D5F4F57 
 10454 8496 69737449 		.ascii	"istItem )->pvOwner = ( void * ) ( pxOwner ) )\000"
 10454      74656D20 
 10454      292D3E70 
 10454      764F776E 
 10454      6572203D 
 10455              	.LASF59:
 10456 84c4 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 10456      4E545F46 
 10456      41535431 
 10456      365F5459 
 10456      50455F5F 
 10457              	.LASF295:
 10458 84e6 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 10458      415F4942 
 10458      49545F5F 
 10458      203800
 10459              	.LASF493:
 10460 84f5 5F5F6E65 		.ascii	"__need_wint_t \000"
 10460      65645F77 
 10460      696E745F 
 10460      742000
 10461              	.LASF240:
 10462 8504 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 10462      43554D5F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 301


 10462      45505349 
 10462      4C4F4E5F 
 10462      5F203078 
 10463              	.LASF255:
 10464 851f 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 10464      41434355 
 10464      4D5F4550 
 10464      53494C4F 
 10464      4E5F5F20 
 10465              	.LASF1013:
 10466 853e 78517565 		.ascii	"xQueueAltReceive(xQueue,pvBuffer,xTicksToWait) xQue"
 10466      7565416C 
 10466      74526563 
 10466      65697665 
 10466      28785175 
 10467 8571 7565416C 		.ascii	"ueAltGenericReceive( ( xQueue ), ( pvBuffer ), ( xT"
 10467      7447656E 
 10467      65726963 
 10467      52656365 
 10467      69766528 
 10468 85a4 69636B73 		.ascii	"icksToWait ), pdFALSE )\000"
 10468      546F5761 
 10468      69742029 
 10468      2C207064 
 10468      46414C53 
 10469              	.LASF152:
 10470 85bc 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 10470      424C5F44 
 10470      49475F5F 
 10470      20313500 
 10471              	.LASF934:
 10472 85cc 636F6E66 		.ascii	"configUSE_STATS_FORMATTING_FUNCTIONS 0\000"
 10472      69675553 
 10472      455F5354 
 10472      4154535F 
 10472      464F524D 
 10473              	.LASF609:
 10474 85f3 5F41746F 		.ascii	"_Atomic(T) struct { T volatile __val; }\000"
 10474      6D696328 
 10474      54292073 
 10474      74727563 
 10474      74207B20 
 10475              	.LASF75:
 10476 861b 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 10476      4E545F4D 
 10476      494E5F5F 
 10476      20305500 
 10477              	.LASF1021:
 10478 862b 71756575 		.ascii	"queueQUEUE_IS_MUTEX NULL\000"
 10478      65515545 
 10478      55455F49 
 10478      535F4D55 
 10478      54455820 
 10479              	.LASF177:
 10480 8644 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 10480      4336345F 
 10480      45505349 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 302


 10480      4C4F4E5F 
 10480      5F203145 
 10481              	.LASF840:
 10482 865e 636F6E66 		.ascii	"configUSE_APPLICATION_TASK_TAG 0\000"
 10482      69675553 
 10482      455F4150 
 10482      504C4943 
 10482      4154494F 
 10483              	.LASF713:
 10484 867f 55494E54 		.ascii	"UINT_FAST16_MAX __UINT_FAST16_MAX__\000"
 10484      5F464153 
 10484      5431365F 
 10484      4D415820 
 10484      5F5F5549 
 10485              	.LASF557:
 10486 86a3 5F5F6C6F 		.ascii	"__long_double_t long double\000"
 10486      6E675F64 
 10486      6F75626C 
 10486      655F7420 
 10486      6C6F6E67 
 10487              	.LASF47:
 10488 86bf 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 10488      545F4C45 
 10488      41535431 
 10488      365F5459 
 10488      50455F5F 
 10489              	.LASF857:
 10490 86de 74726163 		.ascii	"traceINCREASE_TICK_COUNT(x) \000"
 10490      65494E43 
 10490      52454153 
 10490      455F5449 
 10490      434B5F43 
 10491              	.LASF748:
 10492 86fb 636F6E66 		.ascii	"configCPU_CLOCK_HZ ( ( unsigned long )120000000ul )"
 10492      69674350 
 10492      555F434C 
 10492      4F434B5F 
 10492      485A2028 
 10493 872e 00       		.ascii	"\000"
 10494              	.LASF144:
 10495 872f 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 10495      4C5F4D41 
 10495      585F5F20 
 10495      2828646F 
 10495      75626C65 
 10496              	.LASF389:
 10497 875e 5F505452 		.ascii	"_PTR void *\000"
 10497      20766F69 
 10497      64202A00 
 10498              	.LASF216:
 10499 876a 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 10499      46524143 
 10499      545F4642 
 10499      49545F5F 
 10499      20363300 
 10500              	.LASF431:
 10501 877e 5F5F7763 		.ascii	"__wchar_t__ \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 303


 10501      6861725F 
 10501      745F5F20 
 10501      00
 10502              	.LASF338:
 10503 878b 5F5F7468 		.ascii	"__thumb__ 1\000"
 10503      756D625F 
 10503      5F203100 
 10504              	.LASF986:
 10505 8797 7461736B 		.ascii	"taskSCHEDULER_NOT_STARTED ( ( BaseT_t ) 1 )\000"
 10505      53434845 
 10505      44554C45 
 10505      525F4E4F 
 10505      545F5354 
 10506              	.LASF1018:
 10507 87c3 71756575 		.ascii	"queueLOCKED_UNMODIFIED ( ( BaseT_t ) 0 )\000"
 10507      654C4F43 
 10507      4B45445F 
 10507      554E4D4F 
 10507      44494649 
 10508              	.LASF712:
 10509 87ec 494E545F 		.ascii	"INT_FAST16_MAX __INT_FAST16_MAX__\000"
 10509      46415354 
 10509      31365F4D 
 10509      4158205F 
 10509      5F494E54 
 10510              	.LASF341:
 10511 880e 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 10511      4D454C5F 
 10511      5F203100 
 10512              	.LASF482:
 10513 881a 5F5F6C6F 		.ascii	"__lock_init_recursive(lock) (_CAST_VOID 0)\000"
 10513      636B5F69 
 10513      6E69745F 
 10513      72656375 
 10513      72736976 
 10514              	.LASF630:
 10515 8845 5F5F666F 		.ascii	"__format_arg(fmtarg) __attribute__((__format_arg__ "
 10515      726D6174 
 10515      5F617267 
 10515      28666D74 
 10515      61726729 
 10516 8878 28666D74 		.ascii	"(fmtarg)))\000"
 10516      61726729 
 10516      292900
 10517              	.LASF608:
 10518 8883 5F416C69 		.ascii	"_Alignof(x) __alignof(x)\000"
 10518      676E6F66 
 10518      28782920 
 10518      5F5F616C 
 10518      69676E6F 
 10519              	.LASF932:
 10520 889c 636F6E66 		.ascii	"configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTI"
 10520      6967494E 
 10520      434C5544 
 10520      455F4150 
 10520      504C4943 
 10521 88cf 4F4E5320 		.ascii	"ONS 0\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 304


 10521      3000
 10522              	.LASF268:
 10523 88d5 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 10523      5F464249 
 10523      545F5F20 
 10523      313500
 10524              	.LASF1078:
 10525 88e4 7854784C 		.ascii	"xTxLock\000"
 10525      6F636B00 
 10526              	.LASF968:
 10527 88ec 6C697374 		.ascii	"listLIST_IS_EMPTY(pxList) ( ( BaseT_t ) ( ( pxList "
 10527      4C495354 
 10527      5F49535F 
 10527      454D5054 
 10527      59287078 
 10528 891f 292D3E75 		.ascii	")->uxNumberOfItems == ( UBaseT_t ) 0 ) )\000"
 10528      784E756D 
 10528      6265724F 
 10528      66497465 
 10528      6D73203D 
 10529              	.LASF907:
 10530 8948 74726163 		.ascii	"traceEVENT_GROUP_SYNC_BLOCK(xEventGroup,uxBitsToSet"
 10530      65455645 
 10530      4E545F47 
 10530      524F5550 
 10530      5F53594E 
 10531 897b 2C757842 		.ascii	",uxBitsToWaitFor) \000"
 10531      69747354 
 10531      6F576169 
 10531      74466F72 
 10531      292000
 10532              	.LASF304:
 10533 898e 5F5F474E 		.ascii	"__GNUC_GNU_INLINE__ 1\000"
 10533      55435F47 
 10533      4E555F49 
 10533      4E4C494E 
 10533      455F5F20 
 10534              	.LASF544:
 10535 89a4 5F524545 		.ascii	"_REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_"
 10535      4E545F53 
 10535      49474E41 
 10535      4C5F4255 
 10535      46287074 
 10536 89d7 62756629 		.ascii	"buf)\000"
 10536      00
 10537              	.LASF1004:
 10538 89dc 78517565 		.ascii	"xQueueOverwrite(xQueue,pvItemToQueue) xQueueGeneric"
 10538      75654F76 
 10538      65727772 
 10538      69746528 
 10538      78517565 
 10539 8a0f 53656E64 		.ascii	"Send( ( xQueue ), ( pvItemToQueue ), 0, queueOVERWR"
 10539      28202820 
 10539      78517565 
 10539      75652029 
 10539      2C202820 
 10540 8a42 49544520 		.ascii	"ITE )\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 305


 10540      2900
 10541              	.LASF1115:
 10542 8a48 78517565 		.ascii	"xQueueGenericReceive\000"
 10542      75654765 
 10542      6E657269 
 10542      63526563 
 10542      65697665 
 10543              	.LASF1094:
 10544 8a5d 70784E65 		.ascii	"pxNewQueue\000"
 10544      77517565 
 10544      756500
 10545              	.LASF670:
 10546 8a68 5F5F696E 		.ascii	"__int_least8_t_defined 1\000"
 10546      745F6C65 
 10546      61737438 
 10546      5F745F64 
 10546      6566696E 
 10547              	.LASF508:
 10548 8a81 5F52414E 		.ascii	"_RAND48_ADD (0x000b)\000"
 10548      4434385F 
 10548      41444420 
 10548      28307830 
 10548      30306229 
 10549              	.LASF656:
 10550 8a96 45584954 		.ascii	"EXIT_FAILURE 1\000"
 10550      5F464149 
 10550      4C555245 
 10550      203100
 10551              	.LASF330:
 10552 8aa5 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 10552      4D5F4645 
 10552      41545552 
 10552      455F4C44 
 10552      52455820 
 10553              	.LASF664:
 10554 8abb 5F535444 		.ascii	"_STDINT_H \000"
 10554      494E545F 
 10554      482000
 10555              	.LASF417:
 10556 8ac6 5F545F53 		.ascii	"_T_SIZE_ \000"
 10556      495A455F 
 10556      2000
 10557              	.LASF999:
 10558 8ad0 71756575 		.ascii	"queueQUEUE_TYPE_RECURSIVE_MUTEX ( ( uint8_t ) 4U )\000"
 10558      65515545 
 10558      55455F54 
 10558      5950455F 
 10558      52454355 
 10559              	.LASF794:
 10560 8b03 65727251 		.ascii	"errQUEUE_BLOCKED ( -4 )\000"
 10560      55455545 
 10560      5F424C4F 
 10560      434B4544 
 10560      2028202D 
 10561              	.LASF220:
 10562 8b1b 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 10562      46524143 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 306


 10562      545F4550 
 10562      53494C4F 
 10562      4E5F5F20 
 10563              	.LASF790:
 10564 8b3a 70644641 		.ascii	"pdFAIL ( pdFALSE )\000"
 10564      494C2028 
 10564      20706446 
 10564      414C5345 
 10564      202900
 10565              	.LASF955:
 10566 8b4d 784C6973 		.ascii	"xListItem ListItem_t\000"
 10566      74497465 
 10566      6D204C69 
 10566      73744974 
 10566      656D5F74 
 10567              	.LASF189:
 10568 8b62 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 10568      52414354 
 10568      5F4D4158 
 10568      5F5F2030 
 10568      58374650 
 10569              	.LASF1081:
 10570 8b7b 78515545 		.ascii	"xQUEUE\000"
 10570      554500
 10571              	.LASF34:
 10572 8b82 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 10572      4E544D41 
 10572      585F5459 
 10572      50455F5F 
 10572      206C6F6E 
 10573              	.LASF782:
 10574 8baa 636F6E66 		.ascii	"configKERNEL_INTERRUPT_PRIORITY ( 31 << (8 - config"
 10574      69674B45 
 10574      524E454C 
 10574      5F494E54 
 10574      45525255 
 10575 8bdd 5052494F 		.ascii	"PRIO_BITS) )\000"
 10575      5F424954 
 10575      53292029 
 10575      00
 10576              	.LASF95:
 10577 8bea 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 10577      5431365F 
 10577      43286329 
 10577      206300
 10578              	.LASF1104:
 10579 8bf9 75784D61 		.ascii	"uxMaxCount\000"
 10579      78436F75 
 10579      6E7400
 10580              	.LASF947:
 10581 8c04 78546173 		.ascii	"xTaskParameters TaskParameters_t\000"
 10581      6B506172 
 10581      616D6574 
 10581      65727320 
 10581      5461736B 
 10582              	.LASF390:
 10583 8c25 5F414E44 		.ascii	"_AND ,\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 307


 10583      202C00
 10584              	.LASF827:
 10585 8c2c 706F7274 		.ascii	"portASSERT_IF_INTERRUPT_PRIORITY_INVALID() vPortVal"
 10585      41535345 
 10585      52545F49 
 10585      465F494E 
 10585      54455252 
 10586 8c5f 69646174 		.ascii	"idateInterruptPriority()\000"
 10586      65496E74 
 10586      65727275 
 10586      70745072 
 10586      696F7269 
 10587              	.LASF632:
 10588 8c78 5F5F7374 		.ascii	"__strftimelike(fmtarg,firstvararg) __attribute__((_"
 10588      72667469 
 10588      6D656C69 
 10588      6B652866 
 10588      6D746172 
 10589 8cab 5F666F72 		.ascii	"_format__ (__strftime__, fmtarg, firstvararg)))\000"
 10589      6D61745F 
 10589      5F20285F 
 10589      5F737472 
 10589      6674696D 
 10590              	.LASF499:
 10591 8cdb 5F415445 		.ascii	"_ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL},"
 10591      5849545F 
 10591      494E4954 
 10591      207B5F4E 
 10591      554C4C2C 
 10592 8d0e 20302C20 		.ascii	" 0, 0}}\000"
 10592      307D7D00 
 10593              	.LASF779:
 10594 8d16 636F6E66 		.ascii	"configNET_MASK2 255\000"
 10594      69674E45 
 10594      545F4D41 
 10594      534B3220 
 10594      32353500 
 10595              	.LASF646:
 10596 8d2a 5F5F4445 		.ascii	"__DEQUALIFY(type,var) ((type)(__uintptr_t)(const vo"
 10596      5155414C 
 10596      49465928 
 10596      74797065 
 10596      2C766172 
 10597 8d5d 6C617469 		.ascii	"latile void *)(var))\000"
 10597      6C652076 
 10597      6F696420 
 10597      2A292876 
 10597      61722929 
 10598              	.LASF753:
 10599 8d72 636F6E66 		.ascii	"configUSE_TRACE_FACILITY 1\000"
 10599      69675553 
 10599      455F5452 
 10599      4143455F 
 10599      46414349 
 10600              	.LASF10:
 10601 8d8d 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 10601      4F4D4943 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 308


 10601      5F414351 
 10601      5F52454C 
 10601      203400
 10602              	.LASF5:
 10603 8da0 5F5F5645 		.ascii	"__VERSION__ \"4.9.3 20150303 (release) [ARM/embedde"
 10603      5253494F 
 10603      4E5F5F20 
 10603      22342E39 
 10603      2E332032 
 10604 8dd2 642D345F 		.ascii	"d-4_9-branch revision 221220]\"\000"
 10604      392D6272 
 10604      616E6368 
 10604      20726576 
 10604      6973696F 
 10605              	.LASF269:
 10606 8df1 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
 10606      5F494249 
 10606      545F5F20 
 10606      3000
 10607              	.LASF604:
 10608 8dff 5F5F7061 		.ascii	"__packed __attribute__((__packed__))\000"
 10608      636B6564 
 10608      205F5F61 
 10608      74747269 
 10608      62757465 
 10609              	.LASF140:
 10610 8e24 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 10610      4C5F4D49 
 10610      4E5F3130 
 10610      5F455850 
 10610      5F5F2028 
 10611              	.LASF360:
 10612 8e3e 5F57414E 		.ascii	"_WANT_IO_LONG_LONG 1\000"
 10612      545F494F 
 10612      5F4C4F4E 
 10612      475F4C4F 
 10612      4E472031 
 10613              	.LASF1141:
 10614 8e53 443A5C77 		.ascii	"D:\\work\\Embedded\\aoaa\000"
 10614      6F726B5C 
 10614      456D6265 
 10614      64646564 
 10614      5C616F61 
 10615              	.LASF478:
 10616 8e69 5F5F5359 		.ascii	"__SYS_LOCK_H__ \000"
 10616      535F4C4F 
 10616      434B5F48 
 10616      5F5F2000 
 10617              	.LASF883:
 10618 8e79 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue) \000"
 10618      65515545 
 10618      55455F53 
 10618      454E445F 
 10618      46524F4D 
 10619              	.LASF510:
 10620 8ea3 5F524545 		.ascii	"_REENT_ASCTIME_SIZE 26\000"
 10620      4E545F41 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 309


 10620      53435449 
 10620      4D455F53 
 10620      495A4520 
 10621              	.LASF114:
 10622 8eba 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 4294967295U\000"
 10622      4E545F46 
 10622      41535433 
 10622      325F4D41 
 10622      585F5F20 
 10623              	.LASF100:
 10624 8eda 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 255\000"
 10624      4E545F4C 
 10624      45415354 
 10624      385F4D41 
 10624      585F5F20 
 10625              	.LASF727:
 10626 8ef2 50545244 		.ascii	"PTRDIFF_MIN (-PTRDIFF_MAX - 1)\000"
 10626      4946465F 
 10626      4D494E20 
 10626      282D5054 
 10626      52444946 
 10627              	.LASF835:
 10628 8f11 494E434C 		.ascii	"INCLUDE_xTaskGetIdleTaskHandle 0\000"
 10628      5544455F 
 10628      78546173 
 10628      6B476574 
 10628      49646C65 
 10629              	.LASF1047:
 10630 8f32 78497465 		.ascii	"xItemValue\000"
 10630      6D56616C 
 10630      756500
 10631              	.LASF137:
 10632 8f3d 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 10632      4C5F4D41 
 10632      4E545F44 
 10632      49475F5F 
 10632      20353300 
 10633              	.LASF212:
 10634 8f51 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 10634      46524143 
 10634      545F4942 
 10634      49545F5F 
 10634      203000
 10635              	.LASF350:
 10636 8f64 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 10636      4D5F4541 
 10636      42495F5F 
 10636      203100
 10637              	.LASF49:
 10638 8f73 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 10638      545F4C45 
 10638      41535436 
 10638      345F5459 
 10638      50455F5F 
 10639              	.LASF226:
 10640 8f96 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 10640      4343554D 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 310


 10640      5F464249 
 10640      545F5F20 
 10640      3700
 10641              	.LASF672:
 10642 8fa8 5F5F696E 		.ascii	"__int_least16_t_defined 1\000"
 10642      745F6C65 
 10642      61737431 
 10642      365F745F 
 10642      64656669 
 10643              	.LASF845:
 10644 8fc2 494E434C 		.ascii	"INCLUDE_xEventGroupSetBitFromISR 0\000"
 10644      5544455F 
 10644      78457665 
 10644      6E744772 
 10644      6F757053 
 10645              	.LASF1125:
 10646 8fe5 75785175 		.ascii	"uxQueueGetQueueNumber\000"
 10646      65756547 
 10646      65745175 
 10646      6575654E 
 10646      756D6265 
 10647              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 311


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
                            *COM*:00000050 xQueueRegistry
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:55     .text.xQueueGenericReset:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:60     .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:179    .text.xQueueGenericCreate:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:184    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:283    .text.xQueueCreateMutex:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:288    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:642    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:392    .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:397    .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:473    .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:478    .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1078   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:557    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:562    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:637    .text.xQueueGenericSend:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1927   .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2372   .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2146   .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:891    .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:896    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1073   .text.xQueueGenericReceive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2079   .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2264   .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1345   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1350   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1486   .text.xQueuePeekFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1491   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1593   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1598   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1644   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1649   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1701   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1706   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1748   .text.vQueueDelete:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1753   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2560   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1808   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1813   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1846   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1851   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1885   .text.ucQueueGetQueueType:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1890   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:1923   .text.prvCopyDataToQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2075   .text.prvCopyDataFromQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2142   .text.prvUnlockQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2260   .text.prvIsQueueEmpty:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2311   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2316   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2368   .text.prvIsQueueFull:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2421   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2426   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2480   .text.vQueueAddToRegistry:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2485   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2550   .text.vQueueAddToRegistry:0000004c $d
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s 			page 312


C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2555   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\ccAEmjDp.s:2620   .text.vQueueUnregisterQueue:00000040 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1834ce015d70b8127b1e5f7bc96e3d8e
                           .group:00000000 wm4.newlib.h.8.f2807fe490bc07755df529420a1a6ce0
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.fbe724f4232069283dea9c3aea4135c7
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8
                           .group:00000000 wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066
                           .group:00000000 wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946
                           .group:00000000 wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5
                           .group:00000000 wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168
                           .group:00000000 wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e
                           .group:00000000 wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370
                           .group:00000000 wm4.task.h.84.e110bc08aaffa67ce542955b890201b4
                           .group:00000000 wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94

UNDEFINED SYMBOLS
ulPortSetInterruptMask
vPortEnterCritical
xTaskRemoveFromEventList
vPortYield
vListInitialise
vPortExitCritical
pvPortMalloc
vPortFree
xTaskGetCurrentTaskHandle
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
vPortClearInterruptMask
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
