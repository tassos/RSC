ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"queue.c"
  14              	@ GNU C89 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I config -I system -I core -I drivers -I FreeRTOS
  18              	@ -I FreeRTOS/include -I FreeRTOS/portable/GCC/ARM_CM3 -I FreeRTOS/portable
  19              	@ -I tasks/rc_task_leds -I modules/rc_leds -I drivers/rc_system
  20              	@ -I drivers/rc_gpio -I drivers/rc_uart -I drivers/rc_pinsel
  21              	@ -I drivers/rc_timer -I drivers/rc_adc -imultilib armv7-m
  22              	@ -iprefix c:\program files (x86)\gnu tools arm embedded\5.4 2016q3\bin\../lib/gcc/arm-none-eabi/5.
  23              	@ -isysroot c:\program files (x86)\gnu tools arm embedded\5.4 2016q3\bin\../arm-none-eabi
  24              	@ -MD out/queue.d -MF out/queue.d -MP -MQ out/queue.o -D__USES_INITFINI__
  25              	@ FreeRTOS/queue.c -mcpu=cortex-m3 -mthumb -auxbase-strip out/queue.o -g
  26              	@ -ggdb3 -O0 -Wall -Wstrict-prototypes -Wextra -std=gnu90
  27              	@ -ffunction-sections -fdata-sections -fverbose-asm
  28              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  29              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  30              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  31              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  32              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  33              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  34              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  35              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  36              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  37              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  38              	@ -fleading-underscore -flifetime-dse -flto-odr-type-merging -fmath-errno
  39              	@ -fmerge-debug-strings -fpeephole -fprefetch-loop-arrays
  40              	@ -freg-struct-return -fsched-critical-path-heuristic
  41              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  42              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  43              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  44              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  45              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  46              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  47              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  48              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  49              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  50              	@ -fzero-initialized-in-bss -masm-syntax-unified -mfix-cortex-m3-ldrd
  51              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  52              	@ -munaligned-access -mvectorize-with-neon-quad
  53              	
  54              		.text
  55              	.Ltext0:
  56              		.cfi_sections	.debug_frame
  57              		.comm	xQueueRegistry,80,4
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 2


  58              		.section	.text.xQueueGenericReset,"ax",%progbits
  59              		.align	2
  60              		.global	xQueueGenericReset
  61              		.thumb
  62              		.thumb_func
  63              		.type	xQueueGenericReset, %function
  64              	xQueueGenericReset:
  65              	.LFB1:
  66              		.file 1 "FreeRTOS/queue.c"
   1:FreeRTOS/queue.c **** /*
   2:FreeRTOS/queue.c ****     FreeRTOS V8.1.2 - Copyright (C) 2014 Real Time Engineers Ltd.
   3:FreeRTOS/queue.c ****     All rights reserved
   4:FreeRTOS/queue.c **** 
   5:FreeRTOS/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/queue.c **** 
   7:FreeRTOS/queue.c ****     ***************************************************************************
   8:FreeRTOS/queue.c ****      *                                                                       *
   9:FreeRTOS/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:FreeRTOS/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:FreeRTOS/queue.c ****      *    platform software that has become a de facto standard.             *
  12:FreeRTOS/queue.c ****      *                                                                       *
  13:FreeRTOS/queue.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:FreeRTOS/queue.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:FreeRTOS/queue.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:FreeRTOS/queue.c ****      *                                                                       *
  17:FreeRTOS/queue.c ****      *    Thank you!                                                         *
  18:FreeRTOS/queue.c ****      *                                                                       *
  19:FreeRTOS/queue.c ****     ***************************************************************************
  20:FreeRTOS/queue.c **** 
  21:FreeRTOS/queue.c ****     This file is part of the FreeRTOS distribution.
  22:FreeRTOS/queue.c **** 
  23:FreeRTOS/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:FreeRTOS/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:FreeRTOS/queue.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:FreeRTOS/queue.c **** 
  27:FreeRTOS/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  28:FreeRTOS/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  29:FreeRTOS/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  30:FreeRTOS/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  31:FreeRTOS/queue.c **** 
  32:FreeRTOS/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:FreeRTOS/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:FreeRTOS/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:FreeRTOS/queue.c ****     link: http://www.freertos.org/a00114.html
  36:FreeRTOS/queue.c **** 
  37:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  38:FreeRTOS/queue.c **** 
  39:FreeRTOS/queue.c ****     ***************************************************************************
  40:FreeRTOS/queue.c ****      *                                                                       *
  41:FreeRTOS/queue.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:FreeRTOS/queue.c ****      *    not run, what could be wrong?"                                     *
  43:FreeRTOS/queue.c ****      *                                                                       *
  44:FreeRTOS/queue.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:FreeRTOS/queue.c ****      *                                                                       *
  46:FreeRTOS/queue.c ****     ***************************************************************************
  47:FreeRTOS/queue.c **** 
  48:FreeRTOS/queue.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 3


  49:FreeRTOS/queue.c ****     license and Real Time Engineers Ltd. contact details.
  50:FreeRTOS/queue.c **** 
  51:FreeRTOS/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:FreeRTOS/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:FreeRTOS/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  54:FreeRTOS/queue.c **** 
  55:FreeRTOS/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:FreeRTOS/queue.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:FreeRTOS/queue.c ****     licenses offer ticketed support, indemnification and middleware.
  58:FreeRTOS/queue.c **** 
  59:FreeRTOS/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:FreeRTOS/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  61:FreeRTOS/queue.c ****     mission critical applications that require provable dependability.
  62:FreeRTOS/queue.c **** 
  63:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  64:FreeRTOS/queue.c **** */
  65:FreeRTOS/queue.c **** 
  66:FreeRTOS/queue.c **** #include <stdlib.h>
  67:FreeRTOS/queue.c **** #include <string.h>
  68:FreeRTOS/queue.c **** 
  69:FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  70:FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  71:FreeRTOS/queue.c **** task.h is included from an application file. */
  72:FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  73:FreeRTOS/queue.c **** 
  74:FreeRTOS/queue.c **** #include "FreeRTOS.h"
  75:FreeRTOS/queue.c **** #include "task.h"
  76:FreeRTOS/queue.c **** #include "queue.h"
  77:FreeRTOS/queue.c **** 
  78:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  79:FreeRTOS/queue.c **** 	#include "croutine.h"
  80:FreeRTOS/queue.c **** #endif
  81:FreeRTOS/queue.c **** 
  82:FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  83:FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  84:FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  85:FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
  86:FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  87:FreeRTOS/queue.c **** 
  88:FreeRTOS/queue.c **** 
  89:FreeRTOS/queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  90:FreeRTOS/queue.c **** #define queueUNLOCKED					( ( BaseT_t ) -1 )
  91:FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseT_t ) 0 )
  92:FreeRTOS/queue.c **** 
  93:FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  94:FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  95:FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  96:FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  97:FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  98:FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  99:FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
 100:FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
 101:FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
 102:FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
 103:FreeRTOS/queue.c **** structure member). */
 104:FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
 105:FreeRTOS/queue.c **** #define uxQueueType						pcHead
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 4


 106:FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 107:FreeRTOS/queue.c **** 
 108:FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 109:FreeRTOS/queue.c **** zero. */
 110:FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )
 111:FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickT_t ) 0U )
 112:FreeRTOS/queue.c **** 
 113:FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
 114:FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 115:FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
 116:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 117:FreeRTOS/queue.c **** #else
 118:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 119:FreeRTOS/queue.c **** #endif
 120:FreeRTOS/queue.c **** 
 121:FreeRTOS/queue.c **** /*
 122:FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
 123:FreeRTOS/queue.c ****  * Items are queued by copy, not reference.
 124:FreeRTOS/queue.c ****  */
 125:FreeRTOS/queue.c **** typedef struct QueueDefinition
 126:FreeRTOS/queue.c **** {
 127:FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 128:FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 129:FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 130:FreeRTOS/queue.c **** 
 131:FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 132:FreeRTOS/queue.c **** 	{
 133:FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 134:FreeRTOS/queue.c **** 		UBaseT_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex has 
 135:FreeRTOS/queue.c **** 	} u;
 136:FreeRTOS/queue.c **** 
 137:FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 138:FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 139:FreeRTOS/queue.c **** 
 140:FreeRTOS/queue.c **** 	volatile UBaseT_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 141:FreeRTOS/queue.c **** 	UBaseT_t uxLength;			/*< The length of the queue defined as the number of items it will hold, not 
 142:FreeRTOS/queue.c **** 	UBaseT_t uxItemSize;			/*< The size of each items that the queue will hold. */
 143:FreeRTOS/queue.c **** 
 144:FreeRTOS/queue.c **** 	volatile BaseT_t xRxLock;	/*< Stores the number of items received from the queue (removed from the
 145:FreeRTOS/queue.c **** 	volatile BaseT_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the qu
 146:FreeRTOS/queue.c **** 
 147:FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 148:FreeRTOS/queue.c **** 		UBaseT_t uxQueueNumber;
 149:FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 150:FreeRTOS/queue.c **** 	#endif
 151:FreeRTOS/queue.c **** 
 152:FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 153:FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 154:FreeRTOS/queue.c **** 	#endif
 155:FreeRTOS/queue.c **** 
 156:FreeRTOS/queue.c **** } xQUEUE;
 157:FreeRTOS/queue.c **** 
 158:FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 159:FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 160:FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 161:FreeRTOS/queue.c **** 
 162:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 5


 163:FreeRTOS/queue.c **** 
 164:FreeRTOS/queue.c **** /*
 165:FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 166:FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 167:FreeRTOS/queue.c ****  */
 168:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 169:FreeRTOS/queue.c **** 
 170:FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 171:FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 172:FreeRTOS/queue.c **** 	more user friendly. */
 173:FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 174:FreeRTOS/queue.c **** 	{
 175:FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 176:FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 177:FreeRTOS/queue.c **** 	} xQueueRegistryItem;
 178:FreeRTOS/queue.c **** 
 179:FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 180:FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 181:FreeRTOS/queue.c **** 	debuggers. */
 182:FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 183:FreeRTOS/queue.c **** 
 184:FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 185:FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 186:FreeRTOS/queue.c **** 	array position being vacant. */
 187:FreeRTOS/queue.c **** 	QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 188:FreeRTOS/queue.c **** 
 189:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 190:FreeRTOS/queue.c **** 
 191:FreeRTOS/queue.c **** /*
 192:FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 193:FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 194:FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 195:FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 196:FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 197:FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 198:FreeRTOS/queue.c ****  */
 199:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 200:FreeRTOS/queue.c **** 
 201:FreeRTOS/queue.c **** /*
 202:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 203:FreeRTOS/queue.c ****  *
 204:FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 205:FreeRTOS/queue.c ****  */
 206:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 207:FreeRTOS/queue.c **** 
 208:FreeRTOS/queue.c **** /*
 209:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 210:FreeRTOS/queue.c ****  *
 211:FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 212:FreeRTOS/queue.c ****  */
 213:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 214:FreeRTOS/queue.c **** 
 215:FreeRTOS/queue.c **** /*
 216:FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 217:FreeRTOS/queue.c ****  * back of the queue.
 218:FreeRTOS/queue.c ****  */
 219:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 6


 220:FreeRTOS/queue.c **** 
 221:FreeRTOS/queue.c **** /*
 222:FreeRTOS/queue.c ****  * Copies an item out of a queue.
 223:FreeRTOS/queue.c ****  */
 224:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 225:FreeRTOS/queue.c **** 
 226:FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 227:FreeRTOS/queue.c **** 	/*
 228:FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 229:FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 230:FreeRTOS/queue.c **** 	 */
 231:FreeRTOS/queue.c **** 	static BaseT_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseT_t xCopyPosit
 232:FreeRTOS/queue.c **** #endif
 233:FreeRTOS/queue.c **** 
 234:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 235:FreeRTOS/queue.c **** 
 236:FreeRTOS/queue.c **** /*
 237:FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:FreeRTOS/queue.c ****  * accessing the queue event lists.
 239:FreeRTOS/queue.c ****  */
 240:FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 241:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 242:FreeRTOS/queue.c **** 	{														\
 243:FreeRTOS/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 244:FreeRTOS/queue.c **** 		{													\
 245:FreeRTOS/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 246:FreeRTOS/queue.c **** 		}													\
 247:FreeRTOS/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 248:FreeRTOS/queue.c **** 		{													\
 249:FreeRTOS/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 250:FreeRTOS/queue.c **** 		}													\
 251:FreeRTOS/queue.c **** 	}														\
 252:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 253:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 254:FreeRTOS/queue.c **** 
 255:FreeRTOS/queue.c **** BaseT_t xQueueGenericReset( QueueHandle_t xQueue, BaseT_t xNewQueue )
 256:FreeRTOS/queue.c **** {
  67              		.loc 1 256 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 16
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}	@
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 84B0     		sub	sp, sp, #16	@,,
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0	@,,
  78              		.cfi_def_cfa_register 7
  79 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
  80 0008 3960     		str	r1, [r7]	@ xNewQueue, xNewQueue
 257:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  81              		.loc 1 257 0
  82 000a 7B68     		ldr	r3, [r7, #4]	@ tmp129, xQueue
  83 000c FB60     		str	r3, [r7, #12]	@ tmp129, pxQueue
 258:FreeRTOS/queue.c **** 
 259:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 7


  84              		.loc 1 259 0
  85 000e FB68     		ldr	r3, [r7, #12]	@ tmp130, pxQueue
  86 0010 002B     		cmp	r3, #0	@ tmp130,
  87 0012 02D1     		bne	.L2	@,
  88              		.loc 1 259 0 is_stmt 0 discriminator 1
  89 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
  90              	.L3:
  91 0018 FEE7     		b	.L3	@
  92              	.L2:
 260:FreeRTOS/queue.c **** 
 261:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  93              		.loc 1 261 0 is_stmt 1
  94 001a FFF7FEFF 		bl	vPortEnterCritical	@
 262:FreeRTOS/queue.c **** 	{
 263:FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  95              		.loc 1 263 0
  96 001e FB68     		ldr	r3, [r7, #12]	@ tmp131, pxQueue
  97 0020 1A68     		ldr	r2, [r3]	@ D.6054, pxQueue_3->pcHead
  98 0022 FB68     		ldr	r3, [r7, #12]	@ tmp132, pxQueue
  99 0024 DB6B     		ldr	r3, [r3, #60]	@ D.6055, pxQueue_3->uxLength
 100 0026 F968     		ldr	r1, [r7, #12]	@ tmp133, pxQueue
 101 0028 096C     		ldr	r1, [r1, #64]	@ D.6055, pxQueue_3->uxItemSize
 102 002a 01FB03F3 		mul	r3, r1, r3	@ D.6055, D.6055, D.6055
 103 002e 1A44     		add	r2, r2, r3	@ D.6054, D.6055
 104 0030 FB68     		ldr	r3, [r7, #12]	@ tmp134, pxQueue
 105 0032 5A60     		str	r2, [r3, #4]	@ D.6054, pxQueue_3->pcTail
 264:FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 106              		.loc 1 264 0
 107 0034 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxQueue
 108 0036 0022     		movs	r2, #0	@ tmp136,
 109 0038 9A63     		str	r2, [r3, #56]	@ tmp136, pxQueue_3->uxMessagesWaiting
 265:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 110              		.loc 1 265 0
 111 003a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxQueue
 112 003c 1A68     		ldr	r2, [r3]	@ D.6054, pxQueue_3->pcHead
 113 003e FB68     		ldr	r3, [r7, #12]	@ tmp138, pxQueue
 114 0040 9A60     		str	r2, [r3, #8]	@ D.6054, pxQueue_3->pcWriteTo
 266:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseT_t ) 1U ) * pxQueue->ux
 115              		.loc 1 266 0
 116 0042 FB68     		ldr	r3, [r7, #12]	@ tmp139, pxQueue
 117 0044 1A68     		ldr	r2, [r3]	@ D.6054, pxQueue_3->pcHead
 118 0046 FB68     		ldr	r3, [r7, #12]	@ tmp140, pxQueue
 119 0048 DB6B     		ldr	r3, [r3, #60]	@ D.6055, pxQueue_3->uxLength
 120 004a 013B     		subs	r3, r3, #1	@ D.6055, D.6055,
 121 004c F968     		ldr	r1, [r7, #12]	@ tmp141, pxQueue
 122 004e 096C     		ldr	r1, [r1, #64]	@ D.6055, pxQueue_3->uxItemSize
 123 0050 01FB03F3 		mul	r3, r1, r3	@ D.6055, D.6055, D.6055
 124 0054 1A44     		add	r2, r2, r3	@ D.6054, D.6055
 125 0056 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 126 0058 DA60     		str	r2, [r3, #12]	@ D.6054, pxQueue_3->u.pcReadFrom
 267:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 127              		.loc 1 267 0
 128 005a FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
 129 005c 4FF0FF32 		mov	r2, #-1	@ tmp144,
 130 0060 5A64     		str	r2, [r3, #68]	@ tmp144, pxQueue_3->xRxLock
 268:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 131              		.loc 1 268 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 8


 132 0062 FB68     		ldr	r3, [r7, #12]	@ tmp145, pxQueue
 133 0064 4FF0FF32 		mov	r2, #-1	@ tmp146,
 134 0068 9A64     		str	r2, [r3, #72]	@ tmp146, pxQueue_3->xTxLock
 269:FreeRTOS/queue.c **** 
 270:FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
 135              		.loc 1 270 0
 136 006a 3B68     		ldr	r3, [r7]	@ tmp147, xNewQueue
 137 006c 002B     		cmp	r3, #0	@ tmp147,
 138 006e 0ED1     		bne	.L4	@,
 271:FreeRTOS/queue.c **** 		{
 272:FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:FreeRTOS/queue.c **** 			it will be possible to write to it. */
 277:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 139              		.loc 1 277 0
 140 0070 FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 141 0072 1B69     		ldr	r3, [r3, #16]	@ D.6055, pxQueue_3->xTasksWaitingToSend.uxNumberOfItems
 142 0074 002B     		cmp	r3, #0	@ D.6055,
 143 0076 14D0     		beq	.L5	@,
 278:FreeRTOS/queue.c **** 			{
 279:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 144              		.loc 1 279 0
 145 0078 FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 146 007a 1033     		adds	r3, r3, #16	@ D.6056, tmp149,
 147 007c 1846     		mov	r0, r3	@, D.6056
 148 007e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 149 0082 0346     		mov	r3, r0	@ D.6057,
 150 0084 012B     		cmp	r3, #1	@ D.6057,
 151 0086 0CD1     		bne	.L5	@,
 280:FreeRTOS/queue.c **** 				{
 281:FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 152              		.loc 1 281 0
 153 0088 FFF7FEFF 		bl	vPortYield	@
 154 008c 09E0     		b	.L5	@
 155              	.L4:
 282:FreeRTOS/queue.c **** 				}
 283:FreeRTOS/queue.c **** 				else
 284:FreeRTOS/queue.c **** 				{
 285:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:FreeRTOS/queue.c **** 				}
 287:FreeRTOS/queue.c **** 			}
 288:FreeRTOS/queue.c **** 			else
 289:FreeRTOS/queue.c **** 			{
 290:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:FreeRTOS/queue.c **** 			}
 292:FreeRTOS/queue.c **** 		}
 293:FreeRTOS/queue.c **** 		else
 294:FreeRTOS/queue.c **** 		{
 295:FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 156              		.loc 1 296 0
 157 008e FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 158 0090 1033     		adds	r3, r3, #16	@ D.6056, tmp150,
 159 0092 1846     		mov	r0, r3	@, D.6056
 160 0094 FFF7FEFF 		bl	vListInitialise	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 9


 297:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 161              		.loc 1 297 0
 162 0098 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 163 009a 2433     		adds	r3, r3, #36	@ D.6056, tmp151,
 164 009c 1846     		mov	r0, r3	@, D.6056
 165 009e FFF7FEFF 		bl	vListInitialise	@
 166              	.L5:
 298:FreeRTOS/queue.c **** 		}
 299:FreeRTOS/queue.c **** 	}
 300:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 167              		.loc 1 300 0
 168 00a2 FFF7FEFF 		bl	vPortExitCritical	@
 301:FreeRTOS/queue.c **** 
 302:FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:FreeRTOS/queue.c **** 	versions. */
 304:FreeRTOS/queue.c **** 	return pdPASS;
 169              		.loc 1 304 0
 170 00a6 0123     		movs	r3, #1	@ D.6058,
 305:FreeRTOS/queue.c **** }
 171              		.loc 1 305 0
 172 00a8 1846     		mov	r0, r3	@, <retval>
 173 00aa 1037     		adds	r7, r7, #16	@,,
 174              		.cfi_def_cfa_offset 8
 175 00ac BD46     		mov	sp, r7	@,
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed	@
 178 00ae 80BD     		pop	{r7, pc}	@
 179              		.cfi_endproc
 180              	.LFE1:
 181              		.size	xQueueGenericReset, .-xQueueGenericReset
 182              		.section	.text.xQueueGenericCreate,"ax",%progbits
 183              		.align	2
 184              		.global	xQueueGenericCreate
 185              		.thumb
 186              		.thumb_func
 187              		.type	xQueueGenericCreate, %function
 188              	xQueueGenericCreate:
 189              	.LFB2:
 306:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 307:FreeRTOS/queue.c **** 
 308:FreeRTOS/queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseT_t uxQueueLength, const UBaseT_t uxItemSize, const u
 309:FreeRTOS/queue.c **** {
 190              		.loc 1 309 0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 32
 193              		@ frame_needed = 1, uses_anonymous_args = 0
 194 0000 80B5     		push	{r7, lr}	@
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 7, -8
 197              		.cfi_offset 14, -4
 198 0002 88B0     		sub	sp, sp, #32	@,,
 199              		.cfi_def_cfa_offset 40
 200 0004 00AF     		add	r7, sp, #0	@,,
 201              		.cfi_def_cfa_register 7
 202 0006 F860     		str	r0, [r7, #12]	@ uxQueueLength, uxQueueLength
 203 0008 B960     		str	r1, [r7, #8]	@ uxItemSize, uxItemSize
 204 000a 1346     		mov	r3, r2	@ tmp115, ucQueueType
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 10


 205 000c FB71     		strb	r3, [r7, #7]	@ tmp116, ucQueueType
 310:FreeRTOS/queue.c **** Queue_t *pxNewQueue;
 311:FreeRTOS/queue.c **** size_t xQueueSizeInBytes;
 312:FreeRTOS/queue.c **** QueueHandle_t xReturn = NULL;
 206              		.loc 1 312 0
 207 000e 0023     		movs	r3, #0	@ tmp117,
 208 0010 FB61     		str	r3, [r7, #28]	@ tmp117, xReturn
 313:FreeRTOS/queue.c **** 
 314:FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 315:FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 316:FreeRTOS/queue.c **** 	( void ) ucQueueType;
 317:FreeRTOS/queue.c **** 
 318:FreeRTOS/queue.c **** 	/* Allocate the new queue structure. */
 319:FreeRTOS/queue.c **** 	if( uxQueueLength > ( UBaseT_t ) 0 )
 209              		.loc 1 319 0
 210 0012 FB68     		ldr	r3, [r7, #12]	@ tmp118, uxQueueLength
 211 0014 002B     		cmp	r3, #0	@ tmp118,
 212 0016 2AD0     		beq	.L8	@,
 320:FreeRTOS/queue.c **** 	{
 321:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 213              		.loc 1 321 0
 214 0018 5420     		movs	r0, #84	@,
 215 001a FFF7FEFF 		bl	pvPortMalloc	@
 216 001e B861     		str	r0, [r7, #24]	@, pxNewQueue
 322:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 217              		.loc 1 322 0
 218 0020 BB69     		ldr	r3, [r7, #24]	@ tmp119, pxNewQueue
 219 0022 002B     		cmp	r3, #0	@ tmp119,
 220 0024 23D0     		beq	.L8	@,
 323:FreeRTOS/queue.c **** 		{
 324:FreeRTOS/queue.c **** 			/* Create the list of pointers to queue items.  The queue is one byte
 325:FreeRTOS/queue.c **** 			longer than asked for to make wrap checking easier/faster. */
 326:FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA
 221              		.loc 1 326 0
 222 0026 FB68     		ldr	r3, [r7, #12]	@ tmp120, uxQueueLength
 223 0028 BA68     		ldr	r2, [r7, #8]	@ tmp121, uxItemSize
 224 002a 02FB03F3 		mul	r3, r2, r3	@ D.6059, tmp121, tmp120
 225 002e 0133     		adds	r3, r3, #1	@ tmp122, D.6059,
 226 0030 7B61     		str	r3, [r7, #20]	@ tmp122, xQueueSizeInBytes
 327:FreeRTOS/queue.c **** 
 328:FreeRTOS/queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pvPortMalloc( xQueueSizeInBytes );
 227              		.loc 1 328 0
 228 0032 7869     		ldr	r0, [r7, #20]	@, xQueueSizeInBytes
 229 0034 FFF7FEFF 		bl	pvPortMalloc	@
 230 0038 0246     		mov	r2, r0	@ D.6060,
 231 003a BB69     		ldr	r3, [r7, #24]	@ tmp123, pxNewQueue
 232 003c 1A60     		str	r2, [r3]	@ D.6060, pxNewQueue_9->pcHead
 329:FreeRTOS/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 233              		.loc 1 329 0
 234 003e BB69     		ldr	r3, [r7, #24]	@ tmp124, pxNewQueue
 235 0040 1B68     		ldr	r3, [r3]	@ D.6061, pxNewQueue_9->pcHead
 236 0042 002B     		cmp	r3, #0	@ D.6061,
 237 0044 10D0     		beq	.L9	@,
 330:FreeRTOS/queue.c **** 			{
 331:FreeRTOS/queue.c **** 				/* Initialise the queue members as described above where the
 332:FreeRTOS/queue.c **** 				queue type is defined. */
 333:FreeRTOS/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 11


 238              		.loc 1 333 0
 239 0046 BB69     		ldr	r3, [r7, #24]	@ tmp125, pxNewQueue
 240 0048 FA68     		ldr	r2, [r7, #12]	@ tmp126, uxQueueLength
 241 004a DA63     		str	r2, [r3, #60]	@ tmp126, pxNewQueue_9->uxLength
 334:FreeRTOS/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
 242              		.loc 1 334 0
 243 004c BB69     		ldr	r3, [r7, #24]	@ tmp127, pxNewQueue
 244 004e BA68     		ldr	r2, [r7, #8]	@ tmp128, uxItemSize
 245 0050 1A64     		str	r2, [r3, #64]	@ tmp128, pxNewQueue_9->uxItemSize
 335:FreeRTOS/queue.c **** 				( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 246              		.loc 1 335 0
 247 0052 0121     		movs	r1, #1	@,
 248 0054 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 249 0056 FFF7FEFF 		bl	xQueueGenericReset	@
 336:FreeRTOS/queue.c **** 
 337:FreeRTOS/queue.c **** 				#if ( configUSE_TRACE_FACILITY == 1 )
 338:FreeRTOS/queue.c **** 				{
 339:FreeRTOS/queue.c **** 					pxNewQueue->ucQueueType = ucQueueType;
 250              		.loc 1 339 0
 251 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxNewQueue
 252 005c FA79     		ldrb	r2, [r7, #7]	@ tmp130, ucQueueType
 253 005e 83F85020 		strb	r2, [r3, #80]	@ tmp130, pxNewQueue_9->ucQueueType
 340:FreeRTOS/queue.c **** 				}
 341:FreeRTOS/queue.c **** 				#endif /* configUSE_TRACE_FACILITY */
 342:FreeRTOS/queue.c **** 
 343:FreeRTOS/queue.c **** 				#if( configUSE_QUEUE_SETS == 1 )
 344:FreeRTOS/queue.c **** 				{
 345:FreeRTOS/queue.c **** 					pxNewQueue->pxQueueSetContainer = NULL;
 346:FreeRTOS/queue.c **** 				}
 347:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 348:FreeRTOS/queue.c **** 
 349:FreeRTOS/queue.c **** 				traceQUEUE_CREATE( pxNewQueue );
 350:FreeRTOS/queue.c **** 				xReturn = pxNewQueue;
 254              		.loc 1 350 0
 255 0062 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxNewQueue
 256 0064 FB61     		str	r3, [r7, #28]	@ tmp131, xReturn
 257 0066 02E0     		b	.L8	@
 258              	.L9:
 351:FreeRTOS/queue.c **** 			}
 352:FreeRTOS/queue.c **** 			else
 353:FreeRTOS/queue.c **** 			{
 354:FreeRTOS/queue.c **** 				traceQUEUE_CREATE_FAILED( ucQueueType );
 355:FreeRTOS/queue.c **** 				vPortFree( pxNewQueue );
 259              		.loc 1 355 0
 260 0068 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 261 006a FFF7FEFF 		bl	vPortFree	@
 262              	.L8:
 356:FreeRTOS/queue.c **** 			}
 357:FreeRTOS/queue.c **** 		}
 358:FreeRTOS/queue.c **** 		else
 359:FreeRTOS/queue.c **** 		{
 360:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 361:FreeRTOS/queue.c **** 		}
 362:FreeRTOS/queue.c **** 	}
 363:FreeRTOS/queue.c **** 	else
 364:FreeRTOS/queue.c **** 	{
 365:FreeRTOS/queue.c **** 		mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 12


 366:FreeRTOS/queue.c **** 	}
 367:FreeRTOS/queue.c **** 
 368:FreeRTOS/queue.c **** 	configASSERT( xReturn );
 263              		.loc 1 368 0
 264 006e FB69     		ldr	r3, [r7, #28]	@ tmp132, xReturn
 265 0070 002B     		cmp	r3, #0	@ tmp132,
 266 0072 02D1     		bne	.L11	@,
 267              		.loc 1 368 0 is_stmt 0 discriminator 1
 268 0074 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 269              	.L12:
 270              		.loc 1 368 0 discriminator 2
 271 0078 FEE7     		b	.L12	@
 272              	.L11:
 369:FreeRTOS/queue.c **** 
 370:FreeRTOS/queue.c **** 	return xReturn;
 273              		.loc 1 370 0 is_stmt 1
 274 007a FB69     		ldr	r3, [r7, #28]	@ D.6062, xReturn
 371:FreeRTOS/queue.c **** }
 275              		.loc 1 371 0
 276 007c 1846     		mov	r0, r3	@, <retval>
 277 007e 2037     		adds	r7, r7, #32	@,,
 278              		.cfi_def_cfa_offset 8
 279 0080 BD46     		mov	sp, r7	@,
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed	@
 282 0082 80BD     		pop	{r7, pc}	@
 283              		.cfi_endproc
 284              	.LFE2:
 285              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 286              		.section	.text.xQueueCreateMutex,"ax",%progbits
 287              		.align	2
 288              		.global	xQueueCreateMutex
 289              		.thumb
 290              		.thumb_func
 291              		.type	xQueueCreateMutex, %function
 292              	xQueueCreateMutex:
 293              	.LFB3:
 372:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 373:FreeRTOS/queue.c **** 
 374:FreeRTOS/queue.c **** #if ( configUSE_MUTEXES == 1 )
 375:FreeRTOS/queue.c **** 
 376:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 377:FreeRTOS/queue.c **** 	{
 294              		.loc 1 377 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}	@
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 84B0     		sub	sp, sp, #16	@,,
 303              		.cfi_def_cfa_offset 24
 304 0004 00AF     		add	r7, sp, #0	@,,
 305              		.cfi_def_cfa_register 7
 306 0006 0346     		mov	r3, r0	@ tmp114, ucQueueType
 307 0008 FB71     		strb	r3, [r7, #7]	@ tmp115, ucQueueType
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 13


 378:FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 379:FreeRTOS/queue.c **** 
 380:FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 381:FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 382:FreeRTOS/queue.c **** 		( void ) ucQueueType;
 383:FreeRTOS/queue.c **** 
 384:FreeRTOS/queue.c **** 		/* Allocate the new queue structure. */
 385:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 308              		.loc 1 385 0
 309 000a 5420     		movs	r0, #84	@,
 310 000c FFF7FEFF 		bl	pvPortMalloc	@
 311 0010 F860     		str	r0, [r7, #12]	@, pxNewQueue
 386:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 312              		.loc 1 386 0
 313 0012 FB68     		ldr	r3, [r7, #12]	@ tmp116, pxNewQueue
 314 0014 002B     		cmp	r3, #0	@ tmp116,
 315 0016 30D0     		beq	.L15	@,
 387:FreeRTOS/queue.c **** 		{
 388:FreeRTOS/queue.c **** 			/* Information required for priority inheritance. */
 389:FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 316              		.loc 1 389 0
 317 0018 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxNewQueue
 318 001a 0022     		movs	r2, #0	@ tmp118,
 319 001c 5A60     		str	r2, [r3, #4]	@ tmp118, pxNewQueue_4->pcTail
 390:FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 320              		.loc 1 390 0
 321 001e FB68     		ldr	r3, [r7, #12]	@ tmp119, pxNewQueue
 322 0020 0022     		movs	r2, #0	@ tmp120,
 323 0022 1A60     		str	r2, [r3]	@ tmp120, pxNewQueue_4->pcHead
 391:FreeRTOS/queue.c **** 
 392:FreeRTOS/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 393:FreeRTOS/queue.c **** 			of the queue. */
 394:FreeRTOS/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 324              		.loc 1 394 0
 325 0024 FB68     		ldr	r3, [r7, #12]	@ tmp121, pxNewQueue
 326 0026 0022     		movs	r2, #0	@ tmp122,
 327 0028 9A60     		str	r2, [r3, #8]	@ tmp122, pxNewQueue_4->pcWriteTo
 395:FreeRTOS/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 328              		.loc 1 395 0
 329 002a FB68     		ldr	r3, [r7, #12]	@ tmp123, pxNewQueue
 330 002c 0022     		movs	r2, #0	@ tmp124,
 331 002e DA60     		str	r2, [r3, #12]	@ tmp124, pxNewQueue_4->u.pcReadFrom
 396:FreeRTOS/queue.c **** 
 397:FreeRTOS/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 398:FreeRTOS/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 399:FreeRTOS/queue.c **** 			of the mutex. */
 400:FreeRTOS/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 332              		.loc 1 400 0
 333 0030 FB68     		ldr	r3, [r7, #12]	@ tmp125, pxNewQueue
 334 0032 0022     		movs	r2, #0	@ tmp126,
 335 0034 9A63     		str	r2, [r3, #56]	@ tmp126, pxNewQueue_4->uxMessagesWaiting
 401:FreeRTOS/queue.c **** 			pxNewQueue->uxLength = ( UBaseT_t ) 1U;
 336              		.loc 1 401 0
 337 0036 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxNewQueue
 338 0038 0122     		movs	r2, #1	@ tmp128,
 339 003a DA63     		str	r2, [r3, #60]	@ tmp128, pxNewQueue_4->uxLength
 402:FreeRTOS/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseT_t ) 0U;
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 14


 340              		.loc 1 402 0
 341 003c FB68     		ldr	r3, [r7, #12]	@ tmp129, pxNewQueue
 342 003e 0022     		movs	r2, #0	@ tmp130,
 343 0040 1A64     		str	r2, [r3, #64]	@ tmp130, pxNewQueue_4->uxItemSize
 403:FreeRTOS/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
 344              		.loc 1 403 0
 345 0042 FB68     		ldr	r3, [r7, #12]	@ tmp131, pxNewQueue
 346 0044 4FF0FF32 		mov	r2, #-1	@ tmp132,
 347 0048 5A64     		str	r2, [r3, #68]	@ tmp132, pxNewQueue_4->xRxLock
 404:FreeRTOS/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 348              		.loc 1 404 0
 349 004a FB68     		ldr	r3, [r7, #12]	@ tmp133, pxNewQueue
 350 004c 4FF0FF32 		mov	r2, #-1	@ tmp134,
 351 0050 9A64     		str	r2, [r3, #72]	@ tmp134, pxNewQueue_4->xTxLock
 405:FreeRTOS/queue.c **** 
 406:FreeRTOS/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 407:FreeRTOS/queue.c **** 			{
 408:FreeRTOS/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 352              		.loc 1 408 0
 353 0052 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxNewQueue
 354 0054 FA79     		ldrb	r2, [r7, #7]	@ tmp136, ucQueueType
 355 0056 83F85020 		strb	r2, [r3, #80]	@ tmp136, pxNewQueue_4->ucQueueType
 409:FreeRTOS/queue.c **** 			}
 410:FreeRTOS/queue.c **** 			#endif
 411:FreeRTOS/queue.c **** 
 412:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 413:FreeRTOS/queue.c **** 			{
 414:FreeRTOS/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 415:FreeRTOS/queue.c **** 			}
 416:FreeRTOS/queue.c **** 			#endif
 417:FreeRTOS/queue.c **** 
 418:FreeRTOS/queue.c **** 			/* Ensure the event queues start with the correct state. */
 419:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 356              		.loc 1 419 0
 357 005a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxNewQueue
 358 005c 1033     		adds	r3, r3, #16	@ D.6063, tmp137,
 359 005e 1846     		mov	r0, r3	@, D.6063
 360 0060 FFF7FEFF 		bl	vListInitialise	@
 420:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 361              		.loc 1 420 0
 362 0064 FB68     		ldr	r3, [r7, #12]	@ tmp138, pxNewQueue
 363 0066 2433     		adds	r3, r3, #36	@ D.6063, tmp138,
 364 0068 1846     		mov	r0, r3	@, D.6063
 365 006a FFF7FEFF 		bl	vListInitialise	@
 421:FreeRTOS/queue.c **** 
 422:FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 423:FreeRTOS/queue.c **** 
 424:FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 425:FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickT_t ) 0U, queueSEND_TO_BACK );
 366              		.loc 1 425 0
 367 006e 0023     		movs	r3, #0	@,
 368 0070 0022     		movs	r2, #0	@,
 369 0072 0021     		movs	r1, #0	@,
 370 0074 F868     		ldr	r0, [r7, #12]	@, pxNewQueue
 371 0076 FFF7FEFF 		bl	xQueueGenericSend	@
 372              	.L15:
 426:FreeRTOS/queue.c **** 		}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 15


 427:FreeRTOS/queue.c **** 		else
 428:FreeRTOS/queue.c **** 		{
 429:FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 430:FreeRTOS/queue.c **** 		}
 431:FreeRTOS/queue.c **** 
 432:FreeRTOS/queue.c **** 		configASSERT( pxNewQueue );
 373              		.loc 1 432 0
 374 007a FB68     		ldr	r3, [r7, #12]	@ tmp139, pxNewQueue
 375 007c 002B     		cmp	r3, #0	@ tmp139,
 376 007e 02D1     		bne	.L16	@,
 377              		.loc 1 432 0 is_stmt 0 discriminator 1
 378 0080 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 379              	.L17:
 380 0084 FEE7     		b	.L17	@
 381              	.L16:
 433:FreeRTOS/queue.c **** 		return pxNewQueue;
 382              		.loc 1 433 0 is_stmt 1
 383 0086 FB68     		ldr	r3, [r7, #12]	@ D.6064, pxNewQueue
 434:FreeRTOS/queue.c **** 	}
 384              		.loc 1 434 0
 385 0088 1846     		mov	r0, r3	@, <retval>
 386 008a 1037     		adds	r7, r7, #16	@,,
 387              		.cfi_def_cfa_offset 8
 388 008c BD46     		mov	sp, r7	@,
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed	@
 391 008e 80BD     		pop	{r7, pc}	@
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 395              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 396              		.align	2
 397              		.global	xQueueGiveMutexRecursive
 398              		.thumb
 399              		.thumb_func
 400              		.type	xQueueGiveMutexRecursive, %function
 401              	xQueueGiveMutexRecursive:
 402              	.LFB4:
 435:FreeRTOS/queue.c **** 
 436:FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 437:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 438:FreeRTOS/queue.c **** 
 439:FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 440:FreeRTOS/queue.c **** 
 441:FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 442:FreeRTOS/queue.c **** 	{
 443:FreeRTOS/queue.c **** 	void *pxReturn;
 444:FreeRTOS/queue.c **** 
 445:FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 446:FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 447:FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 448:FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 449:FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 450:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 451:FreeRTOS/queue.c **** 		{
 452:FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 453:FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 16


 454:FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 455:FreeRTOS/queue.c **** 			}
 456:FreeRTOS/queue.c **** 			else
 457:FreeRTOS/queue.c **** 			{
 458:FreeRTOS/queue.c **** 				pxReturn = NULL;
 459:FreeRTOS/queue.c **** 			}
 460:FreeRTOS/queue.c **** 		}
 461:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 462:FreeRTOS/queue.c **** 
 463:FreeRTOS/queue.c **** 		return pxReturn;
 464:FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 465:FreeRTOS/queue.c **** 
 466:FreeRTOS/queue.c **** #endif
 467:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 468:FreeRTOS/queue.c **** 
 469:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 470:FreeRTOS/queue.c **** 
 471:FreeRTOS/queue.c **** 	BaseT_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 472:FreeRTOS/queue.c **** 	{
 403              		.loc 1 472 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 16
 406              		@ frame_needed = 1, uses_anonymous_args = 0
 407 0000 90B5     		push	{r4, r7, lr}	@
 408              		.cfi_def_cfa_offset 12
 409              		.cfi_offset 4, -12
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 85B0     		sub	sp, sp, #20	@,,
 413              		.cfi_def_cfa_offset 32
 414 0004 00AF     		add	r7, sp, #0	@,,
 415              		.cfi_def_cfa_register 7
 416 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 473:FreeRTOS/queue.c **** 	BaseT_t xReturn;
 474:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 417              		.loc 1 474 0
 418 0008 7B68     		ldr	r3, [r7, #4]	@ tmp117, xMutex
 419 000a BB60     		str	r3, [r7, #8]	@ tmp117, pxMutex
 475:FreeRTOS/queue.c **** 
 476:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 420              		.loc 1 476 0
 421 000c BB68     		ldr	r3, [r7, #8]	@ tmp118, pxMutex
 422 000e 002B     		cmp	r3, #0	@ tmp118,
 423 0010 02D1     		bne	.L20	@,
 424              		.loc 1 476 0 is_stmt 0 discriminator 1
 425 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 426              	.L21:
 427 0016 FEE7     		b	.L21	@
 428              	.L20:
 477:FreeRTOS/queue.c **** 
 478:FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 479:FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 480:FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 481:FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 482:FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 483:FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 484:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 17


 429              		.loc 1 484 0 is_stmt 1
 430 0018 BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 431 001a 5C68     		ldr	r4, [r3, #4]	@ D.6065, pxMutex_5->pcTail
 432 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
 433 0020 0346     		mov	r3, r0	@ D.6066,
 434 0022 9C42     		cmp	r4, r3	@ D.6065, D.6066
 435 0024 11D1     		bne	.L22	@,
 485:FreeRTOS/queue.c **** 		{
 486:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 487:FreeRTOS/queue.c **** 
 488:FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 489:FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 490:FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 491:FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 492:FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 493:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 436              		.loc 1 493 0
 437 0026 BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 438 0028 DB68     		ldr	r3, [r3, #12]	@ D.6067, pxMutex_5->u.uxRecursiveCallCount
 439 002a 5A1E     		subs	r2, r3, #1	@ D.6067, D.6067,
 440 002c BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 441 002e DA60     		str	r2, [r3, #12]	@ D.6067, pxMutex_5->u.uxRecursiveCallCount
 494:FreeRTOS/queue.c **** 
 495:FreeRTOS/queue.c **** 			/* Have we unwound the call count? */
 496:FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseT_t ) 0 )
 442              		.loc 1 496 0
 443 0030 BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 444 0032 DB68     		ldr	r3, [r3, #12]	@ D.6067, pxMutex_5->u.uxRecursiveCallCount
 445 0034 002B     		cmp	r3, #0	@ D.6067,
 446 0036 05D1     		bne	.L23	@,
 497:FreeRTOS/queue.c **** 			{
 498:FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 499:FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 500:FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 447              		.loc 1 500 0
 448 0038 0023     		movs	r3, #0	@,
 449 003a 0022     		movs	r2, #0	@,
 450 003c 0021     		movs	r1, #0	@,
 451 003e B868     		ldr	r0, [r7, #8]	@, pxMutex
 452 0040 FFF7FEFF 		bl	xQueueGenericSend	@
 453              	.L23:
 501:FreeRTOS/queue.c **** 			}
 502:FreeRTOS/queue.c **** 			else
 503:FreeRTOS/queue.c **** 			{
 504:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 505:FreeRTOS/queue.c **** 			}
 506:FreeRTOS/queue.c **** 
 507:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 454              		.loc 1 507 0
 455 0044 0123     		movs	r3, #1	@ tmp123,
 456 0046 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 457 0048 01E0     		b	.L24	@
 458              	.L22:
 508:FreeRTOS/queue.c **** 		}
 509:FreeRTOS/queue.c **** 		else
 510:FreeRTOS/queue.c **** 		{
 511:FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 18


 512:FreeRTOS/queue.c **** 			holder. */
 513:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 459              		.loc 1 513 0
 460 004a 0023     		movs	r3, #0	@ tmp124,
 461 004c FB60     		str	r3, [r7, #12]	@ tmp124, xReturn
 462              	.L24:
 514:FreeRTOS/queue.c **** 
 515:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 516:FreeRTOS/queue.c **** 		}
 517:FreeRTOS/queue.c **** 
 518:FreeRTOS/queue.c **** 		return xReturn;
 463              		.loc 1 518 0
 464 004e FB68     		ldr	r3, [r7, #12]	@ D.6068, xReturn
 519:FreeRTOS/queue.c **** 	}
 465              		.loc 1 519 0
 466 0050 1846     		mov	r0, r3	@, <retval>
 467 0052 1437     		adds	r7, r7, #20	@,,
 468              		.cfi_def_cfa_offset 12
 469 0054 BD46     		mov	sp, r7	@,
 470              		.cfi_def_cfa_register 13
 471              		@ sp needed	@
 472 0056 90BD     		pop	{r4, r7, pc}	@
 473              		.cfi_endproc
 474              	.LFE4:
 475              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 476              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 477              		.align	2
 478              		.global	xQueueTakeMutexRecursive
 479              		.thumb
 480              		.thumb_func
 481              		.type	xQueueTakeMutexRecursive, %function
 482              	xQueueTakeMutexRecursive:
 483              	.LFB5:
 520:FreeRTOS/queue.c **** 
 521:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 522:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 523:FreeRTOS/queue.c **** 
 524:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 525:FreeRTOS/queue.c **** 
 526:FreeRTOS/queue.c **** 	BaseT_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickT_t xTicksToWait )
 527:FreeRTOS/queue.c **** 	{
 484              		.loc 1 527 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 16
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 90B5     		push	{r4, r7, lr}	@
 489              		.cfi_def_cfa_offset 12
 490              		.cfi_offset 4, -12
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 85B0     		sub	sp, sp, #20	@,,
 494              		.cfi_def_cfa_offset 32
 495 0004 00AF     		add	r7, sp, #0	@,,
 496              		.cfi_def_cfa_register 7
 497 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 498 0008 3960     		str	r1, [r7]	@ xTicksToWait, xTicksToWait
 528:FreeRTOS/queue.c **** 	BaseT_t xReturn;
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 19


 529:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 499              		.loc 1 529 0
 500 000a 7B68     		ldr	r3, [r7, #4]	@ tmp118, xMutex
 501 000c BB60     		str	r3, [r7, #8]	@ tmp118, pxMutex
 530:FreeRTOS/queue.c **** 
 531:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 502              		.loc 1 531 0
 503 000e BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 504 0010 002B     		cmp	r3, #0	@ tmp119,
 505 0012 02D1     		bne	.L27	@,
 506              		.loc 1 531 0 is_stmt 0 discriminator 1
 507 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 508              	.L28:
 509 0018 FEE7     		b	.L28	@
 510              	.L27:
 532:FreeRTOS/queue.c **** 
 533:FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 534:FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 535:FreeRTOS/queue.c **** 
 536:FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 537:FreeRTOS/queue.c **** 
 538:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 511              		.loc 1 538 0 is_stmt 1
 512 001a BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 513 001c 5C68     		ldr	r4, [r3, #4]	@ D.6069, pxMutex_4->pcTail
 514 001e FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
 515 0022 0346     		mov	r3, r0	@ D.6070,
 516 0024 9C42     		cmp	r4, r3	@ D.6069, D.6070
 517 0026 07D1     		bne	.L29	@,
 539:FreeRTOS/queue.c **** 		{
 540:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 518              		.loc 1 540 0
 519 0028 BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 520 002a DB68     		ldr	r3, [r3, #12]	@ D.6071, pxMutex_4->u.uxRecursiveCallCount
 521 002c 5A1C     		adds	r2, r3, #1	@ D.6071, D.6071,
 522 002e BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 523 0030 DA60     		str	r2, [r3, #12]	@ D.6071, pxMutex_4->u.uxRecursiveCallCount
 541:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 524              		.loc 1 541 0
 525 0032 0123     		movs	r3, #1	@ tmp123,
 526 0034 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 527 0036 0EE0     		b	.L30	@
 528              	.L29:
 542:FreeRTOS/queue.c **** 		}
 543:FreeRTOS/queue.c **** 		else
 544:FreeRTOS/queue.c **** 		{
 545:FreeRTOS/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 529              		.loc 1 545 0
 530 0038 0023     		movs	r3, #0	@,
 531 003a 3A68     		ldr	r2, [r7]	@, xTicksToWait
 532 003c 0021     		movs	r1, #0	@,
 533 003e B868     		ldr	r0, [r7, #8]	@, pxMutex
 534 0040 FFF7FEFF 		bl	xQueueGenericReceive	@
 535 0044 F860     		str	r0, [r7, #12]	@, xReturn
 546:FreeRTOS/queue.c **** 
 547:FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 548:FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 20


 549:FreeRTOS/queue.c **** 			before reaching here. */
 550:FreeRTOS/queue.c **** 			if( xReturn == pdPASS )
 536              		.loc 1 550 0
 537 0046 FB68     		ldr	r3, [r7, #12]	@ tmp124, xReturn
 538 0048 012B     		cmp	r3, #1	@ tmp124,
 539 004a 04D1     		bne	.L30	@,
 551:FreeRTOS/queue.c **** 			{
 552:FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 540              		.loc 1 552 0
 541 004c BB68     		ldr	r3, [r7, #8]	@ tmp125, pxMutex
 542 004e DB68     		ldr	r3, [r3, #12]	@ D.6071, pxMutex_4->u.uxRecursiveCallCount
 543 0050 5A1C     		adds	r2, r3, #1	@ D.6071, D.6071,
 544 0052 BB68     		ldr	r3, [r7, #8]	@ tmp126, pxMutex
 545 0054 DA60     		str	r2, [r3, #12]	@ D.6071, pxMutex_4->u.uxRecursiveCallCount
 546              	.L30:
 553:FreeRTOS/queue.c **** 			}
 554:FreeRTOS/queue.c **** 			else
 555:FreeRTOS/queue.c **** 			{
 556:FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 557:FreeRTOS/queue.c **** 			}
 558:FreeRTOS/queue.c **** 		}
 559:FreeRTOS/queue.c **** 
 560:FreeRTOS/queue.c **** 		return xReturn;
 547              		.loc 1 560 0
 548 0056 FB68     		ldr	r3, [r7, #12]	@ D.6072, xReturn
 561:FreeRTOS/queue.c **** 	}
 549              		.loc 1 561 0
 550 0058 1846     		mov	r0, r3	@, <retval>
 551 005a 1437     		adds	r7, r7, #20	@,,
 552              		.cfi_def_cfa_offset 12
 553 005c BD46     		mov	sp, r7	@,
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed	@
 556 005e 90BD     		pop	{r4, r7, pc}	@
 557              		.cfi_endproc
 558              	.LFE5:
 559              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 560              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 561              		.align	2
 562              		.global	xQueueCreateCountingSemaphore
 563              		.thumb
 564              		.thumb_func
 565              		.type	xQueueCreateCountingSemaphore, %function
 566              	xQueueCreateCountingSemaphore:
 567              	.LFB6:
 562:FreeRTOS/queue.c **** 
 563:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 564:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 565:FreeRTOS/queue.c **** 
 566:FreeRTOS/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 567:FreeRTOS/queue.c **** 
 568:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseT_t uxMaxCount, const UBaseT_t uxInitialCo
 569:FreeRTOS/queue.c **** 	{
 568              		.loc 1 569 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 16
 571              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 21


 572 0000 80B5     		push	{r7, lr}	@
 573              		.cfi_def_cfa_offset 8
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 84B0     		sub	sp, sp, #16	@,,
 577              		.cfi_def_cfa_offset 24
 578 0004 00AF     		add	r7, sp, #0	@,,
 579              		.cfi_def_cfa_register 7
 580 0006 7860     		str	r0, [r7, #4]	@ uxMaxCount, uxMaxCount
 581 0008 3960     		str	r1, [r7]	@ uxInitialCount, uxInitialCount
 570:FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 571:FreeRTOS/queue.c **** 
 572:FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 582              		.loc 1 572 0
 583 000a 7B68     		ldr	r3, [r7, #4]	@ tmp112, uxMaxCount
 584 000c 002B     		cmp	r3, #0	@ tmp112,
 585 000e 02D1     		bne	.L33	@,
 586              		.loc 1 572 0 is_stmt 0 discriminator 1
 587 0010 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 588              	.L34:
 589 0014 FEE7     		b	.L34	@
 590              	.L33:
 573:FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 591              		.loc 1 573 0 is_stmt 1
 592 0016 3A68     		ldr	r2, [r7]	@ tmp113, uxInitialCount
 593 0018 7B68     		ldr	r3, [r7, #4]	@ tmp114, uxMaxCount
 594 001a 9A42     		cmp	r2, r3	@ tmp113, tmp114
 595 001c 02D9     		bls	.L35	@,
 596              		.loc 1 573 0 is_stmt 0 discriminator 1
 597 001e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 598              	.L36:
 599              		.loc 1 573 0 discriminator 2
 600 0022 FEE7     		b	.L36	@
 601              	.L35:
 574:FreeRTOS/queue.c **** 
 575:FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 602              		.loc 1 575 0 is_stmt 1
 603 0024 0222     		movs	r2, #2	@,
 604 0026 0021     		movs	r1, #0	@,
 605 0028 7868     		ldr	r0, [r7, #4]	@, uxMaxCount
 606 002a FFF7FEFF 		bl	xQueueGenericCreate	@
 607 002e F860     		str	r0, [r7, #12]	@, xHandle
 576:FreeRTOS/queue.c **** 
 577:FreeRTOS/queue.c **** 		if( xHandle != NULL )
 608              		.loc 1 577 0
 609 0030 FB68     		ldr	r3, [r7, #12]	@ tmp115, xHandle
 610 0032 002B     		cmp	r3, #0	@ tmp115,
 611 0034 02D0     		beq	.L37	@,
 578:FreeRTOS/queue.c **** 		{
 579:FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 612              		.loc 1 579 0
 613 0036 FB68     		ldr	r3, [r7, #12]	@ tmp116, xHandle
 614 0038 3A68     		ldr	r2, [r7]	@ tmp117, uxInitialCount
 615 003a 9A63     		str	r2, [r3, #56]	@ tmp117, MEM[(struct Queue_t *)xHandle_6].uxMessagesWaiting
 616              	.L37:
 580:FreeRTOS/queue.c **** 
 581:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 22


 582:FreeRTOS/queue.c **** 		}
 583:FreeRTOS/queue.c **** 		else
 584:FreeRTOS/queue.c **** 		{
 585:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 586:FreeRTOS/queue.c **** 		}
 587:FreeRTOS/queue.c **** 
 588:FreeRTOS/queue.c **** 		configASSERT( xHandle );
 617              		.loc 1 588 0
 618 003c FB68     		ldr	r3, [r7, #12]	@ tmp118, xHandle
 619 003e 002B     		cmp	r3, #0	@ tmp118,
 620 0040 02D1     		bne	.L38	@,
 621              		.loc 1 588 0 is_stmt 0 discriminator 1
 622 0042 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 623              	.L39:
 624              		.loc 1 588 0 discriminator 3
 625 0046 FEE7     		b	.L39	@
 626              	.L38:
 589:FreeRTOS/queue.c **** 		return xHandle;
 627              		.loc 1 589 0 is_stmt 1
 628 0048 FB68     		ldr	r3, [r7, #12]	@ D.6073, xHandle
 590:FreeRTOS/queue.c **** 	}
 629              		.loc 1 590 0
 630 004a 1846     		mov	r0, r3	@, <retval>
 631 004c 1037     		adds	r7, r7, #16	@,,
 632              		.cfi_def_cfa_offset 8
 633 004e BD46     		mov	sp, r7	@,
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed	@
 636 0050 80BD     		pop	{r7, pc}	@
 637              		.cfi_endproc
 638              	.LFE6:
 639              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 640 0052 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 641              		.align	2
 642              		.global	xQueueGenericSend
 643              		.thumb
 644              		.thumb_func
 645              		.type	xQueueGenericSend, %function
 646              	xQueueGenericSend:
 647              	.LFB7:
 591:FreeRTOS/queue.c **** 
 592:FreeRTOS/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 593:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 594:FreeRTOS/queue.c **** 
 595:FreeRTOS/queue.c **** BaseT_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTicksTo
 596:FreeRTOS/queue.c **** {
 648              		.loc 1 596 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 40
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 80B5     		push	{r7, lr}	@
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 8AB0     		sub	sp, sp, #40	@,,
 657              		.cfi_def_cfa_offset 48
 658 0004 00AF     		add	r7, sp, #0	@,,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 23


 659              		.cfi_def_cfa_register 7
 660 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 661 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 662 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
 663 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
 597:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE, xYieldRequired;
 664              		.loc 1 597 0
 665 000e 0023     		movs	r3, #0	@ tmp129,
 666 0010 7B62     		str	r3, [r7, #36]	@ tmp129, xEntryTimeSet
 598:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 599:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 667              		.loc 1 599 0
 668 0012 FB68     		ldr	r3, [r7, #12]	@ tmp130, xQueue
 669 0014 3B62     		str	r3, [r7, #32]	@ tmp130, pxQueue
 600:FreeRTOS/queue.c **** 
 601:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 670              		.loc 1 601 0
 671 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp131, pxQueue
 672 0018 002B     		cmp	r3, #0	@ tmp131,
 673 001a 02D1     		bne	.L42	@,
 674              		.loc 1 601 0 is_stmt 0 discriminator 1
 675 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 676              	.L43:
 677 0020 FEE7     		b	.L43	@
 678              	.L42:
 602:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 679              		.loc 1 602 0 is_stmt 1
 680 0022 BB68     		ldr	r3, [r7, #8]	@ tmp132, pvItemToQueue
 681 0024 002B     		cmp	r3, #0	@ tmp132,
 682 0026 03D1     		bne	.L44	@,
 683              		.loc 1 602 0 is_stmt 0 discriminator 2
 684 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp133, pxQueue
 685 002a 1B6C     		ldr	r3, [r3, #64]	@ D.6076, pxQueue_16->uxItemSize
 686 002c 002B     		cmp	r3, #0	@ D.6076,
 687 002e 01D1     		bne	.L45	@,
 688              	.L44:
 689              		.loc 1 602 0 discriminator 3
 690 0030 0123     		movs	r3, #1	@ D.6074,
 691 0032 00E0     		b	.L46	@
 692              	.L45:
 693              		.loc 1 602 0 discriminator 4
 694 0034 0023     		movs	r3, #0	@ D.6074,
 695              	.L46:
 696              		.loc 1 602 0 discriminator 6
 697 0036 002B     		cmp	r3, #0	@ D.6074,
 698 0038 02D1     		bne	.L47	@,
 699              		.loc 1 602 0 discriminator 7
 700 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
 701              	.L48:
 702              		.loc 1 602 0 discriminator 2
 703 003e FEE7     		b	.L48	@
 704              	.L47:
 603:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 705              		.loc 1 603 0 is_stmt 1
 706 0040 3B68     		ldr	r3, [r7]	@ tmp134, xCopyPosition
 707 0042 022B     		cmp	r3, #2	@ tmp134,
 708 0044 03D1     		bne	.L49	@,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 24


 709              		.loc 1 603 0 is_stmt 0 discriminator 2
 710 0046 3B6A     		ldr	r3, [r7, #32]	@ tmp135, pxQueue
 711 0048 DB6B     		ldr	r3, [r3, #60]	@ D.6076, pxQueue_16->uxLength
 712 004a 012B     		cmp	r3, #1	@ D.6076,
 713 004c 01D1     		bne	.L50	@,
 714              	.L49:
 715              		.loc 1 603 0 discriminator 3
 716 004e 0123     		movs	r3, #1	@ D.6074,
 717 0050 00E0     		b	.L51	@
 718              	.L50:
 719              		.loc 1 603 0 discriminator 4
 720 0052 0023     		movs	r3, #0	@ D.6074,
 721              	.L51:
 722              		.loc 1 603 0 discriminator 6
 723 0054 002B     		cmp	r3, #0	@ D.6074,
 724 0056 02D1     		bne	.L52	@,
 725              		.loc 1 603 0 discriminator 7
 726 0058 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 727              	.L53:
 728              		.loc 1 603 0 discriminator 3
 729 005c FEE7     		b	.L53	@
 730              	.L52:
 604:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 605:FreeRTOS/queue.c **** 	{
 606:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 607:FreeRTOS/queue.c **** 	}
 608:FreeRTOS/queue.c **** 	#endif
 609:FreeRTOS/queue.c **** 
 610:FreeRTOS/queue.c **** 
 611:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 612:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 613:FreeRTOS/queue.c **** 	of execution time efficiency. */
 614:FreeRTOS/queue.c **** 	for( ;; )
 615:FreeRTOS/queue.c **** 	{
 616:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 731              		.loc 1 616 0 is_stmt 1
 732 005e FFF7FEFF 		bl	vPortEnterCritical	@
 617:FreeRTOS/queue.c **** 		{
 618:FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be
 619:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue.  If
 620:FreeRTOS/queue.c **** 			the head item in the queue is to be overwritten then it does
 621:FreeRTOS/queue.c **** 			not matter if the queue is full. */
 622:FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 733              		.loc 1 622 0
 734 0062 3B6A     		ldr	r3, [r7, #32]	@ tmp136, pxQueue
 735 0064 9A6B     		ldr	r2, [r3, #56]	@ D.6076, pxQueue_16->uxMessagesWaiting
 736 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 737 0068 DB6B     		ldr	r3, [r3, #60]	@ D.6076, pxQueue_16->uxLength
 738 006a 9A42     		cmp	r2, r3	@ D.6076, D.6076
 739 006c 02D3     		bcc	.L54	@,
 740              		.loc 1 622 0 is_stmt 0 discriminator 1
 741 006e 3B68     		ldr	r3, [r7]	@ tmp138, xCopyPosition
 742 0070 022B     		cmp	r3, #2	@ tmp138,
 743 0072 1DD1     		bne	.L55	@,
 744              	.L54:
 623:FreeRTOS/queue.c **** 			{
 624:FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 25


 625:FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 745              		.loc 1 625 0 is_stmt 1
 746 0074 3A68     		ldr	r2, [r7]	@, xCopyPosition
 747 0076 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 748 0078 386A     		ldr	r0, [r7, #32]	@, pxQueue
 749 007a FFF7FEFF 		bl	prvCopyDataToQueue	@
 750 007e F861     		str	r0, [r7, #28]	@, xYieldRequired
 626:FreeRTOS/queue.c **** 
 627:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 628:FreeRTOS/queue.c **** 				{
 629:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 630:FreeRTOS/queue.c **** 					{
 631:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 632:FreeRTOS/queue.c **** 						{
 633:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 634:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 635:FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 636:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 637:FreeRTOS/queue.c **** 						}
 638:FreeRTOS/queue.c **** 						else
 639:FreeRTOS/queue.c **** 						{
 640:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 641:FreeRTOS/queue.c **** 						}
 642:FreeRTOS/queue.c **** 					}
 643:FreeRTOS/queue.c **** 					else
 644:FreeRTOS/queue.c **** 					{
 645:FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 646:FreeRTOS/queue.c **** 						queue then unblock it now. */
 647:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 648:FreeRTOS/queue.c **** 						{
 649:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 650:FreeRTOS/queue.c **** 							{
 651:FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 652:FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 653:FreeRTOS/queue.c **** 								do this from within the critical section - the
 654:FreeRTOS/queue.c **** 								kernel takes care of that. */
 655:FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 656:FreeRTOS/queue.c **** 							}
 657:FreeRTOS/queue.c **** 							else
 658:FreeRTOS/queue.c **** 							{
 659:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 660:FreeRTOS/queue.c **** 							}
 661:FreeRTOS/queue.c **** 						}
 662:FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 663:FreeRTOS/queue.c **** 						{
 664:FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 665:FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 666:FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 667:FreeRTOS/queue.c **** 							different to that in which they were taken. */
 668:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 669:FreeRTOS/queue.c **** 						}
 670:FreeRTOS/queue.c **** 						else
 671:FreeRTOS/queue.c **** 						{
 672:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 673:FreeRTOS/queue.c **** 						}
 674:FreeRTOS/queue.c **** 					}
 675:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 26


 676:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 677:FreeRTOS/queue.c **** 				{
 678:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 679:FreeRTOS/queue.c **** 					queue then unblock it now. */
 680:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 751              		.loc 1 680 0
 752 0080 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 753 0082 5B6A     		ldr	r3, [r3, #36]	@ D.6076, pxQueue_16->xTasksWaitingToReceive.uxNumberOfItems
 754 0084 002B     		cmp	r3, #0	@ D.6076,
 755 0086 0AD0     		beq	.L56	@,
 681:FreeRTOS/queue.c **** 					{
 682:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 756              		.loc 1 682 0
 757 0088 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 758 008a 2433     		adds	r3, r3, #36	@ D.6078, tmp140,
 759 008c 1846     		mov	r0, r3	@, D.6078
 760 008e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 761 0092 0346     		mov	r3, r0	@ D.6077,
 762 0094 012B     		cmp	r3, #1	@ D.6077,
 763 0096 07D1     		bne	.L57	@,
 683:FreeRTOS/queue.c **** 						{
 684:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 685:FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 686:FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 687:FreeRTOS/queue.c **** 							takes care of that. */
 688:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 764              		.loc 1 688 0
 765 0098 FFF7FEFF 		bl	vPortYield	@
 766 009c 04E0     		b	.L57	@
 767              	.L56:
 689:FreeRTOS/queue.c **** 						}
 690:FreeRTOS/queue.c **** 						else
 691:FreeRTOS/queue.c **** 						{
 692:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 693:FreeRTOS/queue.c **** 						}
 694:FreeRTOS/queue.c **** 					}
 695:FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 768              		.loc 1 695 0
 769 009e FB69     		ldr	r3, [r7, #28]	@ tmp141, xYieldRequired
 770 00a0 002B     		cmp	r3, #0	@ tmp141,
 771 00a2 01D0     		beq	.L57	@,
 696:FreeRTOS/queue.c **** 					{
 697:FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 698:FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
 699:FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 700:FreeRTOS/queue.c **** 						different to that in which they were taken. */
 701:FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 772              		.loc 1 701 0
 773 00a4 FFF7FEFF 		bl	vPortYield	@
 774              	.L57:
 702:FreeRTOS/queue.c **** 					}
 703:FreeRTOS/queue.c **** 					else
 704:FreeRTOS/queue.c **** 					{
 705:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 706:FreeRTOS/queue.c **** 					}
 707:FreeRTOS/queue.c **** 				}
 708:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 27


 709:FreeRTOS/queue.c **** 
 710:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 775              		.loc 1 710 0
 776 00a8 FFF7FEFF 		bl	vPortExitCritical	@
 711:FreeRTOS/queue.c **** 				return pdPASS;
 777              		.loc 1 711 0
 778 00ac 0123     		movs	r3, #1	@ D.6075,
 779 00ae 56E0     		b	.L68	@
 780              	.L55:
 712:FreeRTOS/queue.c **** 			}
 713:FreeRTOS/queue.c **** 			else
 714:FreeRTOS/queue.c **** 			{
 715:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 781              		.loc 1 715 0
 782 00b0 7B68     		ldr	r3, [r7, #4]	@ D.6076, xTicksToWait
 783 00b2 002B     		cmp	r3, #0	@ D.6076,
 784 00b4 03D1     		bne	.L59	@,
 716:FreeRTOS/queue.c **** 				{
 717:FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 718:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 719:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 785              		.loc 1 719 0
 786 00b6 FFF7FEFF 		bl	vPortExitCritical	@
 720:FreeRTOS/queue.c **** 
 721:FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 722:FreeRTOS/queue.c **** 					the function. */
 723:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 724:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 787              		.loc 1 724 0
 788 00ba 0023     		movs	r3, #0	@ D.6075,
 789 00bc 4FE0     		b	.L68	@
 790              	.L59:
 725:FreeRTOS/queue.c **** 				}
 726:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 791              		.loc 1 726 0
 792 00be 7B6A     		ldr	r3, [r7, #36]	@ tmp142, xEntryTimeSet
 793 00c0 002B     		cmp	r3, #0	@ tmp142,
 794 00c2 06D1     		bne	.L60	@,
 727:FreeRTOS/queue.c **** 				{
 728:FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 729:FreeRTOS/queue.c **** 					configure the timeout structure. */
 730:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 795              		.loc 1 730 0
 796 00c4 07F11403 		add	r3, r7, #20	@ tmp143,,
 797 00c8 1846     		mov	r0, r3	@, tmp143
 798 00ca FFF7FEFF 		bl	vTaskSetTimeOutState	@
 731:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 799              		.loc 1 731 0
 800 00ce 0123     		movs	r3, #1	@ tmp144,
 801 00d0 7B62     		str	r3, [r7, #36]	@ tmp144, xEntryTimeSet
 802              	.L60:
 732:FreeRTOS/queue.c **** 				}
 733:FreeRTOS/queue.c **** 				else
 734:FreeRTOS/queue.c **** 				{
 735:FreeRTOS/queue.c **** 					/* Entry time was already set. */
 736:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 737:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 28


 738:FreeRTOS/queue.c **** 			}
 739:FreeRTOS/queue.c **** 		}
 740:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 803              		.loc 1 740 0
 804 00d2 FFF7FEFF 		bl	vPortExitCritical	@
 741:FreeRTOS/queue.c **** 
 742:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 743:FreeRTOS/queue.c **** 		now the critical section has been exited. */
 744:FreeRTOS/queue.c **** 
 745:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 805              		.loc 1 745 0
 806 00d6 FFF7FEFF 		bl	vTaskSuspendAll	@
 746:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 807              		.loc 1 746 0
 808 00da FFF7FEFF 		bl	vPortEnterCritical	@
 809 00de 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
 810 00e0 5B6C     		ldr	r3, [r3, #68]	@ D.6077, pxQueue_16->xRxLock
 811 00e2 B3F1FF3F 		cmp	r3, #-1	@ D.6077,
 812 00e6 02D1     		bne	.L61	@,
 813              		.loc 1 746 0 is_stmt 0 discriminator 1
 814 00e8 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 815 00ea 0022     		movs	r2, #0	@ tmp147,
 816 00ec 5A64     		str	r2, [r3, #68]	@ tmp147, pxQueue_16->xRxLock
 817              	.L61:
 818              		.loc 1 746 0 discriminator 3
 819 00ee 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 820 00f0 9B6C     		ldr	r3, [r3, #72]	@ D.6077, pxQueue_16->xTxLock
 821 00f2 B3F1FF3F 		cmp	r3, #-1	@ D.6077,
 822 00f6 02D1     		bne	.L62	@,
 823              		.loc 1 746 0 discriminator 4
 824 00f8 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 825 00fa 0022     		movs	r2, #0	@ tmp150,
 826 00fc 9A64     		str	r2, [r3, #72]	@ tmp150, pxQueue_16->xTxLock
 827              	.L62:
 828              		.loc 1 746 0 discriminator 6
 829 00fe FFF7FEFF 		bl	vPortExitCritical	@
 747:FreeRTOS/queue.c **** 
 748:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 749:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 830              		.loc 1 749 0 is_stmt 1 discriminator 6
 831 0102 3A1D     		adds	r2, r7, #4	@ tmp151,,
 832 0104 07F11403 		add	r3, r7, #20	@ tmp152,,
 833 0108 1146     		mov	r1, r2	@, tmp151
 834 010a 1846     		mov	r0, r3	@, tmp152
 835 010c FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 836 0110 0346     		mov	r3, r0	@ D.6077,
 837 0112 002B     		cmp	r3, #0	@ D.6077,
 838 0114 1DD1     		bne	.L63	@,
 750:FreeRTOS/queue.c **** 		{
 751:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 839              		.loc 1 751 0
 840 0116 386A     		ldr	r0, [r7, #32]	@, pxQueue
 841 0118 FFF7FEFF 		bl	prvIsQueueFull	@
 842 011c 0346     		mov	r3, r0	@ D.6077,
 843 011e 002B     		cmp	r3, #0	@ D.6077,
 844 0120 11D0     		beq	.L64	@,
 752:FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 29


 753:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 754:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 845              		.loc 1 754 0
 846 0122 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
 847 0124 1033     		adds	r3, r3, #16	@ D.6078, tmp153,
 848 0126 7A68     		ldr	r2, [r7, #4]	@ D.6076, xTicksToWait
 849 0128 1146     		mov	r1, r2	@, D.6076
 850 012a 1846     		mov	r0, r3	@, D.6078
 851 012c FFF7FEFF 		bl	vTaskPlaceOnEventList	@
 755:FreeRTOS/queue.c **** 
 756:FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 757:FreeRTOS/queue.c **** 				event list.  It is possible	that interrupts occurring now
 758:FreeRTOS/queue.c **** 				remove this task from the event	list again - but as the
 759:FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 760:FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 761:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 852              		.loc 1 761 0
 853 0130 386A     		ldr	r0, [r7, #32]	@, pxQueue
 854 0132 FFF7FEFF 		bl	prvUnlockQueue	@
 762:FreeRTOS/queue.c **** 
 763:FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 764:FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 765:FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 766:FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 767:FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 768:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 855              		.loc 1 768 0
 856 0136 FFF7FEFF 		bl	xTaskResumeAll	@
 857 013a 0346     		mov	r3, r0	@ D.6077,
 858 013c 002B     		cmp	r3, #0	@ D.6077,
 859 013e 8ED1     		bne	.L52	@,
 769:FreeRTOS/queue.c **** 				{
 770:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 860              		.loc 1 770 0
 861 0140 FFF7FEFF 		bl	vPortYield	@
 862 0144 8BE7     		b	.L52	@
 863              	.L64:
 771:FreeRTOS/queue.c **** 				}
 772:FreeRTOS/queue.c **** 			}
 773:FreeRTOS/queue.c **** 			else
 774:FreeRTOS/queue.c **** 			{
 775:FreeRTOS/queue.c **** 				/* Try again. */
 776:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 864              		.loc 1 776 0
 865 0146 386A     		ldr	r0, [r7, #32]	@, pxQueue
 866 0148 FFF7FEFF 		bl	prvUnlockQueue	@
 777:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 867              		.loc 1 777 0
 868 014c FFF7FEFF 		bl	xTaskResumeAll	@
 869 0150 85E7     		b	.L52	@
 870              	.L63:
 778:FreeRTOS/queue.c **** 			}
 779:FreeRTOS/queue.c **** 		}
 780:FreeRTOS/queue.c **** 		else
 781:FreeRTOS/queue.c **** 		{
 782:FreeRTOS/queue.c **** 			/* The timeout has expired. */
 783:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 30


 871              		.loc 1 783 0
 872 0152 386A     		ldr	r0, [r7, #32]	@, pxQueue
 873 0154 FFF7FEFF 		bl	prvUnlockQueue	@
 784:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 874              		.loc 1 784 0
 875 0158 FFF7FEFF 		bl	xTaskResumeAll	@
 785:FreeRTOS/queue.c **** 
 786:FreeRTOS/queue.c **** 			/* Return to the original privilege level before exiting the
 787:FreeRTOS/queue.c **** 			function. */
 788:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 789:FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 876              		.loc 1 789 0
 877 015c 0023     		movs	r3, #0	@ D.6075,
 878              	.L68:
 790:FreeRTOS/queue.c **** 		}
 791:FreeRTOS/queue.c **** 	}
 792:FreeRTOS/queue.c **** }
 879              		.loc 1 792 0 discriminator 6
 880 015e 1846     		mov	r0, r3	@, <retval>
 881 0160 2837     		adds	r7, r7, #40	@,,
 882              		.cfi_def_cfa_offset 8
 883 0162 BD46     		mov	sp, r7	@,
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed	@
 886 0164 80BD     		pop	{r7, pc}	@
 887              		.cfi_endproc
 888              	.LFE7:
 889              		.size	xQueueGenericSend, .-xQueueGenericSend
 890 0166 00BF     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 891              		.align	2
 892              		.global	xQueueGenericSendFromISR
 893              		.thumb
 894              		.thumb_func
 895              		.type	xQueueGenericSendFromISR, %function
 896              	xQueueGenericSendFromISR:
 897              	.LFB8:
 793:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 794:FreeRTOS/queue.c **** 
 795:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 796:FreeRTOS/queue.c **** 
 797:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTic
 798:FreeRTOS/queue.c **** 	{
 799:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 800:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 801:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 802:FreeRTOS/queue.c **** 
 803:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 804:FreeRTOS/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 805:FreeRTOS/queue.c **** 
 806:FreeRTOS/queue.c **** 		for( ;; )
 807:FreeRTOS/queue.c **** 		{
 808:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 809:FreeRTOS/queue.c **** 			{
 810:FreeRTOS/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 811:FreeRTOS/queue.c **** 				the highest priority task wanting to access the queue. */
 812:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 813:FreeRTOS/queue.c **** 				{
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 31


 814:FreeRTOS/queue.c **** 					traceQUEUE_SEND( pxQueue );
 815:FreeRTOS/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 816:FreeRTOS/queue.c **** 
 817:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 818:FreeRTOS/queue.c **** 					queue then unblock it now. */
 819:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 820:FreeRTOS/queue.c **** 					{
 821:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 822:FreeRTOS/queue.c **** 						{
 823:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 824:FreeRTOS/queue.c **** 							our own so yield immediately. */
 825:FreeRTOS/queue.c **** 							portYIELD_WITHIN_API();
 826:FreeRTOS/queue.c **** 						}
 827:FreeRTOS/queue.c **** 						else
 828:FreeRTOS/queue.c **** 						{
 829:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 830:FreeRTOS/queue.c **** 						}
 831:FreeRTOS/queue.c **** 					}
 832:FreeRTOS/queue.c **** 					else
 833:FreeRTOS/queue.c **** 					{
 834:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 835:FreeRTOS/queue.c **** 					}
 836:FreeRTOS/queue.c **** 
 837:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 838:FreeRTOS/queue.c **** 					return pdPASS;
 839:FreeRTOS/queue.c **** 				}
 840:FreeRTOS/queue.c **** 				else
 841:FreeRTOS/queue.c **** 				{
 842:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 843:FreeRTOS/queue.c **** 					{
 844:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 845:FreeRTOS/queue.c **** 						return errQUEUE_FULL;
 846:FreeRTOS/queue.c **** 					}
 847:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 848:FreeRTOS/queue.c **** 					{
 849:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 850:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 851:FreeRTOS/queue.c **** 					}
 852:FreeRTOS/queue.c **** 				}
 853:FreeRTOS/queue.c **** 			}
 854:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 855:FreeRTOS/queue.c **** 
 856:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 857:FreeRTOS/queue.c **** 			{
 858:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 859:FreeRTOS/queue.c **** 				{
 860:FreeRTOS/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 861:FreeRTOS/queue.c **** 					{
 862:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 863:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 864:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
 865:FreeRTOS/queue.c **** 					}
 866:FreeRTOS/queue.c **** 					else
 867:FreeRTOS/queue.c **** 					{
 868:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 869:FreeRTOS/queue.c **** 					}
 870:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 32


 871:FreeRTOS/queue.c **** 				else
 872:FreeRTOS/queue.c **** 				{
 873:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 874:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 875:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 876:FreeRTOS/queue.c **** 				}
 877:FreeRTOS/queue.c **** 			}
 878:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 879:FreeRTOS/queue.c **** 		}
 880:FreeRTOS/queue.c **** 	}
 881:FreeRTOS/queue.c **** 
 882:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 883:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 884:FreeRTOS/queue.c **** 
 885:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 886:FreeRTOS/queue.c **** 
 887:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait
 888:FreeRTOS/queue.c **** 	{
 889:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 890:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 891:FreeRTOS/queue.c **** 	int8_t *pcOriginalReadPosition;
 892:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 893:FreeRTOS/queue.c **** 
 894:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 895:FreeRTOS/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 896:FreeRTOS/queue.c **** 
 897:FreeRTOS/queue.c **** 		for( ;; )
 898:FreeRTOS/queue.c **** 		{
 899:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 900:FreeRTOS/queue.c **** 			{
 901:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 902:FreeRTOS/queue.c **** 				{
 903:FreeRTOS/queue.c **** 					/* Remember our read position in case we are just peeking. */
 904:FreeRTOS/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 905:FreeRTOS/queue.c **** 
 906:FreeRTOS/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 907:FreeRTOS/queue.c **** 
 908:FreeRTOS/queue.c **** 					if( xJustPeeking == pdFALSE )
 909:FreeRTOS/queue.c **** 					{
 910:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 911:FreeRTOS/queue.c **** 
 912:FreeRTOS/queue.c **** 						/* Data is actually being removed (not just peeked). */
 913:FreeRTOS/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 914:FreeRTOS/queue.c **** 
 915:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 916:FreeRTOS/queue.c **** 						{
 917:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 918:FreeRTOS/queue.c **** 							{
 919:FreeRTOS/queue.c **** 								/* Record the information required to implement
 920:FreeRTOS/queue.c **** 								priority inheritance should it become necessary. */
 921:FreeRTOS/queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 922:FreeRTOS/queue.c **** 							}
 923:FreeRTOS/queue.c **** 							else
 924:FreeRTOS/queue.c **** 							{
 925:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 926:FreeRTOS/queue.c **** 							}
 927:FreeRTOS/queue.c **** 						}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 33


 928:FreeRTOS/queue.c **** 						#endif
 929:FreeRTOS/queue.c **** 
 930:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 931:FreeRTOS/queue.c **** 						{
 932:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 933:FreeRTOS/queue.c **** 							{
 934:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 935:FreeRTOS/queue.c **** 							}
 936:FreeRTOS/queue.c **** 							else
 937:FreeRTOS/queue.c **** 							{
 938:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 939:FreeRTOS/queue.c **** 							}
 940:FreeRTOS/queue.c **** 						}
 941:FreeRTOS/queue.c **** 					}
 942:FreeRTOS/queue.c **** 					else
 943:FreeRTOS/queue.c **** 					{
 944:FreeRTOS/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 945:FreeRTOS/queue.c **** 
 946:FreeRTOS/queue.c **** 						/* We are not removing the data, so reset our read
 947:FreeRTOS/queue.c **** 						pointer. */
 948:FreeRTOS/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 949:FreeRTOS/queue.c **** 
 950:FreeRTOS/queue.c **** 						/* The data is being left in the queue, so see if there are
 951:FreeRTOS/queue.c **** 						any other tasks waiting for the data. */
 952:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 953:FreeRTOS/queue.c **** 						{
 954:FreeRTOS/queue.c **** 							/* Tasks that are removed from the event list will get added to
 955:FreeRTOS/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 956:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 957:FreeRTOS/queue.c **** 							{
 958:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority than this task. */
 959:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 960:FreeRTOS/queue.c **** 							}
 961:FreeRTOS/queue.c **** 							else
 962:FreeRTOS/queue.c **** 							{
 963:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 964:FreeRTOS/queue.c **** 							}
 965:FreeRTOS/queue.c **** 						}
 966:FreeRTOS/queue.c **** 						else
 967:FreeRTOS/queue.c **** 						{
 968:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 969:FreeRTOS/queue.c **** 						}
 970:FreeRTOS/queue.c **** 					}
 971:FreeRTOS/queue.c **** 
 972:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 973:FreeRTOS/queue.c **** 					return pdPASS;
 974:FreeRTOS/queue.c **** 				}
 975:FreeRTOS/queue.c **** 				else
 976:FreeRTOS/queue.c **** 				{
 977:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 978:FreeRTOS/queue.c **** 					{
 979:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 980:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 981:FreeRTOS/queue.c **** 						return errQUEUE_EMPTY;
 982:FreeRTOS/queue.c **** 					}
 983:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 984:FreeRTOS/queue.c **** 					{
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 34


 985:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 986:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 987:FreeRTOS/queue.c **** 					}
 988:FreeRTOS/queue.c **** 				}
 989:FreeRTOS/queue.c **** 			}
 990:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 991:FreeRTOS/queue.c **** 
 992:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 993:FreeRTOS/queue.c **** 			{
 994:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 995:FreeRTOS/queue.c **** 				{
 996:FreeRTOS/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 997:FreeRTOS/queue.c **** 					{
 998:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 999:FreeRTOS/queue.c **** 
1000:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1001:FreeRTOS/queue.c **** 						{
1002:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1003:FreeRTOS/queue.c **** 							{
1004:FreeRTOS/queue.c **** 								taskENTER_CRITICAL();
1005:FreeRTOS/queue.c **** 								{
1006:FreeRTOS/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1007:FreeRTOS/queue.c **** 								}
1008:FreeRTOS/queue.c **** 								taskEXIT_CRITICAL();
1009:FreeRTOS/queue.c **** 							}
1010:FreeRTOS/queue.c **** 							else
1011:FreeRTOS/queue.c **** 							{
1012:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1013:FreeRTOS/queue.c **** 							}
1014:FreeRTOS/queue.c **** 						}
1015:FreeRTOS/queue.c **** 						#endif
1016:FreeRTOS/queue.c **** 
1017:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1018:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
1019:FreeRTOS/queue.c **** 					}
1020:FreeRTOS/queue.c **** 					else
1021:FreeRTOS/queue.c **** 					{
1022:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1023:FreeRTOS/queue.c **** 					}
1024:FreeRTOS/queue.c **** 				}
1025:FreeRTOS/queue.c **** 				else
1026:FreeRTOS/queue.c **** 				{
1027:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1028:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1029:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1030:FreeRTOS/queue.c **** 				}
1031:FreeRTOS/queue.c **** 			}
1032:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
1033:FreeRTOS/queue.c **** 		}
1034:FreeRTOS/queue.c **** 	}
1035:FreeRTOS/queue.c **** 
1036:FreeRTOS/queue.c **** 
1037:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1038:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1039:FreeRTOS/queue.c **** 
1040:FreeRTOS/queue.c **** BaseT_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseT_t *
1041:FreeRTOS/queue.c **** {
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 35


 898              		.loc 1 1041 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 32
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 80B5     		push	{r7, lr}	@
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 88B0     		sub	sp, sp, #32	@,,
 907              		.cfi_def_cfa_offset 40
 908 0004 00AF     		add	r7, sp, #0	@,,
 909              		.cfi_def_cfa_register 7
 910 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 911 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 912 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
 913 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
1042:FreeRTOS/queue.c **** BaseT_t xReturn;
1043:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1044:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 914              		.loc 1 1044 0
 915 000e FB68     		ldr	r3, [r7, #12]	@ tmp125, xQueue
 916 0010 BB61     		str	r3, [r7, #24]	@ tmp125, pxQueue
1045:FreeRTOS/queue.c **** 
1046:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 917              		.loc 1 1046 0
 918 0012 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 919 0014 002B     		cmp	r3, #0	@ tmp126,
 920 0016 02D1     		bne	.L70	@,
 921              		.loc 1 1046 0 is_stmt 0 discriminator 1
 922 0018 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 923              	.L71:
 924 001c FEE7     		b	.L71	@
 925              	.L70:
1047:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 926              		.loc 1 1047 0 is_stmt 1
 927 001e BB68     		ldr	r3, [r7, #8]	@ tmp127, pvItemToQueue
 928 0020 002B     		cmp	r3, #0	@ tmp127,
 929 0022 03D1     		bne	.L72	@,
 930              		.loc 1 1047 0 is_stmt 0 discriminator 2
 931 0024 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 932 0026 1B6C     		ldr	r3, [r3, #64]	@ D.6080, pxQueue_8->uxItemSize
 933 0028 002B     		cmp	r3, #0	@ D.6080,
 934 002a 01D1     		bne	.L73	@,
 935              	.L72:
 936              		.loc 1 1047 0 discriminator 3
 937 002c 0123     		movs	r3, #1	@ D.6079,
 938 002e 00E0     		b	.L74	@
 939              	.L73:
 940              		.loc 1 1047 0 discriminator 4
 941 0030 0023     		movs	r3, #0	@ D.6079,
 942              	.L74:
 943              		.loc 1 1047 0 discriminator 6
 944 0032 002B     		cmp	r3, #0	@ D.6079,
 945 0034 02D1     		bne	.L75	@,
 946              		.loc 1 1047 0 discriminator 7
 947 0036 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 948              	.L76:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 36


 949              		.loc 1 1047 0 discriminator 2
 950 003a FEE7     		b	.L76	@
 951              	.L75:
1048:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 952              		.loc 1 1048 0 is_stmt 1
 953 003c 3B68     		ldr	r3, [r7]	@ tmp129, xCopyPosition
 954 003e 022B     		cmp	r3, #2	@ tmp129,
 955 0040 03D1     		bne	.L77	@,
 956              		.loc 1 1048 0 is_stmt 0 discriminator 2
 957 0042 BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
 958 0044 DB6B     		ldr	r3, [r3, #60]	@ D.6080, pxQueue_8->uxLength
 959 0046 012B     		cmp	r3, #1	@ D.6080,
 960 0048 01D1     		bne	.L78	@,
 961              	.L77:
 962              		.loc 1 1048 0 discriminator 3
 963 004a 0123     		movs	r3, #1	@ D.6079,
 964 004c 00E0     		b	.L79	@
 965              	.L78:
 966              		.loc 1 1048 0 discriminator 4
 967 004e 0023     		movs	r3, #0	@ D.6079,
 968              	.L79:
 969              		.loc 1 1048 0 discriminator 6
 970 0050 002B     		cmp	r3, #0	@ D.6079,
 971 0052 02D1     		bne	.L80	@,
 972              		.loc 1 1048 0 discriminator 7
 973 0054 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 974              	.L81:
 975              		.loc 1 1048 0 discriminator 3
 976 0058 FEE7     		b	.L81	@
 977              	.L80:
1049:FreeRTOS/queue.c **** 
1050:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1051:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1052:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1053:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1054:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1055:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1056:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1057:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1058:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1059:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1060:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1061:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1062:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1063:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1064:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 978              		.loc 1 1064 0 is_stmt 1
 979 005a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1065:FreeRTOS/queue.c **** 
1066:FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1067:FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1068:FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1069:FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1070:FreeRTOS/queue.c **** 	post). */
1071:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 980              		.loc 1 1071 0
 981 005e FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 37


 982 0062 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
1072:FreeRTOS/queue.c **** 	{
1073:FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 983              		.loc 1 1073 0
 984 0064 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 985 0066 9A6B     		ldr	r2, [r3, #56]	@ D.6080, pxQueue_8->uxMessagesWaiting
 986 0068 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 987 006a DB6B     		ldr	r3, [r3, #60]	@ D.6080, pxQueue_8->uxLength
 988 006c 9A42     		cmp	r2, r3	@ D.6080, D.6080
 989 006e 02D3     		bcc	.L82	@,
 990              		.loc 1 1073 0 is_stmt 0 discriminator 1
 991 0070 3B68     		ldr	r3, [r7]	@ tmp133, xCopyPosition
 992 0072 022B     		cmp	r3, #2	@ tmp133,
 993 0074 2DD1     		bne	.L83	@,
 994              	.L82:
1074:FreeRTOS/queue.c **** 		{
1075:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1076:FreeRTOS/queue.c **** 
1077:FreeRTOS/queue.c **** 			if( prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition ) != pdFALSE )
 995              		.loc 1 1077 0 is_stmt 1
 996 0076 3A68     		ldr	r2, [r7]	@, xCopyPosition
 997 0078 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 998 007a B869     		ldr	r0, [r7, #24]	@, pxQueue
 999 007c FFF7FEFF 		bl	prvCopyDataToQueue	@
 1000 0080 0346     		mov	r3, r0	@ D.6081,
 1001 0082 002B     		cmp	r3, #0	@ D.6081,
 1002 0084 05D0     		beq	.L84	@,
1078:FreeRTOS/queue.c **** 			{
1079:FreeRTOS/queue.c **** 				/* This is a special case that can only be executed if a task
1080:FreeRTOS/queue.c **** 				holds multiple mutexes and then gives the mutexes back in an
1081:FreeRTOS/queue.c **** 				order that is different to that in which they were taken. */
1082:FreeRTOS/queue.c **** 				if( pxHigherPriorityTaskWoken != NULL )
 1003              		.loc 1 1082 0
 1004 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1005 0088 002B     		cmp	r3, #0	@ tmp134,
 1006 008a 02D0     		beq	.L84	@,
1083:FreeRTOS/queue.c **** 				{
1084:FreeRTOS/queue.c **** 					*pxHigherPriorityTaskWoken = pdTRUE;
 1007              		.loc 1 1084 0
 1008 008c 7B68     		ldr	r3, [r7, #4]	@ tmp135, pxHigherPriorityTaskWoken
 1009 008e 0122     		movs	r2, #1	@ tmp136,
 1010 0090 1A60     		str	r2, [r3]	@ tmp136, *pxHigherPriorityTaskWoken_26(D)
 1011              	.L84:
1085:FreeRTOS/queue.c **** 				}
1086:FreeRTOS/queue.c **** 				else
1087:FreeRTOS/queue.c **** 				{
1088:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1089:FreeRTOS/queue.c **** 				}
1090:FreeRTOS/queue.c **** 			}
1091:FreeRTOS/queue.c **** 
1092:FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1093:FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1094:FreeRTOS/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1012              		.loc 1 1094 0
 1013 0092 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1014 0094 9B6C     		ldr	r3, [r3, #72]	@ D.6081, pxQueue_8->xTxLock
 1015 0096 B3F1FF3F 		cmp	r3, #-1	@ D.6081,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 38


 1016 009a 12D1     		bne	.L85	@,
1095:FreeRTOS/queue.c **** 			{
1096:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1097:FreeRTOS/queue.c **** 				{
1098:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1099:FreeRTOS/queue.c **** 					{
1100:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1101:FreeRTOS/queue.c **** 						{
1102:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
1103:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
1104:FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
1105:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1106:FreeRTOS/queue.c **** 							{
1107:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1108:FreeRTOS/queue.c **** 							}
1109:FreeRTOS/queue.c **** 							else
1110:FreeRTOS/queue.c **** 							{
1111:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1112:FreeRTOS/queue.c **** 							}
1113:FreeRTOS/queue.c **** 						}
1114:FreeRTOS/queue.c **** 						else
1115:FreeRTOS/queue.c **** 						{
1116:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1117:FreeRTOS/queue.c **** 						}
1118:FreeRTOS/queue.c **** 					}
1119:FreeRTOS/queue.c **** 					else
1120:FreeRTOS/queue.c **** 					{
1121:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1122:FreeRTOS/queue.c **** 						{
1123:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1124:FreeRTOS/queue.c **** 							{
1125:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1126:FreeRTOS/queue.c **** 								record that a context switch is required. */
1127:FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1128:FreeRTOS/queue.c **** 								{
1129:FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1130:FreeRTOS/queue.c **** 								}
1131:FreeRTOS/queue.c **** 								else
1132:FreeRTOS/queue.c **** 								{
1133:FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1134:FreeRTOS/queue.c **** 								}
1135:FreeRTOS/queue.c **** 							}
1136:FreeRTOS/queue.c **** 							else
1137:FreeRTOS/queue.c **** 							{
1138:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1139:FreeRTOS/queue.c **** 							}
1140:FreeRTOS/queue.c **** 						}
1141:FreeRTOS/queue.c **** 						else
1142:FreeRTOS/queue.c **** 						{
1143:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1144:FreeRTOS/queue.c **** 						}
1145:FreeRTOS/queue.c **** 					}
1146:FreeRTOS/queue.c **** 				}
1147:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1148:FreeRTOS/queue.c **** 				{
1149:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1017              		.loc 1 1149 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 39


 1018 009c BB69     		ldr	r3, [r7, #24]	@ tmp138, pxQueue
 1019 009e 5B6A     		ldr	r3, [r3, #36]	@ D.6080, pxQueue_8->xTasksWaitingToReceive.uxNumberOfItems
 1020 00a0 002B     		cmp	r3, #0	@ D.6080,
 1021 00a2 13D0     		beq	.L86	@,
1150:FreeRTOS/queue.c **** 					{
1151:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1022              		.loc 1 1151 0
 1023 00a4 BB69     		ldr	r3, [r7, #24]	@ tmp139, pxQueue
 1024 00a6 2433     		adds	r3, r3, #36	@ D.6082, tmp139,
 1025 00a8 1846     		mov	r0, r3	@, D.6082
 1026 00aa FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1027 00ae 0346     		mov	r3, r0	@ D.6081,
 1028 00b0 002B     		cmp	r3, #0	@ D.6081,
 1029 00b2 0BD0     		beq	.L86	@,
1152:FreeRTOS/queue.c **** 						{
1153:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1154:FreeRTOS/queue.c **** 							context	switch is required. */
1155:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1030              		.loc 1 1155 0
 1031 00b4 7B68     		ldr	r3, [r7, #4]	@ tmp140, pxHigherPriorityTaskWoken
 1032 00b6 002B     		cmp	r3, #0	@ tmp140,
 1033 00b8 08D0     		beq	.L86	@,
1156:FreeRTOS/queue.c **** 							{
1157:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1034              		.loc 1 1157 0
 1035 00ba 7B68     		ldr	r3, [r7, #4]	@ tmp141, pxHigherPriorityTaskWoken
 1036 00bc 0122     		movs	r2, #1	@ tmp142,
 1037 00be 1A60     		str	r2, [r3]	@ tmp142, *pxHigherPriorityTaskWoken_26(D)
 1038 00c0 04E0     		b	.L86	@
 1039              	.L85:
1158:FreeRTOS/queue.c **** 							}
1159:FreeRTOS/queue.c **** 							else
1160:FreeRTOS/queue.c **** 							{
1161:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1162:FreeRTOS/queue.c **** 							}
1163:FreeRTOS/queue.c **** 						}
1164:FreeRTOS/queue.c **** 						else
1165:FreeRTOS/queue.c **** 						{
1166:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1167:FreeRTOS/queue.c **** 						}
1168:FreeRTOS/queue.c **** 					}
1169:FreeRTOS/queue.c **** 					else
1170:FreeRTOS/queue.c **** 					{
1171:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1172:FreeRTOS/queue.c **** 					}
1173:FreeRTOS/queue.c **** 				}
1174:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1175:FreeRTOS/queue.c **** 			}
1176:FreeRTOS/queue.c **** 			else
1177:FreeRTOS/queue.c **** 			{
1178:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1179:FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1180:FreeRTOS/queue.c **** 				++( pxQueue->xTxLock );
 1040              		.loc 1 1180 0
 1041 00c2 BB69     		ldr	r3, [r7, #24]	@ tmp143, pxQueue
 1042 00c4 9B6C     		ldr	r3, [r3, #72]	@ D.6081, pxQueue_8->xTxLock
 1043 00c6 5A1C     		adds	r2, r3, #1	@ D.6081, D.6081,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 40


 1044 00c8 BB69     		ldr	r3, [r7, #24]	@ tmp144, pxQueue
 1045 00ca 9A64     		str	r2, [r3, #72]	@ D.6081, pxQueue_8->xTxLock
 1046              	.L86:
1181:FreeRTOS/queue.c **** 			}
1182:FreeRTOS/queue.c **** 
1183:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1047              		.loc 1 1183 0
 1048 00cc 0123     		movs	r3, #1	@ tmp145,
 1049 00ce FB61     		str	r3, [r7, #28]	@ tmp145, xReturn
 1050 00d0 01E0     		b	.L87	@
 1051              	.L83:
1184:FreeRTOS/queue.c **** 		}
1185:FreeRTOS/queue.c **** 		else
1186:FreeRTOS/queue.c **** 		{
1187:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1188:FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
 1052              		.loc 1 1188 0
 1053 00d2 0023     		movs	r3, #0	@ tmp146,
 1054 00d4 FB61     		str	r3, [r7, #28]	@ tmp146, xReturn
 1055              	.L87:
1189:FreeRTOS/queue.c **** 		}
1190:FreeRTOS/queue.c **** 	}
1191:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1056              		.loc 1 1191 0
 1057 00d6 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1058 00d8 FFF7FEFF 		bl	vPortClearInterruptMask	@
1192:FreeRTOS/queue.c **** 
1193:FreeRTOS/queue.c **** 	return xReturn;
 1059              		.loc 1 1193 0
 1060 00dc FB69     		ldr	r3, [r7, #28]	@ D.6083, xReturn
1194:FreeRTOS/queue.c **** }
 1061              		.loc 1 1194 0
 1062 00de 1846     		mov	r0, r3	@, <retval>
 1063 00e0 2037     		adds	r7, r7, #32	@,,
 1064              		.cfi_def_cfa_offset 8
 1065 00e2 BD46     		mov	sp, r7	@,
 1066              		.cfi_def_cfa_register 13
 1067              		@ sp needed	@
 1068 00e4 80BD     		pop	{r7, pc}	@
 1069              		.cfi_endproc
 1070              	.LFE8:
 1071              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1072 00e6 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1073              		.align	2
 1074              		.global	xQueueGenericReceive
 1075              		.thumb
 1076              		.thumb_func
 1077              		.type	xQueueGenericReceive, %function
 1078              	xQueueGenericReceive:
 1079              	.LFB9:
1195:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1196:FreeRTOS/queue.c **** 
1197:FreeRTOS/queue.c **** BaseT_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait, co
1198:FreeRTOS/queue.c **** {
 1080              		.loc 1 1198 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 41


 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}	@
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 8AB0     		sub	sp, sp, #40	@,,
 1089              		.cfi_def_cfa_offset 48
 1090 0004 00AF     		add	r7, sp, #0	@,,
 1091              		.cfi_def_cfa_register 7
 1092 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1093 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1094 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
 1095 000c 3B60     		str	r3, [r7]	@ xJustPeeking, xJustPeeking
1199:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE;
 1096              		.loc 1 1199 0
 1097 000e 0023     		movs	r3, #0	@ tmp135,
 1098 0010 7B62     		str	r3, [r7, #36]	@ tmp135, xEntryTimeSet
1200:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1201:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1202:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1099              		.loc 1 1202 0
 1100 0012 FB68     		ldr	r3, [r7, #12]	@ tmp136, xQueue
 1101 0014 3B62     		str	r3, [r7, #32]	@ tmp136, pxQueue
1203:FreeRTOS/queue.c **** 
1204:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1102              		.loc 1 1204 0
 1103 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 1104 0018 002B     		cmp	r3, #0	@ tmp137,
 1105 001a 02D1     		bne	.L90	@,
 1106              		.loc 1 1204 0 is_stmt 0 discriminator 1
 1107 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1108              	.L91:
 1109 0020 FEE7     		b	.L91	@
 1110              	.L90:
1205:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1111              		.loc 1 1205 0 is_stmt 1
 1112 0022 BB68     		ldr	r3, [r7, #8]	@ tmp138, pvBuffer
 1113 0024 002B     		cmp	r3, #0	@ tmp138,
 1114 0026 03D1     		bne	.L92	@,
 1115              		.loc 1 1205 0 is_stmt 0 discriminator 2
 1116 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 1117 002a 1B6C     		ldr	r3, [r3, #64]	@ D.6086, pxQueue_16->uxItemSize
 1118 002c 002B     		cmp	r3, #0	@ D.6086,
 1119 002e 01D1     		bne	.L93	@,
 1120              	.L92:
 1121              		.loc 1 1205 0 discriminator 3
 1122 0030 0123     		movs	r3, #1	@ D.6084,
 1123 0032 00E0     		b	.L94	@
 1124              	.L93:
 1125              		.loc 1 1205 0 discriminator 4
 1126 0034 0023     		movs	r3, #0	@ D.6084,
 1127              	.L94:
 1128              		.loc 1 1205 0 discriminator 6
 1129 0036 002B     		cmp	r3, #0	@ D.6084,
 1130 0038 02D1     		bne	.L95	@,
 1131              		.loc 1 1205 0 discriminator 7
 1132 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 42


 1133              	.L96:
 1134              		.loc 1 1205 0 discriminator 2
 1135 003e FEE7     		b	.L96	@
 1136              	.L95:
1206:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1207:FreeRTOS/queue.c **** 	{
1208:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1209:FreeRTOS/queue.c **** 	}
1210:FreeRTOS/queue.c **** 	#endif
1211:FreeRTOS/queue.c **** 
1212:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1213:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1214:FreeRTOS/queue.c **** 	of execution time efficiency. */
1215:FreeRTOS/queue.c **** 
1216:FreeRTOS/queue.c **** 	for( ;; )
1217:FreeRTOS/queue.c **** 	{
1218:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 1137              		.loc 1 1218 0 is_stmt 1
 1138 0040 FFF7FEFF 		bl	vPortEnterCritical	@
1219:FreeRTOS/queue.c **** 		{
1220:FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running we must be
1221:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue. */
1222:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1139              		.loc 1 1222 0
 1140 0044 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 1141 0046 9B6B     		ldr	r3, [r3, #56]	@ D.6086, pxQueue_16->uxMessagesWaiting
 1142 0048 002B     		cmp	r3, #0	@ D.6086,
 1143 004a 3BD0     		beq	.L97	@,
1223:FreeRTOS/queue.c **** 			{
1224:FreeRTOS/queue.c **** 				/* Remember the read position in case the queue is only being
1225:FreeRTOS/queue.c **** 				peeked. */
1226:FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1144              		.loc 1 1226 0
 1145 004c 3B6A     		ldr	r3, [r7, #32]	@ tmp141, pxQueue
 1146 004e DB68     		ldr	r3, [r3, #12]	@ tmp142, pxQueue_16->u.pcReadFrom
 1147 0050 FB61     		str	r3, [r7, #28]	@ tmp142, pcOriginalReadPosition
1227:FreeRTOS/queue.c **** 
1228:FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1148              		.loc 1 1228 0
 1149 0052 B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1150 0054 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1151 0056 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1229:FreeRTOS/queue.c **** 
1230:FreeRTOS/queue.c **** 				if( xJustPeeking == pdFALSE )
 1152              		.loc 1 1230 0
 1153 005a 3B68     		ldr	r3, [r7]	@ tmp143, xJustPeeking
 1154 005c 002B     		cmp	r3, #0	@ tmp143,
 1155 005e 1CD1     		bne	.L98	@,
1231:FreeRTOS/queue.c **** 				{
1232:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1233:FreeRTOS/queue.c **** 
1234:FreeRTOS/queue.c **** 					/* Actually removing data, not just peeking. */
1235:FreeRTOS/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 1156              		.loc 1 1235 0
 1157 0060 3B6A     		ldr	r3, [r7, #32]	@ tmp144, pxQueue
 1158 0062 9B6B     		ldr	r3, [r3, #56]	@ D.6086, pxQueue_16->uxMessagesWaiting
 1159 0064 5A1E     		subs	r2, r3, #1	@ D.6086, D.6086,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 43


 1160 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
 1161 0068 9A63     		str	r2, [r3, #56]	@ D.6086, pxQueue_16->uxMessagesWaiting
1236:FreeRTOS/queue.c **** 
1237:FreeRTOS/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1238:FreeRTOS/queue.c **** 					{
1239:FreeRTOS/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1162              		.loc 1 1239 0
 1163 006a 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 1164 006c 1B68     		ldr	r3, [r3]	@ D.6088, pxQueue_16->pcHead
 1165 006e 002B     		cmp	r3, #0	@ D.6088,
 1166 0070 04D1     		bne	.L99	@,
1240:FreeRTOS/queue.c **** 						{
1241:FreeRTOS/queue.c **** 							/* Record the information required to implement
1242:FreeRTOS/queue.c **** 							priority inheritance should it become necessary. */
1243:FreeRTOS/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
 1167              		.loc 1 1243 0
 1168 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount	@
 1169 0076 0246     		mov	r2, r0	@ D.6090,
 1170 0078 3B6A     		ldr	r3, [r7, #32]	@ tmp147, pxQueue
 1171 007a 5A60     		str	r2, [r3, #4]	@ D.6090, pxQueue_16->pcTail
 1172              	.L99:
1244:FreeRTOS/queue.c **** 						}
1245:FreeRTOS/queue.c **** 						else
1246:FreeRTOS/queue.c **** 						{
1247:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1248:FreeRTOS/queue.c **** 						}
1249:FreeRTOS/queue.c **** 					}
1250:FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1251:FreeRTOS/queue.c **** 
1252:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1173              		.loc 1 1252 0
 1174 007c 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 1175 007e 1B69     		ldr	r3, [r3, #16]	@ D.6086, pxQueue_16->xTasksWaitingToSend.uxNumberOfItems
 1176 0080 002B     		cmp	r3, #0	@ D.6086,
 1177 0082 1BD0     		beq	.L100	@,
1253:FreeRTOS/queue.c **** 					{
1254:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 1178              		.loc 1 1254 0
 1179 0084 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 1180 0086 1033     		adds	r3, r3, #16	@ D.6089, tmp149,
 1181 0088 1846     		mov	r0, r3	@, D.6089
 1182 008a FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1183 008e 0346     		mov	r3, r0	@ D.6087,
 1184 0090 012B     		cmp	r3, #1	@ D.6087,
 1185 0092 13D1     		bne	.L100	@,
1255:FreeRTOS/queue.c **** 						{
1256:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1186              		.loc 1 1256 0
 1187 0094 FFF7FEFF 		bl	vPortYield	@
 1188 0098 10E0     		b	.L100	@
 1189              	.L98:
1257:FreeRTOS/queue.c **** 						}
1258:FreeRTOS/queue.c **** 						else
1259:FreeRTOS/queue.c **** 						{
1260:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1261:FreeRTOS/queue.c **** 						}
1262:FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 44


1263:FreeRTOS/queue.c **** 					else
1264:FreeRTOS/queue.c **** 					{
1265:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1266:FreeRTOS/queue.c **** 					}
1267:FreeRTOS/queue.c **** 				}
1268:FreeRTOS/queue.c **** 				else
1269:FreeRTOS/queue.c **** 				{
1270:FreeRTOS/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1271:FreeRTOS/queue.c **** 
1272:FreeRTOS/queue.c **** 					/* The data is not being removed, so reset the read
1273:FreeRTOS/queue.c **** 					pointer. */
1274:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1190              		.loc 1 1274 0
 1191 009a 3B6A     		ldr	r3, [r7, #32]	@ tmp150, pxQueue
 1192 009c FA69     		ldr	r2, [r7, #28]	@ tmp151, pcOriginalReadPosition
 1193 009e DA60     		str	r2, [r3, #12]	@ tmp151, pxQueue_16->u.pcReadFrom
1275:FreeRTOS/queue.c **** 
1276:FreeRTOS/queue.c **** 					/* The data is being left in the queue, so see if there are
1277:FreeRTOS/queue.c **** 					any other tasks waiting for the data. */
1278:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1194              		.loc 1 1278 0
 1195 00a0 3B6A     		ldr	r3, [r7, #32]	@ tmp152, pxQueue
 1196 00a2 5B6A     		ldr	r3, [r3, #36]	@ D.6086, pxQueue_16->xTasksWaitingToReceive.uxNumberOfItems
 1197 00a4 002B     		cmp	r3, #0	@ D.6086,
 1198 00a6 09D0     		beq	.L100	@,
1279:FreeRTOS/queue.c **** 					{
1280:FreeRTOS/queue.c **** 						/* Tasks that are removed from the event list will get added to
1281:FreeRTOS/queue.c **** 						the pending ready list as the scheduler is still suspended. */
1282:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1199              		.loc 1 1282 0
 1200 00a8 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
 1201 00aa 2433     		adds	r3, r3, #36	@ D.6089, tmp153,
 1202 00ac 1846     		mov	r0, r3	@, D.6089
 1203 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1204 00b2 0346     		mov	r3, r0	@ D.6087,
 1205 00b4 002B     		cmp	r3, #0	@ D.6087,
 1206 00b6 01D0     		beq	.L100	@,
1283:FreeRTOS/queue.c **** 						{
1284:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority than this task. */
1285:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1207              		.loc 1 1285 0
 1208 00b8 FFF7FEFF 		bl	vPortYield	@
 1209              	.L100:
1286:FreeRTOS/queue.c **** 						}
1287:FreeRTOS/queue.c **** 						else
1288:FreeRTOS/queue.c **** 						{
1289:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:FreeRTOS/queue.c **** 						}
1291:FreeRTOS/queue.c **** 					}
1292:FreeRTOS/queue.c **** 					else
1293:FreeRTOS/queue.c **** 					{
1294:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1295:FreeRTOS/queue.c **** 					}
1296:FreeRTOS/queue.c **** 				}
1297:FreeRTOS/queue.c **** 
1298:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 1210              		.loc 1 1298 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 45


 1211 00bc FFF7FEFF 		bl	vPortExitCritical	@
1299:FreeRTOS/queue.c **** 				return pdPASS;
 1212              		.loc 1 1299 0
 1213 00c0 0123     		movs	r3, #1	@ D.6085,
 1214 00c2 64E0     		b	.L111	@
 1215              	.L97:
1300:FreeRTOS/queue.c **** 			}
1301:FreeRTOS/queue.c **** 			else
1302:FreeRTOS/queue.c **** 			{
1303:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 1216              		.loc 1 1303 0
 1217 00c4 7B68     		ldr	r3, [r7, #4]	@ D.6086, xTicksToWait
 1218 00c6 002B     		cmp	r3, #0	@ D.6086,
 1219 00c8 03D1     		bne	.L102	@,
1304:FreeRTOS/queue.c **** 				{
1305:FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1306:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1307:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 1220              		.loc 1 1307 0
 1221 00ca FFF7FEFF 		bl	vPortExitCritical	@
1308:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1309:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 1222              		.loc 1 1309 0
 1223 00ce 0023     		movs	r3, #0	@ D.6085,
 1224 00d0 5DE0     		b	.L111	@
 1225              	.L102:
1310:FreeRTOS/queue.c **** 				}
1311:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1226              		.loc 1 1311 0
 1227 00d2 7B6A     		ldr	r3, [r7, #36]	@ tmp154, xEntryTimeSet
 1228 00d4 002B     		cmp	r3, #0	@ tmp154,
 1229 00d6 06D1     		bne	.L103	@,
1312:FreeRTOS/queue.c **** 				{
1313:FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1314:FreeRTOS/queue.c **** 					configure the timeout structure. */
1315:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1230              		.loc 1 1315 0
 1231 00d8 07F11403 		add	r3, r7, #20	@ tmp155,,
 1232 00dc 1846     		mov	r0, r3	@, tmp155
 1233 00de FFF7FEFF 		bl	vTaskSetTimeOutState	@
1316:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1234              		.loc 1 1316 0
 1235 00e2 0123     		movs	r3, #1	@ tmp156,
 1236 00e4 7B62     		str	r3, [r7, #36]	@ tmp156, xEntryTimeSet
 1237              	.L103:
1317:FreeRTOS/queue.c **** 				}
1318:FreeRTOS/queue.c **** 				else
1319:FreeRTOS/queue.c **** 				{
1320:FreeRTOS/queue.c **** 					/* Entry time was already set. */
1321:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1322:FreeRTOS/queue.c **** 				}
1323:FreeRTOS/queue.c **** 			}
1324:FreeRTOS/queue.c **** 		}
1325:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 1238              		.loc 1 1325 0
 1239 00e6 FFF7FEFF 		bl	vPortExitCritical	@
1326:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 46


1327:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1328:FreeRTOS/queue.c **** 		now the critical section has been exited. */
1329:FreeRTOS/queue.c **** 
1330:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 1240              		.loc 1 1330 0
 1241 00ea FFF7FEFF 		bl	vTaskSuspendAll	@
1331:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1242              		.loc 1 1331 0
 1243 00ee FFF7FEFF 		bl	vPortEnterCritical	@
 1244 00f2 3B6A     		ldr	r3, [r7, #32]	@ tmp157, pxQueue
 1245 00f4 5B6C     		ldr	r3, [r3, #68]	@ D.6087, pxQueue_16->xRxLock
 1246 00f6 B3F1FF3F 		cmp	r3, #-1	@ D.6087,
 1247 00fa 02D1     		bne	.L104	@,
 1248              		.loc 1 1331 0 is_stmt 0 discriminator 1
 1249 00fc 3B6A     		ldr	r3, [r7, #32]	@ tmp158, pxQueue
 1250 00fe 0022     		movs	r2, #0	@ tmp159,
 1251 0100 5A64     		str	r2, [r3, #68]	@ tmp159, pxQueue_16->xRxLock
 1252              	.L104:
 1253              		.loc 1 1331 0 discriminator 3
 1254 0102 3B6A     		ldr	r3, [r7, #32]	@ tmp160, pxQueue
 1255 0104 9B6C     		ldr	r3, [r3, #72]	@ D.6087, pxQueue_16->xTxLock
 1256 0106 B3F1FF3F 		cmp	r3, #-1	@ D.6087,
 1257 010a 02D1     		bne	.L105	@,
 1258              		.loc 1 1331 0 discriminator 4
 1259 010c 3B6A     		ldr	r3, [r7, #32]	@ tmp161, pxQueue
 1260 010e 0022     		movs	r2, #0	@ tmp162,
 1261 0110 9A64     		str	r2, [r3, #72]	@ tmp162, pxQueue_16->xTxLock
 1262              	.L105:
 1263              		.loc 1 1331 0 discriminator 6
 1264 0112 FFF7FEFF 		bl	vPortExitCritical	@
1332:FreeRTOS/queue.c **** 
1333:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1334:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1265              		.loc 1 1334 0 is_stmt 1 discriminator 6
 1266 0116 3A1D     		adds	r2, r7, #4	@ tmp163,,
 1267 0118 07F11403 		add	r3, r7, #20	@ tmp164,,
 1268 011c 1146     		mov	r1, r2	@, tmp163
 1269 011e 1846     		mov	r0, r3	@, tmp164
 1270 0120 FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 1271 0124 0346     		mov	r3, r0	@ D.6087,
 1272 0126 002B     		cmp	r3, #0	@ D.6087,
 1273 0128 2BD1     		bne	.L106	@,
1335:FreeRTOS/queue.c **** 		{
1336:FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1274              		.loc 1 1336 0
 1275 012a 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1276 012c FFF7FEFF 		bl	prvIsQueueEmpty	@
 1277 0130 0346     		mov	r3, r0	@ D.6087,
 1278 0132 002B     		cmp	r3, #0	@ D.6087,
 1279 0134 1FD0     		beq	.L107	@,
1337:FreeRTOS/queue.c **** 			{
1338:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1339:FreeRTOS/queue.c **** 
1340:FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1341:FreeRTOS/queue.c **** 				{
1342:FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1280              		.loc 1 1342 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 47


 1281 0136 3B6A     		ldr	r3, [r7, #32]	@ tmp165, pxQueue
 1282 0138 1B68     		ldr	r3, [r3]	@ D.6088, pxQueue_16->pcHead
 1283 013a 002B     		cmp	r3, #0	@ D.6088,
 1284 013c 08D1     		bne	.L108	@,
1343:FreeRTOS/queue.c **** 					{
1344:FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
 1285              		.loc 1 1344 0
 1286 013e FFF7FEFF 		bl	vPortEnterCritical	@
1345:FreeRTOS/queue.c **** 						{
1346:FreeRTOS/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 1287              		.loc 1 1346 0
 1288 0142 3B6A     		ldr	r3, [r7, #32]	@ tmp166, pxQueue
 1289 0144 5B68     		ldr	r3, [r3, #4]	@ D.6088, pxQueue_16->pcTail
 1290 0146 1846     		mov	r0, r3	@, D.6088
 1291 0148 FFF7FEFF 		bl	vTaskPriorityInherit	@
1347:FreeRTOS/queue.c **** 						}
1348:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 1292              		.loc 1 1348 0
 1293 014c FFF7FEFF 		bl	vPortExitCritical	@
 1294              	.L108:
1349:FreeRTOS/queue.c **** 					}
1350:FreeRTOS/queue.c **** 					else
1351:FreeRTOS/queue.c **** 					{
1352:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1353:FreeRTOS/queue.c **** 					}
1354:FreeRTOS/queue.c **** 				}
1355:FreeRTOS/queue.c **** 				#endif
1356:FreeRTOS/queue.c **** 
1357:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1295              		.loc 1 1357 0
 1296 0150 3B6A     		ldr	r3, [r7, #32]	@ tmp167, pxQueue
 1297 0152 2433     		adds	r3, r3, #36	@ D.6089, tmp167,
 1298 0154 7A68     		ldr	r2, [r7, #4]	@ D.6086, xTicksToWait
 1299 0156 1146     		mov	r1, r2	@, D.6086
 1300 0158 1846     		mov	r0, r3	@, D.6089
 1301 015a FFF7FEFF 		bl	vTaskPlaceOnEventList	@
1358:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1302              		.loc 1 1358 0
 1303 015e 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1304 0160 FFF7FEFF 		bl	prvUnlockQueue	@
1359:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1305              		.loc 1 1359 0
 1306 0164 FFF7FEFF 		bl	xTaskResumeAll	@
 1307 0168 0346     		mov	r3, r0	@ D.6087,
 1308 016a 002B     		cmp	r3, #0	@ D.6087,
 1309 016c 7FF468AF 		bne	.L95	@,
1360:FreeRTOS/queue.c **** 				{
1361:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 1310              		.loc 1 1361 0
 1311 0170 FFF7FEFF 		bl	vPortYield	@
 1312 0174 64E7     		b	.L95	@
 1313              	.L107:
1362:FreeRTOS/queue.c **** 				}
1363:FreeRTOS/queue.c **** 				else
1364:FreeRTOS/queue.c **** 				{
1365:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1366:FreeRTOS/queue.c **** 				}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 48


1367:FreeRTOS/queue.c **** 			}
1368:FreeRTOS/queue.c **** 			else
1369:FreeRTOS/queue.c **** 			{
1370:FreeRTOS/queue.c **** 				/* Try again. */
1371:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1314              		.loc 1 1371 0
 1315 0176 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1316 0178 FFF7FEFF 		bl	prvUnlockQueue	@
1372:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1317              		.loc 1 1372 0
 1318 017c FFF7FEFF 		bl	xTaskResumeAll	@
 1319 0180 5EE7     		b	.L95	@
 1320              	.L106:
1373:FreeRTOS/queue.c **** 			}
1374:FreeRTOS/queue.c **** 		}
1375:FreeRTOS/queue.c **** 		else
1376:FreeRTOS/queue.c **** 		{
1377:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 1321              		.loc 1 1377 0
 1322 0182 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1323 0184 FFF7FEFF 		bl	prvUnlockQueue	@
1378:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1324              		.loc 1 1378 0
 1325 0188 FFF7FEFF 		bl	xTaskResumeAll	@
1379:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1380:FreeRTOS/queue.c **** 			return errQUEUE_EMPTY;
 1326              		.loc 1 1380 0
 1327 018c 0023     		movs	r3, #0	@ D.6085,
 1328              	.L111:
1381:FreeRTOS/queue.c **** 		}
1382:FreeRTOS/queue.c **** 	}
1383:FreeRTOS/queue.c **** }
 1329              		.loc 1 1383 0 discriminator 6
 1330 018e 1846     		mov	r0, r3	@, <retval>
 1331 0190 2837     		adds	r7, r7, #40	@,,
 1332              		.cfi_def_cfa_offset 8
 1333 0192 BD46     		mov	sp, r7	@,
 1334              		.cfi_def_cfa_register 13
 1335              		@ sp needed	@
 1336 0194 80BD     		pop	{r7, pc}	@
 1337              		.cfi_endproc
 1338              	.LFE9:
 1339              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1340 0196 00BF     		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1341              		.align	2
 1342              		.global	xQueueReceiveFromISR
 1343              		.thumb
 1344              		.thumb_func
 1345              		.type	xQueueReceiveFromISR, %function
 1346              	xQueueReceiveFromISR:
 1347              	.LFB10:
1384:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1385:FreeRTOS/queue.c **** 
1386:FreeRTOS/queue.c **** BaseT_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseT_t * const pxHigher
1387:FreeRTOS/queue.c **** {
 1348              		.loc 1 1387 0
 1349              		.cfi_startproc
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 49


 1350              		@ args = 0, pretend = 0, frame = 32
 1351              		@ frame_needed = 1, uses_anonymous_args = 0
 1352 0000 80B5     		push	{r7, lr}	@
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 7, -8
 1355              		.cfi_offset 14, -4
 1356 0002 88B0     		sub	sp, sp, #32	@,,
 1357              		.cfi_def_cfa_offset 40
 1358 0004 00AF     		add	r7, sp, #0	@,,
 1359              		.cfi_def_cfa_register 7
 1360 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1361 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1362 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
1388:FreeRTOS/queue.c **** BaseT_t xReturn;
1389:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1390:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1363              		.loc 1 1390 0
 1364 000c FB68     		ldr	r3, [r7, #12]	@ tmp123, xQueue
 1365 000e BB61     		str	r3, [r7, #24]	@ tmp123, pxQueue
1391:FreeRTOS/queue.c **** 
1392:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1366              		.loc 1 1392 0
 1367 0010 BB69     		ldr	r3, [r7, #24]	@ tmp124, pxQueue
 1368 0012 002B     		cmp	r3, #0	@ tmp124,
 1369 0014 02D1     		bne	.L113	@,
 1370              		.loc 1 1392 0 is_stmt 0 discriminator 1
 1371 0016 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1372              	.L114:
 1373 001a FEE7     		b	.L114	@
 1374              	.L113:
1393:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1375              		.loc 1 1393 0 is_stmt 1
 1376 001c BB68     		ldr	r3, [r7, #8]	@ tmp125, pvBuffer
 1377 001e 002B     		cmp	r3, #0	@ tmp125,
 1378 0020 03D1     		bne	.L115	@,
 1379              		.loc 1 1393 0 is_stmt 0 discriminator 2
 1380 0022 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 1381 0024 1B6C     		ldr	r3, [r3, #64]	@ D.6092, pxQueue_6->uxItemSize
 1382 0026 002B     		cmp	r3, #0	@ D.6092,
 1383 0028 01D1     		bne	.L116	@,
 1384              	.L115:
 1385              		.loc 1 1393 0 discriminator 3
 1386 002a 0123     		movs	r3, #1	@ D.6091,
 1387 002c 00E0     		b	.L117	@
 1388              	.L116:
 1389              		.loc 1 1393 0 discriminator 4
 1390 002e 0023     		movs	r3, #0	@ D.6091,
 1391              	.L117:
 1392              		.loc 1 1393 0 discriminator 6
 1393 0030 002B     		cmp	r3, #0	@ D.6091,
 1394 0032 02D1     		bne	.L118	@,
 1395              		.loc 1 1393 0 discriminator 7
 1396 0034 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1397              	.L119:
 1398              		.loc 1 1393 0 discriminator 2
 1399 0038 FEE7     		b	.L119	@
 1400              	.L118:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 50


1394:FreeRTOS/queue.c **** 
1395:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1396:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1397:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1398:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1399:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1400:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1401:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1402:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1403:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1404:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1405:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1406:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1407:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1408:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1409:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1401              		.loc 1 1409 0 is_stmt 1
 1402 003a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1410:FreeRTOS/queue.c **** 
1411:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1403              		.loc 1 1411 0
 1404 003e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1405 0042 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
1412:FreeRTOS/queue.c **** 	{
1413:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1414:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1406              		.loc 1 1414 0
 1407 0044 BB69     		ldr	r3, [r7, #24]	@ tmp127, pxQueue
 1408 0046 9B6B     		ldr	r3, [r3, #56]	@ D.6092, pxQueue_6->uxMessagesWaiting
 1409 0048 002B     		cmp	r3, #0	@ D.6092,
 1410 004a 28D0     		beq	.L120	@,
1415:FreeRTOS/queue.c **** 		{
1416:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1417:FreeRTOS/queue.c **** 
1418:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1411              		.loc 1 1418 0
 1412 004c B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1413 004e B869     		ldr	r0, [r7, #24]	@, pxQueue
 1414 0050 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1419:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 1415              		.loc 1 1419 0
 1416 0054 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 1417 0056 9B6B     		ldr	r3, [r3, #56]	@ D.6092, pxQueue_6->uxMessagesWaiting
 1418 0058 5A1E     		subs	r2, r3, #1	@ D.6092, D.6092,
 1419 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxQueue
 1420 005c 9A63     		str	r2, [r3, #56]	@ D.6092, pxQueue_6->uxMessagesWaiting
1420:FreeRTOS/queue.c **** 
1421:FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1422:FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1423:FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1424:FreeRTOS/queue.c **** 			locked. */
1425:FreeRTOS/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 1421              		.loc 1 1425 0
 1422 005e BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
 1423 0060 5B6C     		ldr	r3, [r3, #68]	@ D.6093, pxQueue_6->xRxLock
 1424 0062 B3F1FF3F 		cmp	r3, #-1	@ D.6093,
 1425 0066 12D1     		bne	.L121	@,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 51


1426:FreeRTOS/queue.c **** 			{
1427:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1426              		.loc 1 1427 0
 1427 0068 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 1428 006a 1B69     		ldr	r3, [r3, #16]	@ D.6092, pxQueue_6->xTasksWaitingToSend.uxNumberOfItems
 1429 006c 002B     		cmp	r3, #0	@ D.6092,
 1430 006e 13D0     		beq	.L122	@,
1428:FreeRTOS/queue.c **** 				{
1429:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1431              		.loc 1 1429 0
 1432 0070 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 1433 0072 1033     		adds	r3, r3, #16	@ D.6094, tmp132,
 1434 0074 1846     		mov	r0, r3	@, D.6094
 1435 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1436 007a 0346     		mov	r3, r0	@ D.6093,
 1437 007c 002B     		cmp	r3, #0	@ D.6093,
 1438 007e 0BD0     		beq	.L122	@,
1430:FreeRTOS/queue.c **** 					{
1431:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1432:FreeRTOS/queue.c **** 						force a context switch. */
1433:FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 1439              		.loc 1 1433 0
 1440 0080 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxHigherPriorityTaskWoken
 1441 0082 002B     		cmp	r3, #0	@ tmp133,
 1442 0084 08D0     		beq	.L122	@,
1434:FreeRTOS/queue.c **** 						{
1435:FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 1443              		.loc 1 1435 0
 1444 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1445 0088 0122     		movs	r2, #1	@ tmp135,
 1446 008a 1A60     		str	r2, [r3]	@ tmp135, *pxHigherPriorityTaskWoken_25(D)
 1447 008c 04E0     		b	.L122	@
 1448              	.L121:
1436:FreeRTOS/queue.c **** 						}
1437:FreeRTOS/queue.c **** 						else
1438:FreeRTOS/queue.c **** 						{
1439:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1440:FreeRTOS/queue.c **** 						}
1441:FreeRTOS/queue.c **** 					}
1442:FreeRTOS/queue.c **** 					else
1443:FreeRTOS/queue.c **** 					{
1444:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1445:FreeRTOS/queue.c **** 					}
1446:FreeRTOS/queue.c **** 				}
1447:FreeRTOS/queue.c **** 				else
1448:FreeRTOS/queue.c **** 				{
1449:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1450:FreeRTOS/queue.c **** 				}
1451:FreeRTOS/queue.c **** 			}
1452:FreeRTOS/queue.c **** 			else
1453:FreeRTOS/queue.c **** 			{
1454:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1455:FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1456:FreeRTOS/queue.c **** 				++( pxQueue->xRxLock );
 1449              		.loc 1 1456 0
 1450 008e BB69     		ldr	r3, [r7, #24]	@ tmp136, pxQueue
 1451 0090 5B6C     		ldr	r3, [r3, #68]	@ D.6093, pxQueue_6->xRxLock
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 52


 1452 0092 5A1C     		adds	r2, r3, #1	@ D.6093, D.6093,
 1453 0094 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1454 0096 5A64     		str	r2, [r3, #68]	@ D.6093, pxQueue_6->xRxLock
 1455              	.L122:
1457:FreeRTOS/queue.c **** 			}
1458:FreeRTOS/queue.c **** 
1459:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1456              		.loc 1 1459 0
 1457 0098 0123     		movs	r3, #1	@ tmp138,
 1458 009a FB61     		str	r3, [r7, #28]	@ tmp138, xReturn
 1459 009c 01E0     		b	.L123	@
 1460              	.L120:
1460:FreeRTOS/queue.c **** 		}
1461:FreeRTOS/queue.c **** 		else
1462:FreeRTOS/queue.c **** 		{
1463:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1461              		.loc 1 1463 0
 1462 009e 0023     		movs	r3, #0	@ tmp139,
 1463 00a0 FB61     		str	r3, [r7, #28]	@ tmp139, xReturn
 1464              	.L123:
1464:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1465:FreeRTOS/queue.c **** 		}
1466:FreeRTOS/queue.c **** 	}
1467:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1465              		.loc 1 1467 0
 1466 00a2 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1467 00a4 FFF7FEFF 		bl	vPortClearInterruptMask	@
1468:FreeRTOS/queue.c **** 
1469:FreeRTOS/queue.c **** 	return xReturn;
 1468              		.loc 1 1469 0
 1469 00a8 FB69     		ldr	r3, [r7, #28]	@ D.6095, xReturn
1470:FreeRTOS/queue.c **** }
 1470              		.loc 1 1470 0
 1471 00aa 1846     		mov	r0, r3	@, <retval>
 1472 00ac 2037     		adds	r7, r7, #32	@,,
 1473              		.cfi_def_cfa_offset 8
 1474 00ae BD46     		mov	sp, r7	@,
 1475              		.cfi_def_cfa_register 13
 1476              		@ sp needed	@
 1477 00b0 80BD     		pop	{r7, pc}	@
 1478              		.cfi_endproc
 1479              	.LFE10:
 1480              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1481 00b2 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1482              		.align	2
 1483              		.global	xQueuePeekFromISR
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	xQueuePeekFromISR, %function
 1487              	xQueuePeekFromISR:
 1488              	.LFB11:
1471:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1472:FreeRTOS/queue.c **** 
1473:FreeRTOS/queue.c **** BaseT_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1474:FreeRTOS/queue.c **** {
 1489              		.loc 1 1474 0
 1490              		.cfi_startproc
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 53


 1491              		@ args = 0, pretend = 0, frame = 24
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493 0000 80B5     		push	{r7, lr}	@
 1494              		.cfi_def_cfa_offset 8
 1495              		.cfi_offset 7, -8
 1496              		.cfi_offset 14, -4
 1497 0002 86B0     		sub	sp, sp, #24	@,,
 1498              		.cfi_def_cfa_offset 32
 1499 0004 00AF     		add	r7, sp, #0	@,,
 1500              		.cfi_def_cfa_register 7
 1501 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1502 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1475:FreeRTOS/queue.c **** BaseT_t xReturn;
1476:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1477:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1478:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1503              		.loc 1 1478 0
 1504 000a 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 1505 000c 3B61     		str	r3, [r7, #16]	@ tmp115, pxQueue
1479:FreeRTOS/queue.c **** 
1480:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1506              		.loc 1 1480 0
 1507 000e 3B69     		ldr	r3, [r7, #16]	@ tmp116, pxQueue
 1508 0010 002B     		cmp	r3, #0	@ tmp116,
 1509 0012 02D1     		bne	.L126	@,
 1510              		.loc 1 1480 0 is_stmt 0 discriminator 1
 1511 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1512              	.L127:
 1513 0018 FEE7     		b	.L127	@
 1514              	.L126:
1481:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1515              		.loc 1 1481 0 is_stmt 1
 1516 001a 3B68     		ldr	r3, [r7]	@ tmp117, pvBuffer
 1517 001c 002B     		cmp	r3, #0	@ tmp117,
 1518 001e 03D1     		bne	.L128	@,
 1519              		.loc 1 1481 0 is_stmt 0 discriminator 2
 1520 0020 3B69     		ldr	r3, [r7, #16]	@ tmp118, pxQueue
 1521 0022 1B6C     		ldr	r3, [r3, #64]	@ D.6097, pxQueue_5->uxItemSize
 1522 0024 002B     		cmp	r3, #0	@ D.6097,
 1523 0026 01D1     		bne	.L129	@,
 1524              	.L128:
 1525              		.loc 1 1481 0 discriminator 3
 1526 0028 0123     		movs	r3, #1	@ D.6096,
 1527 002a 00E0     		b	.L130	@
 1528              	.L129:
 1529              		.loc 1 1481 0 discriminator 4
 1530 002c 0023     		movs	r3, #0	@ D.6096,
 1531              	.L130:
 1532              		.loc 1 1481 0 discriminator 6
 1533 002e 002B     		cmp	r3, #0	@ D.6096,
 1534 0030 02D1     		bne	.L131	@,
 1535              		.loc 1 1481 0 discriminator 7
 1536 0032 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1537              	.L132:
 1538              		.loc 1 1481 0 discriminator 2
 1539 0036 FEE7     		b	.L132	@
 1540              	.L131:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 54


1482:FreeRTOS/queue.c **** 
1483:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1484:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1485:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1486:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1487:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1488:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1489:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1490:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1491:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1492:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1493:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1494:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1495:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1496:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1497:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1541              		.loc 1 1497 0 is_stmt 1
 1542 0038 FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1498:FreeRTOS/queue.c **** 
1499:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1543              		.loc 1 1499 0
 1544 003c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1545 0040 F860     		str	r0, [r7, #12]	@, uxSavedInterruptStatus
1500:FreeRTOS/queue.c **** 	{
1501:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1502:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1546              		.loc 1 1502 0
 1547 0042 3B69     		ldr	r3, [r7, #16]	@ tmp119, pxQueue
 1548 0044 9B6B     		ldr	r3, [r3, #56]	@ D.6097, pxQueue_5->uxMessagesWaiting
 1549 0046 002B     		cmp	r3, #0	@ D.6097,
 1550 0048 0CD0     		beq	.L133	@,
1503:FreeRTOS/queue.c **** 		{
1504:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1505:FreeRTOS/queue.c **** 
1506:FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1507:FreeRTOS/queue.c **** 			actually being removed from the queue. */
1508:FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1551              		.loc 1 1508 0
 1552 004a 3B69     		ldr	r3, [r7, #16]	@ tmp120, pxQueue
 1553 004c DB68     		ldr	r3, [r3, #12]	@ tmp121, pxQueue_5->u.pcReadFrom
 1554 004e BB60     		str	r3, [r7, #8]	@ tmp121, pcOriginalReadPosition
1509:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1555              		.loc 1 1509 0
 1556 0050 3968     		ldr	r1, [r7]	@, pvBuffer
 1557 0052 3869     		ldr	r0, [r7, #16]	@, pxQueue
 1558 0054 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1510:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1559              		.loc 1 1510 0
 1560 0058 3B69     		ldr	r3, [r7, #16]	@ tmp122, pxQueue
 1561 005a BA68     		ldr	r2, [r7, #8]	@ tmp123, pcOriginalReadPosition
 1562 005c DA60     		str	r2, [r3, #12]	@ tmp123, pxQueue_5->u.pcReadFrom
1511:FreeRTOS/queue.c **** 
1512:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1563              		.loc 1 1512 0
 1564 005e 0123     		movs	r3, #1	@ tmp124,
 1565 0060 7B61     		str	r3, [r7, #20]	@ tmp124, xReturn
 1566 0062 01E0     		b	.L134	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 55


 1567              	.L133:
1513:FreeRTOS/queue.c **** 		}
1514:FreeRTOS/queue.c **** 		else
1515:FreeRTOS/queue.c **** 		{
1516:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1568              		.loc 1 1516 0
 1569 0064 0023     		movs	r3, #0	@ tmp125,
 1570 0066 7B61     		str	r3, [r7, #20]	@ tmp125, xReturn
 1571              	.L134:
1517:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1518:FreeRTOS/queue.c **** 		}
1519:FreeRTOS/queue.c **** 	}
1520:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1572              		.loc 1 1520 0
 1573 0068 F868     		ldr	r0, [r7, #12]	@, uxSavedInterruptStatus
 1574 006a FFF7FEFF 		bl	vPortClearInterruptMask	@
1521:FreeRTOS/queue.c **** 
1522:FreeRTOS/queue.c **** 	return xReturn;
 1575              		.loc 1 1522 0
 1576 006e 7B69     		ldr	r3, [r7, #20]	@ D.6098, xReturn
1523:FreeRTOS/queue.c **** }
 1577              		.loc 1 1523 0
 1578 0070 1846     		mov	r0, r3	@, <retval>
 1579 0072 1837     		adds	r7, r7, #24	@,,
 1580              		.cfi_def_cfa_offset 8
 1581 0074 BD46     		mov	sp, r7	@,
 1582              		.cfi_def_cfa_register 13
 1583              		@ sp needed	@
 1584 0076 80BD     		pop	{r7, pc}	@
 1585              		.cfi_endproc
 1586              	.LFE11:
 1587              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1588              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1589              		.align	2
 1590              		.global	uxQueueMessagesWaiting
 1591              		.thumb
 1592              		.thumb_func
 1593              		.type	uxQueueMessagesWaiting, %function
 1594              	uxQueueMessagesWaiting:
 1595              	.LFB12:
1524:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1525:FreeRTOS/queue.c **** 
1526:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1527:FreeRTOS/queue.c **** {
 1596              		.loc 1 1527 0
 1597              		.cfi_startproc
 1598              		@ args = 0, pretend = 0, frame = 16
 1599              		@ frame_needed = 1, uses_anonymous_args = 0
 1600 0000 80B5     		push	{r7, lr}	@
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 84B0     		sub	sp, sp, #16	@,,
 1605              		.cfi_def_cfa_offset 24
 1606 0004 00AF     		add	r7, sp, #0	@,,
 1607              		.cfi_def_cfa_register 7
 1608 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 56


1528:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1529:FreeRTOS/queue.c **** 
1530:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1609              		.loc 1 1530 0
 1610 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1611 000a 002B     		cmp	r3, #0	@ tmp112,
 1612 000c 02D1     		bne	.L137	@,
 1613              		.loc 1 1530 0 is_stmt 0 discriminator 1
 1614 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1615              	.L138:
 1616 0012 FEE7     		b	.L138	@
 1617              	.L137:
1531:FreeRTOS/queue.c **** 
1532:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1618              		.loc 1 1532 0 is_stmt 1
 1619 0014 FFF7FEFF 		bl	vPortEnterCritical	@
1533:FreeRTOS/queue.c **** 	{
1534:FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1620              		.loc 1 1534 0
 1621 0018 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1622 001a 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1623 001c FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1535:FreeRTOS/queue.c **** 	}
1536:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1624              		.loc 1 1536 0
 1625 001e FFF7FEFF 		bl	vPortExitCritical	@
1537:FreeRTOS/queue.c **** 
1538:FreeRTOS/queue.c **** 	return uxReturn;
 1626              		.loc 1 1538 0
 1627 0022 FB68     		ldr	r3, [r7, #12]	@ D.6099, uxReturn
1539:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1628              		.loc 1 1539 0
 1629 0024 1846     		mov	r0, r3	@, <retval>
 1630 0026 1037     		adds	r7, r7, #16	@,,
 1631              		.cfi_def_cfa_offset 8
 1632 0028 BD46     		mov	sp, r7	@,
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed	@
 1635 002a 80BD     		pop	{r7, pc}	@
 1636              		.cfi_endproc
 1637              	.LFE12:
 1638              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1639              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1640              		.align	2
 1641              		.global	uxQueueSpacesAvailable
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	uxQueueSpacesAvailable, %function
 1645              	uxQueueSpacesAvailable:
 1646              	.LFB13:
1540:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1541:FreeRTOS/queue.c **** 
1542:FreeRTOS/queue.c **** UBaseT_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1543:FreeRTOS/queue.c **** {
 1647              		.loc 1 1543 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 57


 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651 0000 80B5     		push	{r7, lr}	@
 1652              		.cfi_def_cfa_offset 8
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 84B0     		sub	sp, sp, #16	@,,
 1656              		.cfi_def_cfa_offset 24
 1657 0004 00AF     		add	r7, sp, #0	@,,
 1658              		.cfi_def_cfa_register 7
 1659 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1544:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1545:FreeRTOS/queue.c **** Queue_t *pxQueue;
1546:FreeRTOS/queue.c **** 
1547:FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 1660              		.loc 1 1547 0
 1661 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 1662 000a FB60     		str	r3, [r7, #12]	@ tmp114, pxQueue
1548:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1663              		.loc 1 1548 0
 1664 000c FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1665 000e 002B     		cmp	r3, #0	@ tmp115,
 1666 0010 02D1     		bne	.L141	@,
 1667              		.loc 1 1548 0 is_stmt 0 discriminator 1
 1668 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1669              	.L142:
 1670 0016 FEE7     		b	.L142	@
 1671              	.L141:
1549:FreeRTOS/queue.c **** 
1550:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1672              		.loc 1 1550 0 is_stmt 1
 1673 0018 FFF7FEFF 		bl	vPortEnterCritical	@
1551:FreeRTOS/queue.c **** 	{
1552:FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 1674              		.loc 1 1552 0
 1675 001c FB68     		ldr	r3, [r7, #12]	@ tmp116, pxQueue
 1676 001e DA6B     		ldr	r2, [r3, #60]	@ D.6100, pxQueue_2->uxLength
 1677 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxQueue
 1678 0022 9B6B     		ldr	r3, [r3, #56]	@ D.6100, pxQueue_2->uxMessagesWaiting
 1679 0024 D31A     		subs	r3, r2, r3	@ tmp118, D.6100, D.6100
 1680 0026 BB60     		str	r3, [r7, #8]	@ tmp118, uxReturn
1553:FreeRTOS/queue.c **** 	}
1554:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1681              		.loc 1 1554 0
 1682 0028 FFF7FEFF 		bl	vPortExitCritical	@
1555:FreeRTOS/queue.c **** 
1556:FreeRTOS/queue.c **** 	return uxReturn;
 1683              		.loc 1 1556 0
 1684 002c BB68     		ldr	r3, [r7, #8]	@ D.6101, uxReturn
1557:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1685              		.loc 1 1557 0
 1686 002e 1846     		mov	r0, r3	@, <retval>
 1687 0030 1037     		adds	r7, r7, #16	@,,
 1688              		.cfi_def_cfa_offset 8
 1689 0032 BD46     		mov	sp, r7	@,
 1690              		.cfi_def_cfa_register 13
 1691              		@ sp needed	@
 1692 0034 80BD     		pop	{r7, pc}	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 58


 1693              		.cfi_endproc
 1694              	.LFE13:
 1695              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1696 0036 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1697              		.align	2
 1698              		.global	uxQueueMessagesWaitingFromISR
 1699              		.thumb
 1700              		.thumb_func
 1701              		.type	uxQueueMessagesWaitingFromISR, %function
 1702              	uxQueueMessagesWaitingFromISR:
 1703              	.LFB14:
1558:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1559:FreeRTOS/queue.c **** 
1560:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1561:FreeRTOS/queue.c **** {
 1704              		.loc 1 1561 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 80B5     		push	{r7, lr}	@
 1709              		.cfi_def_cfa_offset 8
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 84B0     		sub	sp, sp, #16	@,,
 1713              		.cfi_def_cfa_offset 24
 1714 0004 00AF     		add	r7, sp, #0	@,,
 1715              		.cfi_def_cfa_register 7
 1716 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1562:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1563:FreeRTOS/queue.c **** 
1564:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1717              		.loc 1 1564 0
 1718 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1719 000a 002B     		cmp	r3, #0	@ tmp112,
 1720 000c 02D1     		bne	.L145	@,
 1721              		.loc 1 1564 0 is_stmt 0 discriminator 1
 1722 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1723              	.L146:
 1724 0012 FEE7     		b	.L146	@
 1725              	.L145:
1565:FreeRTOS/queue.c **** 
1566:FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1726              		.loc 1 1566 0 is_stmt 1
 1727 0014 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1728 0016 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1729 0018 FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1567:FreeRTOS/queue.c **** 
1568:FreeRTOS/queue.c **** 	return uxReturn;
 1730              		.loc 1 1568 0
 1731 001a FB68     		ldr	r3, [r7, #12]	@ D.6102, uxReturn
1569:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1732              		.loc 1 1569 0
 1733 001c 1846     		mov	r0, r3	@, <retval>
 1734 001e 1037     		adds	r7, r7, #16	@,,
 1735              		.cfi_def_cfa_offset 8
 1736 0020 BD46     		mov	sp, r7	@,
 1737              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 59


 1738              		@ sp needed	@
 1739 0022 80BD     		pop	{r7, pc}	@
 1740              		.cfi_endproc
 1741              	.LFE14:
 1742              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1743              		.section	.text.vQueueDelete,"ax",%progbits
 1744              		.align	2
 1745              		.global	vQueueDelete
 1746              		.thumb
 1747              		.thumb_func
 1748              		.type	vQueueDelete, %function
 1749              	vQueueDelete:
 1750              	.LFB15:
1570:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1571:FreeRTOS/queue.c **** 
1572:FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1573:FreeRTOS/queue.c **** {
 1751              		.loc 1 1573 0
 1752              		.cfi_startproc
 1753              		@ args = 0, pretend = 0, frame = 16
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 0000 80B5     		push	{r7, lr}	@
 1756              		.cfi_def_cfa_offset 8
 1757              		.cfi_offset 7, -8
 1758              		.cfi_offset 14, -4
 1759 0002 84B0     		sub	sp, sp, #16	@,,
 1760              		.cfi_def_cfa_offset 24
 1761 0004 00AF     		add	r7, sp, #0	@,,
 1762              		.cfi_def_cfa_register 7
 1763 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1574:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1764              		.loc 1 1574 0
 1765 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1766 000a FB60     		str	r3, [r7, #12]	@ tmp112, pxQueue
1575:FreeRTOS/queue.c **** 
1576:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1767              		.loc 1 1576 0
 1768 000c FB68     		ldr	r3, [r7, #12]	@ tmp113, pxQueue
 1769 000e 002B     		cmp	r3, #0	@ tmp113,
 1770 0010 02D1     		bne	.L149	@,
 1771              		.loc 1 1576 0 is_stmt 0 discriminator 1
 1772 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1773              	.L150:
 1774 0016 FEE7     		b	.L150	@
 1775              	.L149:
1577:FreeRTOS/queue.c **** 
1578:FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1579:FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1580:FreeRTOS/queue.c **** 	{
1581:FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 1776              		.loc 1 1581 0 is_stmt 1
 1777 0018 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1778 001a FFF7FEFF 		bl	vQueueUnregisterQueue	@
1582:FreeRTOS/queue.c **** 	}
1583:FreeRTOS/queue.c **** 	#endif
1584:FreeRTOS/queue.c **** 	if( pxQueue->pcHead != NULL )
 1779              		.loc 1 1584 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 60


 1780 001e FB68     		ldr	r3, [r7, #12]	@ tmp114, pxQueue
 1781 0020 1B68     		ldr	r3, [r3]	@ D.6103, pxQueue_3->pcHead
 1782 0022 002B     		cmp	r3, #0	@ D.6103,
 1783 0024 04D0     		beq	.L151	@,
1585:FreeRTOS/queue.c **** 	{
1586:FreeRTOS/queue.c **** 		vPortFree( pxQueue->pcHead );
 1784              		.loc 1 1586 0
 1785 0026 FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1786 0028 1B68     		ldr	r3, [r3]	@ D.6103, pxQueue_3->pcHead
 1787 002a 1846     		mov	r0, r3	@, D.6103
 1788 002c FFF7FEFF 		bl	vPortFree	@
 1789              	.L151:
1587:FreeRTOS/queue.c **** 	}
1588:FreeRTOS/queue.c **** 	vPortFree( pxQueue );
 1790              		.loc 1 1588 0
 1791 0030 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1792 0032 FFF7FEFF 		bl	vPortFree	@
1589:FreeRTOS/queue.c **** }
 1793              		.loc 1 1589 0
 1794 0036 00BF     		nop
 1795 0038 1037     		adds	r7, r7, #16	@,,
 1796              		.cfi_def_cfa_offset 8
 1797 003a BD46     		mov	sp, r7	@,
 1798              		.cfi_def_cfa_register 13
 1799              		@ sp needed	@
 1800 003c 80BD     		pop	{r7, pc}	@
 1801              		.cfi_endproc
 1802              	.LFE15:
 1803              		.size	vQueueDelete, .-vQueueDelete
 1804 003e 00BF     		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 1805              		.align	2
 1806              		.global	uxQueueGetQueueNumber
 1807              		.thumb
 1808              		.thumb_func
 1809              		.type	uxQueueGetQueueNumber, %function
 1810              	uxQueueGetQueueNumber:
 1811              	.LFB16:
1590:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1591:FreeRTOS/queue.c **** 
1592:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1593:FreeRTOS/queue.c **** 
1594:FreeRTOS/queue.c **** 	UBaseT_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1595:FreeRTOS/queue.c **** 	{
 1812              		.loc 1 1595 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 8
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816              		@ link register save eliminated.
 1817 0000 80B4     		push	{r7}	@
 1818              		.cfi_def_cfa_offset 4
 1819              		.cfi_offset 7, -4
 1820 0002 83B0     		sub	sp, sp, #12	@,,
 1821              		.cfi_def_cfa_offset 16
 1822 0004 00AF     		add	r7, sp, #0	@,,
 1823              		.cfi_def_cfa_register 7
 1824 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1596:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 61


 1825              		.loc 1 1596 0
 1826 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1827 000a DB6C     		ldr	r3, [r3, #76]	@ D.6104, MEM[(struct Queue_t *)xQueue_2(D)].uxQueueNumber
1597:FreeRTOS/queue.c **** 	}
 1828              		.loc 1 1597 0
 1829 000c 1846     		mov	r0, r3	@, <retval>
 1830 000e 0C37     		adds	r7, r7, #12	@,,
 1831              		.cfi_def_cfa_offset 4
 1832 0010 BD46     		mov	sp, r7	@,
 1833              		.cfi_def_cfa_register 13
 1834              		@ sp needed	@
 1835 0012 80BC     		pop	{r7}	@
 1836              		.cfi_restore 7
 1837              		.cfi_def_cfa_offset 0
 1838 0014 7047     		bx	lr	@
 1839              		.cfi_endproc
 1840              	.LFE16:
 1841              		.size	uxQueueGetQueueNumber, .-uxQueueGetQueueNumber
 1842 0016 00BF     		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 1843              		.align	2
 1844              		.global	vQueueSetQueueNumber
 1845              		.thumb
 1846              		.thumb_func
 1847              		.type	vQueueSetQueueNumber, %function
 1848              	vQueueSetQueueNumber:
 1849              	.LFB17:
1598:FreeRTOS/queue.c **** 
1599:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1600:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1601:FreeRTOS/queue.c **** 
1602:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1603:FreeRTOS/queue.c **** 
1604:FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseT_t uxQueueNumber )
1605:FreeRTOS/queue.c **** 	{
 1850              		.loc 1 1605 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 8
 1853              		@ frame_needed = 1, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
 1855 0000 80B4     		push	{r7}	@
 1856              		.cfi_def_cfa_offset 4
 1857              		.cfi_offset 7, -4
 1858 0002 83B0     		sub	sp, sp, #12	@,,
 1859              		.cfi_def_cfa_offset 16
 1860 0004 00AF     		add	r7, sp, #0	@,,
 1861              		.cfi_def_cfa_register 7
 1862 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1863 0008 3960     		str	r1, [r7]	@ uxQueueNumber, uxQueueNumber
1606:FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 1864              		.loc 1 1606 0
 1865 000a 7B68     		ldr	r3, [r7, #4]	@ tmp110, xQueue
 1866 000c 3A68     		ldr	r2, [r7]	@ tmp111, uxQueueNumber
 1867 000e DA64     		str	r2, [r3, #76]	@ tmp111, MEM[(struct Queue_t *)xQueue_2(D)].uxQueueNumber
1607:FreeRTOS/queue.c **** 	}
 1868              		.loc 1 1607 0
 1869 0010 00BF     		nop
 1870 0012 0C37     		adds	r7, r7, #12	@,,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 62


 1871              		.cfi_def_cfa_offset 4
 1872 0014 BD46     		mov	sp, r7	@,
 1873              		.cfi_def_cfa_register 13
 1874              		@ sp needed	@
 1875 0016 80BC     		pop	{r7}	@
 1876              		.cfi_restore 7
 1877              		.cfi_def_cfa_offset 0
 1878 0018 7047     		bx	lr	@
 1879              		.cfi_endproc
 1880              	.LFE17:
 1881              		.size	vQueueSetQueueNumber, .-vQueueSetQueueNumber
 1882 001a 00BF     		.section	.text.ucQueueGetQueueType,"ax",%progbits
 1883              		.align	2
 1884              		.global	ucQueueGetQueueType
 1885              		.thumb
 1886              		.thumb_func
 1887              		.type	ucQueueGetQueueType, %function
 1888              	ucQueueGetQueueType:
 1889              	.LFB18:
1608:FreeRTOS/queue.c **** 
1609:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1610:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1611:FreeRTOS/queue.c **** 
1612:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1613:FreeRTOS/queue.c **** 
1614:FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1615:FreeRTOS/queue.c **** 	{
 1890              		.loc 1 1615 0
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 8
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894              		@ link register save eliminated.
 1895 0000 80B4     		push	{r7}	@
 1896              		.cfi_def_cfa_offset 4
 1897              		.cfi_offset 7, -4
 1898 0002 83B0     		sub	sp, sp, #12	@,,
 1899              		.cfi_def_cfa_offset 16
 1900 0004 00AF     		add	r7, sp, #0	@,,
 1901              		.cfi_def_cfa_register 7
 1902 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1616:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 1903              		.loc 1 1616 0
 1904 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1905 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2	@ D.6105, MEM[(struct Queue_t *)xQueue_2(D)].ucQueueType
1617:FreeRTOS/queue.c **** 	}
 1906              		.loc 1 1617 0
 1907 000e 1846     		mov	r0, r3	@, <retval>
 1908 0010 0C37     		adds	r7, r7, #12	@,,
 1909              		.cfi_def_cfa_offset 4
 1910 0012 BD46     		mov	sp, r7	@,
 1911              		.cfi_def_cfa_register 13
 1912              		@ sp needed	@
 1913 0014 80BC     		pop	{r7}	@
 1914              		.cfi_restore 7
 1915              		.cfi_def_cfa_offset 0
 1916 0016 7047     		bx	lr	@
 1917              		.cfi_endproc
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 63


 1918              	.LFE18:
 1919              		.size	ucQueueGetQueueType, .-ucQueueGetQueueType
 1920              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 1921              		.align	2
 1922              		.thumb
 1923              		.thumb_func
 1924              		.type	prvCopyDataToQueue, %function
 1925              	prvCopyDataToQueue:
 1926              	.LFB19:
1618:FreeRTOS/queue.c **** 
1619:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1620:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1621:FreeRTOS/queue.c **** 
1622:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
1623:FreeRTOS/queue.c **** {
 1927              		.loc 1 1623 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 24
 1930              		@ frame_needed = 1, uses_anonymous_args = 0
 1931 0000 80B5     		push	{r7, lr}	@
 1932              		.cfi_def_cfa_offset 8
 1933              		.cfi_offset 7, -8
 1934              		.cfi_offset 14, -4
 1935 0002 86B0     		sub	sp, sp, #24	@,,
 1936              		.cfi_def_cfa_offset 32
 1937 0004 00AF     		add	r7, sp, #0	@,,
 1938              		.cfi_def_cfa_register 7
 1939 0006 F860     		str	r0, [r7, #12]	@ pxQueue, pxQueue
 1940 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 1941 000a 7A60     		str	r2, [r7, #4]	@ xPosition, xPosition
1624:FreeRTOS/queue.c **** BaseT_t xReturn = pdFALSE;
 1942              		.loc 1 1624 0
 1943 000c 0023     		movs	r3, #0	@ tmp140,
 1944 000e 7B61     		str	r3, [r7, #20]	@ tmp140, xReturn
1625:FreeRTOS/queue.c **** 
1626:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseT_t ) 0 )
 1945              		.loc 1 1626 0
 1946 0010 FB68     		ldr	r3, [r7, #12]	@ tmp141, pxQueue
 1947 0012 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 1948 0014 002B     		cmp	r3, #0	@ D.6106,
 1949 0016 0DD1     		bne	.L158	@,
1627:FreeRTOS/queue.c **** 	{
1628:FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1629:FreeRTOS/queue.c **** 		{
1630:FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1950              		.loc 1 1630 0
 1951 0018 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 1952 001a 1B68     		ldr	r3, [r3]	@ D.6107, pxQueue_6(D)->pcHead
 1953 001c 002B     		cmp	r3, #0	@ D.6107,
 1954 001e 50D1     		bne	.L159	@,
1631:FreeRTOS/queue.c **** 			{
1632:FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
1633:FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 1955              		.loc 1 1633 0
 1956 0020 FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
 1957 0022 5B68     		ldr	r3, [r3, #4]	@ D.6107, pxQueue_6(D)->pcTail
 1958 0024 1846     		mov	r0, r3	@, D.6107
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 64


 1959 0026 FFF7FEFF 		bl	xTaskPriorityDisinherit	@
 1960 002a 7861     		str	r0, [r7, #20]	@, xReturn
1634:FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1961              		.loc 1 1634 0
 1962 002c FB68     		ldr	r3, [r7, #12]	@ tmp144, pxQueue
 1963 002e 0022     		movs	r2, #0	@ tmp145,
 1964 0030 5A60     		str	r2, [r3, #4]	@ tmp145, pxQueue_6(D)->pcTail
 1965 0032 46E0     		b	.L159	@
 1966              	.L158:
1635:FreeRTOS/queue.c **** 			}
1636:FreeRTOS/queue.c **** 			else
1637:FreeRTOS/queue.c **** 			{
1638:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1639:FreeRTOS/queue.c **** 			}
1640:FreeRTOS/queue.c **** 		}
1641:FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
1642:FreeRTOS/queue.c **** 	}
1643:FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 1967              		.loc 1 1643 0
 1968 0034 7B68     		ldr	r3, [r7, #4]	@ tmp146, xPosition
 1969 0036 002B     		cmp	r3, #0	@ tmp146,
 1970 0038 19D1     		bne	.L160	@,
1644:FreeRTOS/queue.c **** 	{
1645:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 1971              		.loc 1 1645 0
 1972 003a FB68     		ldr	r3, [r7, #12]	@ tmp147, pxQueue
 1973 003c 9868     		ldr	r0, [r3, #8]	@ D.6107, pxQueue_6(D)->pcWriteTo
 1974 003e FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 1975 0040 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 1976 0042 1A46     		mov	r2, r3	@, D.6106
 1977 0044 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 1978 0046 FFF7FEFF 		bl	memcpy	@
1646:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1979              		.loc 1 1646 0
 1980 004a FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 1981 004c 9A68     		ldr	r2, [r3, #8]	@ D.6107, pxQueue_6(D)->pcWriteTo
 1982 004e FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 1983 0050 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 1984 0052 1A44     		add	r2, r2, r3	@ D.6107, D.6106
 1985 0054 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 1986 0056 9A60     		str	r2, [r3, #8]	@ D.6107, pxQueue_6(D)->pcWriteTo
1647:FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1987              		.loc 1 1647 0
 1988 0058 FB68     		ldr	r3, [r7, #12]	@ tmp152, pxQueue
 1989 005a 9A68     		ldr	r2, [r3, #8]	@ D.6107, pxQueue_6(D)->pcWriteTo
 1990 005c FB68     		ldr	r3, [r7, #12]	@ tmp153, pxQueue
 1991 005e 5B68     		ldr	r3, [r3, #4]	@ D.6107, pxQueue_6(D)->pcTail
 1992 0060 9A42     		cmp	r2, r3	@ D.6107, D.6107
 1993 0062 2ED3     		bcc	.L159	@,
1648:FreeRTOS/queue.c **** 		{
1649:FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 1994              		.loc 1 1649 0
 1995 0064 FB68     		ldr	r3, [r7, #12]	@ tmp154, pxQueue
 1996 0066 1A68     		ldr	r2, [r3]	@ D.6107, pxQueue_6(D)->pcHead
 1997 0068 FB68     		ldr	r3, [r7, #12]	@ tmp155, pxQueue
 1998 006a 9A60     		str	r2, [r3, #8]	@ D.6107, pxQueue_6(D)->pcWriteTo
 1999 006c 29E0     		b	.L159	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 65


 2000              	.L160:
1650:FreeRTOS/queue.c **** 		}
1651:FreeRTOS/queue.c **** 		else
1652:FreeRTOS/queue.c **** 		{
1653:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1654:FreeRTOS/queue.c **** 		}
1655:FreeRTOS/queue.c **** 	}
1656:FreeRTOS/queue.c **** 	else
1657:FreeRTOS/queue.c **** 	{
1658:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 2001              		.loc 1 1658 0
 2002 006e FB68     		ldr	r3, [r7, #12]	@ tmp156, pxQueue
 2003 0070 D868     		ldr	r0, [r3, #12]	@ D.6107, pxQueue_6(D)->u.pcReadFrom
 2004 0072 FB68     		ldr	r3, [r7, #12]	@ tmp157, pxQueue
 2005 0074 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 2006 0076 1A46     		mov	r2, r3	@, D.6106
 2007 0078 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 2008 007a FFF7FEFF 		bl	memcpy	@
1659:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 2009              		.loc 1 1659 0
 2010 007e FB68     		ldr	r3, [r7, #12]	@ tmp158, pxQueue
 2011 0080 DA68     		ldr	r2, [r3, #12]	@ D.6107, pxQueue_6(D)->u.pcReadFrom
 2012 0082 FB68     		ldr	r3, [r7, #12]	@ tmp159, pxQueue
 2013 0084 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 2014 0086 5B42     		negs	r3, r3	@ D.6108, D.6106
 2015 0088 1A44     		add	r2, r2, r3	@ D.6107, D.6108
 2016 008a FB68     		ldr	r3, [r7, #12]	@ tmp160, pxQueue
 2017 008c DA60     		str	r2, [r3, #12]	@ D.6107, pxQueue_6(D)->u.pcReadFrom
1660:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 2018              		.loc 1 1660 0
 2019 008e FB68     		ldr	r3, [r7, #12]	@ tmp161, pxQueue
 2020 0090 DA68     		ldr	r2, [r3, #12]	@ D.6107, pxQueue_6(D)->u.pcReadFrom
 2021 0092 FB68     		ldr	r3, [r7, #12]	@ tmp162, pxQueue
 2022 0094 1B68     		ldr	r3, [r3]	@ D.6107, pxQueue_6(D)->pcHead
 2023 0096 9A42     		cmp	r2, r3	@ D.6107, D.6107
 2024 0098 07D2     		bcs	.L161	@,
1661:FreeRTOS/queue.c **** 		{
1662:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 2025              		.loc 1 1662 0
 2026 009a FB68     		ldr	r3, [r7, #12]	@ tmp163, pxQueue
 2027 009c 5A68     		ldr	r2, [r3, #4]	@ D.6107, pxQueue_6(D)->pcTail
 2028 009e FB68     		ldr	r3, [r7, #12]	@ tmp164, pxQueue
 2029 00a0 1B6C     		ldr	r3, [r3, #64]	@ D.6106, pxQueue_6(D)->uxItemSize
 2030 00a2 5B42     		negs	r3, r3	@ D.6108, D.6106
 2031 00a4 1A44     		add	r2, r2, r3	@ D.6107, D.6108
 2032 00a6 FB68     		ldr	r3, [r7, #12]	@ tmp165, pxQueue
 2033 00a8 DA60     		str	r2, [r3, #12]	@ D.6107, pxQueue_6(D)->u.pcReadFrom
 2034              	.L161:
1663:FreeRTOS/queue.c **** 		}
1664:FreeRTOS/queue.c **** 		else
1665:FreeRTOS/queue.c **** 		{
1666:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1667:FreeRTOS/queue.c **** 		}
1668:FreeRTOS/queue.c **** 
1669:FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
 2035              		.loc 1 1669 0
 2036 00aa 7B68     		ldr	r3, [r7, #4]	@ tmp166, xPosition
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 66


 2037 00ac 022B     		cmp	r3, #2	@ tmp166,
 2038 00ae 08D1     		bne	.L159	@,
1670:FreeRTOS/queue.c **** 		{
1671:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 2039              		.loc 1 1671 0
 2040 00b0 FB68     		ldr	r3, [r7, #12]	@ tmp167, pxQueue
 2041 00b2 9B6B     		ldr	r3, [r3, #56]	@ D.6106, pxQueue_6(D)->uxMessagesWaiting
 2042 00b4 002B     		cmp	r3, #0	@ D.6106,
 2043 00b6 04D0     		beq	.L159	@,
1672:FreeRTOS/queue.c **** 			{
1673:FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
1674:FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
1675:FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
1676:FreeRTOS/queue.c **** 				correct. */
1677:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
 2044              		.loc 1 1677 0
 2045 00b8 FB68     		ldr	r3, [r7, #12]	@ tmp168, pxQueue
 2046 00ba 9B6B     		ldr	r3, [r3, #56]	@ D.6106, pxQueue_6(D)->uxMessagesWaiting
 2047 00bc 5A1E     		subs	r2, r3, #1	@ D.6106, D.6106,
 2048 00be FB68     		ldr	r3, [r7, #12]	@ tmp169, pxQueue
 2049 00c0 9A63     		str	r2, [r3, #56]	@ D.6106, pxQueue_6(D)->uxMessagesWaiting
 2050              	.L159:
1678:FreeRTOS/queue.c **** 			}
1679:FreeRTOS/queue.c **** 			else
1680:FreeRTOS/queue.c **** 			{
1681:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1682:FreeRTOS/queue.c **** 			}
1683:FreeRTOS/queue.c **** 		}
1684:FreeRTOS/queue.c **** 		else
1685:FreeRTOS/queue.c **** 		{
1686:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1687:FreeRTOS/queue.c **** 		}
1688:FreeRTOS/queue.c **** 	}
1689:FreeRTOS/queue.c **** 
1690:FreeRTOS/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 2051              		.loc 1 1690 0
 2052 00c2 FB68     		ldr	r3, [r7, #12]	@ tmp170, pxQueue
 2053 00c4 9B6B     		ldr	r3, [r3, #56]	@ D.6106, pxQueue_6(D)->uxMessagesWaiting
 2054 00c6 5A1C     		adds	r2, r3, #1	@ D.6106, D.6106,
 2055 00c8 FB68     		ldr	r3, [r7, #12]	@ tmp171, pxQueue
 2056 00ca 9A63     		str	r2, [r3, #56]	@ D.6106, pxQueue_6(D)->uxMessagesWaiting
1691:FreeRTOS/queue.c **** 
1692:FreeRTOS/queue.c **** 	return xReturn;
 2057              		.loc 1 1692 0
 2058 00cc 7B69     		ldr	r3, [r7, #20]	@ D.6109, xReturn
1693:FreeRTOS/queue.c **** }
 2059              		.loc 1 1693 0
 2060 00ce 1846     		mov	r0, r3	@, <retval>
 2061 00d0 1837     		adds	r7, r7, #24	@,,
 2062              		.cfi_def_cfa_offset 8
 2063 00d2 BD46     		mov	sp, r7	@,
 2064              		.cfi_def_cfa_register 13
 2065              		@ sp needed	@
 2066 00d4 80BD     		pop	{r7, pc}	@
 2067              		.cfi_endproc
 2068              	.LFE19:
 2069              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 67


 2070 00d6 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 2071              		.align	2
 2072              		.thumb
 2073              		.thumb_func
 2074              		.type	prvCopyDataFromQueue, %function
 2075              	prvCopyDataFromQueue:
 2076              	.LFB20:
1694:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1695:FreeRTOS/queue.c **** 
1696:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1697:FreeRTOS/queue.c **** {
 2077              		.loc 1 1697 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 8
 2080              		@ frame_needed = 1, uses_anonymous_args = 0
 2081 0000 80B5     		push	{r7, lr}	@
 2082              		.cfi_def_cfa_offset 8
 2083              		.cfi_offset 7, -8
 2084              		.cfi_offset 14, -4
 2085 0002 82B0     		sub	sp, sp, #8	@,,
 2086              		.cfi_def_cfa_offset 16
 2087 0004 00AF     		add	r7, sp, #0	@,,
 2088              		.cfi_def_cfa_register 7
 2089 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
 2090 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1698:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseT_t ) 0 )
 2091              		.loc 1 1698 0
 2092 000a 7B68     		ldr	r3, [r7, #4]	@ tmp119, pxQueue
 2093 000c 1B6C     		ldr	r3, [r3, #64]	@ D.6110, pxQueue_4(D)->uxItemSize
 2094 000e 002B     		cmp	r3, #0	@ D.6110,
 2095 0010 18D0     		beq	.L166	@,
1699:FreeRTOS/queue.c **** 	{
1700:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 2096              		.loc 1 1700 0
 2097 0012 7B68     		ldr	r3, [r7, #4]	@ tmp120, pxQueue
 2098 0014 DA68     		ldr	r2, [r3, #12]	@ D.6111, pxQueue_4(D)->u.pcReadFrom
 2099 0016 7B68     		ldr	r3, [r7, #4]	@ tmp121, pxQueue
 2100 0018 1B6C     		ldr	r3, [r3, #64]	@ D.6110, pxQueue_4(D)->uxItemSize
 2101 001a 1A44     		add	r2, r2, r3	@ D.6111, D.6110
 2102 001c 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2103 001e DA60     		str	r2, [r3, #12]	@ D.6111, pxQueue_4(D)->u.pcReadFrom
1701:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2104              		.loc 1 1701 0
 2105 0020 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2106 0022 DA68     		ldr	r2, [r3, #12]	@ D.6111, pxQueue_4(D)->u.pcReadFrom
 2107 0024 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2108 0026 5B68     		ldr	r3, [r3, #4]	@ D.6111, pxQueue_4(D)->pcTail
 2109 0028 9A42     		cmp	r2, r3	@ D.6111, D.6111
 2110 002a 03D3     		bcc	.L165	@,
1702:FreeRTOS/queue.c **** 		{
1703:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 2111              		.loc 1 1703 0
 2112 002c 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
 2113 002e 1A68     		ldr	r2, [r3]	@ D.6111, pxQueue_4(D)->pcHead
 2114 0030 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2115 0032 DA60     		str	r2, [r3, #12]	@ D.6111, pxQueue_4(D)->u.pcReadFrom
 2116              	.L165:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 68


1704:FreeRTOS/queue.c **** 		}
1705:FreeRTOS/queue.c **** 		else
1706:FreeRTOS/queue.c **** 		{
1707:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1708:FreeRTOS/queue.c **** 		}
1709:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 2117              		.loc 1 1709 0
 2118 0034 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2119 0036 D968     		ldr	r1, [r3, #12]	@ D.6111, pxQueue_4(D)->u.pcReadFrom
 2120 0038 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxQueue
 2121 003a 1B6C     		ldr	r3, [r3, #64]	@ D.6110, pxQueue_4(D)->uxItemSize
 2122 003c 1A46     		mov	r2, r3	@, D.6110
 2123 003e 3868     		ldr	r0, [r7]	@, pvBuffer
 2124 0040 FFF7FEFF 		bl	memcpy	@
 2125              	.L166:
1710:FreeRTOS/queue.c **** 	}
1711:FreeRTOS/queue.c **** }
 2126              		.loc 1 1711 0
 2127 0044 00BF     		nop
 2128 0046 0837     		adds	r7, r7, #8	@,,
 2129              		.cfi_def_cfa_offset 8
 2130 0048 BD46     		mov	sp, r7	@,
 2131              		.cfi_def_cfa_register 13
 2132              		@ sp needed	@
 2133 004a 80BD     		pop	{r7, pc}	@
 2134              		.cfi_endproc
 2135              	.LFE20:
 2136              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 2137              		.section	.text.prvUnlockQueue,"ax",%progbits
 2138              		.align	2
 2139              		.thumb
 2140              		.thumb_func
 2141              		.type	prvUnlockQueue, %function
 2142              	prvUnlockQueue:
 2143              	.LFB21:
1712:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1713:FreeRTOS/queue.c **** 
1714:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1715:FreeRTOS/queue.c **** {
 2144              		.loc 1 1715 0
 2145              		.cfi_startproc
 2146              		@ args = 0, pretend = 0, frame = 8
 2147              		@ frame_needed = 1, uses_anonymous_args = 0
 2148 0000 80B5     		push	{r7, lr}	@
 2149              		.cfi_def_cfa_offset 8
 2150              		.cfi_offset 7, -8
 2151              		.cfi_offset 14, -4
 2152 0002 82B0     		sub	sp, sp, #8	@,,
 2153              		.cfi_def_cfa_offset 16
 2154 0004 00AF     		add	r7, sp, #0	@,,
 2155              		.cfi_def_cfa_register 7
 2156 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1716:FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1717:FreeRTOS/queue.c **** 
1718:FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1719:FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1720:FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 69


1721:FreeRTOS/queue.c **** 	updated. */
1722:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2157              		.loc 1 1722 0
 2158 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1723:FreeRTOS/queue.c **** 	{
1724:FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
1725:FreeRTOS/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2159              		.loc 1 1725 0
 2160 000c 12E0     		b	.L168	@
 2161              	.L172:
1726:FreeRTOS/queue.c **** 		{
1727:FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1728:FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
1729:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1730:FreeRTOS/queue.c **** 			{
1731:FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1732:FreeRTOS/queue.c **** 				{
1733:FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1734:FreeRTOS/queue.c **** 					{
1735:FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
1736:FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
1737:FreeRTOS/queue.c **** 						A context switch is required. */
1738:FreeRTOS/queue.c **** 						vTaskMissedYield();
1739:FreeRTOS/queue.c **** 					}
1740:FreeRTOS/queue.c **** 					else
1741:FreeRTOS/queue.c **** 					{
1742:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1743:FreeRTOS/queue.c **** 					}
1744:FreeRTOS/queue.c **** 				}
1745:FreeRTOS/queue.c **** 				else
1746:FreeRTOS/queue.c **** 				{
1747:FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get added to
1748:FreeRTOS/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1749:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1750:FreeRTOS/queue.c **** 					{
1751:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1752:FreeRTOS/queue.c **** 						{
1753:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1754:FreeRTOS/queue.c **** 							context	switch is required. */
1755:FreeRTOS/queue.c **** 							vTaskMissedYield();
1756:FreeRTOS/queue.c **** 						}
1757:FreeRTOS/queue.c **** 						else
1758:FreeRTOS/queue.c **** 						{
1759:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1760:FreeRTOS/queue.c **** 						}
1761:FreeRTOS/queue.c **** 					}
1762:FreeRTOS/queue.c **** 					else
1763:FreeRTOS/queue.c **** 					{
1764:FreeRTOS/queue.c **** 						break;
1765:FreeRTOS/queue.c **** 					}
1766:FreeRTOS/queue.c **** 				}
1767:FreeRTOS/queue.c **** 			}
1768:FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1769:FreeRTOS/queue.c **** 			{
1770:FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
1771:FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1772:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 70


 2162              		.loc 1 1772 0
 2163 000e 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2164 0010 5B6A     		ldr	r3, [r3, #36]	@ D.6113, pxQueue_7(D)->xTasksWaitingToReceive.uxNumberOfItems
 2165 0012 002B     		cmp	r3, #0	@ D.6113,
 2166 0014 13D0     		beq	.L178	@,
1773:FreeRTOS/queue.c **** 				{
1774:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2167              		.loc 1 1774 0
 2168 0016 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2169 0018 2433     		adds	r3, r3, #36	@ D.6114, tmp123,
 2170 001a 1846     		mov	r0, r3	@, D.6114
 2171 001c FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2172 0020 0346     		mov	r3, r0	@ D.6112,
 2173 0022 002B     		cmp	r3, #0	@ D.6112,
 2174 0024 01D0     		beq	.L170	@,
1775:FreeRTOS/queue.c **** 					{
1776:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that a
1777:FreeRTOS/queue.c **** 						context	switch is required. */
1778:FreeRTOS/queue.c **** 						vTaskMissedYield();
 2175              		.loc 1 1778 0
 2176 0026 FFF7FEFF 		bl	vTaskMissedYield	@
 2177              	.L170:
1779:FreeRTOS/queue.c **** 					}
1780:FreeRTOS/queue.c **** 					else
1781:FreeRTOS/queue.c **** 					{
1782:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1783:FreeRTOS/queue.c **** 					}
1784:FreeRTOS/queue.c **** 				}
1785:FreeRTOS/queue.c **** 				else
1786:FreeRTOS/queue.c **** 				{
1787:FreeRTOS/queue.c **** 					break;
1788:FreeRTOS/queue.c **** 				}
1789:FreeRTOS/queue.c **** 			}
1790:FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1791:FreeRTOS/queue.c **** 
1792:FreeRTOS/queue.c **** 			--( pxQueue->xTxLock );
 2178              		.loc 1 1792 0
 2179 002a 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2180 002c 9B6C     		ldr	r3, [r3, #72]	@ D.6112, pxQueue_7(D)->xTxLock
 2181 002e 5A1E     		subs	r2, r3, #1	@ D.6112, D.6112,
 2182 0030 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
 2183 0032 9A64     		str	r2, [r3, #72]	@ D.6112, pxQueue_7(D)->xTxLock
 2184              	.L168:
1725:FreeRTOS/queue.c **** 		{
 2185              		.loc 1 1725 0
 2186 0034 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2187 0036 9B6C     		ldr	r3, [r3, #72]	@ D.6112, pxQueue_7(D)->xTxLock
 2188 0038 002B     		cmp	r3, #0	@ D.6112,
 2189 003a E8DC     		bgt	.L172	@,
 2190 003c 00E0     		b	.L171	@
 2191              	.L178:
1787:FreeRTOS/queue.c **** 				}
 2192              		.loc 1 1787 0
 2193 003e 00BF     		nop
 2194              	.L171:
1793:FreeRTOS/queue.c **** 		}
1794:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 71


1795:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 2195              		.loc 1 1795 0
 2196 0040 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2197 0042 4FF0FF32 		mov	r2, #-1	@ tmp128,
 2198 0046 9A64     		str	r2, [r3, #72]	@ tmp128, pxQueue_7(D)->xTxLock
1796:FreeRTOS/queue.c **** 	}
1797:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2199              		.loc 1 1797 0
 2200 0048 FFF7FEFF 		bl	vPortExitCritical	@
1798:FreeRTOS/queue.c **** 
1799:FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
1800:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2201              		.loc 1 1800 0
 2202 004c FFF7FEFF 		bl	vPortEnterCritical	@
1801:FreeRTOS/queue.c **** 	{
1802:FreeRTOS/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2203              		.loc 1 1802 0
 2204 0050 12E0     		b	.L173	@
 2205              	.L177:
1803:FreeRTOS/queue.c **** 		{
1804:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2206              		.loc 1 1804 0
 2207 0052 7B68     		ldr	r3, [r7, #4]	@ tmp129, pxQueue
 2208 0054 1B69     		ldr	r3, [r3, #16]	@ D.6113, pxQueue_7(D)->xTasksWaitingToSend.uxNumberOfItems
 2209 0056 002B     		cmp	r3, #0	@ D.6113,
 2210 0058 13D0     		beq	.L179	@,
1805:FreeRTOS/queue.c **** 			{
1806:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2211              		.loc 1 1806 0
 2212 005a 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxQueue
 2213 005c 1033     		adds	r3, r3, #16	@ D.6114, tmp130,
 2214 005e 1846     		mov	r0, r3	@, D.6114
 2215 0060 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2216 0064 0346     		mov	r3, r0	@ D.6112,
 2217 0066 002B     		cmp	r3, #0	@ D.6112,
 2218 0068 01D0     		beq	.L175	@,
1807:FreeRTOS/queue.c **** 				{
1808:FreeRTOS/queue.c **** 					vTaskMissedYield();
 2219              		.loc 1 1808 0
 2220 006a FFF7FEFF 		bl	vTaskMissedYield	@
 2221              	.L175:
1809:FreeRTOS/queue.c **** 				}
1810:FreeRTOS/queue.c **** 				else
1811:FreeRTOS/queue.c **** 				{
1812:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1813:FreeRTOS/queue.c **** 				}
1814:FreeRTOS/queue.c **** 
1815:FreeRTOS/queue.c **** 				--( pxQueue->xRxLock );
 2222              		.loc 1 1815 0
 2223 006e 7B68     		ldr	r3, [r7, #4]	@ tmp131, pxQueue
 2224 0070 5B6C     		ldr	r3, [r3, #68]	@ D.6112, pxQueue_7(D)->xRxLock
 2225 0072 5A1E     		subs	r2, r3, #1	@ D.6112, D.6112,
 2226 0074 7B68     		ldr	r3, [r7, #4]	@ tmp132, pxQueue
 2227 0076 5A64     		str	r2, [r3, #68]	@ D.6112, pxQueue_7(D)->xRxLock
 2228              	.L173:
1802:FreeRTOS/queue.c **** 		{
 2229              		.loc 1 1802 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 72


 2230 0078 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxQueue
 2231 007a 5B6C     		ldr	r3, [r3, #68]	@ D.6112, pxQueue_7(D)->xRxLock
 2232 007c 002B     		cmp	r3, #0	@ D.6112,
 2233 007e E8DC     		bgt	.L177	@,
 2234 0080 00E0     		b	.L176	@
 2235              	.L179:
1816:FreeRTOS/queue.c **** 			}
1817:FreeRTOS/queue.c **** 			else
1818:FreeRTOS/queue.c **** 			{
1819:FreeRTOS/queue.c **** 				break;
 2236              		.loc 1 1819 0
 2237 0082 00BF     		nop
 2238              	.L176:
1820:FreeRTOS/queue.c **** 			}
1821:FreeRTOS/queue.c **** 		}
1822:FreeRTOS/queue.c **** 
1823:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2239              		.loc 1 1823 0
 2240 0084 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxQueue
 2241 0086 4FF0FF32 		mov	r2, #-1	@ tmp135,
 2242 008a 5A64     		str	r2, [r3, #68]	@ tmp135, pxQueue_7(D)->xRxLock
1824:FreeRTOS/queue.c **** 	}
1825:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2243              		.loc 1 1825 0
 2244 008c FFF7FEFF 		bl	vPortExitCritical	@
1826:FreeRTOS/queue.c **** }
 2245              		.loc 1 1826 0
 2246 0090 00BF     		nop
 2247 0092 0837     		adds	r7, r7, #8	@,,
 2248              		.cfi_def_cfa_offset 8
 2249 0094 BD46     		mov	sp, r7	@,
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed	@
 2252 0096 80BD     		pop	{r7, pc}	@
 2253              		.cfi_endproc
 2254              	.LFE21:
 2255              		.size	prvUnlockQueue, .-prvUnlockQueue
 2256              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 2257              		.align	2
 2258              		.thumb
 2259              		.thumb_func
 2260              		.type	prvIsQueueEmpty, %function
 2261              	prvIsQueueEmpty:
 2262              	.LFB22:
1827:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1828:FreeRTOS/queue.c **** 
1829:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue )
1830:FreeRTOS/queue.c **** {
 2263              		.loc 1 1830 0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 16
 2266              		@ frame_needed = 1, uses_anonymous_args = 0
 2267 0000 80B5     		push	{r7, lr}	@
 2268              		.cfi_def_cfa_offset 8
 2269              		.cfi_offset 7, -8
 2270              		.cfi_offset 14, -4
 2271 0002 84B0     		sub	sp, sp, #16	@,,
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 73


 2272              		.cfi_def_cfa_offset 24
 2273 0004 00AF     		add	r7, sp, #0	@,,
 2274              		.cfi_def_cfa_register 7
 2275 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1831:FreeRTOS/queue.c **** BaseT_t xReturn;
1832:FreeRTOS/queue.c **** 
1833:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2276              		.loc 1 1833 0
 2277 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1834:FreeRTOS/queue.c **** 	{
1835:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseT_t )  0 )
 2278              		.loc 1 1835 0
 2279 000c 7B68     		ldr	r3, [r7, #4]	@ tmp113, pxQueue
 2280 000e 9B6B     		ldr	r3, [r3, #56]	@ D.6115, pxQueue_4(D)->uxMessagesWaiting
 2281 0010 002B     		cmp	r3, #0	@ D.6115,
 2282 0012 02D1     		bne	.L181	@,
1836:FreeRTOS/queue.c **** 		{
1837:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2283              		.loc 1 1837 0
 2284 0014 0123     		movs	r3, #1	@ tmp114,
 2285 0016 FB60     		str	r3, [r7, #12]	@ tmp114, xReturn
 2286 0018 01E0     		b	.L182	@
 2287              	.L181:
1838:FreeRTOS/queue.c **** 		}
1839:FreeRTOS/queue.c **** 		else
1840:FreeRTOS/queue.c **** 		{
1841:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2288              		.loc 1 1841 0
 2289 001a 0023     		movs	r3, #0	@ tmp115,
 2290 001c FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2291              	.L182:
1842:FreeRTOS/queue.c **** 		}
1843:FreeRTOS/queue.c **** 	}
1844:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2292              		.loc 1 1844 0
 2293 001e FFF7FEFF 		bl	vPortExitCritical	@
1845:FreeRTOS/queue.c **** 
1846:FreeRTOS/queue.c **** 	return xReturn;
 2294              		.loc 1 1846 0
 2295 0022 FB68     		ldr	r3, [r7, #12]	@ D.6116, xReturn
1847:FreeRTOS/queue.c **** }
 2296              		.loc 1 1847 0
 2297 0024 1846     		mov	r0, r3	@, <retval>
 2298 0026 1037     		adds	r7, r7, #16	@,,
 2299              		.cfi_def_cfa_offset 8
 2300 0028 BD46     		mov	sp, r7	@,
 2301              		.cfi_def_cfa_register 13
 2302              		@ sp needed	@
 2303 002a 80BD     		pop	{r7, pc}	@
 2304              		.cfi_endproc
 2305              	.LFE22:
 2306              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 2307              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2308              		.align	2
 2309              		.global	xQueueIsQueueEmptyFromISR
 2310              		.thumb
 2311              		.thumb_func
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 74


 2312              		.type	xQueueIsQueueEmptyFromISR, %function
 2313              	xQueueIsQueueEmptyFromISR:
 2314              	.LFB23:
1848:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1849:FreeRTOS/queue.c **** 
1850:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1851:FreeRTOS/queue.c **** {
 2315              		.loc 1 1851 0
 2316              		.cfi_startproc
 2317              		@ args = 0, pretend = 0, frame = 16
 2318              		@ frame_needed = 1, uses_anonymous_args = 0
 2319 0000 80B5     		push	{r7, lr}	@
 2320              		.cfi_def_cfa_offset 8
 2321              		.cfi_offset 7, -8
 2322              		.cfi_offset 14, -4
 2323 0002 84B0     		sub	sp, sp, #16	@,,
 2324              		.cfi_def_cfa_offset 24
 2325 0004 00AF     		add	r7, sp, #0	@,,
 2326              		.cfi_def_cfa_register 7
 2327 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1852:FreeRTOS/queue.c **** BaseT_t xReturn;
1853:FreeRTOS/queue.c **** 
1854:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2328              		.loc 1 1854 0
 2329 0008 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 2330 000a 002B     		cmp	r3, #0	@ tmp113,
 2331 000c 02D1     		bne	.L185	@,
 2332              		.loc 1 1854 0 is_stmt 0 discriminator 1
 2333 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2334              	.L186:
 2335 0012 FEE7     		b	.L186	@
 2336              	.L185:
1855:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseT_t ) 0 )
 2337              		.loc 1 1855 0 is_stmt 1
 2338 0014 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2339 0016 9B6B     		ldr	r3, [r3, #56]	@ D.6117, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2340 0018 002B     		cmp	r3, #0	@ D.6117,
 2341 001a 02D1     		bne	.L187	@,
1856:FreeRTOS/queue.c **** 	{
1857:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2342              		.loc 1 1857 0
 2343 001c 0123     		movs	r3, #1	@ tmp115,
 2344 001e FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2345 0020 01E0     		b	.L188	@
 2346              	.L187:
1858:FreeRTOS/queue.c **** 	}
1859:FreeRTOS/queue.c **** 	else
1860:FreeRTOS/queue.c **** 	{
1861:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2347              		.loc 1 1861 0
 2348 0022 0023     		movs	r3, #0	@ tmp116,
 2349 0024 FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
 2350              	.L188:
1862:FreeRTOS/queue.c **** 	}
1863:FreeRTOS/queue.c **** 
1864:FreeRTOS/queue.c **** 	return xReturn;
 2351              		.loc 1 1864 0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 75


 2352 0026 FB68     		ldr	r3, [r7, #12]	@ D.6118, xReturn
1865:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2353              		.loc 1 1865 0
 2354 0028 1846     		mov	r0, r3	@, <retval>
 2355 002a 1037     		adds	r7, r7, #16	@,,
 2356              		.cfi_def_cfa_offset 8
 2357 002c BD46     		mov	sp, r7	@,
 2358              		.cfi_def_cfa_register 13
 2359              		@ sp needed	@
 2360 002e 80BD     		pop	{r7, pc}	@
 2361              		.cfi_endproc
 2362              	.LFE23:
 2363              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2364              		.section	.text.prvIsQueueFull,"ax",%progbits
 2365              		.align	2
 2366              		.thumb
 2367              		.thumb_func
 2368              		.type	prvIsQueueFull, %function
 2369              	prvIsQueueFull:
 2370              	.LFB24:
1866:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1867:FreeRTOS/queue.c **** 
1868:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue )
1869:FreeRTOS/queue.c **** {
 2371              		.loc 1 1869 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 16
 2374              		@ frame_needed = 1, uses_anonymous_args = 0
 2375 0000 80B5     		push	{r7, lr}	@
 2376              		.cfi_def_cfa_offset 8
 2377              		.cfi_offset 7, -8
 2378              		.cfi_offset 14, -4
 2379 0002 84B0     		sub	sp, sp, #16	@,,
 2380              		.cfi_def_cfa_offset 24
 2381 0004 00AF     		add	r7, sp, #0	@,,
 2382              		.cfi_def_cfa_register 7
 2383 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1870:FreeRTOS/queue.c **** BaseT_t xReturn;
1871:FreeRTOS/queue.c **** 
1872:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2384              		.loc 1 1872 0
 2385 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1873:FreeRTOS/queue.c **** 	{
1874:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2386              		.loc 1 1874 0
 2387 000c 7B68     		ldr	r3, [r7, #4]	@ tmp114, pxQueue
 2388 000e 9A6B     		ldr	r2, [r3, #56]	@ D.6119, pxQueue_4(D)->uxMessagesWaiting
 2389 0010 7B68     		ldr	r3, [r7, #4]	@ tmp115, pxQueue
 2390 0012 DB6B     		ldr	r3, [r3, #60]	@ D.6119, pxQueue_4(D)->uxLength
 2391 0014 9A42     		cmp	r2, r3	@ D.6119, D.6119
 2392 0016 02D1     		bne	.L191	@,
1875:FreeRTOS/queue.c **** 		{
1876:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2393              		.loc 1 1876 0
 2394 0018 0123     		movs	r3, #1	@ tmp116,
 2395 001a FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
 2396 001c 01E0     		b	.L192	@
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 76


 2397              	.L191:
1877:FreeRTOS/queue.c **** 		}
1878:FreeRTOS/queue.c **** 		else
1879:FreeRTOS/queue.c **** 		{
1880:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2398              		.loc 1 1880 0
 2399 001e 0023     		movs	r3, #0	@ tmp117,
 2400 0020 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2401              	.L192:
1881:FreeRTOS/queue.c **** 		}
1882:FreeRTOS/queue.c **** 	}
1883:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2402              		.loc 1 1883 0
 2403 0022 FFF7FEFF 		bl	vPortExitCritical	@
1884:FreeRTOS/queue.c **** 
1885:FreeRTOS/queue.c **** 	return xReturn;
 2404              		.loc 1 1885 0
 2405 0026 FB68     		ldr	r3, [r7, #12]	@ D.6120, xReturn
1886:FreeRTOS/queue.c **** }
 2406              		.loc 1 1886 0
 2407 0028 1846     		mov	r0, r3	@, <retval>
 2408 002a 1037     		adds	r7, r7, #16	@,,
 2409              		.cfi_def_cfa_offset 8
 2410 002c BD46     		mov	sp, r7	@,
 2411              		.cfi_def_cfa_register 13
 2412              		@ sp needed	@
 2413 002e 80BD     		pop	{r7, pc}	@
 2414              		.cfi_endproc
 2415              	.LFE24:
 2416              		.size	prvIsQueueFull, .-prvIsQueueFull
 2417              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2418              		.align	2
 2419              		.global	xQueueIsQueueFullFromISR
 2420              		.thumb
 2421              		.thumb_func
 2422              		.type	xQueueIsQueueFullFromISR, %function
 2423              	xQueueIsQueueFullFromISR:
 2424              	.LFB25:
1887:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1888:FreeRTOS/queue.c **** 
1889:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1890:FreeRTOS/queue.c **** {
 2425              		.loc 1 1890 0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 16
 2428              		@ frame_needed = 1, uses_anonymous_args = 0
 2429 0000 80B5     		push	{r7, lr}	@
 2430              		.cfi_def_cfa_offset 8
 2431              		.cfi_offset 7, -8
 2432              		.cfi_offset 14, -4
 2433 0002 84B0     		sub	sp, sp, #16	@,,
 2434              		.cfi_def_cfa_offset 24
 2435 0004 00AF     		add	r7, sp, #0	@,,
 2436              		.cfi_def_cfa_register 7
 2437 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1891:FreeRTOS/queue.c **** BaseT_t xReturn;
1892:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 77


1893:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2438              		.loc 1 1893 0
 2439 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2440 000a 002B     		cmp	r3, #0	@ tmp114,
 2441 000c 02D1     		bne	.L195	@,
 2442              		.loc 1 1893 0 is_stmt 0 discriminator 1
 2443 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2444              	.L196:
 2445 0012 FEE7     		b	.L196	@
 2446              	.L195:
1894:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2447              		.loc 1 1894 0 is_stmt 1
 2448 0014 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2449 0016 9A6B     		ldr	r2, [r3, #56]	@ D.6121, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2450 0018 7B68     		ldr	r3, [r7, #4]	@ tmp116, xQueue
 2451 001a DB6B     		ldr	r3, [r3, #60]	@ D.6121, MEM[(struct Queue_t *)xQueue_2(D)].uxLength
 2452 001c 9A42     		cmp	r2, r3	@ D.6121, D.6121
 2453 001e 02D1     		bne	.L197	@,
1895:FreeRTOS/queue.c **** 	{
1896:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2454              		.loc 1 1896 0
 2455 0020 0123     		movs	r3, #1	@ tmp117,
 2456 0022 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2457 0024 01E0     		b	.L198	@
 2458              	.L197:
1897:FreeRTOS/queue.c **** 	}
1898:FreeRTOS/queue.c **** 	else
1899:FreeRTOS/queue.c **** 	{
1900:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2459              		.loc 1 1900 0
 2460 0026 0023     		movs	r3, #0	@ tmp118,
 2461 0028 FB60     		str	r3, [r7, #12]	@ tmp118, xReturn
 2462              	.L198:
1901:FreeRTOS/queue.c **** 	}
1902:FreeRTOS/queue.c **** 
1903:FreeRTOS/queue.c **** 	return xReturn;
 2463              		.loc 1 1903 0
 2464 002a FB68     		ldr	r3, [r7, #12]	@ D.6122, xReturn
1904:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2465              		.loc 1 1904 0
 2466 002c 1846     		mov	r0, r3	@, <retval>
 2467 002e 1037     		adds	r7, r7, #16	@,,
 2468              		.cfi_def_cfa_offset 8
 2469 0030 BD46     		mov	sp, r7	@,
 2470              		.cfi_def_cfa_register 13
 2471              		@ sp needed	@
 2472 0032 80BD     		pop	{r7, pc}	@
 2473              		.cfi_endproc
 2474              	.LFE25:
 2475              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2476              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2477              		.align	2
 2478              		.global	vQueueAddToRegistry
 2479              		.thumb
 2480              		.thumb_func
 2481              		.type	vQueueAddToRegistry, %function
 2482              	vQueueAddToRegistry:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 78


 2483              	.LFB26:
1905:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1906:FreeRTOS/queue.c **** 
1907:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1908:FreeRTOS/queue.c **** 
1909:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickT_t xTicksToWait )
1910:FreeRTOS/queue.c **** 	{
1911:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1912:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1913:FreeRTOS/queue.c **** 
1914:FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
1915:FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
1916:FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
1917:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1918:FreeRTOS/queue.c **** 		{
1919:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
1920:FreeRTOS/queue.c **** 			{
1921:FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
1922:FreeRTOS/queue.c **** 				posting? */
1923:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
1924:FreeRTOS/queue.c **** 				{
1925:FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
1926:FreeRTOS/queue.c **** 					return indicating that we need to block. */
1927:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
1928:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1929:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
1930:FreeRTOS/queue.c **** 				}
1931:FreeRTOS/queue.c **** 				else
1932:FreeRTOS/queue.c **** 				{
1933:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1934:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
1935:FreeRTOS/queue.c **** 				}
1936:FreeRTOS/queue.c **** 			}
1937:FreeRTOS/queue.c **** 		}
1938:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1939:FreeRTOS/queue.c **** 
1940:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1941:FreeRTOS/queue.c **** 		{
1942:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1943:FreeRTOS/queue.c **** 			{
1944:FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
1945:FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
1946:FreeRTOS/queue.c **** 				xReturn = pdPASS;
1947:FreeRTOS/queue.c **** 
1948:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
1949:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1950:FreeRTOS/queue.c **** 				{
1951:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
1952:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
1953:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
1954:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
1955:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1956:FreeRTOS/queue.c **** 					{
1957:FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
1958:FreeRTOS/queue.c **** 						that a yield might be appropriate. */
1959:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
1960:FreeRTOS/queue.c **** 					}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 79


1961:FreeRTOS/queue.c **** 					else
1962:FreeRTOS/queue.c **** 					{
1963:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1964:FreeRTOS/queue.c **** 					}
1965:FreeRTOS/queue.c **** 				}
1966:FreeRTOS/queue.c **** 				else
1967:FreeRTOS/queue.c **** 				{
1968:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1969:FreeRTOS/queue.c **** 				}
1970:FreeRTOS/queue.c **** 			}
1971:FreeRTOS/queue.c **** 			else
1972:FreeRTOS/queue.c **** 			{
1973:FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
1974:FreeRTOS/queue.c **** 			}
1975:FreeRTOS/queue.c **** 		}
1976:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1977:FreeRTOS/queue.c **** 
1978:FreeRTOS/queue.c **** 		return xReturn;
1979:FreeRTOS/queue.c **** 	}
1980:FreeRTOS/queue.c **** 
1981:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
1982:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1983:FreeRTOS/queue.c **** 
1984:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1985:FreeRTOS/queue.c **** 
1986:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickT_t xTicksToWait )
1987:FreeRTOS/queue.c **** 	{
1988:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1989:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1990:FreeRTOS/queue.c **** 
1991:FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
1992:FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
1993:FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
1994:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1995:FreeRTOS/queue.c **** 		{
1996:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseT_t ) 0 )
1997:FreeRTOS/queue.c **** 			{
1998:FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
1999:FreeRTOS/queue.c **** 				leave with nothing? */
2000:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
2001:FreeRTOS/queue.c **** 				{
2002:FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2003:FreeRTOS/queue.c **** 					indicating that we need to block. */
2004:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2005:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2006:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2007:FreeRTOS/queue.c **** 				}
2008:FreeRTOS/queue.c **** 				else
2009:FreeRTOS/queue.c **** 				{
2010:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2011:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2012:FreeRTOS/queue.c **** 				}
2013:FreeRTOS/queue.c **** 			}
2014:FreeRTOS/queue.c **** 			else
2015:FreeRTOS/queue.c **** 			{
2016:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2017:FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 80


2018:FreeRTOS/queue.c **** 		}
2019:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2020:FreeRTOS/queue.c **** 
2021:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2022:FreeRTOS/queue.c **** 		{
2023:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
2024:FreeRTOS/queue.c **** 			{
2025:FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2026:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2027:FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2028:FreeRTOS/queue.c **** 				{
2029:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2030:FreeRTOS/queue.c **** 				}
2031:FreeRTOS/queue.c **** 				else
2032:FreeRTOS/queue.c **** 				{
2033:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2034:FreeRTOS/queue.c **** 				}
2035:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2036:FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2037:FreeRTOS/queue.c **** 
2038:FreeRTOS/queue.c **** 				xReturn = pdPASS;
2039:FreeRTOS/queue.c **** 
2040:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2041:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2042:FreeRTOS/queue.c **** 				{
2043:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2044:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2045:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2046:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2047:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2048:FreeRTOS/queue.c **** 					{
2049:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2050:FreeRTOS/queue.c **** 					}
2051:FreeRTOS/queue.c **** 					else
2052:FreeRTOS/queue.c **** 					{
2053:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2054:FreeRTOS/queue.c **** 					}
2055:FreeRTOS/queue.c **** 				}
2056:FreeRTOS/queue.c **** 				else
2057:FreeRTOS/queue.c **** 				{
2058:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2059:FreeRTOS/queue.c **** 				}
2060:FreeRTOS/queue.c **** 			}
2061:FreeRTOS/queue.c **** 			else
2062:FreeRTOS/queue.c **** 			{
2063:FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2064:FreeRTOS/queue.c **** 			}
2065:FreeRTOS/queue.c **** 		}
2066:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2067:FreeRTOS/queue.c **** 
2068:FreeRTOS/queue.c **** 		return xReturn;
2069:FreeRTOS/queue.c **** 	}
2070:FreeRTOS/queue.c **** 
2071:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2072:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2073:FreeRTOS/queue.c **** 
2074:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 81


2075:FreeRTOS/queue.c **** 
2076:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseT_t xCoRoutinePr
2077:FreeRTOS/queue.c **** 	{
2078:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2079:FreeRTOS/queue.c **** 
2080:FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2081:FreeRTOS/queue.c **** 		exit without doing anything. */
2082:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2083:FreeRTOS/queue.c **** 		{
2084:FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2085:FreeRTOS/queue.c **** 
2086:FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2087:FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2088:FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2089:FreeRTOS/queue.c **** 			{
2090:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2091:FreeRTOS/queue.c **** 				{
2092:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2093:FreeRTOS/queue.c **** 					{
2094:FreeRTOS/queue.c **** 						return pdTRUE;
2095:FreeRTOS/queue.c **** 					}
2096:FreeRTOS/queue.c **** 					else
2097:FreeRTOS/queue.c **** 					{
2098:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2099:FreeRTOS/queue.c **** 					}
2100:FreeRTOS/queue.c **** 				}
2101:FreeRTOS/queue.c **** 				else
2102:FreeRTOS/queue.c **** 				{
2103:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2104:FreeRTOS/queue.c **** 				}
2105:FreeRTOS/queue.c **** 			}
2106:FreeRTOS/queue.c **** 			else
2107:FreeRTOS/queue.c **** 			{
2108:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2109:FreeRTOS/queue.c **** 			}
2110:FreeRTOS/queue.c **** 		}
2111:FreeRTOS/queue.c **** 		else
2112:FreeRTOS/queue.c **** 		{
2113:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2114:FreeRTOS/queue.c **** 		}
2115:FreeRTOS/queue.c **** 
2116:FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2117:FreeRTOS/queue.c **** 	}
2118:FreeRTOS/queue.c **** 
2119:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2120:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2121:FreeRTOS/queue.c **** 
2122:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2123:FreeRTOS/queue.c **** 
2124:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseT_t *pxCoRoutineWoken )
2125:FreeRTOS/queue.c **** 	{
2126:FreeRTOS/queue.c **** 	BaseT_t xReturn;
2127:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2128:FreeRTOS/queue.c **** 
2129:FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2130:FreeRTOS/queue.c **** 		not then just leave without doing anything. */
2131:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 82


2132:FreeRTOS/queue.c **** 		{
2133:FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2134:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2135:FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2136:FreeRTOS/queue.c **** 			{
2137:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2138:FreeRTOS/queue.c **** 			}
2139:FreeRTOS/queue.c **** 			else
2140:FreeRTOS/queue.c **** 			{
2141:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2142:FreeRTOS/queue.c **** 			}
2143:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2144:FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2145:FreeRTOS/queue.c **** 
2146:FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2147:FreeRTOS/queue.c **** 			{
2148:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2149:FreeRTOS/queue.c **** 				{
2150:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2151:FreeRTOS/queue.c **** 					{
2152:FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2153:FreeRTOS/queue.c **** 					}
2154:FreeRTOS/queue.c **** 					else
2155:FreeRTOS/queue.c **** 					{
2156:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2157:FreeRTOS/queue.c **** 					}
2158:FreeRTOS/queue.c **** 				}
2159:FreeRTOS/queue.c **** 				else
2160:FreeRTOS/queue.c **** 				{
2161:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2162:FreeRTOS/queue.c **** 				}
2163:FreeRTOS/queue.c **** 			}
2164:FreeRTOS/queue.c **** 			else
2165:FreeRTOS/queue.c **** 			{
2166:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2167:FreeRTOS/queue.c **** 			}
2168:FreeRTOS/queue.c **** 
2169:FreeRTOS/queue.c **** 			xReturn = pdPASS;
2170:FreeRTOS/queue.c **** 		}
2171:FreeRTOS/queue.c **** 		else
2172:FreeRTOS/queue.c **** 		{
2173:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2174:FreeRTOS/queue.c **** 		}
2175:FreeRTOS/queue.c **** 
2176:FreeRTOS/queue.c **** 		return xReturn;
2177:FreeRTOS/queue.c **** 	}
2178:FreeRTOS/queue.c **** 
2179:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2180:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2181:FreeRTOS/queue.c **** 
2182:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2183:FreeRTOS/queue.c **** 
2184:FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2185:FreeRTOS/queue.c **** 	{
 2484              		.loc 1 2185 0
 2485              		.cfi_startproc
 2486              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 83


 2487              		@ frame_needed = 1, uses_anonymous_args = 0
 2488              		@ link register save eliminated.
 2489 0000 80B4     		push	{r7}	@
 2490              		.cfi_def_cfa_offset 4
 2491              		.cfi_offset 7, -4
 2492 0002 85B0     		sub	sp, sp, #20	@,,
 2493              		.cfi_def_cfa_offset 24
 2494 0004 00AF     		add	r7, sp, #0	@,,
 2495              		.cfi_def_cfa_register 7
 2496 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 2497 0008 3960     		str	r1, [r7]	@ pcQueueName, pcQueueName
2186:FreeRTOS/queue.c **** 	UBaseT_t ux;
2187:FreeRTOS/queue.c **** 
2188:FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2189:FreeRTOS/queue.c **** 		a free slot. */
2190:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2498              		.loc 1 2190 0
 2499 000a 0023     		movs	r3, #0	@ tmp111,
 2500 000c FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2501 000e 14E0     		b	.L201	@
 2502              	.L204:
2191:FreeRTOS/queue.c **** 		{
2192:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2503              		.loc 1 2192 0
 2504 0010 0E4A     		ldr	r2, .L205	@ tmp112,
 2505 0012 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2506 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]	@ D.6123, xQueueRegistry[ux_1].pcQueueName
 2507 0018 002B     		cmp	r3, #0	@ D.6123,
 2508 001a 0BD1     		bne	.L202	@,
2193:FreeRTOS/queue.c **** 			{
2194:FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2195:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2509              		.loc 1 2195 0
 2510 001c 0B49     		ldr	r1, .L205	@ tmp114,
 2511 001e FB68     		ldr	r3, [r7, #12]	@ tmp115, ux
 2512 0020 3A68     		ldr	r2, [r7]	@ tmp116, pcQueueName
 2513 0022 41F83320 		str	r2, [r1, r3, lsl #3]	@ tmp116, xQueueRegistry[ux_1].pcQueueName
2196:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2514              		.loc 1 2196 0
 2515 0026 094A     		ldr	r2, .L205	@ tmp117,
 2516 0028 FB68     		ldr	r3, [r7, #12]	@ tmp118, ux
 2517 002a DB00     		lsls	r3, r3, #3	@ tmp119, tmp118,
 2518 002c 1344     		add	r3, r3, r2	@ tmp119, tmp117
 2519 002e 7A68     		ldr	r2, [r7, #4]	@ tmp120, xQueue
 2520 0030 5A60     		str	r2, [r3, #4]	@ tmp120, xQueueRegistry[ux_1].xHandle
2197:FreeRTOS/queue.c **** 
2198:FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2199:FreeRTOS/queue.c **** 				break;
 2521              		.loc 1 2199 0
 2522 0032 05E0     		b	.L203	@
 2523              	.L202:
2190:FreeRTOS/queue.c **** 		{
 2524              		.loc 1 2190 0 discriminator 2
 2525 0034 FB68     		ldr	r3, [r7, #12]	@ tmp122, ux
 2526 0036 0133     		adds	r3, r3, #1	@ tmp121, tmp122,
 2527 0038 FB60     		str	r3, [r7, #12]	@ tmp121, ux
 2528              	.L201:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 84


2190:FreeRTOS/queue.c **** 		{
 2529              		.loc 1 2190 0 is_stmt 0 discriminator 1
 2530 003a FB68     		ldr	r3, [r7, #12]	@ tmp123, ux
 2531 003c 092B     		cmp	r3, #9	@ tmp123,
 2532 003e E7D9     		bls	.L204	@,
 2533              	.L203:
2200:FreeRTOS/queue.c **** 			}
2201:FreeRTOS/queue.c **** 			else
2202:FreeRTOS/queue.c **** 			{
2203:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2204:FreeRTOS/queue.c **** 			}
2205:FreeRTOS/queue.c **** 		}
2206:FreeRTOS/queue.c **** 	}
 2534              		.loc 1 2206 0 is_stmt 1
 2535 0040 00BF     		nop
 2536 0042 1437     		adds	r7, r7, #20	@,,
 2537              		.cfi_def_cfa_offset 4
 2538 0044 BD46     		mov	sp, r7	@,
 2539              		.cfi_def_cfa_register 13
 2540              		@ sp needed	@
 2541 0046 80BC     		pop	{r7}	@
 2542              		.cfi_restore 7
 2543              		.cfi_def_cfa_offset 0
 2544 0048 7047     		bx	lr	@
 2545              	.L206:
 2546 004a 00BF     		.align	2
 2547              	.L205:
 2548 004c 00000000 		.word	xQueueRegistry
 2549              		.cfi_endproc
 2550              	.LFE26:
 2551              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2552              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2553              		.align	2
 2554              		.global	vQueueUnregisterQueue
 2555              		.thumb
 2556              		.thumb_func
 2557              		.type	vQueueUnregisterQueue, %function
 2558              	vQueueUnregisterQueue:
 2559              	.LFB27:
2207:FreeRTOS/queue.c **** 
2208:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2209:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2210:FreeRTOS/queue.c **** 
2211:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2212:FreeRTOS/queue.c **** 
2213:FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2214:FreeRTOS/queue.c **** 	{
 2560              		.loc 1 2214 0
 2561              		.cfi_startproc
 2562              		@ args = 0, pretend = 0, frame = 16
 2563              		@ frame_needed = 1, uses_anonymous_args = 0
 2564              		@ link register save eliminated.
 2565 0000 80B4     		push	{r7}	@
 2566              		.cfi_def_cfa_offset 4
 2567              		.cfi_offset 7, -4
 2568 0002 85B0     		sub	sp, sp, #20	@,,
 2569              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 85


 2570 0004 00AF     		add	r7, sp, #0	@,,
 2571              		.cfi_def_cfa_register 7
 2572 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
2215:FreeRTOS/queue.c **** 	UBaseT_t ux;
2216:FreeRTOS/queue.c **** 
2217:FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2218:FreeRTOS/queue.c **** 		registry. */
2219:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2573              		.loc 1 2219 0
 2574 0008 0023     		movs	r3, #0	@ tmp111,
 2575 000a FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2576 000c 10E0     		b	.L208	@
 2577              	.L211:
2220:FreeRTOS/queue.c **** 		{
2221:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2578              		.loc 1 2221 0
 2579 000e 0C4A     		ldr	r2, .L212	@ tmp112,
 2580 0010 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2581 0012 DB00     		lsls	r3, r3, #3	@ tmp114, tmp113,
 2582 0014 1344     		add	r3, r3, r2	@ tmp114, tmp112
 2583 0016 5A68     		ldr	r2, [r3, #4]	@ D.6124, xQueueRegistry[ux_1].xHandle
 2584 0018 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2585 001a 9A42     		cmp	r2, r3	@ D.6124, tmp115
 2586 001c 05D1     		bne	.L209	@,
2222:FreeRTOS/queue.c **** 			{
2223:FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2224:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2587              		.loc 1 2224 0
 2588 001e 084A     		ldr	r2, .L212	@ tmp116,
 2589 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, ux
 2590 0022 0021     		movs	r1, #0	@ tmp118,
 2591 0024 42F83310 		str	r1, [r2, r3, lsl #3]	@ tmp118, xQueueRegistry[ux_1].pcQueueName
2225:FreeRTOS/queue.c **** 				break;
 2592              		.loc 1 2225 0
 2593 0028 05E0     		b	.L210	@
 2594              	.L209:
2219:FreeRTOS/queue.c **** 		{
 2595              		.loc 1 2219 0 discriminator 2
 2596 002a FB68     		ldr	r3, [r7, #12]	@ tmp120, ux
 2597 002c 0133     		adds	r3, r3, #1	@ tmp119, tmp120,
 2598 002e FB60     		str	r3, [r7, #12]	@ tmp119, ux
 2599              	.L208:
2219:FreeRTOS/queue.c **** 		{
 2600              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2601 0030 FB68     		ldr	r3, [r7, #12]	@ tmp121, ux
 2602 0032 092B     		cmp	r3, #9	@ tmp121,
 2603 0034 EBD9     		bls	.L211	@,
 2604              	.L210:
2226:FreeRTOS/queue.c **** 			}
2227:FreeRTOS/queue.c **** 			else
2228:FreeRTOS/queue.c **** 			{
2229:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2230:FreeRTOS/queue.c **** 			}
2231:FreeRTOS/queue.c **** 		}
2232:FreeRTOS/queue.c **** 
2233:FreeRTOS/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2605              		.loc 1 2233 0 is_stmt 1
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 86


 2606 0036 00BF     		nop
 2607 0038 1437     		adds	r7, r7, #20	@,,
 2608              		.cfi_def_cfa_offset 4
 2609 003a BD46     		mov	sp, r7	@,
 2610              		.cfi_def_cfa_register 13
 2611              		@ sp needed	@
 2612 003c 80BC     		pop	{r7}	@
 2613              		.cfi_restore 7
 2614              		.cfi_def_cfa_offset 0
 2615 003e 7047     		bx	lr	@
 2616              	.L213:
 2617              		.align	2
 2618              	.L212:
 2619 0040 00000000 		.word	xQueueRegistry
 2620              		.cfi_endproc
 2621              	.LFE27:
 2622              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2623              		.text
 2624              	.Letext0:
 2625              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4
 2626              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 2627              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 2628              		.file 5 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
 2629              		.file 6 "FreeRTOS/include/list.h"
 2630              		.file 7 "FreeRTOS/include/task.h"
 2631              		.file 8 "FreeRTOS/include/queue.h"
 2632              		.section	.debug_info,"",%progbits
 2633              	.Ldebug_info0:
 2634 0000 890B0000 		.4byte	0xb89
 2635 0004 0400     		.2byte	0x4
 2636 0006 00000000 		.4byte	.Ldebug_abbrev0
 2637 000a 04       		.byte	0x4
 2638 000b 01       		.uleb128 0x1
 2639 000c 35840000 		.4byte	.LASF1223
 2640 0010 01       		.byte	0x1
 2641 0011 3E120000 		.4byte	.LASF1224
 2642 0015 34140000 		.4byte	.LASF1225
 2643 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2644 001d 00000000 		.4byte	0
 2645 0021 00000000 		.4byte	.Ldebug_line0
 2646 0025 00000000 		.4byte	.Ldebug_macro0
 2647 0029 02       		.uleb128 0x2
 2648 002a 78010000 		.4byte	.LASF1112
 2649 002e 02       		.byte	0x2
 2650 002f D8       		.byte	0xd8
 2651 0030 34000000 		.4byte	0x34
 2652 0034 03       		.uleb128 0x3
 2653 0035 04       		.byte	0x4
 2654 0036 07       		.byte	0x7
 2655 0037 0A520000 		.4byte	.LASF1111
 2656 003b 04       		.uleb128 0x4
 2657 003c 04       		.byte	0x4
 2658 003d 05       		.byte	0x5
 2659 003e 696E7400 		.ascii	"int\000"
 2660 0042 02       		.uleb128 0x2
 2661 0043 51660000 		.4byte	.LASF1113
 2662 0047 03       		.byte	0x3
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 87


 2663 0048 1B       		.byte	0x1b
 2664 0049 4D000000 		.4byte	0x4d
 2665 004d 03       		.uleb128 0x3
 2666 004e 01       		.byte	0x1
 2667 004f 06       		.byte	0x6
 2668 0050 B51D0000 		.4byte	.LASF1114
 2669 0054 02       		.uleb128 0x2
 2670 0055 C7110000 		.4byte	.LASF1115
 2671 0059 03       		.byte	0x3
 2672 005a 1D       		.byte	0x1d
 2673 005b 5F000000 		.4byte	0x5f
 2674 005f 03       		.uleb128 0x3
 2675 0060 01       		.byte	0x1
 2676 0061 08       		.byte	0x8
 2677 0062 585C0000 		.4byte	.LASF1116
 2678 0066 03       		.uleb128 0x3
 2679 0067 02       		.byte	0x2
 2680 0068 05       		.byte	0x5
 2681 0069 2A7C0000 		.4byte	.LASF1117
 2682 006d 03       		.uleb128 0x3
 2683 006e 02       		.byte	0x2
 2684 006f 07       		.byte	0x7
 2685 0070 94190000 		.4byte	.LASF1118
 2686 0074 03       		.uleb128 0x3
 2687 0075 04       		.byte	0x4
 2688 0076 05       		.byte	0x5
 2689 0077 73150000 		.4byte	.LASF1119
 2690 007b 02       		.uleb128 0x2
 2691 007c 923D0000 		.4byte	.LASF1120
 2692 0080 03       		.byte	0x3
 2693 0081 41       		.byte	0x41
 2694 0082 86000000 		.4byte	0x86
 2695 0086 03       		.uleb128 0x3
 2696 0087 04       		.byte	0x4
 2697 0088 07       		.byte	0x7
 2698 0089 383C0000 		.4byte	.LASF1121
 2699 008d 03       		.uleb128 0x3
 2700 008e 08       		.byte	0x8
 2701 008f 05       		.byte	0x5
 2702 0090 8C480000 		.4byte	.LASF1122
 2703 0094 03       		.uleb128 0x3
 2704 0095 08       		.byte	0x8
 2705 0096 07       		.byte	0x7
 2706 0097 54670000 		.4byte	.LASF1123
 2707 009b 03       		.uleb128 0x3
 2708 009c 04       		.byte	0x4
 2709 009d 07       		.byte	0x7
 2710 009e 29020000 		.4byte	.LASF1124
 2711 00a2 05       		.uleb128 0x5
 2712 00a3 04       		.byte	0x4
 2713 00a4 03       		.uleb128 0x3
 2714 00a5 01       		.byte	0x1
 2715 00a6 08       		.byte	0x8
 2716 00a7 F0250000 		.4byte	.LASF718
 2717 00ab 06       		.uleb128 0x6
 2718 00ac 04       		.byte	0x4
 2719 00ad B1000000 		.4byte	0xb1
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 88


 2720 00b1 07       		.uleb128 0x7
 2721 00b2 A4000000 		.4byte	0xa4
 2722 00b6 06       		.uleb128 0x6
 2723 00b7 04       		.byte	0x4
 2724 00b8 BC000000 		.4byte	0xbc
 2725 00bc 08       		.uleb128 0x8
 2726 00bd 02       		.uleb128 0x2
 2727 00be BF000000 		.4byte	.LASF1125
 2728 00c2 04       		.byte	0x4
 2729 00c3 14       		.byte	0x14
 2730 00c4 42000000 		.4byte	0x42
 2731 00c8 02       		.uleb128 0x2
 2732 00c9 C11D0000 		.4byte	.LASF1126
 2733 00cd 04       		.byte	0x4
 2734 00ce 18       		.byte	0x18
 2735 00cf 54000000 		.4byte	0x54
 2736 00d3 02       		.uleb128 0x2
 2737 00d4 D18C0000 		.4byte	.LASF1127
 2738 00d8 04       		.byte	0x4
 2739 00d9 30       		.byte	0x30
 2740 00da 7B000000 		.4byte	0x7b
 2741 00de 02       		.uleb128 0x2
 2742 00df 203B0000 		.4byte	.LASF1128
 2743 00e3 05       		.byte	0x5
 2744 00e4 60       		.byte	0x60
 2745 00e5 74000000 		.4byte	0x74
 2746 00e9 02       		.uleb128 0x2
 2747 00ea 0B2A0000 		.4byte	.LASF1129
 2748 00ee 05       		.byte	0x5
 2749 00ef 62       		.byte	0x62
 2750 00f0 86000000 		.4byte	0x86
 2751 00f4 02       		.uleb128 0x2
 2752 00f5 F4860000 		.4byte	.LASF1130
 2753 00f9 05       		.byte	0x5
 2754 00fa 69       		.byte	0x69
 2755 00fb D3000000 		.4byte	0xd3
 2756 00ff 09       		.uleb128 0x9
 2757 0100 FA4C0000 		.4byte	.LASF1137
 2758 0104 14       		.byte	0x14
 2759 0105 06       		.byte	0x6
 2760 0106 88       		.byte	0x88
 2761 0107 48010000 		.4byte	0x148
 2762 010b 0A       		.uleb128 0xa
 2763 010c 3E980000 		.4byte	.LASF1131
 2764 0110 06       		.byte	0x6
 2765 0111 8A       		.byte	0x8a
 2766 0112 F4000000 		.4byte	0xf4
 2767 0116 00       		.byte	0
 2768 0117 0A       		.uleb128 0xa
 2769 0118 E30F0000 		.4byte	.LASF1132
 2770 011c 06       		.byte	0x6
 2771 011d 8B       		.byte	0x8b
 2772 011e 48010000 		.4byte	0x148
 2773 0122 04       		.byte	0x4
 2774 0123 0A       		.uleb128 0xa
 2775 0124 206B0000 		.4byte	.LASF1133
 2776 0128 06       		.byte	0x6
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 89


 2777 0129 8C       		.byte	0x8c
 2778 012a 48010000 		.4byte	0x148
 2779 012e 08       		.byte	0x8
 2780 012f 0A       		.uleb128 0xa
 2781 0130 E7610000 		.4byte	.LASF1134
 2782 0134 06       		.byte	0x6
 2783 0135 8D       		.byte	0x8d
 2784 0136 A2000000 		.4byte	0xa2
 2785 013a 0C       		.byte	0xc
 2786 013b 0A       		.uleb128 0xa
 2787 013c B72A0000 		.4byte	.LASF1135
 2788 0140 06       		.byte	0x6
 2789 0141 8E       		.byte	0x8e
 2790 0142 A2000000 		.4byte	0xa2
 2791 0146 10       		.byte	0x10
 2792 0147 00       		.byte	0
 2793 0148 06       		.uleb128 0x6
 2794 0149 04       		.byte	0x4
 2795 014a FF000000 		.4byte	0xff
 2796 014e 02       		.uleb128 0x2
 2797 014f D7860000 		.4byte	.LASF1136
 2798 0153 06       		.byte	0x6
 2799 0154 90       		.byte	0x90
 2800 0155 FF000000 		.4byte	0xff
 2801 0159 09       		.uleb128 0x9
 2802 015a FF260000 		.4byte	.LASF1138
 2803 015e 0C       		.byte	0xc
 2804 015f 06       		.byte	0x6
 2805 0160 92       		.byte	0x92
 2806 0161 8A010000 		.4byte	0x18a
 2807 0165 0A       		.uleb128 0xa
 2808 0166 3E980000 		.4byte	.LASF1131
 2809 016a 06       		.byte	0x6
 2810 016b 94       		.byte	0x94
 2811 016c F4000000 		.4byte	0xf4
 2812 0170 00       		.byte	0
 2813 0171 0A       		.uleb128 0xa
 2814 0172 E30F0000 		.4byte	.LASF1132
 2815 0176 06       		.byte	0x6
 2816 0177 95       		.byte	0x95
 2817 0178 48010000 		.4byte	0x148
 2818 017c 04       		.byte	0x4
 2819 017d 0A       		.uleb128 0xa
 2820 017e 206B0000 		.4byte	.LASF1133
 2821 0182 06       		.byte	0x6
 2822 0183 96       		.byte	0x96
 2823 0184 48010000 		.4byte	0x148
 2824 0188 08       		.byte	0x8
 2825 0189 00       		.byte	0
 2826 018a 02       		.uleb128 0x2
 2827 018b 4B230000 		.4byte	.LASF1139
 2828 018f 06       		.byte	0x6
 2829 0190 98       		.byte	0x98
 2830 0191 59010000 		.4byte	0x159
 2831 0195 09       		.uleb128 0x9
 2832 0196 B0790000 		.4byte	.LASF1140
 2833 019a 14       		.byte	0x14
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 90


 2834 019b 06       		.byte	0x6
 2835 019c 9D       		.byte	0x9d
 2836 019d C6010000 		.4byte	0x1c6
 2837 01a1 0A       		.uleb128 0xa
 2838 01a2 0B550000 		.4byte	.LASF1141
 2839 01a6 06       		.byte	0x6
 2840 01a7 9F       		.byte	0x9f
 2841 01a8 E9000000 		.4byte	0xe9
 2842 01ac 00       		.byte	0
 2843 01ad 0A       		.uleb128 0xa
 2844 01ae 0D250000 		.4byte	.LASF1142
 2845 01b2 06       		.byte	0x6
 2846 01b3 A0       		.byte	0xa0
 2847 01b4 C6010000 		.4byte	0x1c6
 2848 01b8 04       		.byte	0x4
 2849 01b9 0A       		.uleb128 0xa
 2850 01ba DB5C0000 		.4byte	.LASF1143
 2851 01be 06       		.byte	0x6
 2852 01bf A1       		.byte	0xa1
 2853 01c0 8A010000 		.4byte	0x18a
 2854 01c4 08       		.byte	0x8
 2855 01c5 00       		.byte	0
 2856 01c6 06       		.uleb128 0x6
 2857 01c7 04       		.byte	0x4
 2858 01c8 4E010000 		.4byte	0x14e
 2859 01cc 02       		.uleb128 0x2
 2860 01cd 325A0000 		.4byte	.LASF1144
 2861 01d1 06       		.byte	0x6
 2862 01d2 A2       		.byte	0xa2
 2863 01d3 95010000 		.4byte	0x195
 2864 01d7 09       		.uleb128 0x9
 2865 01d8 90070000 		.4byte	.LASF1145
 2866 01dc 08       		.byte	0x8
 2867 01dd 07       		.byte	0x7
 2868 01de 78       		.byte	0x78
 2869 01df FC010000 		.4byte	0x1fc
 2870 01e3 0A       		.uleb128 0xa
 2871 01e4 0F3A0000 		.4byte	.LASF1146
 2872 01e8 07       		.byte	0x7
 2873 01e9 7A       		.byte	0x7a
 2874 01ea DE000000 		.4byte	0xde
 2875 01ee 00       		.byte	0
 2876 01ef 0A       		.uleb128 0xa
 2877 01f0 56240000 		.4byte	.LASF1147
 2878 01f4 07       		.byte	0x7
 2879 01f5 7B       		.byte	0x7b
 2880 01f6 F4000000 		.4byte	0xf4
 2881 01fa 04       		.byte	0x4
 2882 01fb 00       		.byte	0
 2883 01fc 02       		.uleb128 0x2
 2884 01fd C9260000 		.4byte	.LASF1148
 2885 0201 07       		.byte	0x7
 2886 0202 7C       		.byte	0x7c
 2887 0203 D7010000 		.4byte	0x1d7
 2888 0207 02       		.uleb128 0x2
 2889 0208 A71D0000 		.4byte	.LASF1149
 2890 020c 08       		.byte	0x8
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 91


 2891 020d 54       		.byte	0x54
 2892 020e A2000000 		.4byte	0xa2
 2893 0212 0B       		.uleb128 0xb
 2894 0213 04       		.byte	0x4
 2895 0214 01       		.byte	0x1
 2896 0215 83       		.byte	0x83
 2897 0216 31020000 		.4byte	0x231
 2898 021a 0C       		.uleb128 0xc
 2899 021b FD0D0000 		.4byte	.LASF1150
 2900 021f 01       		.byte	0x1
 2901 0220 85       		.byte	0x85
 2902 0221 31020000 		.4byte	0x231
 2903 0225 0C       		.uleb128 0xc
 2904 0226 CF250000 		.4byte	.LASF1151
 2905 022a 01       		.byte	0x1
 2906 022b 86       		.byte	0x86
 2907 022c E9000000 		.4byte	0xe9
 2908 0230 00       		.byte	0
 2909 0231 06       		.uleb128 0x6
 2910 0232 04       		.byte	0x4
 2911 0233 BD000000 		.4byte	0xbd
 2912 0237 09       		.uleb128 0x9
 2913 0238 3A160000 		.4byte	.LASF1152
 2914 023c 54       		.byte	0x54
 2915 023d 01       		.byte	0x1
 2916 023e 7D       		.byte	0x7d
 2917 023f DE020000 		.4byte	0x2de
 2918 0243 0A       		.uleb128 0xa
 2919 0244 77310000 		.4byte	.LASF1153
 2920 0248 01       		.byte	0x1
 2921 0249 7F       		.byte	0x7f
 2922 024a 31020000 		.4byte	0x231
 2923 024e 00       		.byte	0
 2924 024f 0A       		.uleb128 0xa
 2925 0250 6D0D0000 		.4byte	.LASF1154
 2926 0254 01       		.byte	0x1
 2927 0255 80       		.byte	0x80
 2928 0256 31020000 		.4byte	0x231
 2929 025a 04       		.byte	0x4
 2930 025b 0A       		.uleb128 0xa
 2931 025c 395A0000 		.4byte	.LASF1155
 2932 0260 01       		.byte	0x1
 2933 0261 81       		.byte	0x81
 2934 0262 31020000 		.4byte	0x231
 2935 0266 08       		.byte	0x8
 2936 0267 0D       		.uleb128 0xd
 2937 0268 7500     		.ascii	"u\000"
 2938 026a 01       		.byte	0x1
 2939 026b 87       		.byte	0x87
 2940 026c 12020000 		.4byte	0x212
 2941 0270 0C       		.byte	0xc
 2942 0271 0A       		.uleb128 0xa
 2943 0272 25210000 		.4byte	.LASF1156
 2944 0276 01       		.byte	0x1
 2945 0277 89       		.byte	0x89
 2946 0278 CC010000 		.4byte	0x1cc
 2947 027c 10       		.byte	0x10
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 92


 2948 027d 0A       		.uleb128 0xa
 2949 027e A96D0000 		.4byte	.LASF1157
 2950 0282 01       		.byte	0x1
 2951 0283 8A       		.byte	0x8a
 2952 0284 CC010000 		.4byte	0x1cc
 2953 0288 24       		.byte	0x24
 2954 0289 0A       		.uleb128 0xa
 2955 028a FA500000 		.4byte	.LASF1158
 2956 028e 01       		.byte	0x1
 2957 028f 8C       		.byte	0x8c
 2958 0290 DE020000 		.4byte	0x2de
 2959 0294 38       		.byte	0x38
 2960 0295 0A       		.uleb128 0xa
 2961 0296 3A500000 		.4byte	.LASF1159
 2962 029a 01       		.byte	0x1
 2963 029b 8D       		.byte	0x8d
 2964 029c E9000000 		.4byte	0xe9
 2965 02a0 3C       		.byte	0x3c
 2966 02a1 0A       		.uleb128 0xa
 2967 02a2 DD340000 		.4byte	.LASF1160
 2968 02a6 01       		.byte	0x1
 2969 02a7 8E       		.byte	0x8e
 2970 02a8 E9000000 		.4byte	0xe9
 2971 02ac 40       		.byte	0x40
 2972 02ad 0A       		.uleb128 0xa
 2973 02ae C4360000 		.4byte	.LASF1161
 2974 02b2 01       		.byte	0x1
 2975 02b3 90       		.byte	0x90
 2976 02b4 E3020000 		.4byte	0x2e3
 2977 02b8 44       		.byte	0x44
 2978 02b9 0A       		.uleb128 0xa
 2979 02ba 1A920000 		.4byte	.LASF1162
 2980 02be 01       		.byte	0x1
 2981 02bf 91       		.byte	0x91
 2982 02c0 E3020000 		.4byte	0x2e3
 2983 02c4 48       		.byte	0x48
 2984 02c5 0A       		.uleb128 0xa
 2985 02c6 151C0000 		.4byte	.LASF1163
 2986 02ca 01       		.byte	0x1
 2987 02cb 94       		.byte	0x94
 2988 02cc E9000000 		.4byte	0xe9
 2989 02d0 4C       		.byte	0x4c
 2990 02d1 0A       		.uleb128 0xa
 2991 02d2 E54D0000 		.4byte	.LASF1164
 2992 02d6 01       		.byte	0x1
 2993 02d7 95       		.byte	0x95
 2994 02d8 C8000000 		.4byte	0xc8
 2995 02dc 50       		.byte	0x50
 2996 02dd 00       		.byte	0
 2997 02de 0E       		.uleb128 0xe
 2998 02df E9000000 		.4byte	0xe9
 2999 02e3 0E       		.uleb128 0xe
 3000 02e4 DE000000 		.4byte	0xde
 3001 02e8 02       		.uleb128 0x2
 3002 02e9 D6940000 		.4byte	.LASF1165
 3003 02ed 01       		.byte	0x1
 3004 02ee 9C       		.byte	0x9c
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 93


 3005 02ef 37020000 		.4byte	0x237
 3006 02f3 02       		.uleb128 0x2
 3007 02f4 593C0000 		.4byte	.LASF1166
 3008 02f8 01       		.byte	0x1
 3009 02f9 A0       		.byte	0xa0
 3010 02fa E8020000 		.4byte	0x2e8
 3011 02fe 09       		.uleb128 0x9
 3012 02ff 3E2F0000 		.4byte	.LASF1167
 3013 0303 08       		.byte	0x8
 3014 0304 01       		.byte	0x1
 3015 0305 AD       		.byte	0xad
 3016 0306 23030000 		.4byte	0x323
 3017 030a 0A       		.uleb128 0xa
 3018 030b C8020000 		.4byte	.LASF1168
 3019 030f 01       		.byte	0x1
 3020 0310 AF       		.byte	0xaf
 3021 0311 AB000000 		.4byte	0xab
 3022 0315 00       		.byte	0
 3023 0316 0A       		.uleb128 0xa
 3024 0317 5E0A0000 		.4byte	.LASF1169
 3025 031b 01       		.byte	0x1
 3026 031c B0       		.byte	0xb0
 3027 031d 07020000 		.4byte	0x207
 3028 0321 04       		.byte	0x4
 3029 0322 00       		.byte	0
 3030 0323 02       		.uleb128 0x2
 3031 0324 202E0000 		.4byte	.LASF1170
 3032 0328 01       		.byte	0x1
 3033 0329 B1       		.byte	0xb1
 3034 032a FE020000 		.4byte	0x2fe
 3035 032e 02       		.uleb128 0x2
 3036 032f 068D0000 		.4byte	.LASF1171
 3037 0333 01       		.byte	0x1
 3038 0334 B6       		.byte	0xb6
 3039 0335 23030000 		.4byte	0x323
 3040 0339 0F       		.uleb128 0xf
 3041 033a AB950000 		.4byte	.LASF1174
 3042 033e 01       		.byte	0x1
 3043 033f FF       		.byte	0xff
 3044 0340 DE000000 		.4byte	0xde
 3045 0344 00000000 		.4byte	.LFB1
 3046 0348 B0000000 		.4byte	.LFE1-.LFB1
 3047 034c 01       		.uleb128 0x1
 3048 034d 9C       		.byte	0x9c
 3049 034e 7E030000 		.4byte	0x37e
 3050 0352 10       		.uleb128 0x10
 3051 0353 EF8C0000 		.4byte	.LASF1172
 3052 0357 01       		.byte	0x1
 3053 0358 FF       		.byte	0xff
 3054 0359 07020000 		.4byte	0x207
 3055 035d 02       		.uleb128 0x2
 3056 035e 91       		.byte	0x91
 3057 035f 6C       		.sleb128 -20
 3058 0360 10       		.uleb128 0x10
 3059 0361 32720000 		.4byte	.LASF1173
 3060 0365 01       		.byte	0x1
 3061 0366 FF       		.byte	0xff
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 94


 3062 0367 DE000000 		.4byte	0xde
 3063 036b 02       		.uleb128 0x2
 3064 036c 91       		.byte	0x91
 3065 036d 68       		.sleb128 -24
 3066 036e 11       		.uleb128 0x11
 3067 036f A4150000 		.4byte	.LASF1177
 3068 0373 01       		.byte	0x1
 3069 0374 0101     		.2byte	0x101
 3070 0376 84030000 		.4byte	0x384
 3071 037a 02       		.uleb128 0x2
 3072 037b 91       		.byte	0x91
 3073 037c 74       		.sleb128 -12
 3074 037d 00       		.byte	0
 3075 037e 06       		.uleb128 0x6
 3076 037f 04       		.byte	0x4
 3077 0380 F3020000 		.4byte	0x2f3
 3078 0384 07       		.uleb128 0x7
 3079 0385 7E030000 		.4byte	0x37e
 3080 0389 12       		.uleb128 0x12
 3081 038a A9210000 		.4byte	.LASF1175
 3082 038e 01       		.byte	0x1
 3083 038f 3401     		.2byte	0x134
 3084 0391 07020000 		.4byte	0x207
 3085 0395 00000000 		.4byte	.LFB2
 3086 0399 84000000 		.4byte	.LFE2-.LFB2
 3087 039d 01       		.uleb128 0x1
 3088 039e 9C       		.byte	0x9c
 3089 039f FE030000 		.4byte	0x3fe
 3090 03a3 13       		.uleb128 0x13
 3091 03a4 17110000 		.4byte	.LASF1176
 3092 03a8 01       		.byte	0x1
 3093 03a9 3401     		.2byte	0x134
 3094 03ab FE030000 		.4byte	0x3fe
 3095 03af 02       		.uleb128 0x2
 3096 03b0 91       		.byte	0x91
 3097 03b1 64       		.sleb128 -28
 3098 03b2 13       		.uleb128 0x13
 3099 03b3 DD340000 		.4byte	.LASF1160
 3100 03b7 01       		.byte	0x1
 3101 03b8 3401     		.2byte	0x134
 3102 03ba FE030000 		.4byte	0x3fe
 3103 03be 02       		.uleb128 0x2
 3104 03bf 91       		.byte	0x91
 3105 03c0 60       		.sleb128 -32
 3106 03c1 13       		.uleb128 0x13
 3107 03c2 E54D0000 		.4byte	.LASF1164
 3108 03c6 01       		.byte	0x1
 3109 03c7 3401     		.2byte	0x134
 3110 03c9 03040000 		.4byte	0x403
 3111 03cd 02       		.uleb128 0x2
 3112 03ce 91       		.byte	0x91
 3113 03cf 5F       		.sleb128 -33
 3114 03d0 11       		.uleb128 0x11
 3115 03d1 58930000 		.4byte	.LASF1178
 3116 03d5 01       		.byte	0x1
 3117 03d6 3601     		.2byte	0x136
 3118 03d8 7E030000 		.4byte	0x37e
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 95


 3119 03dc 02       		.uleb128 0x2
 3120 03dd 91       		.byte	0x91
 3121 03de 70       		.sleb128 -16
 3122 03df 11       		.uleb128 0x11
 3123 03e0 BB7B0000 		.4byte	.LASF1179
 3124 03e4 01       		.byte	0x1
 3125 03e5 3701     		.2byte	0x137
 3126 03e7 29000000 		.4byte	0x29
 3127 03eb 02       		.uleb128 0x2
 3128 03ec 91       		.byte	0x91
 3129 03ed 6C       		.sleb128 -20
 3130 03ee 11       		.uleb128 0x11
 3131 03ef 8C200000 		.4byte	.LASF1180
 3132 03f3 01       		.byte	0x1
 3133 03f4 3801     		.2byte	0x138
 3134 03f6 07020000 		.4byte	0x207
 3135 03fa 02       		.uleb128 0x2
 3136 03fb 91       		.byte	0x91
 3137 03fc 74       		.sleb128 -12
 3138 03fd 00       		.byte	0
 3139 03fe 07       		.uleb128 0x7
 3140 03ff E9000000 		.4byte	0xe9
 3141 0403 07       		.uleb128 0x7
 3142 0404 C8000000 		.4byte	0xc8
 3143 0408 12       		.uleb128 0x12
 3144 0409 68250000 		.4byte	.LASF1181
 3145 040d 01       		.byte	0x1
 3146 040e 7801     		.2byte	0x178
 3147 0410 07020000 		.4byte	0x207
 3148 0414 00000000 		.4byte	.LFB3
 3149 0418 90000000 		.4byte	.LFE3-.LFB3
 3150 041c 01       		.uleb128 0x1
 3151 041d 9C       		.byte	0x9c
 3152 041e 41040000 		.4byte	0x441
 3153 0422 13       		.uleb128 0x13
 3154 0423 E54D0000 		.4byte	.LASF1164
 3155 0427 01       		.byte	0x1
 3156 0428 7801     		.2byte	0x178
 3157 042a 03040000 		.4byte	0x403
 3158 042e 02       		.uleb128 0x2
 3159 042f 91       		.byte	0x91
 3160 0430 6F       		.sleb128 -17
 3161 0431 11       		.uleb128 0x11
 3162 0432 58930000 		.4byte	.LASF1178
 3163 0436 01       		.byte	0x1
 3164 0437 7A01     		.2byte	0x17a
 3165 0439 7E030000 		.4byte	0x37e
 3166 043d 02       		.uleb128 0x2
 3167 043e 91       		.byte	0x91
 3168 043f 74       		.sleb128 -12
 3169 0440 00       		.byte	0
 3170 0441 12       		.uleb128 0x12
 3171 0442 AE110000 		.4byte	.LASF1182
 3172 0446 01       		.byte	0x1
 3173 0447 D701     		.2byte	0x1d7
 3174 0449 DE000000 		.4byte	0xde
 3175 044d 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 96


 3176 0451 58000000 		.4byte	.LFE4-.LFB4
 3177 0455 01       		.uleb128 0x1
 3178 0456 9C       		.byte	0x9c
 3179 0457 89040000 		.4byte	0x489
 3180 045b 13       		.uleb128 0x13
 3181 045c DF720000 		.4byte	.LASF1183
 3182 0460 01       		.byte	0x1
 3183 0461 D701     		.2byte	0x1d7
 3184 0463 07020000 		.4byte	0x207
 3185 0467 02       		.uleb128 0x2
 3186 0468 91       		.byte	0x91
 3187 0469 64       		.sleb128 -28
 3188 046a 11       		.uleb128 0x11
 3189 046b 8C200000 		.4byte	.LASF1180
 3190 046f 01       		.byte	0x1
 3191 0470 D901     		.2byte	0x1d9
 3192 0472 DE000000 		.4byte	0xde
 3193 0476 02       		.uleb128 0x2
 3194 0477 91       		.byte	0x91
 3195 0478 6C       		.sleb128 -20
 3196 0479 11       		.uleb128 0x11
 3197 047a DF390000 		.4byte	.LASF1184
 3198 047e 01       		.byte	0x1
 3199 047f DA01     		.2byte	0x1da
 3200 0481 84030000 		.4byte	0x384
 3201 0485 02       		.uleb128 0x2
 3202 0486 91       		.byte	0x91
 3203 0487 68       		.sleb128 -24
 3204 0488 00       		.byte	0
 3205 0489 12       		.uleb128 0x12
 3206 048a A36A0000 		.4byte	.LASF1185
 3207 048e 01       		.byte	0x1
 3208 048f 0E02     		.2byte	0x20e
 3209 0491 DE000000 		.4byte	0xde
 3210 0495 00000000 		.4byte	.LFB5
 3211 0499 60000000 		.4byte	.LFE5-.LFB5
 3212 049d 01       		.uleb128 0x1
 3213 049e 9C       		.byte	0x9c
 3214 049f E0040000 		.4byte	0x4e0
 3215 04a3 13       		.uleb128 0x13
 3216 04a4 DF720000 		.4byte	.LASF1183
 3217 04a8 01       		.byte	0x1
 3218 04a9 0E02     		.2byte	0x20e
 3219 04ab 07020000 		.4byte	0x207
 3220 04af 02       		.uleb128 0x2
 3221 04b0 91       		.byte	0x91
 3222 04b1 64       		.sleb128 -28
 3223 04b2 13       		.uleb128 0x13
 3224 04b3 F73F0000 		.4byte	.LASF1186
 3225 04b7 01       		.byte	0x1
 3226 04b8 0E02     		.2byte	0x20e
 3227 04ba F4000000 		.4byte	0xf4
 3228 04be 02       		.uleb128 0x2
 3229 04bf 91       		.byte	0x91
 3230 04c0 60       		.sleb128 -32
 3231 04c1 11       		.uleb128 0x11
 3232 04c2 8C200000 		.4byte	.LASF1180
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 97


 3233 04c6 01       		.byte	0x1
 3234 04c7 1002     		.2byte	0x210
 3235 04c9 DE000000 		.4byte	0xde
 3236 04cd 02       		.uleb128 0x2
 3237 04ce 91       		.byte	0x91
 3238 04cf 6C       		.sleb128 -20
 3239 04d0 11       		.uleb128 0x11
 3240 04d1 DF390000 		.4byte	.LASF1184
 3241 04d5 01       		.byte	0x1
 3242 04d6 1102     		.2byte	0x211
 3243 04d8 84030000 		.4byte	0x384
 3244 04dc 02       		.uleb128 0x2
 3245 04dd 91       		.byte	0x91
 3246 04de 68       		.sleb128 -24
 3247 04df 00       		.byte	0
 3248 04e0 12       		.uleb128 0x12
 3249 04e1 76000000 		.4byte	.LASF1187
 3250 04e5 01       		.byte	0x1
 3251 04e6 3802     		.2byte	0x238
 3252 04e8 07020000 		.4byte	0x207
 3253 04ec 00000000 		.4byte	.LFB6
 3254 04f0 52000000 		.4byte	.LFE6-.LFB6
 3255 04f4 01       		.uleb128 0x1
 3256 04f5 9C       		.byte	0x9c
 3257 04f6 28050000 		.4byte	0x528
 3258 04fa 13       		.uleb128 0x13
 3259 04fb 2C950000 		.4byte	.LASF1188
 3260 04ff 01       		.byte	0x1
 3261 0500 3802     		.2byte	0x238
 3262 0502 FE030000 		.4byte	0x3fe
 3263 0506 02       		.uleb128 0x2
 3264 0507 91       		.byte	0x91
 3265 0508 6C       		.sleb128 -20
 3266 0509 13       		.uleb128 0x13
 3267 050a D6350000 		.4byte	.LASF1189
 3268 050e 01       		.byte	0x1
 3269 050f 3802     		.2byte	0x238
 3270 0511 FE030000 		.4byte	0x3fe
 3271 0515 02       		.uleb128 0x2
 3272 0516 91       		.byte	0x91
 3273 0517 68       		.sleb128 -24
 3274 0518 11       		.uleb128 0x11
 3275 0519 5E0A0000 		.4byte	.LASF1169
 3276 051d 01       		.byte	0x1
 3277 051e 3A02     		.2byte	0x23a
 3278 0520 07020000 		.4byte	0x207
 3279 0524 02       		.uleb128 0x2
 3280 0525 91       		.byte	0x91
 3281 0526 74       		.sleb128 -12
 3282 0527 00       		.byte	0
 3283 0528 12       		.uleb128 0x12
 3284 0529 9E090000 		.4byte	.LASF1190
 3285 052d 01       		.byte	0x1
 3286 052e 5302     		.2byte	0x253
 3287 0530 DE000000 		.4byte	0xde
 3288 0534 00000000 		.4byte	.LFB7
 3289 0538 66010000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 98


 3290 053c 01       		.uleb128 0x1
 3291 053d 9C       		.byte	0x9c
 3292 053e BB050000 		.4byte	0x5bb
 3293 0542 13       		.uleb128 0x13
 3294 0543 EF8C0000 		.4byte	.LASF1172
 3295 0547 01       		.byte	0x1
 3296 0548 5302     		.2byte	0x253
 3297 054a 07020000 		.4byte	0x207
 3298 054e 02       		.uleb128 0x2
 3299 054f 91       		.byte	0x91
 3300 0550 5C       		.sleb128 -36
 3301 0551 13       		.uleb128 0x13
 3302 0552 68000000 		.4byte	.LASF1191
 3303 0556 01       		.byte	0x1
 3304 0557 5302     		.2byte	0x253
 3305 0559 BB050000 		.4byte	0x5bb
 3306 055d 02       		.uleb128 0x2
 3307 055e 91       		.byte	0x91
 3308 055f 58       		.sleb128 -40
 3309 0560 13       		.uleb128 0x13
 3310 0561 F73F0000 		.4byte	.LASF1186
 3311 0565 01       		.byte	0x1
 3312 0566 5302     		.2byte	0x253
 3313 0568 F4000000 		.4byte	0xf4
 3314 056c 02       		.uleb128 0x2
 3315 056d 91       		.byte	0x91
 3316 056e 54       		.sleb128 -44
 3317 056f 13       		.uleb128 0x13
 3318 0570 324C0000 		.4byte	.LASF1192
 3319 0574 01       		.byte	0x1
 3320 0575 5302     		.2byte	0x253
 3321 0577 C0050000 		.4byte	0x5c0
 3322 057b 02       		.uleb128 0x2
 3323 057c 91       		.byte	0x91
 3324 057d 50       		.sleb128 -48
 3325 057e 11       		.uleb128 0x11
 3326 057f 5D3F0000 		.4byte	.LASF1193
 3327 0583 01       		.byte	0x1
 3328 0584 5502     		.2byte	0x255
 3329 0586 DE000000 		.4byte	0xde
 3330 058a 02       		.uleb128 0x2
 3331 058b 91       		.byte	0x91
 3332 058c 74       		.sleb128 -12
 3333 058d 11       		.uleb128 0x11
 3334 058e 70490000 		.4byte	.LASF1194
 3335 0592 01       		.byte	0x1
 3336 0593 5502     		.2byte	0x255
 3337 0595 DE000000 		.4byte	0xde
 3338 0599 02       		.uleb128 0x2
 3339 059a 91       		.byte	0x91
 3340 059b 6C       		.sleb128 -20
 3341 059c 11       		.uleb128 0x11
 3342 059d 9E5D0000 		.4byte	.LASF1195
 3343 05a1 01       		.byte	0x1
 3344 05a2 5602     		.2byte	0x256
 3345 05a4 FC010000 		.4byte	0x1fc
 3346 05a8 02       		.uleb128 0x2
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 99


 3347 05a9 91       		.byte	0x91
 3348 05aa 64       		.sleb128 -28
 3349 05ab 11       		.uleb128 0x11
 3350 05ac A4150000 		.4byte	.LASF1177
 3351 05b0 01       		.byte	0x1
 3352 05b1 5702     		.2byte	0x257
 3353 05b3 84030000 		.4byte	0x384
 3354 05b7 02       		.uleb128 0x2
 3355 05b8 91       		.byte	0x91
 3356 05b9 70       		.sleb128 -16
 3357 05ba 00       		.byte	0
 3358 05bb 07       		.uleb128 0x7
 3359 05bc B6000000 		.4byte	0xb6
 3360 05c0 07       		.uleb128 0x7
 3361 05c1 DE000000 		.4byte	0xde
 3362 05c5 12       		.uleb128 0x12
 3363 05c6 FC1B0000 		.4byte	.LASF1196
 3364 05ca 01       		.byte	0x1
 3365 05cb 1004     		.2byte	0x410
 3366 05cd DE000000 		.4byte	0xde
 3367 05d1 00000000 		.4byte	.LFB8
 3368 05d5 E6000000 		.4byte	.LFE8-.LFB8
 3369 05d9 01       		.uleb128 0x1
 3370 05da 9C       		.byte	0x9c
 3371 05db 49060000 		.4byte	0x649
 3372 05df 13       		.uleb128 0x13
 3373 05e0 EF8C0000 		.4byte	.LASF1172
 3374 05e4 01       		.byte	0x1
 3375 05e5 1004     		.2byte	0x410
 3376 05e7 07020000 		.4byte	0x207
 3377 05eb 02       		.uleb128 0x2
 3378 05ec 91       		.byte	0x91
 3379 05ed 64       		.sleb128 -28
 3380 05ee 13       		.uleb128 0x13
 3381 05ef 68000000 		.4byte	.LASF1191
 3382 05f3 01       		.byte	0x1
 3383 05f4 1004     		.2byte	0x410
 3384 05f6 BB050000 		.4byte	0x5bb
 3385 05fa 02       		.uleb128 0x2
 3386 05fb 91       		.byte	0x91
 3387 05fc 60       		.sleb128 -32
 3388 05fd 13       		.uleb128 0x13
 3389 05fe FC790000 		.4byte	.LASF1197
 3390 0602 01       		.byte	0x1
 3391 0603 1004     		.2byte	0x410
 3392 0605 4F060000 		.4byte	0x64f
 3393 0609 02       		.uleb128 0x2
 3394 060a 91       		.byte	0x91
 3395 060b 5C       		.sleb128 -36
 3396 060c 13       		.uleb128 0x13
 3397 060d 324C0000 		.4byte	.LASF1192
 3398 0611 01       		.byte	0x1
 3399 0612 1004     		.2byte	0x410
 3400 0614 C0050000 		.4byte	0x5c0
 3401 0618 02       		.uleb128 0x2
 3402 0619 91       		.byte	0x91
 3403 061a 58       		.sleb128 -40
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 100


 3404 061b 11       		.uleb128 0x11
 3405 061c 8C200000 		.4byte	.LASF1180
 3406 0620 01       		.byte	0x1
 3407 0621 1204     		.2byte	0x412
 3408 0623 DE000000 		.4byte	0xde
 3409 0627 02       		.uleb128 0x2
 3410 0628 91       		.byte	0x91
 3411 0629 74       		.sleb128 -12
 3412 062a 11       		.uleb128 0x11
 3413 062b 2A480000 		.4byte	.LASF1198
 3414 062f 01       		.byte	0x1
 3415 0630 1304     		.2byte	0x413
 3416 0632 E9000000 		.4byte	0xe9
 3417 0636 02       		.uleb128 0x2
 3418 0637 91       		.byte	0x91
 3419 0638 6C       		.sleb128 -20
 3420 0639 11       		.uleb128 0x11
 3421 063a A4150000 		.4byte	.LASF1177
 3422 063e 01       		.byte	0x1
 3423 063f 1404     		.2byte	0x414
 3424 0641 84030000 		.4byte	0x384
 3425 0645 02       		.uleb128 0x2
 3426 0646 91       		.byte	0x91
 3427 0647 70       		.sleb128 -16
 3428 0648 00       		.byte	0
 3429 0649 06       		.uleb128 0x6
 3430 064a 04       		.byte	0x4
 3431 064b DE000000 		.4byte	0xde
 3432 064f 07       		.uleb128 0x7
 3433 0650 49060000 		.4byte	0x649
 3434 0654 12       		.uleb128 0x12
 3435 0655 FC920000 		.4byte	.LASF1199
 3436 0659 01       		.byte	0x1
 3437 065a AD04     		.2byte	0x4ad
 3438 065c DE000000 		.4byte	0xde
 3439 0660 00000000 		.4byte	.LFB9
 3440 0664 96010000 		.4byte	.LFE9-.LFB9
 3441 0668 01       		.uleb128 0x1
 3442 0669 9C       		.byte	0x9c
 3443 066a E7060000 		.4byte	0x6e7
 3444 066e 13       		.uleb128 0x13
 3445 066f EF8C0000 		.4byte	.LASF1172
 3446 0673 01       		.byte	0x1
 3447 0674 AD04     		.2byte	0x4ad
 3448 0676 07020000 		.4byte	0x207
 3449 067a 02       		.uleb128 0x2
 3450 067b 91       		.byte	0x91
 3451 067c 5C       		.sleb128 -36
 3452 067d 13       		.uleb128 0x13
 3453 067e 96040000 		.4byte	.LASF1200
 3454 0682 01       		.byte	0x1
 3455 0683 AD04     		.2byte	0x4ad
 3456 0685 E7060000 		.4byte	0x6e7
 3457 0689 02       		.uleb128 0x2
 3458 068a 91       		.byte	0x91
 3459 068b 58       		.sleb128 -40
 3460 068c 13       		.uleb128 0x13
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 101


 3461 068d F73F0000 		.4byte	.LASF1186
 3462 0691 01       		.byte	0x1
 3463 0692 AD04     		.2byte	0x4ad
 3464 0694 F4000000 		.4byte	0xf4
 3465 0698 02       		.uleb128 0x2
 3466 0699 91       		.byte	0x91
 3467 069a 54       		.sleb128 -44
 3468 069b 13       		.uleb128 0x13
 3469 069c 8E080000 		.4byte	.LASF1201
 3470 06a0 01       		.byte	0x1
 3471 06a1 AD04     		.2byte	0x4ad
 3472 06a3 C0050000 		.4byte	0x5c0
 3473 06a7 02       		.uleb128 0x2
 3474 06a8 91       		.byte	0x91
 3475 06a9 50       		.sleb128 -48
 3476 06aa 11       		.uleb128 0x11
 3477 06ab 5D3F0000 		.4byte	.LASF1193
 3478 06af 01       		.byte	0x1
 3479 06b0 AF04     		.2byte	0x4af
 3480 06b2 DE000000 		.4byte	0xde
 3481 06b6 02       		.uleb128 0x2
 3482 06b7 91       		.byte	0x91
 3483 06b8 74       		.sleb128 -12
 3484 06b9 11       		.uleb128 0x11
 3485 06ba 9E5D0000 		.4byte	.LASF1195
 3486 06be 01       		.byte	0x1
 3487 06bf B004     		.2byte	0x4b0
 3488 06c1 FC010000 		.4byte	0x1fc
 3489 06c5 02       		.uleb128 0x2
 3490 06c6 91       		.byte	0x91
 3491 06c7 64       		.sleb128 -28
 3492 06c8 11       		.uleb128 0x11
 3493 06c9 48460000 		.4byte	.LASF1202
 3494 06cd 01       		.byte	0x1
 3495 06ce B104     		.2byte	0x4b1
 3496 06d0 31020000 		.4byte	0x231
 3497 06d4 02       		.uleb128 0x2
 3498 06d5 91       		.byte	0x91
 3499 06d6 6C       		.sleb128 -20
 3500 06d7 11       		.uleb128 0x11
 3501 06d8 A4150000 		.4byte	.LASF1177
 3502 06dc 01       		.byte	0x1
 3503 06dd B204     		.2byte	0x4b2
 3504 06df 84030000 		.4byte	0x384
 3505 06e3 02       		.uleb128 0x2
 3506 06e4 91       		.byte	0x91
 3507 06e5 70       		.sleb128 -16
 3508 06e6 00       		.byte	0
 3509 06e7 07       		.uleb128 0x7
 3510 06e8 A2000000 		.4byte	0xa2
 3511 06ec 12       		.uleb128 0x12
 3512 06ed 7B070000 		.4byte	.LASF1203
 3513 06f1 01       		.byte	0x1
 3514 06f2 6A05     		.2byte	0x56a
 3515 06f4 DE000000 		.4byte	0xde
 3516 06f8 00000000 		.4byte	.LFB10
 3517 06fc B2000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 102


 3518 0700 01       		.uleb128 0x1
 3519 0701 9C       		.byte	0x9c
 3520 0702 61070000 		.4byte	0x761
 3521 0706 13       		.uleb128 0x13
 3522 0707 EF8C0000 		.4byte	.LASF1172
 3523 070b 01       		.byte	0x1
 3524 070c 6A05     		.2byte	0x56a
 3525 070e 07020000 		.4byte	0x207
 3526 0712 02       		.uleb128 0x2
 3527 0713 91       		.byte	0x91
 3528 0714 64       		.sleb128 -28
 3529 0715 13       		.uleb128 0x13
 3530 0716 96040000 		.4byte	.LASF1200
 3531 071a 01       		.byte	0x1
 3532 071b 6A05     		.2byte	0x56a
 3533 071d E7060000 		.4byte	0x6e7
 3534 0721 02       		.uleb128 0x2
 3535 0722 91       		.byte	0x91
 3536 0723 60       		.sleb128 -32
 3537 0724 13       		.uleb128 0x13
 3538 0725 FC790000 		.4byte	.LASF1197
 3539 0729 01       		.byte	0x1
 3540 072a 6A05     		.2byte	0x56a
 3541 072c 4F060000 		.4byte	0x64f
 3542 0730 02       		.uleb128 0x2
 3543 0731 91       		.byte	0x91
 3544 0732 5C       		.sleb128 -36
 3545 0733 11       		.uleb128 0x11
 3546 0734 8C200000 		.4byte	.LASF1180
 3547 0738 01       		.byte	0x1
 3548 0739 6C05     		.2byte	0x56c
 3549 073b DE000000 		.4byte	0xde
 3550 073f 02       		.uleb128 0x2
 3551 0740 91       		.byte	0x91
 3552 0741 74       		.sleb128 -12
 3553 0742 11       		.uleb128 0x11
 3554 0743 2A480000 		.4byte	.LASF1198
 3555 0747 01       		.byte	0x1
 3556 0748 6D05     		.2byte	0x56d
 3557 074a E9000000 		.4byte	0xe9
 3558 074e 02       		.uleb128 0x2
 3559 074f 91       		.byte	0x91
 3560 0750 6C       		.sleb128 -20
 3561 0751 11       		.uleb128 0x11
 3562 0752 A4150000 		.4byte	.LASF1177
 3563 0756 01       		.byte	0x1
 3564 0757 6E05     		.2byte	0x56e
 3565 0759 84030000 		.4byte	0x384
 3566 075d 02       		.uleb128 0x2
 3567 075e 91       		.byte	0x91
 3568 075f 70       		.sleb128 -16
 3569 0760 00       		.byte	0
 3570 0761 12       		.uleb128 0x12
 3571 0762 613C0000 		.4byte	.LASF1204
 3572 0766 01       		.byte	0x1
 3573 0767 C105     		.2byte	0x5c1
 3574 0769 DE000000 		.4byte	0xde
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 103


 3575 076d 00000000 		.4byte	.LFB11
 3576 0771 78000000 		.4byte	.LFE11-.LFB11
 3577 0775 01       		.uleb128 0x1
 3578 0776 9C       		.byte	0x9c
 3579 0777 D6070000 		.4byte	0x7d6
 3580 077b 13       		.uleb128 0x13
 3581 077c EF8C0000 		.4byte	.LASF1172
 3582 0780 01       		.byte	0x1
 3583 0781 C105     		.2byte	0x5c1
 3584 0783 07020000 		.4byte	0x207
 3585 0787 02       		.uleb128 0x2
 3586 0788 91       		.byte	0x91
 3587 0789 64       		.sleb128 -28
 3588 078a 13       		.uleb128 0x13
 3589 078b 96040000 		.4byte	.LASF1200
 3590 078f 01       		.byte	0x1
 3591 0790 C105     		.2byte	0x5c1
 3592 0792 E7060000 		.4byte	0x6e7
 3593 0796 02       		.uleb128 0x2
 3594 0797 91       		.byte	0x91
 3595 0798 60       		.sleb128 -32
 3596 0799 11       		.uleb128 0x11
 3597 079a 8C200000 		.4byte	.LASF1180
 3598 079e 01       		.byte	0x1
 3599 079f C305     		.2byte	0x5c3
 3600 07a1 DE000000 		.4byte	0xde
 3601 07a5 02       		.uleb128 0x2
 3602 07a6 91       		.byte	0x91
 3603 07a7 74       		.sleb128 -12
 3604 07a8 11       		.uleb128 0x11
 3605 07a9 2A480000 		.4byte	.LASF1198
 3606 07ad 01       		.byte	0x1
 3607 07ae C405     		.2byte	0x5c4
 3608 07b0 E9000000 		.4byte	0xe9
 3609 07b4 02       		.uleb128 0x2
 3610 07b5 91       		.byte	0x91
 3611 07b6 6C       		.sleb128 -20
 3612 07b7 11       		.uleb128 0x11
 3613 07b8 48460000 		.4byte	.LASF1202
 3614 07bc 01       		.byte	0x1
 3615 07bd C505     		.2byte	0x5c5
 3616 07bf 31020000 		.4byte	0x231
 3617 07c3 02       		.uleb128 0x2
 3618 07c4 91       		.byte	0x91
 3619 07c5 68       		.sleb128 -24
 3620 07c6 11       		.uleb128 0x11
 3621 07c7 A4150000 		.4byte	.LASF1177
 3622 07cb 01       		.byte	0x1
 3623 07cc C605     		.2byte	0x5c6
 3624 07ce 84030000 		.4byte	0x384
 3625 07d2 02       		.uleb128 0x2
 3626 07d3 91       		.byte	0x91
 3627 07d4 70       		.sleb128 -16
 3628 07d5 00       		.byte	0
 3629 07d6 12       		.uleb128 0x12
 3630 07d7 0C6E0000 		.4byte	.LASF1205
 3631 07db 01       		.byte	0x1
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 104


 3632 07dc F605     		.2byte	0x5f6
 3633 07de E9000000 		.4byte	0xe9
 3634 07e2 00000000 		.4byte	.LFB12
 3635 07e6 2C000000 		.4byte	.LFE12-.LFB12
 3636 07ea 01       		.uleb128 0x1
 3637 07eb 9C       		.byte	0x9c
 3638 07ec 0F080000 		.4byte	0x80f
 3639 07f0 13       		.uleb128 0x13
 3640 07f1 EF8C0000 		.4byte	.LASF1172
 3641 07f5 01       		.byte	0x1
 3642 07f6 F605     		.2byte	0x5f6
 3643 07f8 0F080000 		.4byte	0x80f
 3644 07fc 02       		.uleb128 0x2
 3645 07fd 91       		.byte	0x91
 3646 07fe 6C       		.sleb128 -20
 3647 07ff 11       		.uleb128 0x11
 3648 0800 140F0000 		.4byte	.LASF1206
 3649 0804 01       		.byte	0x1
 3650 0805 F805     		.2byte	0x5f8
 3651 0807 E9000000 		.4byte	0xe9
 3652 080b 02       		.uleb128 0x2
 3653 080c 91       		.byte	0x91
 3654 080d 74       		.sleb128 -12
 3655 080e 00       		.byte	0
 3656 080f 07       		.uleb128 0x7
 3657 0810 07020000 		.4byte	0x207
 3658 0814 12       		.uleb128 0x12
 3659 0815 65820000 		.4byte	.LASF1207
 3660 0819 01       		.byte	0x1
 3661 081a 0606     		.2byte	0x606
 3662 081c E9000000 		.4byte	0xe9
 3663 0820 00000000 		.4byte	.LFB13
 3664 0824 36000000 		.4byte	.LFE13-.LFB13
 3665 0828 01       		.uleb128 0x1
 3666 0829 9C       		.byte	0x9c
 3667 082a 5C080000 		.4byte	0x85c
 3668 082e 13       		.uleb128 0x13
 3669 082f EF8C0000 		.4byte	.LASF1172
 3670 0833 01       		.byte	0x1
 3671 0834 0606     		.2byte	0x606
 3672 0836 0F080000 		.4byte	0x80f
 3673 083a 02       		.uleb128 0x2
 3674 083b 91       		.byte	0x91
 3675 083c 6C       		.sleb128 -20
 3676 083d 11       		.uleb128 0x11
 3677 083e 140F0000 		.4byte	.LASF1206
 3678 0842 01       		.byte	0x1
 3679 0843 0806     		.2byte	0x608
 3680 0845 E9000000 		.4byte	0xe9
 3681 0849 02       		.uleb128 0x2
 3682 084a 91       		.byte	0x91
 3683 084b 70       		.sleb128 -16
 3684 084c 11       		.uleb128 0x11
 3685 084d A4150000 		.4byte	.LASF1177
 3686 0851 01       		.byte	0x1
 3687 0852 0906     		.2byte	0x609
 3688 0854 7E030000 		.4byte	0x37e
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 105


 3689 0858 02       		.uleb128 0x2
 3690 0859 91       		.byte	0x91
 3691 085a 74       		.sleb128 -12
 3692 085b 00       		.byte	0
 3693 085c 12       		.uleb128 0x12
 3694 085d CE730000 		.4byte	.LASF1208
 3695 0861 01       		.byte	0x1
 3696 0862 1806     		.2byte	0x618
 3697 0864 E9000000 		.4byte	0xe9
 3698 0868 00000000 		.4byte	.LFB14
 3699 086c 24000000 		.4byte	.LFE14-.LFB14
 3700 0870 01       		.uleb128 0x1
 3701 0871 9C       		.byte	0x9c
 3702 0872 95080000 		.4byte	0x895
 3703 0876 13       		.uleb128 0x13
 3704 0877 EF8C0000 		.4byte	.LASF1172
 3705 087b 01       		.byte	0x1
 3706 087c 1806     		.2byte	0x618
 3707 087e 0F080000 		.4byte	0x80f
 3708 0882 02       		.uleb128 0x2
 3709 0883 91       		.byte	0x91
 3710 0884 6C       		.sleb128 -20
 3711 0885 11       		.uleb128 0x11
 3712 0886 140F0000 		.4byte	.LASF1206
 3713 088a 01       		.byte	0x1
 3714 088b 1A06     		.2byte	0x61a
 3715 088d E9000000 		.4byte	0xe9
 3716 0891 02       		.uleb128 0x2
 3717 0892 91       		.byte	0x91
 3718 0893 74       		.sleb128 -12
 3719 0894 00       		.byte	0
 3720 0895 14       		.uleb128 0x14
 3721 0896 FE300000 		.4byte	.LASF1210
 3722 089a 01       		.byte	0x1
 3723 089b 2406     		.2byte	0x624
 3724 089d 00000000 		.4byte	.LFB15
 3725 08a1 3E000000 		.4byte	.LFE15-.LFB15
 3726 08a5 01       		.uleb128 0x1
 3727 08a6 9C       		.byte	0x9c
 3728 08a7 CA080000 		.4byte	0x8ca
 3729 08ab 13       		.uleb128 0x13
 3730 08ac EF8C0000 		.4byte	.LASF1172
 3731 08b0 01       		.byte	0x1
 3732 08b1 2406     		.2byte	0x624
 3733 08b3 07020000 		.4byte	0x207
 3734 08b7 02       		.uleb128 0x2
 3735 08b8 91       		.byte	0x91
 3736 08b9 6C       		.sleb128 -20
 3737 08ba 11       		.uleb128 0x11
 3738 08bb A4150000 		.4byte	.LASF1177
 3739 08bf 01       		.byte	0x1
 3740 08c0 2606     		.2byte	0x626
 3741 08c2 84030000 		.4byte	0x384
 3742 08c6 02       		.uleb128 0x2
 3743 08c7 91       		.byte	0x91
 3744 08c8 74       		.sleb128 -12
 3745 08c9 00       		.byte	0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 106


 3746 08ca 15       		.uleb128 0x15
 3747 08cb 5B990000 		.4byte	.LASF1209
 3748 08cf 01       		.byte	0x1
 3749 08d0 3A06     		.2byte	0x63a
 3750 08d2 E9000000 		.4byte	0xe9
 3751 08d6 00000000 		.4byte	.LFB16
 3752 08da 16000000 		.4byte	.LFE16-.LFB16
 3753 08de 01       		.uleb128 0x1
 3754 08df 9C       		.byte	0x9c
 3755 08e0 F4080000 		.4byte	0x8f4
 3756 08e4 13       		.uleb128 0x13
 3757 08e5 EF8C0000 		.4byte	.LASF1172
 3758 08e9 01       		.byte	0x1
 3759 08ea 3A06     		.2byte	0x63a
 3760 08ec 07020000 		.4byte	0x207
 3761 08f0 02       		.uleb128 0x2
 3762 08f1 91       		.byte	0x91
 3763 08f2 74       		.sleb128 -12
 3764 08f3 00       		.byte	0
 3765 08f4 16       		.uleb128 0x16
 3766 08f5 368D0000 		.4byte	.LASF1211
 3767 08f9 01       		.byte	0x1
 3768 08fa 4406     		.2byte	0x644
 3769 08fc 00000000 		.4byte	.LFB17
 3770 0900 1A000000 		.4byte	.LFE17-.LFB17
 3771 0904 01       		.uleb128 0x1
 3772 0905 9C       		.byte	0x9c
 3773 0906 29090000 		.4byte	0x929
 3774 090a 13       		.uleb128 0x13
 3775 090b EF8C0000 		.4byte	.LASF1172
 3776 090f 01       		.byte	0x1
 3777 0910 4406     		.2byte	0x644
 3778 0912 07020000 		.4byte	0x207
 3779 0916 02       		.uleb128 0x2
 3780 0917 91       		.byte	0x91
 3781 0918 74       		.sleb128 -12
 3782 0919 13       		.uleb128 0x13
 3783 091a 151C0000 		.4byte	.LASF1163
 3784 091e 01       		.byte	0x1
 3785 091f 4406     		.2byte	0x644
 3786 0921 E9000000 		.4byte	0xe9
 3787 0925 02       		.uleb128 0x2
 3788 0926 91       		.byte	0x91
 3789 0927 70       		.sleb128 -16
 3790 0928 00       		.byte	0
 3791 0929 15       		.uleb128 0x15
 3792 092a 236E0000 		.4byte	.LASF1212
 3793 092e 01       		.byte	0x1
 3794 092f 4E06     		.2byte	0x64e
 3795 0931 C8000000 		.4byte	0xc8
 3796 0935 00000000 		.4byte	.LFB18
 3797 0939 18000000 		.4byte	.LFE18-.LFB18
 3798 093d 01       		.uleb128 0x1
 3799 093e 9C       		.byte	0x9c
 3800 093f 53090000 		.4byte	0x953
 3801 0943 13       		.uleb128 0x13
 3802 0944 EF8C0000 		.4byte	.LASF1172
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 107


 3803 0948 01       		.byte	0x1
 3804 0949 4E06     		.2byte	0x64e
 3805 094b 07020000 		.4byte	0x207
 3806 094f 02       		.uleb128 0x2
 3807 0950 91       		.byte	0x91
 3808 0951 74       		.sleb128 -12
 3809 0952 00       		.byte	0
 3810 0953 17       		.uleb128 0x17
 3811 0954 648B0000 		.4byte	.LASF1216
 3812 0958 01       		.byte	0x1
 3813 0959 5606     		.2byte	0x656
 3814 095b DE000000 		.4byte	0xde
 3815 095f 00000000 		.4byte	.LFB19
 3816 0963 D6000000 		.4byte	.LFE19-.LFB19
 3817 0967 01       		.uleb128 0x1
 3818 0968 9C       		.byte	0x9c
 3819 0969 AA090000 		.4byte	0x9aa
 3820 096d 13       		.uleb128 0x13
 3821 096e A4150000 		.4byte	.LASF1177
 3822 0972 01       		.byte	0x1
 3823 0973 5606     		.2byte	0x656
 3824 0975 84030000 		.4byte	0x384
 3825 0979 02       		.uleb128 0x2
 3826 097a 91       		.byte	0x91
 3827 097b 6C       		.sleb128 -20
 3828 097c 13       		.uleb128 0x13
 3829 097d 68000000 		.4byte	.LASF1191
 3830 0981 01       		.byte	0x1
 3831 0982 5606     		.2byte	0x656
 3832 0984 B6000000 		.4byte	0xb6
 3833 0988 02       		.uleb128 0x2
 3834 0989 91       		.byte	0x91
 3835 098a 68       		.sleb128 -24
 3836 098b 13       		.uleb128 0x13
 3837 098c A1430000 		.4byte	.LASF1213
 3838 0990 01       		.byte	0x1
 3839 0991 5606     		.2byte	0x656
 3840 0993 C0050000 		.4byte	0x5c0
 3841 0997 02       		.uleb128 0x2
 3842 0998 91       		.byte	0x91
 3843 0999 64       		.sleb128 -28
 3844 099a 11       		.uleb128 0x11
 3845 099b 8C200000 		.4byte	.LASF1180
 3846 099f 01       		.byte	0x1
 3847 09a0 5806     		.2byte	0x658
 3848 09a2 DE000000 		.4byte	0xde
 3849 09a6 02       		.uleb128 0x2
 3850 09a7 91       		.byte	0x91
 3851 09a8 74       		.sleb128 -12
 3852 09a9 00       		.byte	0
 3853 09aa 18       		.uleb128 0x18
 3854 09ab 20540000 		.4byte	.LASF1214
 3855 09af 01       		.byte	0x1
 3856 09b0 A006     		.2byte	0x6a0
 3857 09b2 00000000 		.4byte	.LFB20
 3858 09b6 4C000000 		.4byte	.LFE20-.LFB20
 3859 09ba 01       		.uleb128 0x1
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 108


 3860 09bb 9C       		.byte	0x9c
 3861 09bc DF090000 		.4byte	0x9df
 3862 09c0 13       		.uleb128 0x13
 3863 09c1 A4150000 		.4byte	.LASF1177
 3864 09c5 01       		.byte	0x1
 3865 09c6 A006     		.2byte	0x6a0
 3866 09c8 84030000 		.4byte	0x384
 3867 09cc 02       		.uleb128 0x2
 3868 09cd 91       		.byte	0x91
 3869 09ce 74       		.sleb128 -12
 3870 09cf 13       		.uleb128 0x13
 3871 09d0 96040000 		.4byte	.LASF1200
 3872 09d4 01       		.byte	0x1
 3873 09d5 A006     		.2byte	0x6a0
 3874 09d7 E7060000 		.4byte	0x6e7
 3875 09db 02       		.uleb128 0x2
 3876 09dc 91       		.byte	0x91
 3877 09dd 70       		.sleb128 -16
 3878 09de 00       		.byte	0
 3879 09df 18       		.uleb128 0x18
 3880 09e0 D65D0000 		.4byte	.LASF1215
 3881 09e4 01       		.byte	0x1
 3882 09e5 B206     		.2byte	0x6b2
 3883 09e7 00000000 		.4byte	.LFB21
 3884 09eb 98000000 		.4byte	.LFE21-.LFB21
 3885 09ef 01       		.uleb128 0x1
 3886 09f0 9C       		.byte	0x9c
 3887 09f1 050A0000 		.4byte	0xa05
 3888 09f5 13       		.uleb128 0x13
 3889 09f6 A4150000 		.4byte	.LASF1177
 3890 09fa 01       		.byte	0x1
 3891 09fb B206     		.2byte	0x6b2
 3892 09fd 84030000 		.4byte	0x384
 3893 0a01 02       		.uleb128 0x2
 3894 0a02 91       		.byte	0x91
 3895 0a03 74       		.sleb128 -12
 3896 0a04 00       		.byte	0
 3897 0a05 17       		.uleb128 0x17
 3898 0a06 1D150000 		.4byte	.LASF1217
 3899 0a0a 01       		.byte	0x1
 3900 0a0b 2507     		.2byte	0x725
 3901 0a0d DE000000 		.4byte	0xde
 3902 0a11 00000000 		.4byte	.LFB22
 3903 0a15 2C000000 		.4byte	.LFE22-.LFB22
 3904 0a19 01       		.uleb128 0x1
 3905 0a1a 9C       		.byte	0x9c
 3906 0a1b 3E0A0000 		.4byte	0xa3e
 3907 0a1f 13       		.uleb128 0x13
 3908 0a20 A4150000 		.4byte	.LASF1177
 3909 0a24 01       		.byte	0x1
 3910 0a25 2507     		.2byte	0x725
 3911 0a27 3E0A0000 		.4byte	0xa3e
 3912 0a2b 02       		.uleb128 0x2
 3913 0a2c 91       		.byte	0x91
 3914 0a2d 6C       		.sleb128 -20
 3915 0a2e 11       		.uleb128 0x11
 3916 0a2f 8C200000 		.4byte	.LASF1180
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 109


 3917 0a33 01       		.byte	0x1
 3918 0a34 2707     		.2byte	0x727
 3919 0a36 DE000000 		.4byte	0xde
 3920 0a3a 02       		.uleb128 0x2
 3921 0a3b 91       		.byte	0x91
 3922 0a3c 74       		.sleb128 -12
 3923 0a3d 00       		.byte	0
 3924 0a3e 06       		.uleb128 0x6
 3925 0a3f 04       		.byte	0x4
 3926 0a40 440A0000 		.4byte	0xa44
 3927 0a44 07       		.uleb128 0x7
 3928 0a45 F3020000 		.4byte	0x2f3
 3929 0a49 12       		.uleb128 0x12
 3930 0a4a 813B0000 		.4byte	.LASF1218
 3931 0a4e 01       		.byte	0x1
 3932 0a4f 3A07     		.2byte	0x73a
 3933 0a51 DE000000 		.4byte	0xde
 3934 0a55 00000000 		.4byte	.LFB23
 3935 0a59 30000000 		.4byte	.LFE23-.LFB23
 3936 0a5d 01       		.uleb128 0x1
 3937 0a5e 9C       		.byte	0x9c
 3938 0a5f 820A0000 		.4byte	0xa82
 3939 0a63 13       		.uleb128 0x13
 3940 0a64 EF8C0000 		.4byte	.LASF1172
 3941 0a68 01       		.byte	0x1
 3942 0a69 3A07     		.2byte	0x73a
 3943 0a6b 0F080000 		.4byte	0x80f
 3944 0a6f 02       		.uleb128 0x2
 3945 0a70 91       		.byte	0x91
 3946 0a71 6C       		.sleb128 -20
 3947 0a72 11       		.uleb128 0x11
 3948 0a73 8C200000 		.4byte	.LASF1180
 3949 0a77 01       		.byte	0x1
 3950 0a78 3C07     		.2byte	0x73c
 3951 0a7a DE000000 		.4byte	0xde
 3952 0a7e 02       		.uleb128 0x2
 3953 0a7f 91       		.byte	0x91
 3954 0a80 74       		.sleb128 -12
 3955 0a81 00       		.byte	0
 3956 0a82 17       		.uleb128 0x17
 3957 0a83 9B170000 		.4byte	.LASF1219
 3958 0a87 01       		.byte	0x1
 3959 0a88 4C07     		.2byte	0x74c
 3960 0a8a DE000000 		.4byte	0xde
 3961 0a8e 00000000 		.4byte	.LFB24
 3962 0a92 30000000 		.4byte	.LFE24-.LFB24
 3963 0a96 01       		.uleb128 0x1
 3964 0a97 9C       		.byte	0x9c
 3965 0a98 BB0A0000 		.4byte	0xabb
 3966 0a9c 13       		.uleb128 0x13
 3967 0a9d A4150000 		.4byte	.LASF1177
 3968 0aa1 01       		.byte	0x1
 3969 0aa2 4C07     		.2byte	0x74c
 3970 0aa4 3E0A0000 		.4byte	0xa3e
 3971 0aa8 02       		.uleb128 0x2
 3972 0aa9 91       		.byte	0x91
 3973 0aaa 6C       		.sleb128 -20
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 110


 3974 0aab 11       		.uleb128 0x11
 3975 0aac 8C200000 		.4byte	.LASF1180
 3976 0ab0 01       		.byte	0x1
 3977 0ab1 4E07     		.2byte	0x74e
 3978 0ab3 DE000000 		.4byte	0xde
 3979 0ab7 02       		.uleb128 0x2
 3980 0ab8 91       		.byte	0x91
 3981 0ab9 74       		.sleb128 -12
 3982 0aba 00       		.byte	0
 3983 0abb 12       		.uleb128 0x12
 3984 0abc 71140000 		.4byte	.LASF1220
 3985 0ac0 01       		.byte	0x1
 3986 0ac1 6107     		.2byte	0x761
 3987 0ac3 DE000000 		.4byte	0xde
 3988 0ac7 00000000 		.4byte	.LFB25
 3989 0acb 34000000 		.4byte	.LFE25-.LFB25
 3990 0acf 01       		.uleb128 0x1
 3991 0ad0 9C       		.byte	0x9c
 3992 0ad1 F40A0000 		.4byte	0xaf4
 3993 0ad5 13       		.uleb128 0x13
 3994 0ad6 EF8C0000 		.4byte	.LASF1172
 3995 0ada 01       		.byte	0x1
 3996 0adb 6107     		.2byte	0x761
 3997 0add 0F080000 		.4byte	0x80f
 3998 0ae1 02       		.uleb128 0x2
 3999 0ae2 91       		.byte	0x91
 4000 0ae3 6C       		.sleb128 -20
 4001 0ae4 11       		.uleb128 0x11
 4002 0ae5 8C200000 		.4byte	.LASF1180
 4003 0ae9 01       		.byte	0x1
 4004 0aea 6307     		.2byte	0x763
 4005 0aec DE000000 		.4byte	0xde
 4006 0af0 02       		.uleb128 0x2
 4007 0af1 91       		.byte	0x91
 4008 0af2 74       		.sleb128 -12
 4009 0af3 00       		.byte	0
 4010 0af4 16       		.uleb128 0x16
 4011 0af5 76470000 		.4byte	.LASF1221
 4012 0af9 01       		.byte	0x1
 4013 0afa 8808     		.2byte	0x888
 4014 0afc 00000000 		.4byte	.LFB26
 4015 0b00 50000000 		.4byte	.LFE26-.LFB26
 4016 0b04 01       		.uleb128 0x1
 4017 0b05 9C       		.byte	0x9c
 4018 0b06 370B0000 		.4byte	0xb37
 4019 0b0a 13       		.uleb128 0x13
 4020 0b0b EF8C0000 		.4byte	.LASF1172
 4021 0b0f 01       		.byte	0x1
 4022 0b10 8808     		.2byte	0x888
 4023 0b12 07020000 		.4byte	0x207
 4024 0b16 02       		.uleb128 0x2
 4025 0b17 91       		.byte	0x91
 4026 0b18 6C       		.sleb128 -20
 4027 0b19 13       		.uleb128 0x13
 4028 0b1a C8020000 		.4byte	.LASF1168
 4029 0b1e 01       		.byte	0x1
 4030 0b1f 8808     		.2byte	0x888
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 111


 4031 0b21 AB000000 		.4byte	0xab
 4032 0b25 02       		.uleb128 0x2
 4033 0b26 91       		.byte	0x91
 4034 0b27 68       		.sleb128 -24
 4035 0b28 19       		.uleb128 0x19
 4036 0b29 757800   		.ascii	"ux\000"
 4037 0b2c 01       		.byte	0x1
 4038 0b2d 8A08     		.2byte	0x88a
 4039 0b2f E9000000 		.4byte	0xe9
 4040 0b33 02       		.uleb128 0x2
 4041 0b34 91       		.byte	0x91
 4042 0b35 74       		.sleb128 -12
 4043 0b36 00       		.byte	0
 4044 0b37 16       		.uleb128 0x16
 4045 0b38 B9470000 		.4byte	.LASF1222
 4046 0b3c 01       		.byte	0x1
 4047 0b3d A508     		.2byte	0x8a5
 4048 0b3f 00000000 		.4byte	.LFB27
 4049 0b43 44000000 		.4byte	.LFE27-.LFB27
 4050 0b47 01       		.uleb128 0x1
 4051 0b48 9C       		.byte	0x9c
 4052 0b49 6B0B0000 		.4byte	0xb6b
 4053 0b4d 13       		.uleb128 0x13
 4054 0b4e EF8C0000 		.4byte	.LASF1172
 4055 0b52 01       		.byte	0x1
 4056 0b53 A508     		.2byte	0x8a5
 4057 0b55 07020000 		.4byte	0x207
 4058 0b59 02       		.uleb128 0x2
 4059 0b5a 91       		.byte	0x91
 4060 0b5b 6C       		.sleb128 -20
 4061 0b5c 19       		.uleb128 0x19
 4062 0b5d 757800   		.ascii	"ux\000"
 4063 0b60 01       		.byte	0x1
 4064 0b61 A708     		.2byte	0x8a7
 4065 0b63 E9000000 		.4byte	0xe9
 4066 0b67 02       		.uleb128 0x2
 4067 0b68 91       		.byte	0x91
 4068 0b69 74       		.sleb128 -12
 4069 0b6a 00       		.byte	0
 4070 0b6b 1A       		.uleb128 0x1a
 4071 0b6c 2E030000 		.4byte	0x32e
 4072 0b70 7B0B0000 		.4byte	0xb7b
 4073 0b74 1B       		.uleb128 0x1b
 4074 0b75 9B000000 		.4byte	0x9b
 4075 0b79 09       		.byte	0x9
 4076 0b7a 00       		.byte	0
 4077 0b7b 1C       		.uleb128 0x1c
 4078 0b7c 525D0000 		.4byte	.LASF1226
 4079 0b80 01       		.byte	0x1
 4080 0b81 BB       		.byte	0xbb
 4081 0b82 6B0B0000 		.4byte	0xb6b
 4082 0b86 05       		.uleb128 0x5
 4083 0b87 03       		.byte	0x3
 4084 0b88 00000000 		.4byte	xQueueRegistry
 4085 0b8c 00       		.byte	0
 4086              		.section	.debug_abbrev,"",%progbits
 4087              	.Ldebug_abbrev0:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 112


 4088 0000 01       		.uleb128 0x1
 4089 0001 11       		.uleb128 0x11
 4090 0002 01       		.byte	0x1
 4091 0003 25       		.uleb128 0x25
 4092 0004 0E       		.uleb128 0xe
 4093 0005 13       		.uleb128 0x13
 4094 0006 0B       		.uleb128 0xb
 4095 0007 03       		.uleb128 0x3
 4096 0008 0E       		.uleb128 0xe
 4097 0009 1B       		.uleb128 0x1b
 4098 000a 0E       		.uleb128 0xe
 4099 000b 55       		.uleb128 0x55
 4100 000c 17       		.uleb128 0x17
 4101 000d 11       		.uleb128 0x11
 4102 000e 01       		.uleb128 0x1
 4103 000f 10       		.uleb128 0x10
 4104 0010 17       		.uleb128 0x17
 4105 0011 9942     		.uleb128 0x2119
 4106 0013 17       		.uleb128 0x17
 4107 0014 00       		.byte	0
 4108 0015 00       		.byte	0
 4109 0016 02       		.uleb128 0x2
 4110 0017 16       		.uleb128 0x16
 4111 0018 00       		.byte	0
 4112 0019 03       		.uleb128 0x3
 4113 001a 0E       		.uleb128 0xe
 4114 001b 3A       		.uleb128 0x3a
 4115 001c 0B       		.uleb128 0xb
 4116 001d 3B       		.uleb128 0x3b
 4117 001e 0B       		.uleb128 0xb
 4118 001f 49       		.uleb128 0x49
 4119 0020 13       		.uleb128 0x13
 4120 0021 00       		.byte	0
 4121 0022 00       		.byte	0
 4122 0023 03       		.uleb128 0x3
 4123 0024 24       		.uleb128 0x24
 4124 0025 00       		.byte	0
 4125 0026 0B       		.uleb128 0xb
 4126 0027 0B       		.uleb128 0xb
 4127 0028 3E       		.uleb128 0x3e
 4128 0029 0B       		.uleb128 0xb
 4129 002a 03       		.uleb128 0x3
 4130 002b 0E       		.uleb128 0xe
 4131 002c 00       		.byte	0
 4132 002d 00       		.byte	0
 4133 002e 04       		.uleb128 0x4
 4134 002f 24       		.uleb128 0x24
 4135 0030 00       		.byte	0
 4136 0031 0B       		.uleb128 0xb
 4137 0032 0B       		.uleb128 0xb
 4138 0033 3E       		.uleb128 0x3e
 4139 0034 0B       		.uleb128 0xb
 4140 0035 03       		.uleb128 0x3
 4141 0036 08       		.uleb128 0x8
 4142 0037 00       		.byte	0
 4143 0038 00       		.byte	0
 4144 0039 05       		.uleb128 0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 113


 4145 003a 0F       		.uleb128 0xf
 4146 003b 00       		.byte	0
 4147 003c 0B       		.uleb128 0xb
 4148 003d 0B       		.uleb128 0xb
 4149 003e 00       		.byte	0
 4150 003f 00       		.byte	0
 4151 0040 06       		.uleb128 0x6
 4152 0041 0F       		.uleb128 0xf
 4153 0042 00       		.byte	0
 4154 0043 0B       		.uleb128 0xb
 4155 0044 0B       		.uleb128 0xb
 4156 0045 49       		.uleb128 0x49
 4157 0046 13       		.uleb128 0x13
 4158 0047 00       		.byte	0
 4159 0048 00       		.byte	0
 4160 0049 07       		.uleb128 0x7
 4161 004a 26       		.uleb128 0x26
 4162 004b 00       		.byte	0
 4163 004c 49       		.uleb128 0x49
 4164 004d 13       		.uleb128 0x13
 4165 004e 00       		.byte	0
 4166 004f 00       		.byte	0
 4167 0050 08       		.uleb128 0x8
 4168 0051 26       		.uleb128 0x26
 4169 0052 00       		.byte	0
 4170 0053 00       		.byte	0
 4171 0054 00       		.byte	0
 4172 0055 09       		.uleb128 0x9
 4173 0056 13       		.uleb128 0x13
 4174 0057 01       		.byte	0x1
 4175 0058 03       		.uleb128 0x3
 4176 0059 0E       		.uleb128 0xe
 4177 005a 0B       		.uleb128 0xb
 4178 005b 0B       		.uleb128 0xb
 4179 005c 3A       		.uleb128 0x3a
 4180 005d 0B       		.uleb128 0xb
 4181 005e 3B       		.uleb128 0x3b
 4182 005f 0B       		.uleb128 0xb
 4183 0060 01       		.uleb128 0x1
 4184 0061 13       		.uleb128 0x13
 4185 0062 00       		.byte	0
 4186 0063 00       		.byte	0
 4187 0064 0A       		.uleb128 0xa
 4188 0065 0D       		.uleb128 0xd
 4189 0066 00       		.byte	0
 4190 0067 03       		.uleb128 0x3
 4191 0068 0E       		.uleb128 0xe
 4192 0069 3A       		.uleb128 0x3a
 4193 006a 0B       		.uleb128 0xb
 4194 006b 3B       		.uleb128 0x3b
 4195 006c 0B       		.uleb128 0xb
 4196 006d 49       		.uleb128 0x49
 4197 006e 13       		.uleb128 0x13
 4198 006f 38       		.uleb128 0x38
 4199 0070 0B       		.uleb128 0xb
 4200 0071 00       		.byte	0
 4201 0072 00       		.byte	0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 114


 4202 0073 0B       		.uleb128 0xb
 4203 0074 17       		.uleb128 0x17
 4204 0075 01       		.byte	0x1
 4205 0076 0B       		.uleb128 0xb
 4206 0077 0B       		.uleb128 0xb
 4207 0078 3A       		.uleb128 0x3a
 4208 0079 0B       		.uleb128 0xb
 4209 007a 3B       		.uleb128 0x3b
 4210 007b 0B       		.uleb128 0xb
 4211 007c 01       		.uleb128 0x1
 4212 007d 13       		.uleb128 0x13
 4213 007e 00       		.byte	0
 4214 007f 00       		.byte	0
 4215 0080 0C       		.uleb128 0xc
 4216 0081 0D       		.uleb128 0xd
 4217 0082 00       		.byte	0
 4218 0083 03       		.uleb128 0x3
 4219 0084 0E       		.uleb128 0xe
 4220 0085 3A       		.uleb128 0x3a
 4221 0086 0B       		.uleb128 0xb
 4222 0087 3B       		.uleb128 0x3b
 4223 0088 0B       		.uleb128 0xb
 4224 0089 49       		.uleb128 0x49
 4225 008a 13       		.uleb128 0x13
 4226 008b 00       		.byte	0
 4227 008c 00       		.byte	0
 4228 008d 0D       		.uleb128 0xd
 4229 008e 0D       		.uleb128 0xd
 4230 008f 00       		.byte	0
 4231 0090 03       		.uleb128 0x3
 4232 0091 08       		.uleb128 0x8
 4233 0092 3A       		.uleb128 0x3a
 4234 0093 0B       		.uleb128 0xb
 4235 0094 3B       		.uleb128 0x3b
 4236 0095 0B       		.uleb128 0xb
 4237 0096 49       		.uleb128 0x49
 4238 0097 13       		.uleb128 0x13
 4239 0098 38       		.uleb128 0x38
 4240 0099 0B       		.uleb128 0xb
 4241 009a 00       		.byte	0
 4242 009b 00       		.byte	0
 4243 009c 0E       		.uleb128 0xe
 4244 009d 35       		.uleb128 0x35
 4245 009e 00       		.byte	0
 4246 009f 49       		.uleb128 0x49
 4247 00a0 13       		.uleb128 0x13
 4248 00a1 00       		.byte	0
 4249 00a2 00       		.byte	0
 4250 00a3 0F       		.uleb128 0xf
 4251 00a4 2E       		.uleb128 0x2e
 4252 00a5 01       		.byte	0x1
 4253 00a6 3F       		.uleb128 0x3f
 4254 00a7 19       		.uleb128 0x19
 4255 00a8 03       		.uleb128 0x3
 4256 00a9 0E       		.uleb128 0xe
 4257 00aa 3A       		.uleb128 0x3a
 4258 00ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 115


 4259 00ac 3B       		.uleb128 0x3b
 4260 00ad 0B       		.uleb128 0xb
 4261 00ae 27       		.uleb128 0x27
 4262 00af 19       		.uleb128 0x19
 4263 00b0 49       		.uleb128 0x49
 4264 00b1 13       		.uleb128 0x13
 4265 00b2 11       		.uleb128 0x11
 4266 00b3 01       		.uleb128 0x1
 4267 00b4 12       		.uleb128 0x12
 4268 00b5 06       		.uleb128 0x6
 4269 00b6 40       		.uleb128 0x40
 4270 00b7 18       		.uleb128 0x18
 4271 00b8 9642     		.uleb128 0x2116
 4272 00ba 19       		.uleb128 0x19
 4273 00bb 01       		.uleb128 0x1
 4274 00bc 13       		.uleb128 0x13
 4275 00bd 00       		.byte	0
 4276 00be 00       		.byte	0
 4277 00bf 10       		.uleb128 0x10
 4278 00c0 05       		.uleb128 0x5
 4279 00c1 00       		.byte	0
 4280 00c2 03       		.uleb128 0x3
 4281 00c3 0E       		.uleb128 0xe
 4282 00c4 3A       		.uleb128 0x3a
 4283 00c5 0B       		.uleb128 0xb
 4284 00c6 3B       		.uleb128 0x3b
 4285 00c7 0B       		.uleb128 0xb
 4286 00c8 49       		.uleb128 0x49
 4287 00c9 13       		.uleb128 0x13
 4288 00ca 02       		.uleb128 0x2
 4289 00cb 18       		.uleb128 0x18
 4290 00cc 00       		.byte	0
 4291 00cd 00       		.byte	0
 4292 00ce 11       		.uleb128 0x11
 4293 00cf 34       		.uleb128 0x34
 4294 00d0 00       		.byte	0
 4295 00d1 03       		.uleb128 0x3
 4296 00d2 0E       		.uleb128 0xe
 4297 00d3 3A       		.uleb128 0x3a
 4298 00d4 0B       		.uleb128 0xb
 4299 00d5 3B       		.uleb128 0x3b
 4300 00d6 05       		.uleb128 0x5
 4301 00d7 49       		.uleb128 0x49
 4302 00d8 13       		.uleb128 0x13
 4303 00d9 02       		.uleb128 0x2
 4304 00da 18       		.uleb128 0x18
 4305 00db 00       		.byte	0
 4306 00dc 00       		.byte	0
 4307 00dd 12       		.uleb128 0x12
 4308 00de 2E       		.uleb128 0x2e
 4309 00df 01       		.byte	0x1
 4310 00e0 3F       		.uleb128 0x3f
 4311 00e1 19       		.uleb128 0x19
 4312 00e2 03       		.uleb128 0x3
 4313 00e3 0E       		.uleb128 0xe
 4314 00e4 3A       		.uleb128 0x3a
 4315 00e5 0B       		.uleb128 0xb
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 116


 4316 00e6 3B       		.uleb128 0x3b
 4317 00e7 05       		.uleb128 0x5
 4318 00e8 27       		.uleb128 0x27
 4319 00e9 19       		.uleb128 0x19
 4320 00ea 49       		.uleb128 0x49
 4321 00eb 13       		.uleb128 0x13
 4322 00ec 11       		.uleb128 0x11
 4323 00ed 01       		.uleb128 0x1
 4324 00ee 12       		.uleb128 0x12
 4325 00ef 06       		.uleb128 0x6
 4326 00f0 40       		.uleb128 0x40
 4327 00f1 18       		.uleb128 0x18
 4328 00f2 9642     		.uleb128 0x2116
 4329 00f4 19       		.uleb128 0x19
 4330 00f5 01       		.uleb128 0x1
 4331 00f6 13       		.uleb128 0x13
 4332 00f7 00       		.byte	0
 4333 00f8 00       		.byte	0
 4334 00f9 13       		.uleb128 0x13
 4335 00fa 05       		.uleb128 0x5
 4336 00fb 00       		.byte	0
 4337 00fc 03       		.uleb128 0x3
 4338 00fd 0E       		.uleb128 0xe
 4339 00fe 3A       		.uleb128 0x3a
 4340 00ff 0B       		.uleb128 0xb
 4341 0100 3B       		.uleb128 0x3b
 4342 0101 05       		.uleb128 0x5
 4343 0102 49       		.uleb128 0x49
 4344 0103 13       		.uleb128 0x13
 4345 0104 02       		.uleb128 0x2
 4346 0105 18       		.uleb128 0x18
 4347 0106 00       		.byte	0
 4348 0107 00       		.byte	0
 4349 0108 14       		.uleb128 0x14
 4350 0109 2E       		.uleb128 0x2e
 4351 010a 01       		.byte	0x1
 4352 010b 3F       		.uleb128 0x3f
 4353 010c 19       		.uleb128 0x19
 4354 010d 03       		.uleb128 0x3
 4355 010e 0E       		.uleb128 0xe
 4356 010f 3A       		.uleb128 0x3a
 4357 0110 0B       		.uleb128 0xb
 4358 0111 3B       		.uleb128 0x3b
 4359 0112 05       		.uleb128 0x5
 4360 0113 27       		.uleb128 0x27
 4361 0114 19       		.uleb128 0x19
 4362 0115 11       		.uleb128 0x11
 4363 0116 01       		.uleb128 0x1
 4364 0117 12       		.uleb128 0x12
 4365 0118 06       		.uleb128 0x6
 4366 0119 40       		.uleb128 0x40
 4367 011a 18       		.uleb128 0x18
 4368 011b 9642     		.uleb128 0x2116
 4369 011d 19       		.uleb128 0x19
 4370 011e 01       		.uleb128 0x1
 4371 011f 13       		.uleb128 0x13
 4372 0120 00       		.byte	0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 117


 4373 0121 00       		.byte	0
 4374 0122 15       		.uleb128 0x15
 4375 0123 2E       		.uleb128 0x2e
 4376 0124 01       		.byte	0x1
 4377 0125 3F       		.uleb128 0x3f
 4378 0126 19       		.uleb128 0x19
 4379 0127 03       		.uleb128 0x3
 4380 0128 0E       		.uleb128 0xe
 4381 0129 3A       		.uleb128 0x3a
 4382 012a 0B       		.uleb128 0xb
 4383 012b 3B       		.uleb128 0x3b
 4384 012c 05       		.uleb128 0x5
 4385 012d 27       		.uleb128 0x27
 4386 012e 19       		.uleb128 0x19
 4387 012f 49       		.uleb128 0x49
 4388 0130 13       		.uleb128 0x13
 4389 0131 11       		.uleb128 0x11
 4390 0132 01       		.uleb128 0x1
 4391 0133 12       		.uleb128 0x12
 4392 0134 06       		.uleb128 0x6
 4393 0135 40       		.uleb128 0x40
 4394 0136 18       		.uleb128 0x18
 4395 0137 9742     		.uleb128 0x2117
 4396 0139 19       		.uleb128 0x19
 4397 013a 01       		.uleb128 0x1
 4398 013b 13       		.uleb128 0x13
 4399 013c 00       		.byte	0
 4400 013d 00       		.byte	0
 4401 013e 16       		.uleb128 0x16
 4402 013f 2E       		.uleb128 0x2e
 4403 0140 01       		.byte	0x1
 4404 0141 3F       		.uleb128 0x3f
 4405 0142 19       		.uleb128 0x19
 4406 0143 03       		.uleb128 0x3
 4407 0144 0E       		.uleb128 0xe
 4408 0145 3A       		.uleb128 0x3a
 4409 0146 0B       		.uleb128 0xb
 4410 0147 3B       		.uleb128 0x3b
 4411 0148 05       		.uleb128 0x5
 4412 0149 27       		.uleb128 0x27
 4413 014a 19       		.uleb128 0x19
 4414 014b 11       		.uleb128 0x11
 4415 014c 01       		.uleb128 0x1
 4416 014d 12       		.uleb128 0x12
 4417 014e 06       		.uleb128 0x6
 4418 014f 40       		.uleb128 0x40
 4419 0150 18       		.uleb128 0x18
 4420 0151 9742     		.uleb128 0x2117
 4421 0153 19       		.uleb128 0x19
 4422 0154 01       		.uleb128 0x1
 4423 0155 13       		.uleb128 0x13
 4424 0156 00       		.byte	0
 4425 0157 00       		.byte	0
 4426 0158 17       		.uleb128 0x17
 4427 0159 2E       		.uleb128 0x2e
 4428 015a 01       		.byte	0x1
 4429 015b 03       		.uleb128 0x3
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 118


 4430 015c 0E       		.uleb128 0xe
 4431 015d 3A       		.uleb128 0x3a
 4432 015e 0B       		.uleb128 0xb
 4433 015f 3B       		.uleb128 0x3b
 4434 0160 05       		.uleb128 0x5
 4435 0161 27       		.uleb128 0x27
 4436 0162 19       		.uleb128 0x19
 4437 0163 49       		.uleb128 0x49
 4438 0164 13       		.uleb128 0x13
 4439 0165 11       		.uleb128 0x11
 4440 0166 01       		.uleb128 0x1
 4441 0167 12       		.uleb128 0x12
 4442 0168 06       		.uleb128 0x6
 4443 0169 40       		.uleb128 0x40
 4444 016a 18       		.uleb128 0x18
 4445 016b 9642     		.uleb128 0x2116
 4446 016d 19       		.uleb128 0x19
 4447 016e 01       		.uleb128 0x1
 4448 016f 13       		.uleb128 0x13
 4449 0170 00       		.byte	0
 4450 0171 00       		.byte	0
 4451 0172 18       		.uleb128 0x18
 4452 0173 2E       		.uleb128 0x2e
 4453 0174 01       		.byte	0x1
 4454 0175 03       		.uleb128 0x3
 4455 0176 0E       		.uleb128 0xe
 4456 0177 3A       		.uleb128 0x3a
 4457 0178 0B       		.uleb128 0xb
 4458 0179 3B       		.uleb128 0x3b
 4459 017a 05       		.uleb128 0x5
 4460 017b 27       		.uleb128 0x27
 4461 017c 19       		.uleb128 0x19
 4462 017d 11       		.uleb128 0x11
 4463 017e 01       		.uleb128 0x1
 4464 017f 12       		.uleb128 0x12
 4465 0180 06       		.uleb128 0x6
 4466 0181 40       		.uleb128 0x40
 4467 0182 18       		.uleb128 0x18
 4468 0183 9642     		.uleb128 0x2116
 4469 0185 19       		.uleb128 0x19
 4470 0186 01       		.uleb128 0x1
 4471 0187 13       		.uleb128 0x13
 4472 0188 00       		.byte	0
 4473 0189 00       		.byte	0
 4474 018a 19       		.uleb128 0x19
 4475 018b 34       		.uleb128 0x34
 4476 018c 00       		.byte	0
 4477 018d 03       		.uleb128 0x3
 4478 018e 08       		.uleb128 0x8
 4479 018f 3A       		.uleb128 0x3a
 4480 0190 0B       		.uleb128 0xb
 4481 0191 3B       		.uleb128 0x3b
 4482 0192 05       		.uleb128 0x5
 4483 0193 49       		.uleb128 0x49
 4484 0194 13       		.uleb128 0x13
 4485 0195 02       		.uleb128 0x2
 4486 0196 18       		.uleb128 0x18
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 119


 4487 0197 00       		.byte	0
 4488 0198 00       		.byte	0
 4489 0199 1A       		.uleb128 0x1a
 4490 019a 01       		.uleb128 0x1
 4491 019b 01       		.byte	0x1
 4492 019c 49       		.uleb128 0x49
 4493 019d 13       		.uleb128 0x13
 4494 019e 01       		.uleb128 0x1
 4495 019f 13       		.uleb128 0x13
 4496 01a0 00       		.byte	0
 4497 01a1 00       		.byte	0
 4498 01a2 1B       		.uleb128 0x1b
 4499 01a3 21       		.uleb128 0x21
 4500 01a4 00       		.byte	0
 4501 01a5 49       		.uleb128 0x49
 4502 01a6 13       		.uleb128 0x13
 4503 01a7 2F       		.uleb128 0x2f
 4504 01a8 0B       		.uleb128 0xb
 4505 01a9 00       		.byte	0
 4506 01aa 00       		.byte	0
 4507 01ab 1C       		.uleb128 0x1c
 4508 01ac 34       		.uleb128 0x34
 4509 01ad 00       		.byte	0
 4510 01ae 03       		.uleb128 0x3
 4511 01af 0E       		.uleb128 0xe
 4512 01b0 3A       		.uleb128 0x3a
 4513 01b1 0B       		.uleb128 0xb
 4514 01b2 3B       		.uleb128 0x3b
 4515 01b3 0B       		.uleb128 0xb
 4516 01b4 49       		.uleb128 0x49
 4517 01b5 13       		.uleb128 0x13
 4518 01b6 3F       		.uleb128 0x3f
 4519 01b7 19       		.uleb128 0x19
 4520 01b8 02       		.uleb128 0x2
 4521 01b9 18       		.uleb128 0x18
 4522 01ba 00       		.byte	0
 4523 01bb 00       		.byte	0
 4524 01bc 00       		.byte	0
 4525              		.section	.debug_aranges,"",%progbits
 4526 0000 EC000000 		.4byte	0xec
 4527 0004 0200     		.2byte	0x2
 4528 0006 00000000 		.4byte	.Ldebug_info0
 4529 000a 04       		.byte	0x4
 4530 000b 00       		.byte	0
 4531 000c 0000     		.2byte	0
 4532 000e 0000     		.2byte	0
 4533 0010 00000000 		.4byte	.LFB1
 4534 0014 B0000000 		.4byte	.LFE1-.LFB1
 4535 0018 00000000 		.4byte	.LFB2
 4536 001c 84000000 		.4byte	.LFE2-.LFB2
 4537 0020 00000000 		.4byte	.LFB3
 4538 0024 90000000 		.4byte	.LFE3-.LFB3
 4539 0028 00000000 		.4byte	.LFB4
 4540 002c 58000000 		.4byte	.LFE4-.LFB4
 4541 0030 00000000 		.4byte	.LFB5
 4542 0034 60000000 		.4byte	.LFE5-.LFB5
 4543 0038 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 120


 4544 003c 52000000 		.4byte	.LFE6-.LFB6
 4545 0040 00000000 		.4byte	.LFB7
 4546 0044 66010000 		.4byte	.LFE7-.LFB7
 4547 0048 00000000 		.4byte	.LFB8
 4548 004c E6000000 		.4byte	.LFE8-.LFB8
 4549 0050 00000000 		.4byte	.LFB9
 4550 0054 96010000 		.4byte	.LFE9-.LFB9
 4551 0058 00000000 		.4byte	.LFB10
 4552 005c B2000000 		.4byte	.LFE10-.LFB10
 4553 0060 00000000 		.4byte	.LFB11
 4554 0064 78000000 		.4byte	.LFE11-.LFB11
 4555 0068 00000000 		.4byte	.LFB12
 4556 006c 2C000000 		.4byte	.LFE12-.LFB12
 4557 0070 00000000 		.4byte	.LFB13
 4558 0074 36000000 		.4byte	.LFE13-.LFB13
 4559 0078 00000000 		.4byte	.LFB14
 4560 007c 24000000 		.4byte	.LFE14-.LFB14
 4561 0080 00000000 		.4byte	.LFB15
 4562 0084 3E000000 		.4byte	.LFE15-.LFB15
 4563 0088 00000000 		.4byte	.LFB16
 4564 008c 16000000 		.4byte	.LFE16-.LFB16
 4565 0090 00000000 		.4byte	.LFB17
 4566 0094 1A000000 		.4byte	.LFE17-.LFB17
 4567 0098 00000000 		.4byte	.LFB18
 4568 009c 18000000 		.4byte	.LFE18-.LFB18
 4569 00a0 00000000 		.4byte	.LFB19
 4570 00a4 D6000000 		.4byte	.LFE19-.LFB19
 4571 00a8 00000000 		.4byte	.LFB20
 4572 00ac 4C000000 		.4byte	.LFE20-.LFB20
 4573 00b0 00000000 		.4byte	.LFB21
 4574 00b4 98000000 		.4byte	.LFE21-.LFB21
 4575 00b8 00000000 		.4byte	.LFB22
 4576 00bc 2C000000 		.4byte	.LFE22-.LFB22
 4577 00c0 00000000 		.4byte	.LFB23
 4578 00c4 30000000 		.4byte	.LFE23-.LFB23
 4579 00c8 00000000 		.4byte	.LFB24
 4580 00cc 30000000 		.4byte	.LFE24-.LFB24
 4581 00d0 00000000 		.4byte	.LFB25
 4582 00d4 34000000 		.4byte	.LFE25-.LFB25
 4583 00d8 00000000 		.4byte	.LFB26
 4584 00dc 50000000 		.4byte	.LFE26-.LFB26
 4585 00e0 00000000 		.4byte	.LFB27
 4586 00e4 44000000 		.4byte	.LFE27-.LFB27
 4587 00e8 00000000 		.4byte	0
 4588 00ec 00000000 		.4byte	0
 4589              		.section	.debug_ranges,"",%progbits
 4590              	.Ldebug_ranges0:
 4591 0000 00000000 		.4byte	.LFB1
 4592 0004 B0000000 		.4byte	.LFE1
 4593 0008 00000000 		.4byte	.LFB2
 4594 000c 84000000 		.4byte	.LFE2
 4595 0010 00000000 		.4byte	.LFB3
 4596 0014 90000000 		.4byte	.LFE3
 4597 0018 00000000 		.4byte	.LFB4
 4598 001c 58000000 		.4byte	.LFE4
 4599 0020 00000000 		.4byte	.LFB5
 4600 0024 60000000 		.4byte	.LFE5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 121


 4601 0028 00000000 		.4byte	.LFB6
 4602 002c 52000000 		.4byte	.LFE6
 4603 0030 00000000 		.4byte	.LFB7
 4604 0034 66010000 		.4byte	.LFE7
 4605 0038 00000000 		.4byte	.LFB8
 4606 003c E6000000 		.4byte	.LFE8
 4607 0040 00000000 		.4byte	.LFB9
 4608 0044 96010000 		.4byte	.LFE9
 4609 0048 00000000 		.4byte	.LFB10
 4610 004c B2000000 		.4byte	.LFE10
 4611 0050 00000000 		.4byte	.LFB11
 4612 0054 78000000 		.4byte	.LFE11
 4613 0058 00000000 		.4byte	.LFB12
 4614 005c 2C000000 		.4byte	.LFE12
 4615 0060 00000000 		.4byte	.LFB13
 4616 0064 36000000 		.4byte	.LFE13
 4617 0068 00000000 		.4byte	.LFB14
 4618 006c 24000000 		.4byte	.LFE14
 4619 0070 00000000 		.4byte	.LFB15
 4620 0074 3E000000 		.4byte	.LFE15
 4621 0078 00000000 		.4byte	.LFB16
 4622 007c 16000000 		.4byte	.LFE16
 4623 0080 00000000 		.4byte	.LFB17
 4624 0084 1A000000 		.4byte	.LFE17
 4625 0088 00000000 		.4byte	.LFB18
 4626 008c 18000000 		.4byte	.LFE18
 4627 0090 00000000 		.4byte	.LFB19
 4628 0094 D6000000 		.4byte	.LFE19
 4629 0098 00000000 		.4byte	.LFB20
 4630 009c 4C000000 		.4byte	.LFE20
 4631 00a0 00000000 		.4byte	.LFB21
 4632 00a4 98000000 		.4byte	.LFE21
 4633 00a8 00000000 		.4byte	.LFB22
 4634 00ac 2C000000 		.4byte	.LFE22
 4635 00b0 00000000 		.4byte	.LFB23
 4636 00b4 30000000 		.4byte	.LFE23
 4637 00b8 00000000 		.4byte	.LFB24
 4638 00bc 30000000 		.4byte	.LFE24
 4639 00c0 00000000 		.4byte	.LFB25
 4640 00c4 34000000 		.4byte	.LFE25
 4641 00c8 00000000 		.4byte	.LFB26
 4642 00cc 50000000 		.4byte	.LFE26
 4643 00d0 00000000 		.4byte	.LFB27
 4644 00d4 44000000 		.4byte	.LFE27
 4645 00d8 00000000 		.4byte	0
 4646 00dc 00000000 		.4byte	0
 4647              		.section	.debug_macro,"",%progbits
 4648              	.Ldebug_macro0:
 4649 0000 0400     		.2byte	0x4
 4650 0002 02       		.byte	0x2
 4651 0003 00000000 		.4byte	.Ldebug_line0
 4652 0007 07       		.byte	0x7
 4653 0008 00000000 		.4byte	.Ldebug_macro1
 4654 000c 03       		.byte	0x3
 4655 000d 00       		.uleb128 0
 4656 000e 01       		.uleb128 0x1
 4657              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\stdl
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 122


 4658 000f 03       		.byte	0x3
 4659 0010 42       		.uleb128 0x42
 4660 0011 09       		.uleb128 0x9
 4661 0012 05       		.byte	0x5
 4662 0013 08       		.uleb128 0x8
 4663 0014 7A750000 		.4byte	.LASF355
 4664              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mac
 4665 0018 03       		.byte	0x3
 4666 0019 0A       		.uleb128 0xa
 4667 001a 0A       		.uleb128 0xa
 4668 001b 05       		.byte	0x5
 4669 001c 3C       		.uleb128 0x3c
 4670 001d E05A0000 		.4byte	.LASF356
 4671 0021 04       		.byte	0x4
 4672              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\_an
 4673 0022 03       		.byte	0x3
 4674 0023 0B       		.uleb128 0xb
 4675 0024 0B       		.uleb128 0xb
 4676 0025 05       		.byte	0x5
 4677 0026 0D       		.uleb128 0xd
 4678 0027 43500000 		.4byte	.LASF357
 4679              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\new
 4680 002b 03       		.byte	0x3
 4681 002c 0F       		.uleb128 0xf
 4682 002d 0C       		.uleb128 0xc
 4683 002e 05       		.byte	0x5
 4684 002f 08       		.uleb128 0x8
 4685 0030 DF110000 		.4byte	.LASF358
 4686              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\_ne
 4687 0034 03       		.byte	0x3
 4688 0035 0E       		.uleb128 0xe
 4689 0036 0D       		.uleb128 0xd
 4690 0037 07       		.byte	0x7
 4691 0038 00000000 		.4byte	.Ldebug_macro2
 4692 003c 04       		.byte	0x4
 4693 003d 07       		.byte	0x7
 4694 003e 00000000 		.4byte	.Ldebug_macro3
 4695 0042 04       		.byte	0x4
 4696              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4697 0043 03       		.byte	0x3
 4698 0044 10       		.uleb128 0x10
 4699 0045 0E       		.uleb128 0xe
 4700 0046 05       		.byte	0x5
 4701 0047 02       		.uleb128 0x2
 4702 0048 FF4B0000 		.4byte	.LASF376
 4703 004c 03       		.byte	0x3
 4704 004d 04       		.uleb128 0x4
 4705 004e 0A       		.uleb128 0xa
 4706 004f 04       		.byte	0x4
 4707              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4708 0050 03       		.byte	0x3
 4709 0051 05       		.uleb128 0x5
 4710 0052 0F       		.uleb128 0xf
 4711 0053 07       		.byte	0x7
 4712 0054 00000000 		.4byte	.Ldebug_macro4
 4713 0058 04       		.byte	0x4
 4714 0059 07       		.byte	0x7
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 123


 4715 005a 00000000 		.4byte	.Ldebug_macro5
 4716 005e 04       		.byte	0x4
 4717 005f 07       		.byte	0x7
 4718 0060 00000000 		.4byte	.Ldebug_macro6
 4719 0064 04       		.byte	0x4
 4720 0065 07       		.byte	0x7
 4721 0066 00000000 		.4byte	.Ldebug_macro7
 4722 006a 03       		.byte	0x3
 4723 006b 10       		.uleb128 0x10
 4724 006c 02       		.uleb128 0x2
 4725 006d 07       		.byte	0x7
 4726 006e 00000000 		.4byte	.Ldebug_macro8
 4727 0072 04       		.byte	0x4
 4728              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4729 0073 03       		.byte	0x3
 4730 0074 12       		.uleb128 0x12
 4731 0075 10       		.uleb128 0x10
 4732 0076 05       		.byte	0x5
 4733 0077 0B       		.uleb128 0xb
 4734 0078 A5540000 		.4byte	.LASF470
 4735 007c 03       		.byte	0x3
 4736 007d 0D       		.uleb128 0xd
 4737 007e 0B       		.uleb128 0xb
 4738 007f 04       		.byte	0x4
 4739 0080 03       		.byte	0x3
 4740 0081 0E       		.uleb128 0xe
 4741 0082 02       		.uleb128 0x2
 4742 0083 07       		.byte	0x7
 4743 0084 00000000 		.4byte	.Ldebug_macro9
 4744 0088 04       		.byte	0x4
 4745              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4746 0089 03       		.byte	0x3
 4747 008a 0F       		.uleb128 0xf
 4748 008b 11       		.uleb128 0x11
 4749 008c 05       		.byte	0x5
 4750 008d 14       		.uleb128 0x14
 4751 008e D5890000 		.4byte	.LASF485
 4752              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mac
 4753 0092 03       		.byte	0x3
 4754 0093 18       		.uleb128 0x18
 4755 0094 12       		.uleb128 0x12
 4756 0095 05       		.byte	0x5
 4757 0096 06       		.uleb128 0x6
 4758 0097 AC5A0000 		.4byte	.LASF486
 4759 009b 03       		.byte	0x3
 4760 009c 07       		.uleb128 0x7
 4761 009d 03       		.uleb128 0x3
 4762 009e 07       		.byte	0x7
 4763 009f 00000000 		.4byte	.Ldebug_macro10
 4764 00a3 04       		.byte	0x4
 4765 00a4 04       		.byte	0x4
 4766              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4767 00a5 03       		.byte	0x3
 4768 00a6 19       		.uleb128 0x19
 4769 00a7 13       		.uleb128 0x13
 4770 00a8 07       		.byte	0x7
 4771 00a9 00000000 		.4byte	.Ldebug_macro11
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 124


 4772 00ad 04       		.byte	0x4
 4773 00ae 07       		.byte	0x7
 4774 00af 00000000 		.4byte	.Ldebug_macro12
 4775 00b3 03       		.byte	0x3
 4776 00b4 9F01     		.uleb128 0x9f
 4777 00b6 02       		.uleb128 0x2
 4778 00b7 07       		.byte	0x7
 4779 00b8 00000000 		.4byte	.Ldebug_macro13
 4780 00bc 04       		.byte	0x4
 4781 00bd 07       		.byte	0x7
 4782 00be 00000000 		.4byte	.Ldebug_macro14
 4783 00c2 04       		.byte	0x4
 4784 00c3 07       		.byte	0x7
 4785 00c4 00000000 		.4byte	.Ldebug_macro15
 4786 00c8 04       		.byte	0x4
 4787              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4788 00c9 03       		.byte	0x3
 4789 00ca 13       		.uleb128 0x13
 4790 00cb 14       		.uleb128 0x14
 4791 00cc 05       		.byte	0x5
 4792 00cd 29       		.uleb128 0x29
 4793 00ce 63930000 		.4byte	.LASF577
 4794 00d2 03       		.byte	0x3
 4795 00d3 2D       		.uleb128 0x2d
 4796 00d4 02       		.uleb128 0x2
 4797 00d5 04       		.byte	0x4
 4798 00d6 07       		.byte	0x7
 4799 00d7 00000000 		.4byte	.Ldebug_macro16
 4800 00db 04       		.byte	0x4
 4801              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mac
 4802 00dc 03       		.byte	0x3
 4803 00dd 14       		.uleb128 0x14
 4804 00de 15       		.uleb128 0x15
 4805 00df 05       		.byte	0x5
 4806 00e0 02       		.uleb128 0x2
 4807 00e1 3F250000 		.4byte	.LASF698
 4808 00e5 04       		.byte	0x4
 4809              		.file 22 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\all
 4810 00e6 03       		.byte	0x3
 4811 00e7 16       		.uleb128 0x16
 4812 00e8 16       		.uleb128 0x16
 4813 00e9 07       		.byte	0x7
 4814 00ea 00000000 		.4byte	.Ldebug_macro17
 4815 00ee 04       		.byte	0x4
 4816 00ef 07       		.byte	0x7
 4817 00f0 00000000 		.4byte	.Ldebug_macro18
 4818 00f4 04       		.byte	0x4
 4819              		.file 23 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\str
 4820 00f5 03       		.byte	0x3
 4821 00f6 43       		.uleb128 0x43
 4822 00f7 17       		.uleb128 0x17
 4823 00f8 07       		.byte	0x7
 4824 00f9 00000000 		.4byte	.Ldebug_macro19
 4825 00fd 03       		.byte	0x3
 4826 00fe 11       		.uleb128 0x11
 4827 00ff 02       		.uleb128 0x2
 4828 0100 07       		.byte	0x7
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 125


 4829 0101 00000000 		.4byte	.Ldebug_macro20
 4830 0105 04       		.byte	0x4
 4831              		.file 24 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4832 0106 03       		.byte	0x3
 4833 0107 14       		.uleb128 0x14
 4834 0108 18       		.uleb128 0x18
 4835 0109 05       		.byte	0x5
 4836 010a 04       		.uleb128 0x4
 4837 010b F6040000 		.4byte	.LASF709
 4838 010f 04       		.byte	0x4
 4839              		.file 25 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4840 0110 03       		.byte	0x3
 4841 0111 C001     		.uleb128 0xc0
 4842 0113 19       		.uleb128 0x19
 4843 0114 04       		.byte	0x4
 4844 0115 04       		.byte	0x4
 4845 0116 05       		.byte	0x5
 4846 0117 48       		.uleb128 0x48
 4847 0118 7D710000 		.4byte	.LASF710
 4848              		.file 26 "FreeRTOS/include/FreeRTOS.h"
 4849 011c 03       		.byte	0x3
 4850 011d 4A       		.uleb128 0x4a
 4851 011e 1A       		.uleb128 0x1a
 4852 011f 05       		.byte	0x5
 4853 0120 43       		.uleb128 0x43
 4854 0121 2E620000 		.4byte	.LASF711
 4855 0125 03       		.byte	0x3
 4856 0126 48       		.uleb128 0x48
 4857 0127 02       		.uleb128 0x2
 4858 0128 04       		.byte	0x4
 4859              		.file 27 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.
 4860 0129 03       		.byte	0x3
 4861 012a 57       		.uleb128 0x57
 4862 012b 1B       		.uleb128 0x1b
 4863              		.file 28 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\std
 4864 012c 03       		.byte	0x3
 4865 012d 09       		.uleb128 0x9
 4866 012e 1C       		.uleb128 0x1c
 4867 012f 05       		.byte	0x5
 4868 0130 0A       		.uleb128 0xa
 4869 0131 F1930000 		.4byte	.LASF712
 4870              		.file 29 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys
 4871 0135 03       		.byte	0x3
 4872 0136 0D       		.uleb128 0xd
 4873 0137 1D       		.uleb128 0x1d
 4874 0138 07       		.byte	0x7
 4875 0139 00000000 		.4byte	.Ldebug_macro21
 4876 013d 04       		.byte	0x4
 4877 013e 03       		.byte	0x3
 4878 013f 0E       		.uleb128 0xe
 4879 0140 04       		.uleb128 0x4
 4880 0141 07       		.byte	0x7
 4881 0142 00000000 		.4byte	.Ldebug_macro22
 4882 0146 04       		.byte	0x4
 4883 0147 07       		.byte	0x7
 4884 0148 00000000 		.4byte	.Ldebug_macro23
 4885 014c 04       		.byte	0x4
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 126


 4886 014d 05       		.byte	0x5
 4887 014e 0D       		.uleb128 0xd
 4888 014f BE7A0000 		.4byte	.LASF827
 4889 0153 04       		.byte	0x4
 4890              		.file 30 "config/FreeRTOSConfig.h"
 4891 0154 03       		.byte	0x3
 4892 0155 5E       		.uleb128 0x5e
 4893 0156 1E       		.uleb128 0x1e
 4894 0157 07       		.byte	0x7
 4895 0158 00000000 		.4byte	.Ldebug_macro24
 4896 015c 04       		.byte	0x4
 4897              		.file 31 "FreeRTOS/include/projdefs.h"
 4898 015d 03       		.byte	0x3
 4899 015e 61       		.uleb128 0x61
 4900 015f 1F       		.uleb128 0x1f
 4901 0160 07       		.byte	0x7
 4902 0161 00000000 		.4byte	.Ldebug_macro25
 4903 0165 04       		.byte	0x4
 4904              		.file 32 "FreeRTOS/include/portable.h"
 4905 0166 03       		.byte	0x3
 4906 0167 64       		.uleb128 0x64
 4907 0168 20       		.uleb128 0x20
 4908 0169 05       		.byte	0x5
 4909 016a 47       		.uleb128 0x47
 4910 016b E4250000 		.4byte	.LASF881
 4911 016f 03       		.byte	0x3
 4912 0170 C401     		.uleb128 0xc4
 4913 0172 05       		.uleb128 0x5
 4914 0173 07       		.byte	0x7
 4915 0174 00000000 		.4byte	.Ldebug_macro26
 4916 0178 04       		.byte	0x4
 4917 0179 07       		.byte	0x7
 4918 017a 00000000 		.4byte	.Ldebug_macro27
 4919              		.file 33 "FreeRTOS/include/mpu_wrappers.h"
 4920 017e 03       		.byte	0x3
 4921 017f E002     		.uleb128 0x160
 4922 0181 21       		.uleb128 0x21
 4923 0182 07       		.byte	0x7
 4924 0183 00000000 		.4byte	.Ldebug_macro28
 4925 0187 04       		.byte	0x4
 4926 0188 04       		.byte	0x4
 4927 0189 07       		.byte	0x7
 4928 018a 00000000 		.4byte	.Ldebug_macro29
 4929 018e 04       		.byte	0x4
 4930 018f 03       		.byte	0x3
 4931 0190 4B       		.uleb128 0x4b
 4932 0191 07       		.uleb128 0x7
 4933 0192 05       		.byte	0x5
 4934 0193 44       		.uleb128 0x44
 4935 0194 DE500000 		.4byte	.LASF1042
 4936 0198 03       		.byte	0x3
 4937 0199 4A       		.uleb128 0x4a
 4938 019a 06       		.uleb128 0x6
 4939 019b 07       		.byte	0x7
 4940 019c 00000000 		.4byte	.Ldebug_macro30
 4941 01a0 04       		.byte	0x4
 4942 01a1 07       		.byte	0x7
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 127


 4943 01a2 00000000 		.4byte	.Ldebug_macro31
 4944 01a6 04       		.byte	0x4
 4945 01a7 03       		.byte	0x3
 4946 01a8 4C       		.uleb128 0x4c
 4947 01a9 08       		.uleb128 0x8
 4948 01aa 07       		.byte	0x7
 4949 01ab 00000000 		.4byte	.Ldebug_macro32
 4950 01af 04       		.byte	0x4
 4951 01b0 06       		.byte	0x6
 4952 01b1 56       		.uleb128 0x56
 4953 01b2 9E6F0000 		.4byte	.LASF1101
 4954 01b6 05       		.byte	0x5
 4955 01b7 5A       		.uleb128 0x5a
 4956 01b8 284E0000 		.4byte	.LASF1102
 4957 01bc 05       		.byte	0x5
 4958 01bd 5B       		.uleb128 0x5b
 4959 01be AD900000 		.4byte	.LASF1103
 4960 01c2 05       		.byte	0x5
 4961 01c3 68       		.uleb128 0x68
 4962 01c4 02780000 		.4byte	.LASF1104
 4963 01c8 05       		.byte	0x5
 4964 01c9 69       		.uleb128 0x69
 4965 01ca B13E0000 		.4byte	.LASF1105
 4966 01ce 05       		.byte	0x5
 4967 01cf 6A       		.uleb128 0x6a
 4968 01d0 32020000 		.4byte	.LASF1106
 4969 01d4 05       		.byte	0x5
 4970 01d5 6E       		.uleb128 0x6e
 4971 01d6 F0310000 		.4byte	.LASF1107
 4972 01da 05       		.byte	0x5
 4973 01db 6F       		.uleb128 0x6f
 4974 01dc 42490000 		.4byte	.LASF1108
 4975 01e0 05       		.byte	0x5
 4976 01e1 76       		.uleb128 0x76
 4977 01e2 590C0000 		.4byte	.LASF1109
 4978 01e6 05       		.byte	0x5
 4979 01e7 F001     		.uleb128 0xf0
 4980 01e9 AA170000 		.4byte	.LASF1110
 4981 01ed 04       		.byte	0x4
 4982 01ee 00       		.byte	0
 4983              		.section	.debug_macro,"G",%progbits,wm4.0.c0d9c46791312c607b68c96c4ad07fb1,comdat
 4984              	.Ldebug_macro1:
 4985 0000 0400     		.2byte	0x4
 4986 0002 00       		.byte	0
 4987 0003 05       		.byte	0x5
 4988 0004 00       		.uleb128 0
 4989 0005 45880000 		.4byte	.LASF0
 4990 0009 05       		.byte	0x5
 4991 000a 00       		.uleb128 0
 4992 000b 280A0000 		.4byte	.LASF1
 4993 000f 05       		.byte	0x5
 4994 0010 00       		.uleb128 0
 4995 0011 8B3C0000 		.4byte	.LASF2
 4996 0015 05       		.byte	0x5
 4997 0016 00       		.uleb128 0
 4998 0017 A6720000 		.4byte	.LASF3
 4999 001b 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 128


 5000 001c 00       		.uleb128 0
 5001 001d 131F0000 		.4byte	.LASF4
 5002 0021 05       		.byte	0x5
 5003 0022 00       		.uleb128 0
 5004 0023 80300000 		.4byte	.LASF5
 5005 0027 05       		.byte	0x5
 5006 0028 00       		.uleb128 0
 5007 0029 2B800000 		.4byte	.LASF6
 5008 002d 05       		.byte	0x5
 5009 002e 00       		.uleb128 0
 5010 002f 05230000 		.4byte	.LASF7
 5011 0033 05       		.byte	0x5
 5012 0034 00       		.uleb128 0
 5013 0035 DA380000 		.4byte	.LASF8
 5014 0039 05       		.byte	0x5
 5015 003a 00       		.uleb128 0
 5016 003b CF410000 		.4byte	.LASF9
 5017 003f 05       		.byte	0x5
 5018 0040 00       		.uleb128 0
 5019 0041 3D960000 		.4byte	.LASF10
 5020 0045 05       		.byte	0x5
 5021 0046 00       		.uleb128 0
 5022 0047 13040000 		.4byte	.LASF11
 5023 004b 05       		.byte	0x5
 5024 004c 00       		.uleb128 0
 5025 004d 096B0000 		.4byte	.LASF12
 5026 0051 05       		.byte	0x5
 5027 0052 00       		.uleb128 0
 5028 0053 838C0000 		.4byte	.LASF13
 5029 0057 05       		.byte	0x5
 5030 0058 00       		.uleb128 0
 5031 0059 741A0000 		.4byte	.LASF14
 5032 005d 05       		.byte	0x5
 5033 005e 00       		.uleb128 0
 5034 005f BF050000 		.4byte	.LASF15
 5035 0063 05       		.byte	0x5
 5036 0064 00       		.uleb128 0
 5037 0065 206C0000 		.4byte	.LASF16
 5038 0069 05       		.byte	0x5
 5039 006a 00       		.uleb128 0
 5040 006b BD210000 		.4byte	.LASF17
 5041 006f 05       		.byte	0x5
 5042 0070 00       		.uleb128 0
 5043 0071 A81B0000 		.4byte	.LASF18
 5044 0075 05       		.byte	0x5
 5045 0076 00       		.uleb128 0
 5046 0077 4F250000 		.4byte	.LASF19
 5047 007b 05       		.byte	0x5
 5048 007c 00       		.uleb128 0
 5049 007d 83790000 		.4byte	.LASF20
 5050 0081 05       		.byte	0x5
 5051 0082 00       		.uleb128 0
 5052 0083 934C0000 		.4byte	.LASF21
 5053 0087 05       		.byte	0x5
 5054 0088 00       		.uleb128 0
 5055 0089 425E0000 		.4byte	.LASF22
 5056 008d 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 129


 5057 008e 00       		.uleb128 0
 5058 008f EA660000 		.4byte	.LASF23
 5059 0093 05       		.byte	0x5
 5060 0094 00       		.uleb128 0
 5061 0095 C10E0000 		.4byte	.LASF24
 5062 0099 05       		.byte	0x5
 5063 009a 00       		.uleb128 0
 5064 009b 9C060000 		.4byte	.LASF25
 5065 009f 05       		.byte	0x5
 5066 00a0 00       		.uleb128 0
 5067 00a1 6E4F0000 		.4byte	.LASF26
 5068 00a5 05       		.byte	0x5
 5069 00a6 00       		.uleb128 0
 5070 00a7 6D570000 		.4byte	.LASF27
 5071 00ab 05       		.byte	0x5
 5072 00ac 00       		.uleb128 0
 5073 00ad 04170000 		.4byte	.LASF28
 5074 00b1 05       		.byte	0x5
 5075 00b2 00       		.uleb128 0
 5076 00b3 B6060000 		.4byte	.LASF29
 5077 00b7 05       		.byte	0x5
 5078 00b8 00       		.uleb128 0
 5079 00b9 12680000 		.4byte	.LASF30
 5080 00bd 05       		.byte	0x5
 5081 00be 00       		.uleb128 0
 5082 00bf 96250000 		.4byte	.LASF31
 5083 00c3 05       		.byte	0x5
 5084 00c4 00       		.uleb128 0
 5085 00c5 AF0A0000 		.4byte	.LASF32
 5086 00c9 05       		.byte	0x5
 5087 00ca 00       		.uleb128 0
 5088 00cb 4F730000 		.4byte	.LASF33
 5089 00cf 05       		.byte	0x5
 5090 00d0 00       		.uleb128 0
 5091 00d1 EF330000 		.4byte	.LASF34
 5092 00d5 05       		.byte	0x5
 5093 00d6 00       		.uleb128 0
 5094 00d7 53780000 		.4byte	.LASF35
 5095 00db 05       		.byte	0x5
 5096 00dc 00       		.uleb128 0
 5097 00dd E3190000 		.4byte	.LASF36
 5098 00e1 05       		.byte	0x5
 5099 00e2 00       		.uleb128 0
 5100 00e3 DD590000 		.4byte	.LASF37
 5101 00e7 05       		.byte	0x5
 5102 00e8 00       		.uleb128 0
 5103 00e9 27070000 		.4byte	.LASF38
 5104 00ed 05       		.byte	0x5
 5105 00ee 00       		.uleb128 0
 5106 00ef AA080000 		.4byte	.LASF39
 5107 00f3 05       		.byte	0x5
 5108 00f4 00       		.uleb128 0
 5109 00f5 4E480000 		.4byte	.LASF40
 5110 00f9 05       		.byte	0x5
 5111 00fa 00       		.uleb128 0
 5112 00fb 634C0000 		.4byte	.LASF41
 5113 00ff 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 130


 5114 0100 00       		.uleb128 0
 5115 0101 9F2E0000 		.4byte	.LASF42
 5116 0105 05       		.byte	0x5
 5117 0106 00       		.uleb128 0
 5118 0107 2D3D0000 		.4byte	.LASF43
 5119 010b 05       		.byte	0x5
 5120 010c 00       		.uleb128 0
 5121 010d D18A0000 		.4byte	.LASF44
 5122 0111 05       		.byte	0x5
 5123 0112 00       		.uleb128 0
 5124 0113 91390000 		.4byte	.LASF45
 5125 0117 05       		.byte	0x5
 5126 0118 00       		.uleb128 0
 5127 0119 19170000 		.4byte	.LASF46
 5128 011d 05       		.byte	0x5
 5129 011e 00       		.uleb128 0
 5130 011f CA8F0000 		.4byte	.LASF47
 5131 0123 05       		.byte	0x5
 5132 0124 00       		.uleb128 0
 5133 0125 AC650000 		.4byte	.LASF48
 5134 0129 05       		.byte	0x5
 5135 012a 00       		.uleb128 0
 5136 012b B8980000 		.4byte	.LASF49
 5137 012f 05       		.byte	0x5
 5138 0130 00       		.uleb128 0
 5139 0131 FA140000 		.4byte	.LASF50
 5140 0135 05       		.byte	0x5
 5141 0136 00       		.uleb128 0
 5142 0137 C9690000 		.4byte	.LASF51
 5143 013b 05       		.byte	0x5
 5144 013c 00       		.uleb128 0
 5145 013d B7720000 		.4byte	.LASF52
 5146 0141 05       		.byte	0x5
 5147 0142 00       		.uleb128 0
 5148 0143 E4400000 		.4byte	.LASF53
 5149 0147 05       		.byte	0x5
 5150 0148 00       		.uleb128 0
 5151 0149 4A160000 		.4byte	.LASF54
 5152 014d 05       		.byte	0x5
 5153 014e 00       		.uleb128 0
 5154 014f F5680000 		.4byte	.LASF55
 5155 0153 05       		.byte	0x5
 5156 0154 00       		.uleb128 0
 5157 0155 DE510000 		.4byte	.LASF56
 5158 0159 05       		.byte	0x5
 5159 015a 00       		.uleb128 0
 5160 015b 8D0A0000 		.4byte	.LASF57
 5161 015f 05       		.byte	0x5
 5162 0160 00       		.uleb128 0
 5163 0161 613E0000 		.4byte	.LASF58
 5164 0165 05       		.byte	0x5
 5165 0166 00       		.uleb128 0
 5166 0167 168E0000 		.4byte	.LASF59
 5167 016b 05       		.byte	0x5
 5168 016c 00       		.uleb128 0
 5169 016d 87210000 		.4byte	.LASF60
 5170 0171 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 131


 5171 0172 00       		.uleb128 0
 5172 0173 D3260000 		.4byte	.LASF61
 5173 0177 05       		.byte	0x5
 5174 0178 00       		.uleb128 0
 5175 0179 BF120000 		.4byte	.LASF62
 5176 017d 05       		.byte	0x5
 5177 017e 00       		.uleb128 0
 5178 017f 76780000 		.4byte	.LASF63
 5179 0183 05       		.byte	0x5
 5180 0184 00       		.uleb128 0
 5181 0185 E7390000 		.4byte	.LASF64
 5182 0189 05       		.byte	0x5
 5183 018a 00       		.uleb128 0
 5184 018b 0F2C0000 		.4byte	.LASF65
 5185 018f 05       		.byte	0x5
 5186 0190 00       		.uleb128 0
 5187 0191 606F0000 		.4byte	.LASF66
 5188 0195 05       		.byte	0x5
 5189 0196 00       		.uleb128 0
 5190 0197 1B550000 		.4byte	.LASF67
 5191 019b 05       		.byte	0x5
 5192 019c 00       		.uleb128 0
 5193 019d DA670000 		.4byte	.LASF68
 5194 01a1 05       		.byte	0x5
 5195 01a2 00       		.uleb128 0
 5196 01a3 A1980000 		.4byte	.LASF69
 5197 01a7 05       		.byte	0x5
 5198 01a8 00       		.uleb128 0
 5199 01a9 E4890000 		.4byte	.LASF70
 5200 01ad 05       		.byte	0x5
 5201 01ae 00       		.uleb128 0
 5202 01af 29600000 		.4byte	.LASF71
 5203 01b3 05       		.byte	0x5
 5204 01b4 00       		.uleb128 0
 5205 01b5 44040000 		.4byte	.LASF72
 5206 01b9 05       		.byte	0x5
 5207 01ba 00       		.uleb128 0
 5208 01bb 65470000 		.4byte	.LASF73
 5209 01bf 05       		.byte	0x5
 5210 01c0 00       		.uleb128 0
 5211 01c1 958F0000 		.4byte	.LASF74
 5212 01c5 05       		.byte	0x5
 5213 01c6 00       		.uleb128 0
 5214 01c7 6B8F0000 		.4byte	.LASF75
 5215 01cb 05       		.byte	0x5
 5216 01cc 00       		.uleb128 0
 5217 01cd D4020000 		.4byte	.LASF76
 5218 01d1 05       		.byte	0x5
 5219 01d2 00       		.uleb128 0
 5220 01d3 D6920000 		.4byte	.LASF77
 5221 01d7 05       		.byte	0x5
 5222 01d8 00       		.uleb128 0
 5223 01d9 32030000 		.4byte	.LASF78
 5224 01dd 05       		.byte	0x5
 5225 01de 00       		.uleb128 0
 5226 01df 08030000 		.4byte	.LASF79
 5227 01e3 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 132


 5228 01e4 00       		.uleb128 0
 5229 01e5 18980000 		.4byte	.LASF80
 5230 01e9 05       		.byte	0x5
 5231 01ea 00       		.uleb128 0
 5232 01eb EC160000 		.4byte	.LASF81
 5233 01ef 05       		.byte	0x5
 5234 01f0 00       		.uleb128 0
 5235 01f1 2F820000 		.4byte	.LASF82
 5236 01f5 05       		.byte	0x5
 5237 01f6 00       		.uleb128 0
 5238 01f7 AA310000 		.4byte	.LASF83
 5239 01fb 05       		.byte	0x5
 5240 01fc 00       		.uleb128 0
 5241 01fd 6F3B0000 		.4byte	.LASF84
 5242 0201 05       		.byte	0x5
 5243 0202 00       		.uleb128 0
 5244 0203 B7850000 		.4byte	.LASF85
 5245 0207 05       		.byte	0x5
 5246 0208 00       		.uleb128 0
 5247 0209 043F0000 		.4byte	.LASF86
 5248 020d 05       		.byte	0x5
 5249 020e 00       		.uleb128 0
 5250 020f 75440000 		.4byte	.LASF87
 5251 0213 05       		.byte	0x5
 5252 0214 00       		.uleb128 0
 5253 0215 43290000 		.4byte	.LASF88
 5254 0219 05       		.byte	0x5
 5255 021a 00       		.uleb128 0
 5256 021b CA230000 		.4byte	.LASF89
 5257 021f 05       		.byte	0x5
 5258 0220 00       		.uleb128 0
 5259 0221 28370000 		.4byte	.LASF90
 5260 0225 05       		.byte	0x5
 5261 0226 00       		.uleb128 0
 5262 0227 CC360000 		.4byte	.LASF91
 5263 022b 05       		.byte	0x5
 5264 022c 00       		.uleb128 0
 5265 022d 78380000 		.4byte	.LASF92
 5266 0231 05       		.byte	0x5
 5267 0232 00       		.uleb128 0
 5268 0233 BB610000 		.4byte	.LASF93
 5269 0237 05       		.byte	0x5
 5270 0238 00       		.uleb128 0
 5271 0239 C32A0000 		.4byte	.LASF94
 5272 023d 05       		.byte	0x5
 5273 023e 00       		.uleb128 0
 5274 023f 1D950000 		.4byte	.LASF95
 5275 0243 05       		.byte	0x5
 5276 0244 00       		.uleb128 0
 5277 0245 871D0000 		.4byte	.LASF96
 5278 0249 05       		.byte	0x5
 5279 024a 00       		.uleb128 0
 5280 024b 6D0E0000 		.4byte	.LASF97
 5281 024f 05       		.byte	0x5
 5282 0250 00       		.uleb128 0
 5283 0251 A33F0000 		.4byte	.LASF98
 5284 0255 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 133


 5285 0256 00       		.uleb128 0
 5286 0257 E7790000 		.4byte	.LASF99
 5287 025b 05       		.byte	0x5
 5288 025c 00       		.uleb128 0
 5289 025d D7310000 		.4byte	.LASF100
 5290 0261 05       		.byte	0x5
 5291 0262 00       		.uleb128 0
 5292 0263 9B080000 		.4byte	.LASF101
 5293 0267 05       		.byte	0x5
 5294 0268 00       		.uleb128 0
 5295 0269 0C0A0000 		.4byte	.LASF102
 5296 026d 05       		.byte	0x5
 5297 026e 00       		.uleb128 0
 5298 026f D27E0000 		.4byte	.LASF103
 5299 0273 05       		.byte	0x5
 5300 0274 00       		.uleb128 0
 5301 0275 373A0000 		.4byte	.LASF104
 5302 0279 05       		.byte	0x5
 5303 027a 00       		.uleb128 0
 5304 027b AD2C0000 		.4byte	.LASF105
 5305 027f 05       		.byte	0x5
 5306 0280 00       		.uleb128 0
 5307 0281 26660000 		.4byte	.LASF106
 5308 0285 05       		.byte	0x5
 5309 0286 00       		.uleb128 0
 5310 0287 CD400000 		.4byte	.LASF107
 5311 028b 05       		.byte	0x5
 5312 028c 00       		.uleb128 0
 5313 028d 0C890000 		.4byte	.LASF108
 5314 0291 05       		.byte	0x5
 5315 0292 00       		.uleb128 0
 5316 0293 2B6B0000 		.4byte	.LASF109
 5317 0297 05       		.byte	0x5
 5318 0298 00       		.uleb128 0
 5319 0299 E7220000 		.4byte	.LASF110
 5320 029d 05       		.byte	0x5
 5321 029e 00       		.uleb128 0
 5322 029f 7C150000 		.4byte	.LASF111
 5323 02a3 05       		.byte	0x5
 5324 02a4 00       		.uleb128 0
 5325 02a5 F8100000 		.4byte	.LASF112
 5326 02a9 05       		.byte	0x5
 5327 02aa 00       		.uleb128 0
 5328 02ab 74120000 		.4byte	.LASF113
 5329 02af 05       		.byte	0x5
 5330 02b0 00       		.uleb128 0
 5331 02b1 401A0000 		.4byte	.LASF114
 5332 02b5 05       		.byte	0x5
 5333 02b6 00       		.uleb128 0
 5334 02b7 344A0000 		.4byte	.LASF115
 5335 02bb 05       		.byte	0x5
 5336 02bc 00       		.uleb128 0
 5337 02bd D3120000 		.4byte	.LASF116
 5338 02c1 05       		.byte	0x5
 5339 02c2 00       		.uleb128 0
 5340 02c3 79400000 		.4byte	.LASF117
 5341 02c7 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 134


 5342 02c8 00       		.uleb128 0
 5343 02c9 E9550000 		.4byte	.LASF118
 5344 02cd 05       		.byte	0x5
 5345 02ce 00       		.uleb128 0
 5346 02cf 733C0000 		.4byte	.LASF119
 5347 02d3 05       		.byte	0x5
 5348 02d4 00       		.uleb128 0
 5349 02d5 B4540000 		.4byte	.LASF120
 5350 02d9 05       		.byte	0x5
 5351 02da 00       		.uleb128 0
 5352 02db B1340000 		.4byte	.LASF121
 5353 02df 05       		.byte	0x5
 5354 02e0 00       		.uleb128 0
 5355 02e1 7C480000 		.4byte	.LASF122
 5356 02e5 05       		.byte	0x5
 5357 02e6 00       		.uleb128 0
 5358 02e7 00420000 		.4byte	.LASF123
 5359 02eb 05       		.byte	0x5
 5360 02ec 00       		.uleb128 0
 5361 02ed D6200000 		.4byte	.LASF124
 5362 02f1 05       		.byte	0x5
 5363 02f2 00       		.uleb128 0
 5364 02f3 C64F0000 		.4byte	.LASF125
 5365 02f7 05       		.byte	0x5
 5366 02f8 00       		.uleb128 0
 5367 02f9 161D0000 		.4byte	.LASF126
 5368 02fd 05       		.byte	0x5
 5369 02fe 00       		.uleb128 0
 5370 02ff 601A0000 		.4byte	.LASF127
 5371 0303 05       		.byte	0x5
 5372 0304 00       		.uleb128 0
 5373 0305 02220000 		.4byte	.LASF128
 5374 0309 05       		.byte	0x5
 5375 030a 00       		.uleb128 0
 5376 030b 4A1D0000 		.4byte	.LASF129
 5377 030f 05       		.byte	0x5
 5378 0310 00       		.uleb128 0
 5379 0311 9A460000 		.4byte	.LASF130
 5380 0315 05       		.byte	0x5
 5381 0316 00       		.uleb128 0
 5382 0317 90270000 		.4byte	.LASF131
 5383 031b 05       		.byte	0x5
 5384 031c 00       		.uleb128 0
 5385 031d 192D0000 		.4byte	.LASF132
 5386 0321 05       		.byte	0x5
 5387 0322 00       		.uleb128 0
 5388 0323 ED2A0000 		.4byte	.LASF133
 5389 0327 05       		.byte	0x5
 5390 0328 00       		.uleb128 0
 5391 0329 12070000 		.4byte	.LASF134
 5392 032d 05       		.byte	0x5
 5393 032e 00       		.uleb128 0
 5394 032f 34230000 		.4byte	.LASF135
 5395 0333 05       		.byte	0x5
 5396 0334 00       		.uleb128 0
 5397 0335 115B0000 		.4byte	.LASF136
 5398 0339 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 135


 5399 033a 00       		.uleb128 0
 5400 033b 49980000 		.4byte	.LASF137
 5401 033f 05       		.byte	0x5
 5402 0340 00       		.uleb128 0
 5403 0341 11790000 		.4byte	.LASF138
 5404 0345 05       		.byte	0x5
 5405 0346 00       		.uleb128 0
 5406 0347 EF610000 		.4byte	.LASF139
 5407 034b 05       		.byte	0x5
 5408 034c 00       		.uleb128 0
 5409 034d 83960000 		.4byte	.LASF140
 5410 0351 05       		.byte	0x5
 5411 0352 00       		.uleb128 0
 5412 0353 AC410000 		.4byte	.LASF141
 5413 0357 05       		.byte	0x5
 5414 0358 00       		.uleb128 0
 5415 0359 D6050000 		.4byte	.LASF142
 5416 035d 05       		.byte	0x5
 5417 035e 00       		.uleb128 0
 5418 035f 1E840000 		.4byte	.LASF143
 5419 0363 05       		.byte	0x5
 5420 0364 00       		.uleb128 0
 5421 0365 19900000 		.4byte	.LASF144
 5422 0369 05       		.byte	0x5
 5423 036a 00       		.uleb128 0
 5424 036b AC150000 		.4byte	.LASF145
 5425 036f 05       		.byte	0x5
 5426 0370 00       		.uleb128 0
 5427 0371 593A0000 		.4byte	.LASF146
 5428 0375 05       		.byte	0x5
 5429 0376 00       		.uleb128 0
 5430 0377 86890000 		.4byte	.LASF147
 5431 037b 05       		.byte	0x5
 5432 037c 00       		.uleb128 0
 5433 037d 17340000 		.4byte	.LASF148
 5434 0381 05       		.byte	0x5
 5435 0382 00       		.uleb128 0
 5436 0383 DB810000 		.4byte	.LASF149
 5437 0387 05       		.byte	0x5
 5438 0388 00       		.uleb128 0
 5439 0389 86750000 		.4byte	.LASF150
 5440 038d 05       		.byte	0x5
 5441 038e 00       		.uleb128 0
 5442 038f 50080000 		.4byte	.LASF151
 5443 0393 05       		.byte	0x5
 5444 0394 00       		.uleb128 0
 5445 0395 248F0000 		.4byte	.LASF152
 5446 0399 05       		.byte	0x5
 5447 039a 00       		.uleb128 0
 5448 039b 37080000 		.4byte	.LASF153
 5449 039f 05       		.byte	0x5
 5450 03a0 00       		.uleb128 0
 5451 03a1 F65A0000 		.4byte	.LASF154
 5452 03a5 05       		.byte	0x5
 5453 03a6 00       		.uleb128 0
 5454 03a7 7E290000 		.4byte	.LASF155
 5455 03ab 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 136


 5456 03ac 00       		.uleb128 0
 5457 03ad 0C510000 		.4byte	.LASF156
 5458 03b1 05       		.byte	0x5
 5459 03b2 00       		.uleb128 0
 5460 03b3 24080000 		.4byte	.LASF157
 5461 03b7 05       		.byte	0x5
 5462 03b8 00       		.uleb128 0
 5463 03b9 182B0000 		.4byte	.LASF158
 5464 03bd 05       		.byte	0x5
 5465 03be 00       		.uleb128 0
 5466 03bf 3C7B0000 		.4byte	.LASF159
 5467 03c3 05       		.byte	0x5
 5468 03c4 00       		.uleb128 0
 5469 03c5 24410000 		.4byte	.LASF160
 5470 03c9 05       		.byte	0x5
 5471 03ca 00       		.uleb128 0
 5472 03cb 48440000 		.4byte	.LASF161
 5473 03cf 05       		.byte	0x5
 5474 03d0 00       		.uleb128 0
 5475 03d1 F9630000 		.4byte	.LASF162
 5476 03d5 05       		.byte	0x5
 5477 03d6 00       		.uleb128 0
 5478 03d7 13300000 		.4byte	.LASF163
 5479 03db 05       		.byte	0x5
 5480 03dc 00       		.uleb128 0
 5481 03dd 29490000 		.4byte	.LASF164
 5482 03e1 05       		.byte	0x5
 5483 03e2 00       		.uleb128 0
 5484 03e3 C15D0000 		.4byte	.LASF165
 5485 03e7 05       		.byte	0x5
 5486 03e8 00       		.uleb128 0
 5487 03e9 6F280000 		.4byte	.LASF166
 5488 03ed 05       		.byte	0x5
 5489 03ee 00       		.uleb128 0
 5490 03ef D33D0000 		.4byte	.LASF167
 5491 03f3 05       		.byte	0x5
 5492 03f4 00       		.uleb128 0
 5493 03f5 5C060000 		.4byte	.LASF168
 5494 03f9 05       		.byte	0x5
 5495 03fa 00       		.uleb128 0
 5496 03fb 64300000 		.4byte	.LASF169
 5497 03ff 05       		.byte	0x5
 5498 0400 00       		.uleb128 0
 5499 0401 25110000 		.4byte	.LASF170
 5500 0405 05       		.byte	0x5
 5501 0406 00       		.uleb128 0
 5502 0407 56030000 		.4byte	.LASF171
 5503 040b 05       		.byte	0x5
 5504 040c 00       		.uleb128 0
 5505 040d 3E670000 		.4byte	.LASF172
 5506 0411 05       		.byte	0x5
 5507 0412 00       		.uleb128 0
 5508 0413 D0550000 		.4byte	.LASF173
 5509 0417 05       		.byte	0x5
 5510 0418 00       		.uleb128 0
 5511 0419 D1060000 		.4byte	.LASF174
 5512 041d 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 137


 5513 041e 00       		.uleb128 0
 5514 041f F6830000 		.4byte	.LASF175
 5515 0423 05       		.byte	0x5
 5516 0424 00       		.uleb128 0
 5517 0425 851C0000 		.4byte	.LASF176
 5518 0429 05       		.byte	0x5
 5519 042a 00       		.uleb128 0
 5520 042b 7B8F0000 		.4byte	.LASF177
 5521 042f 05       		.byte	0x5
 5522 0430 00       		.uleb128 0
 5523 0431 F4340000 		.4byte	.LASF178
 5524 0435 05       		.byte	0x5
 5525 0436 00       		.uleb128 0
 5526 0437 435A0000 		.4byte	.LASF179
 5527 043b 05       		.byte	0x5
 5528 043c 00       		.uleb128 0
 5529 043d 2F1D0000 		.4byte	.LASF180
 5530 0441 05       		.byte	0x5
 5531 0442 00       		.uleb128 0
 5532 0443 04770000 		.4byte	.LASF181
 5533 0447 05       		.byte	0x5
 5534 0448 00       		.uleb128 0
 5535 0449 CE790000 		.4byte	.LASF182
 5536 044d 05       		.byte	0x5
 5537 044e 00       		.uleb128 0
 5538 044f 29220000 		.4byte	.LASF183
 5539 0453 05       		.byte	0x5
 5540 0454 00       		.uleb128 0
 5541 0455 F3000000 		.4byte	.LASF184
 5542 0459 05       		.byte	0x5
 5543 045a 00       		.uleb128 0
 5544 045b CC780000 		.4byte	.LASF185
 5545 045f 05       		.byte	0x5
 5546 0460 00       		.uleb128 0
 5547 0461 17020000 		.4byte	.LASF186
 5548 0465 05       		.byte	0x5
 5549 0466 00       		.uleb128 0
 5550 0467 E64E0000 		.4byte	.LASF187
 5551 046b 05       		.byte	0x5
 5552 046c 00       		.uleb128 0
 5553 046d 1A3C0000 		.4byte	.LASF188
 5554 0471 05       		.byte	0x5
 5555 0472 00       		.uleb128 0
 5556 0473 BD940000 		.4byte	.LASF189
 5557 0477 05       		.byte	0x5
 5558 0478 00       		.uleb128 0
 5559 0479 320E0000 		.4byte	.LASF190
 5560 047d 05       		.byte	0x5
 5561 047e 00       		.uleb128 0
 5562 047f 11410000 		.4byte	.LASF191
 5563 0483 05       		.byte	0x5
 5564 0484 00       		.uleb128 0
 5565 0485 87280000 		.4byte	.LASF192
 5566 0489 05       		.byte	0x5
 5567 048a 00       		.uleb128 0
 5568 048b B2280000 		.4byte	.LASF193
 5569 048f 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 138


 5570 0490 00       		.uleb128 0
 5571 0491 F60B0000 		.4byte	.LASF194
 5572 0495 05       		.byte	0x5
 5573 0496 00       		.uleb128 0
 5574 0497 25350000 		.4byte	.LASF195
 5575 049b 05       		.byte	0x5
 5576 049c 00       		.uleb128 0
 5577 049d CB1E0000 		.4byte	.LASF196
 5578 04a1 05       		.byte	0x5
 5579 04a2 00       		.uleb128 0
 5580 04a3 5A660000 		.4byte	.LASF197
 5581 04a7 05       		.byte	0x5
 5582 04a8 00       		.uleb128 0
 5583 04a9 0D060000 		.4byte	.LASF198
 5584 04ad 05       		.byte	0x5
 5585 04ae 00       		.uleb128 0
 5586 04af 63220000 		.4byte	.LASF199
 5587 04b3 05       		.byte	0x5
 5588 04b4 00       		.uleb128 0
 5589 04b5 963E0000 		.4byte	.LASF200
 5590 04b9 05       		.byte	0x5
 5591 04ba 00       		.uleb128 0
 5592 04bb CB500000 		.4byte	.LASF201
 5593 04bf 05       		.byte	0x5
 5594 04c0 00       		.uleb128 0
 5595 04c1 54610000 		.4byte	.LASF202
 5596 04c5 05       		.byte	0x5
 5597 04c6 00       		.uleb128 0
 5598 04c7 91130000 		.4byte	.LASF203
 5599 04cb 05       		.byte	0x5
 5600 04cc 00       		.uleb128 0
 5601 04cd F14D0000 		.4byte	.LASF204
 5602 04d1 05       		.byte	0x5
 5603 04d2 00       		.uleb128 0
 5604 04d3 48470000 		.4byte	.LASF205
 5605 04d7 05       		.byte	0x5
 5606 04d8 00       		.uleb128 0
 5607 04d9 804C0000 		.4byte	.LASF206
 5608 04dd 05       		.byte	0x5
 5609 04de 00       		.uleb128 0
 5610 04df C9610000 		.4byte	.LASF207
 5611 04e3 05       		.byte	0x5
 5612 04e4 00       		.uleb128 0
 5613 04e5 26040000 		.4byte	.LASF208
 5614 04e9 05       		.byte	0x5
 5615 04ea 00       		.uleb128 0
 5616 04eb 86560000 		.4byte	.LASF209
 5617 04ef 05       		.byte	0x5
 5618 04f0 00       		.uleb128 0
 5619 04f1 A55B0000 		.4byte	.LASF210
 5620 04f5 05       		.byte	0x5
 5621 04f6 00       		.uleb128 0
 5622 04f7 830D0000 		.4byte	.LASF211
 5623 04fb 05       		.byte	0x5
 5624 04fc 00       		.uleb128 0
 5625 04fd 7E980000 		.4byte	.LASF212
 5626 0501 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 139


 5627 0502 00       		.uleb128 0
 5628 0503 7A6D0000 		.4byte	.LASF213
 5629 0507 05       		.byte	0x5
 5630 0508 00       		.uleb128 0
 5631 0509 8E690000 		.4byte	.LASF214
 5632 050d 05       		.byte	0x5
 5633 050e 00       		.uleb128 0
 5634 050f 20790000 		.4byte	.LASF215
 5635 0513 05       		.byte	0x5
 5636 0514 00       		.uleb128 0
 5637 0515 54900000 		.4byte	.LASF216
 5638 0519 05       		.byte	0x5
 5639 051a 00       		.uleb128 0
 5640 051b A28C0000 		.4byte	.LASF217
 5641 051f 05       		.byte	0x5
 5642 0520 00       		.uleb128 0
 5643 0521 1D120000 		.4byte	.LASF218
 5644 0525 05       		.byte	0x5
 5645 0526 00       		.uleb128 0
 5646 0527 DA760000 		.4byte	.LASF219
 5647 052b 05       		.byte	0x5
 5648 052c 00       		.uleb128 0
 5649 052d 11500000 		.4byte	.LASF220
 5650 0531 05       		.byte	0x5
 5651 0532 00       		.uleb128 0
 5652 0533 3A0A0000 		.4byte	.LASF221
 5653 0537 05       		.byte	0x5
 5654 0538 00       		.uleb128 0
 5655 0539 C0440000 		.4byte	.LASF222
 5656 053d 05       		.byte	0x5
 5657 053e 00       		.uleb128 0
 5658 053f CF8B0000 		.4byte	.LASF223
 5659 0543 05       		.byte	0x5
 5660 0544 00       		.uleb128 0
 5661 0545 3E190000 		.4byte	.LASF224
 5662 0549 05       		.byte	0x5
 5663 054a 00       		.uleb128 0
 5664 054b CE870000 		.4byte	.LASF225
 5665 054f 05       		.byte	0x5
 5666 0550 00       		.uleb128 0
 5667 0551 0C990000 		.4byte	.LASF226
 5668 0555 05       		.byte	0x5
 5669 0556 00       		.uleb128 0
 5670 0557 D0210000 		.4byte	.LASF227
 5671 055b 05       		.byte	0x5
 5672 055c 00       		.uleb128 0
 5673 055d 6C690000 		.4byte	.LASF228
 5674 0561 05       		.byte	0x5
 5675 0562 00       		.uleb128 0
 5676 0563 17780000 		.4byte	.LASF229
 5677 0567 05       		.byte	0x5
 5678 0568 00       		.uleb128 0
 5679 0569 1A8D0000 		.4byte	.LASF230
 5680 056d 05       		.byte	0x5
 5681 056e 00       		.uleb128 0
 5682 056f 522F0000 		.4byte	.LASF231
 5683 0573 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 140


 5684 0574 00       		.uleb128 0
 5685 0575 46530000 		.4byte	.LASF232
 5686 0579 05       		.byte	0x5
 5687 057a 00       		.uleb128 0
 5688 057b 5A5E0000 		.4byte	.LASF233
 5689 057f 05       		.byte	0x5
 5690 0580 00       		.uleb128 0
 5691 0581 3F060000 		.4byte	.LASF234
 5692 0585 05       		.byte	0x5
 5693 0586 00       		.uleb128 0
 5694 0587 CE160000 		.4byte	.LASF235
 5695 058b 05       		.byte	0x5
 5696 058c 00       		.uleb128 0
 5697 058d 40150000 		.4byte	.LASF236
 5698 0591 05       		.byte	0x5
 5699 0592 00       		.uleb128 0
 5700 0593 837B0000 		.4byte	.LASF237
 5701 0597 05       		.byte	0x5
 5702 0598 00       		.uleb128 0
 5703 0599 BB640000 		.4byte	.LASF238
 5704 059d 05       		.byte	0x5
 5705 059e 00       		.uleb128 0
 5706 059f 283B0000 		.4byte	.LASF239
 5707 05a3 05       		.byte	0x5
 5708 05a4 00       		.uleb128 0
 5709 05a5 6C8E0000 		.4byte	.LASF240
 5710 05a9 05       		.byte	0x5
 5711 05aa 00       		.uleb128 0
 5712 05ab BE460000 		.4byte	.LASF241
 5713 05af 05       		.byte	0x5
 5714 05b0 00       		.uleb128 0
 5715 05b1 60150000 		.4byte	.LASF242
 5716 05b5 05       		.byte	0x5
 5717 05b6 00       		.uleb128 0
 5718 05b7 DD2C0000 		.4byte	.LASF243
 5719 05bb 05       		.byte	0x5
 5720 05bc 00       		.uleb128 0
 5721 05bd B9420000 		.4byte	.LASF244
 5722 05c1 05       		.byte	0x5
 5723 05c2 00       		.uleb128 0
 5724 05c3 03540000 		.4byte	.LASF245
 5725 05c7 05       		.byte	0x5
 5726 05c8 00       		.uleb128 0
 5727 05c9 2C420000 		.4byte	.LASF246
 5728 05cd 05       		.byte	0x5
 5729 05ce 00       		.uleb128 0
 5730 05cf 77110000 		.4byte	.LASF247
 5731 05d3 05       		.byte	0x5
 5732 05d4 00       		.uleb128 0
 5733 05d5 C7880000 		.4byte	.LASF248
 5734 05d9 05       		.byte	0x5
 5735 05da 00       		.uleb128 0
 5736 05db 006A0000 		.4byte	.LASF249
 5737 05df 05       		.byte	0x5
 5738 05e0 00       		.uleb128 0
 5739 05e1 AB020000 		.4byte	.LASF250
 5740 05e5 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 141


 5741 05e6 00       		.uleb128 0
 5742 05e7 30850000 		.4byte	.LASF251
 5743 05eb 05       		.byte	0x5
 5744 05ec 00       		.uleb128 0
 5745 05ed C6670000 		.4byte	.LASF252
 5746 05f1 05       		.byte	0x5
 5747 05f2 00       		.uleb128 0
 5748 05f3 ED470000 		.4byte	.LASF253
 5749 05f7 05       		.byte	0x5
 5750 05f8 00       		.uleb128 0
 5751 05f9 ED6C0000 		.4byte	.LASF254
 5752 05fd 05       		.byte	0x5
 5753 05fe 00       		.uleb128 0
 5754 05ff 878E0000 		.4byte	.LASF255
 5755 0603 05       		.byte	0x5
 5756 0604 00       		.uleb128 0
 5757 0605 E5710000 		.4byte	.LASF256
 5758 0609 05       		.byte	0x5
 5759 060a 00       		.uleb128 0
 5760 060b 823E0000 		.4byte	.LASF257
 5761 060f 05       		.byte	0x5
 5762 0610 00       		.uleb128 0
 5763 0611 84020000 		.4byte	.LASF258
 5764 0615 05       		.byte	0x5
 5765 0616 00       		.uleb128 0
 5766 0617 00360000 		.4byte	.LASF259
 5767 061b 05       		.byte	0x5
 5768 061c 00       		.uleb128 0
 5769 061d F41E0000 		.4byte	.LASF260
 5770 0621 05       		.byte	0x5
 5771 0622 00       		.uleb128 0
 5772 0623 86240000 		.4byte	.LASF261
 5773 0627 05       		.byte	0x5
 5774 0628 00       		.uleb128 0
 5775 0629 EE530000 		.4byte	.LASF262
 5776 062d 05       		.byte	0x5
 5777 062e 00       		.uleb128 0
 5778 062f BC890000 		.4byte	.LASF263
 5779 0633 05       		.byte	0x5
 5780 0634 00       		.uleb128 0
 5781 0635 1A530000 		.4byte	.LASF264
 5782 0639 05       		.byte	0x5
 5783 063a 00       		.uleb128 0
 5784 063b 972B0000 		.4byte	.LASF265
 5785 063f 05       		.byte	0x5
 5786 0640 00       		.uleb128 0
 5787 0641 A3860000 		.4byte	.LASF266
 5788 0645 05       		.byte	0x5
 5789 0646 00       		.uleb128 0
 5790 0647 A2710000 		.4byte	.LASF267
 5791 064b 05       		.byte	0x5
 5792 064c 00       		.uleb128 0
 5793 064d 0B920000 		.4byte	.LASF268
 5794 0651 05       		.byte	0x5
 5795 0652 00       		.uleb128 0
 5796 0653 50960000 		.4byte	.LASF269
 5797 0657 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 142


 5798 0658 00       		.uleb128 0
 5799 0659 050F0000 		.4byte	.LASF270
 5800 065d 05       		.byte	0x5
 5801 065e 00       		.uleb128 0
 5802 065f 8E060000 		.4byte	.LASF271
 5803 0663 05       		.byte	0x5
 5804 0664 00       		.uleb128 0
 5805 0665 38680000 		.4byte	.LASF272
 5806 0669 05       		.byte	0x5
 5807 066a 00       		.uleb128 0
 5808 066b C06D0000 		.4byte	.LASF273
 5809 066f 05       		.byte	0x5
 5810 0670 00       		.uleb128 0
 5811 0671 E0230000 		.4byte	.LASF274
 5812 0675 05       		.byte	0x5
 5813 0676 00       		.uleb128 0
 5814 0677 7D030000 		.4byte	.LASF275
 5815 067b 05       		.byte	0x5
 5816 067c 00       		.uleb128 0
 5817 067d C1550000 		.4byte	.LASF276
 5818 0681 05       		.byte	0x5
 5819 0682 00       		.uleb128 0
 5820 0683 8A470000 		.4byte	.LASF277
 5821 0687 05       		.byte	0x5
 5822 0688 00       		.uleb128 0
 5823 0689 1D100000 		.4byte	.LASF278
 5824 068d 05       		.byte	0x5
 5825 068e 00       		.uleb128 0
 5826 068f 64680000 		.4byte	.LASF279
 5827 0693 05       		.byte	0x5
 5828 0694 00       		.uleb128 0
 5829 0695 85940000 		.4byte	.LASF280
 5830 0699 05       		.byte	0x5
 5831 069a 00       		.uleb128 0
 5832 069b 6F720000 		.4byte	.LASF281
 5833 069f 05       		.byte	0x5
 5834 06a0 00       		.uleb128 0
 5835 06a1 EA500000 		.4byte	.LASF282
 5836 06a5 05       		.byte	0x5
 5837 06a6 00       		.uleb128 0
 5838 06a7 748C0000 		.4byte	.LASF283
 5839 06ab 05       		.byte	0x5
 5840 06ac 00       		.uleb128 0
 5841 06ad 926A0000 		.4byte	.LASF284
 5842 06b1 05       		.byte	0x5
 5843 06b2 00       		.uleb128 0
 5844 06b3 BF700000 		.4byte	.LASF285
 5845 06b7 05       		.byte	0x5
 5846 06b8 00       		.uleb128 0
 5847 06b9 C3270000 		.4byte	.LASF286
 5848 06bd 05       		.byte	0x5
 5849 06be 00       		.uleb128 0
 5850 06bf D1110000 		.4byte	.LASF287
 5851 06c3 05       		.byte	0x5
 5852 06c4 00       		.uleb128 0
 5853 06c5 CE700000 		.4byte	.LASF288
 5854 06c9 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 143


 5855 06ca 00       		.uleb128 0
 5856 06cb 4A3C0000 		.4byte	.LASF289
 5857 06cf 05       		.byte	0x5
 5858 06d0 00       		.uleb128 0
 5859 06d1 7E2A0000 		.4byte	.LASF290
 5860 06d5 05       		.byte	0x5
 5861 06d6 00       		.uleb128 0
 5862 06d7 740D0000 		.4byte	.LASF291
 5863 06db 05       		.byte	0x5
 5864 06dc 00       		.uleb128 0
 5865 06dd 19190000 		.4byte	.LASF292
 5866 06e1 05       		.byte	0x5
 5867 06e2 00       		.uleb128 0
 5868 06e3 BA5E0000 		.4byte	.LASF293
 5869 06e7 05       		.byte	0x5
 5870 06e8 00       		.uleb128 0
 5871 06e9 94000000 		.4byte	.LASF294
 5872 06ed 05       		.byte	0x5
 5873 06ee 00       		.uleb128 0
 5874 06ef 388E0000 		.4byte	.LASF295
 5875 06f3 05       		.byte	0x5
 5876 06f4 00       		.uleb128 0
 5877 06f5 885A0000 		.4byte	.LASF296
 5878 06f9 05       		.byte	0x5
 5879 06fa 00       		.uleb128 0
 5880 06fb F5250000 		.4byte	.LASF297
 5881 06ff 05       		.byte	0x5
 5882 0700 00       		.uleb128 0
 5883 0701 8A160000 		.4byte	.LASF298
 5884 0705 05       		.byte	0x5
 5885 0706 00       		.uleb128 0
 5886 0707 257F0000 		.4byte	.LASF299
 5887 070b 05       		.byte	0x5
 5888 070c 00       		.uleb128 0
 5889 070d D30F0000 		.4byte	.LASF300
 5890 0711 05       		.byte	0x5
 5891 0712 00       		.uleb128 0
 5892 0713 29870000 		.4byte	.LASF301
 5893 0717 05       		.byte	0x5
 5894 0718 00       		.uleb128 0
 5895 0719 B7780000 		.4byte	.LASF302
 5896 071d 05       		.byte	0x5
 5897 071e 00       		.uleb128 0
 5898 071f 91500000 		.4byte	.LASF303
 5899 0723 05       		.byte	0x5
 5900 0724 00       		.uleb128 0
 5901 0725 870B0000 		.4byte	.LASF304
 5902 0729 05       		.byte	0x5
 5903 072a 00       		.uleb128 0
 5904 072b A27F0000 		.4byte	.LASF305
 5905 072f 05       		.byte	0x5
 5906 0730 00       		.uleb128 0
 5907 0731 64010000 		.4byte	.LASF306
 5908 0735 05       		.byte	0x5
 5909 0736 00       		.uleb128 0
 5910 0737 B0090000 		.4byte	.LASF307
 5911 073b 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 144


 5912 073c 00       		.uleb128 0
 5913 073d 05260000 		.4byte	.LASF308
 5914 0741 05       		.byte	0x5
 5915 0742 00       		.uleb128 0
 5916 0743 55640000 		.4byte	.LASF309
 5917 0747 05       		.byte	0x5
 5918 0748 00       		.uleb128 0
 5919 0749 39170000 		.4byte	.LASF310
 5920 074d 05       		.byte	0x5
 5921 074e 00       		.uleb128 0
 5922 074f 645B0000 		.4byte	.LASF311
 5923 0753 05       		.byte	0x5
 5924 0754 00       		.uleb128 0
 5925 0755 70410000 		.4byte	.LASF312
 5926 0759 05       		.byte	0x5
 5927 075a 00       		.uleb128 0
 5928 075b 291F0000 		.4byte	.LASF313
 5929 075f 05       		.byte	0x5
 5930 0760 00       		.uleb128 0
 5931 0761 0F8A0000 		.4byte	.LASF314
 5932 0765 05       		.byte	0x5
 5933 0766 00       		.uleb128 0
 5934 0767 1F2F0000 		.4byte	.LASF315
 5935 076b 05       		.byte	0x5
 5936 076c 00       		.uleb128 0
 5937 076d B1730000 		.4byte	.LASF316
 5938 0771 05       		.byte	0x5
 5939 0772 00       		.uleb128 0
 5940 0773 CF470000 		.4byte	.LASF317
 5941 0777 05       		.byte	0x5
 5942 0778 00       		.uleb128 0
 5943 0779 DB270000 		.4byte	.LASF318
 5944 077d 05       		.byte	0x5
 5945 077e 00       		.uleb128 0
 5946 077f 7D2F0000 		.4byte	.LASF319
 5947 0783 05       		.byte	0x5
 5948 0784 00       		.uleb128 0
 5949 0785 90380000 		.4byte	.LASF320
 5950 0789 05       		.byte	0x5
 5951 078a 00       		.uleb128 0
 5952 078b EA3B0000 		.4byte	.LASF321
 5953 078f 05       		.byte	0x5
 5954 0790 00       		.uleb128 0
 5955 0791 7A250000 		.4byte	.LASF322
 5956 0795 05       		.byte	0x5
 5957 0796 00       		.uleb128 0
 5958 0797 E54C0000 		.4byte	.LASF323
 5959 079b 05       		.byte	0x5
 5960 079c 00       		.uleb128 0
 5961 079d 17880000 		.4byte	.LASF324
 5962 07a1 05       		.byte	0x5
 5963 07a2 00       		.uleb128 0
 5964 07a3 A6560000 		.4byte	.LASF325
 5965 07a7 05       		.byte	0x5
 5966 07a8 00       		.uleb128 0
 5967 07a9 B1380000 		.4byte	.LASF326
 5968 07ad 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 145


 5969 07ae 00       		.uleb128 0
 5970 07af 98440000 		.4byte	.LASF327
 5971 07b3 05       		.byte	0x5
 5972 07b4 00       		.uleb128 0
 5973 07b5 2B880000 		.4byte	.LASF328
 5974 07b9 05       		.byte	0x5
 5975 07ba 00       		.uleb128 0
 5976 07bb 66610000 		.4byte	.LASF329
 5977 07bf 05       		.byte	0x5
 5978 07c0 00       		.uleb128 0
 5979 07c1 DB930000 		.4byte	.LASF330
 5980 07c5 05       		.byte	0x5
 5981 07c6 00       		.uleb128 0
 5982 07c7 C6380000 		.4byte	.LASF331
 5983 07cb 05       		.byte	0x5
 5984 07cc 00       		.uleb128 0
 5985 07cd 3C5C0000 		.4byte	.LASF332
 5986 07d1 05       		.byte	0x5
 5987 07d2 00       		.uleb128 0
 5988 07d3 C8390000 		.4byte	.LASF333
 5989 07d7 05       		.byte	0x5
 5990 07d8 00       		.uleb128 0
 5991 07d9 41070000 		.4byte	.LASF334
 5992 07dd 05       		.byte	0x5
 5993 07de 00       		.uleb128 0
 5994 07df 8C5C0000 		.4byte	.LASF335
 5995 07e3 05       		.byte	0x5
 5996 07e4 00       		.uleb128 0
 5997 07e5 41480000 		.4byte	.LASF336
 5998 07e9 05       		.byte	0x5
 5999 07ea 00       		.uleb128 0
 6000 07eb CC3F0000 		.4byte	.LASF337
 6001 07ef 05       		.byte	0x5
 6002 07f0 00       		.uleb128 0
 6003 07f1 75900000 		.4byte	.LASF338
 6004 07f5 05       		.byte	0x5
 6005 07f6 00       		.uleb128 0
 6006 07f7 79240000 		.4byte	.LASF339
 6007 07fb 05       		.byte	0x5
 6008 07fc 00       		.uleb128 0
 6009 07fd 12600000 		.4byte	.LASF340
 6010 0801 05       		.byte	0x5
 6011 0802 00       		.uleb128 0
 6012 0803 D6900000 		.4byte	.LASF341
 6013 0807 05       		.byte	0x5
 6014 0808 00       		.uleb128 0
 6015 0809 6F710000 		.4byte	.LASF342
 6016 080d 05       		.byte	0x5
 6017 080e 00       		.uleb128 0
 6018 080f 9D3D0000 		.4byte	.LASF343
 6019 0813 05       		.byte	0x5
 6020 0814 00       		.uleb128 0
 6021 0815 02120000 		.4byte	.LASF344
 6022 0819 05       		.byte	0x5
 6023 081a 00       		.uleb128 0
 6024 081b 28190000 		.4byte	.LASF345
 6025 081f 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 146


 6026 0820 00       		.uleb128 0
 6027 0821 28160000 		.4byte	.LASF346
 6028 0825 05       		.byte	0x5
 6029 0826 00       		.uleb128 0
 6030 0827 1D310000 		.4byte	.LASF347
 6031 082b 05       		.byte	0x5
 6032 082c 00       		.uleb128 0
 6033 082d 1A710000 		.4byte	.LASF348
 6034 0831 05       		.byte	0x5
 6035 0832 00       		.uleb128 0
 6036 0833 C6830000 		.4byte	.LASF349
 6037 0837 05       		.byte	0x5
 6038 0838 00       		.uleb128 0
 6039 0839 58570000 		.4byte	.LASF350
 6040 083d 05       		.byte	0x5
 6041 083e 00       		.uleb128 0
 6042 083f A58A0000 		.4byte	.LASF351
 6043 0843 05       		.byte	0x5
 6044 0844 00       		.uleb128 0
 6045 0845 2F000000 		.4byte	.LASF352
 6046 0849 05       		.byte	0x5
 6047 084a 00       		.uleb128 0
 6048 084b 46710000 		.4byte	.LASF353
 6049 084f 05       		.byte	0x5
 6050 0850 00       		.uleb128 0
 6051 0851 42240000 		.4byte	.LASF354
 6052 0855 00       		.byte	0
 6053              		.section	.debug_macro,"G",%progbits,wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b,comda
 6054              	.Ldebug_macro2:
 6055 0000 0400     		.2byte	0x4
 6056 0002 00       		.byte	0
 6057 0003 05       		.byte	0x5
 6058 0004 04       		.uleb128 0x4
 6059 0005 478E0000 		.4byte	.LASF359
 6060 0009 05       		.byte	0x5
 6061 000a 06       		.uleb128 0x6
 6062 000b A1470000 		.4byte	.LASF360
 6063 000f 05       		.byte	0x5
 6064 0010 07       		.uleb128 0x7
 6065 0011 AB1C0000 		.4byte	.LASF361
 6066 0015 05       		.byte	0x5
 6067 0016 08       		.uleb128 0x8
 6068 0017 C5520000 		.4byte	.LASF362
 6069 001b 05       		.byte	0x5
 6070 001c 09       		.uleb128 0x9
 6071 001d D2660000 		.4byte	.LASF363
 6072 0021 00       		.byte	0
 6073              		.section	.debug_macro,"G",%progbits,wm4.newlib.h.21.0b9fc973bddc8b940a18de2b6ea6adc7,comdat
 6074              	.Ldebug_macro3:
 6075 0000 0400     		.2byte	0x4
 6076 0002 00       		.byte	0
 6077 0003 05       		.byte	0x5
 6078 0004 15       		.uleb128 0x15
 6079 0005 9D960000 		.4byte	.LASF364
 6080 0009 05       		.byte	0x5
 6081 000a 18       		.uleb128 0x18
 6082 000b CC850000 		.4byte	.LASF365
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 147


 6083 000f 05       		.byte	0x5
 6084 0010 28       		.uleb128 0x28
 6085 0011 202A0000 		.4byte	.LASF366
 6086 0015 05       		.byte	0x5
 6087 0016 32       		.uleb128 0x32
 6088 0017 167A0000 		.4byte	.LASF367
 6089 001b 05       		.byte	0x5
 6090 001c 36       		.uleb128 0x36
 6091 001d 04480000 		.4byte	.LASF368
 6092 0021 05       		.byte	0x5
 6093 0022 39       		.uleb128 0x39
 6094 0023 4E1E0000 		.4byte	.LASF369
 6095 0027 05       		.byte	0x5
 6096 0028 3C       		.uleb128 0x3c
 6097 0029 404C0000 		.4byte	.LASF370
 6098 002d 05       		.byte	0x5
 6099 002e 3F       		.uleb128 0x3f
 6100 002f 4F0A0000 		.4byte	.LASF371
 6101 0033 05       		.byte	0x5
 6102 0034 42       		.uleb128 0x42
 6103 0035 DB0E0000 		.4byte	.LASF372
 6104 0039 05       		.byte	0x5
 6105 003a 45       		.uleb128 0x45
 6106 003b 50600000 		.4byte	.LASF373
 6107 003f 05       		.byte	0x5
 6108 0040 48       		.uleb128 0x48
 6109 0041 6D2D0000 		.4byte	.LASF374
 6110 0045 05       		.byte	0x5
 6111 0046 4B       		.uleb128 0x4b
 6112 0047 5A5A0000 		.4byte	.LASF375
 6113 004b 00       		.byte	0
 6114              		.section	.debug_macro,"G",%progbits,wm4.features.h.22.692cd1f2e947ca7b8fea300222f5f1f2,comdat
 6115              	.Ldebug_macro4:
 6116 0000 0400     		.2byte	0x4
 6117 0002 00       		.byte	0
 6118 0003 05       		.byte	0x5
 6119 0004 16       		.uleb128 0x16
 6120 0005 FC240000 		.4byte	.LASF377
 6121 0009 05       		.byte	0x5
 6122 000a 21       		.uleb128 0x21
 6123 000b 3D130000 		.4byte	.LASF378
 6124 000f 05       		.byte	0x5
 6125 0010 28       		.uleb128 0x28
 6126 0011 FC860000 		.4byte	.LASF379
 6127 0015 06       		.byte	0x6
 6128 0016 8001     		.uleb128 0x80
 6129 0018 548B0000 		.4byte	.LASF380
 6130 001c 05       		.byte	0x5
 6131 001d 8101     		.uleb128 0x81
 6132 001f 04400000 		.4byte	.LASF381
 6133 0023 06       		.byte	0x6
 6134 0024 8501     		.uleb128 0x85
 6135 0026 503D0000 		.4byte	.LASF382
 6136 002a 05       		.byte	0x5
 6137 002b 8601     		.uleb128 0x86
 6138 002d A58D0000 		.4byte	.LASF383
 6139 0031 06       		.byte	0x6
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 148


 6140 0032 8701     		.uleb128 0x87
 6141 0034 08980000 		.4byte	.LASF384
 6142 0038 05       		.byte	0x5
 6143 0039 8801     		.uleb128 0x88
 6144 003b 051A0000 		.4byte	.LASF385
 6145 003f 06       		.byte	0x6
 6146 0040 9B01     		.uleb128 0x9b
 6147 0042 5C370000 		.4byte	.LASF386
 6148 0046 05       		.byte	0x5
 6149 0047 9C01     		.uleb128 0x9c
 6150 0049 2C4F0000 		.4byte	.LASF387
 6151 004d 05       		.byte	0x5
 6152 004e F201     		.uleb128 0xf2
 6153 0050 2D150000 		.4byte	.LASF388
 6154 0054 05       		.byte	0x5
 6155 0055 F801     		.uleb128 0xf8
 6156 0057 054D0000 		.4byte	.LASF389
 6157 005b 05       		.byte	0x5
 6158 005c 8002     		.uleb128 0x100
 6159 005e 47680000 		.4byte	.LASF390
 6160 0062 05       		.byte	0x5
 6161 0063 8802     		.uleb128 0x108
 6162 0065 0D960000 		.4byte	.LASF391
 6163 0069 05       		.byte	0x5
 6164 006a 9002     		.uleb128 0x110
 6165 006c 6F1C0000 		.4byte	.LASF392
 6166 0070 05       		.byte	0x5
 6167 0071 9402     		.uleb128 0x114
 6168 0073 A12F0000 		.4byte	.LASF393
 6169 0077 05       		.byte	0x5
 6170 0078 9A02     		.uleb128 0x11a
 6171 007a 28060000 		.4byte	.LASF394
 6172 007e 05       		.byte	0x5
 6173 007f AA02     		.uleb128 0x12a
 6174 0081 A3000000 		.4byte	.LASF395
 6175 0085 05       		.byte	0x5
 6176 0086 BA02     		.uleb128 0x13a
 6177 0088 57860000 		.4byte	.LASF396
 6178 008c 00       		.byte	0
 6179              		.section	.debug_macro,"G",%progbits,wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e,comdat
 6180              	.Ldebug_macro5:
 6181 0000 0400     		.2byte	0x4
 6182 0002 00       		.byte	0
 6183 0003 05       		.byte	0x5
 6184 0004 DB01     		.uleb128 0xdb
 6185 0006 200E0000 		.4byte	.LASF397
 6186 000a 06       		.byte	0x6
 6187 000b E101     		.uleb128 0xe1
 6188 000d 4F120000 		.4byte	.LASF398
 6189 0011 05       		.byte	0x5
 6190 0012 E501     		.uleb128 0xe5
 6191 0014 3C5D0000 		.4byte	.LASF399
 6192 0018 05       		.byte	0x5
 6193 0019 F401     		.uleb128 0xf4
 6194 001b D3590000 		.4byte	.LASF400
 6195 001f 05       		.byte	0x5
 6196 0020 F801     		.uleb128 0xf8
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 149


 6197 0022 6E5A0000 		.4byte	.LASF401
 6198 0026 05       		.byte	0x5
 6199 0027 FF01     		.uleb128 0xff
 6200 0029 18230000 		.4byte	.LASF402
 6201 002d 05       		.byte	0x5
 6202 002e 8502     		.uleb128 0x105
 6203 0030 6C1B0000 		.4byte	.LASF403
 6204 0034 00       		.byte	0
 6205              		.section	.debug_macro,"G",%progbits,wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51,comdat
 6206              	.Ldebug_macro6:
 6207 0000 0400     		.2byte	0x4
 6208 0002 00       		.byte	0
 6209 0003 05       		.byte	0x5
 6210 0004 17       		.uleb128 0x17
 6211 0005 517A0000 		.4byte	.LASF404
 6212 0009 05       		.byte	0x5
 6213 000a 2C       		.uleb128 0x2c
 6214 000b C25B0000 		.4byte	.LASF405
 6215 000f 05       		.byte	0x5
 6216 0010 2D       		.uleb128 0x2d
 6217 0011 032C0000 		.4byte	.LASF406
 6218 0015 05       		.byte	0x5
 6219 0016 2E       		.uleb128 0x2e
 6220 0017 30500000 		.4byte	.LASF407
 6221 001b 05       		.byte	0x5
 6222 001c 32       		.uleb128 0x32
 6223 001d 48900000 		.4byte	.LASF408
 6224 0021 05       		.byte	0x5
 6225 0022 33       		.uleb128 0x33
 6226 0023 58950000 		.4byte	.LASF409
 6227 0027 05       		.byte	0x5
 6228 0028 34       		.uleb128 0x34
 6229 0029 3C720000 		.4byte	.LASF410
 6230 002d 05       		.byte	0x5
 6231 002e 35       		.uleb128 0x35
 6232 002f 64140000 		.4byte	.LASF411
 6233 0033 05       		.byte	0x5
 6234 0034 36       		.uleb128 0x36
 6235 0035 66240000 		.4byte	.LASF412
 6236 0039 05       		.byte	0x5
 6237 003a 37       		.uleb128 0x37
 6238 003b DE2A0000 		.4byte	.LASF413
 6239 003f 05       		.byte	0x5
 6240 0040 38       		.uleb128 0x38
 6241 0041 70480000 		.4byte	.LASF414
 6242 0045 05       		.byte	0x5
 6243 0046 39       		.uleb128 0x39
 6244 0047 97880000 		.4byte	.LASF415
 6245 004b 05       		.byte	0x5
 6246 004c 40       		.uleb128 0x40
 6247 004d 52550000 		.4byte	.LASF416
 6248 0051 05       		.byte	0x5
 6249 0052 41       		.uleb128 0x41
 6250 0053 9A070000 		.4byte	.LASF417
 6251 0057 05       		.byte	0x5
 6252 0058 42       		.uleb128 0x42
 6253 0059 825B0000 		.4byte	.LASF418
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 150


 6254 005d 05       		.byte	0x5
 6255 005e 43       		.uleb128 0x43
 6256 005f 9B240000 		.4byte	.LASF419
 6257 0063 05       		.byte	0x5
 6258 0064 45       		.uleb128 0x45
 6259 0065 38200000 		.4byte	.LASF420
 6260 0069 05       		.byte	0x5
 6261 006a 46       		.uleb128 0x46
 6262 006b D66E0000 		.4byte	.LASF421
 6263 006f 05       		.byte	0x5
 6264 0070 47       		.uleb128 0x47
 6265 0071 EE700000 		.4byte	.LASF422
 6266 0075 05       		.byte	0x5
 6267 0076 49       		.uleb128 0x49
 6268 0077 EF020000 		.4byte	.LASF423
 6269 007b 05       		.byte	0x5
 6270 007c 4C       		.uleb128 0x4c
 6271 007d EE1A0000 		.4byte	.LASF424
 6272 0081 05       		.byte	0x5
 6273 0082 65       		.uleb128 0x65
 6274 0083 3E800000 		.4byte	.LASF425
 6275 0087 05       		.byte	0x5
 6276 0088 7B       		.uleb128 0x7b
 6277 0089 57170000 		.4byte	.LASF426
 6278 008d 05       		.byte	0x5
 6279 008e 8301     		.uleb128 0x83
 6280 0090 61160000 		.4byte	.LASF427
 6281 0094 05       		.byte	0x5
 6282 0095 8401     		.uleb128 0x84
 6283 0097 E4750000 		.4byte	.LASF428
 6284 009b 00       		.byte	0
 6285              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2,comdat
 6286              	.Ldebug_macro7:
 6287 0000 0400     		.2byte	0x4
 6288 0002 00       		.byte	0
 6289 0003 05       		.byte	0x5
 6290 0004 0D       		.uleb128 0xd
 6291 0005 B4270000 		.4byte	.LASF429
 6292 0009 05       		.byte	0x5
 6293 000a 0E       		.uleb128 0xe
 6294 000b 44260000 		.4byte	.LASF430
 6295 000f 05       		.byte	0x5
 6296 0010 0F       		.uleb128 0xf
 6297 0011 EA3F0000 		.4byte	.LASF431
 6298 0015 00       		.byte	0
 6299              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1,comdat
 6300              	.Ldebug_macro8:
 6301 0000 0400     		.2byte	0x4
 6302 0002 00       		.byte	0
 6303 0003 05       		.byte	0x5
 6304 0004 BB01     		.uleb128 0xbb
 6305 0006 142A0000 		.4byte	.LASF432
 6306 000a 05       		.byte	0x5
 6307 000b BC01     		.uleb128 0xbc
 6308 000d 1E0B0000 		.4byte	.LASF433
 6309 0011 05       		.byte	0x5
 6310 0012 BD01     		.uleb128 0xbd
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 151


 6311 0014 8B5F0000 		.4byte	.LASF434
 6312 0018 05       		.byte	0x5
 6313 0019 BE01     		.uleb128 0xbe
 6314 001b B3140000 		.4byte	.LASF435
 6315 001f 05       		.byte	0x5
 6316 0020 BF01     		.uleb128 0xbf
 6317 0022 30940000 		.4byte	.LASF436
 6318 0026 05       		.byte	0x5
 6319 0027 C001     		.uleb128 0xc0
 6320 0029 640E0000 		.4byte	.LASF437
 6321 002d 05       		.byte	0x5
 6322 002e C101     		.uleb128 0xc1
 6323 0030 07620000 		.4byte	.LASF438
 6324 0034 05       		.byte	0x5
 6325 0035 C201     		.uleb128 0xc2
 6326 0037 66480000 		.4byte	.LASF439
 6327 003b 05       		.byte	0x5
 6328 003c C301     		.uleb128 0xc3
 6329 003e F66E0000 		.4byte	.LASF440
 6330 0042 05       		.byte	0x5
 6331 0043 C401     		.uleb128 0xc4
 6332 0045 17520000 		.4byte	.LASF441
 6333 0049 05       		.byte	0x5
 6334 004a C501     		.uleb128 0xc5
 6335 004c 27680000 		.4byte	.LASF442
 6336 0050 05       		.byte	0x5
 6337 0051 C601     		.uleb128 0xc6
 6338 0053 5C210000 		.4byte	.LASF443
 6339 0057 05       		.byte	0x5
 6340 0058 C701     		.uleb128 0xc7
 6341 005a D1190000 		.4byte	.LASF444
 6342 005e 05       		.byte	0x5
 6343 005f C801     		.uleb128 0xc8
 6344 0061 2B5D0000 		.4byte	.LASF445
 6345 0065 05       		.byte	0x5
 6346 0066 C901     		.uleb128 0xc9
 6347 0068 778B0000 		.4byte	.LASF446
 6348 006c 05       		.byte	0x5
 6349 006d CA01     		.uleb128 0xca
 6350 006f 63750000 		.4byte	.LASF447
 6351 0073 05       		.byte	0x5
 6352 0074 D201     		.uleb128 0xd2
 6353 0076 970D0000 		.4byte	.LASF448
 6354 007a 06       		.byte	0x6
 6355 007b EE01     		.uleb128 0xee
 6356 007d 1C480000 		.4byte	.LASF449
 6357 0081 05       		.byte	0x5
 6358 0082 8B02     		.uleb128 0x10b
 6359 0084 68900000 		.4byte	.LASF450
 6360 0088 05       		.byte	0x5
 6361 0089 8C02     		.uleb128 0x10c
 6362 008b 25860000 		.4byte	.LASF451
 6363 008f 05       		.byte	0x5
 6364 0090 8D02     		.uleb128 0x10d
 6365 0092 705D0000 		.4byte	.LASF452
 6366 0096 05       		.byte	0x5
 6367 0097 8E02     		.uleb128 0x10e
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 152


 6368 0099 E88B0000 		.4byte	.LASF453
 6369 009d 05       		.byte	0x5
 6370 009e 8F02     		.uleb128 0x10f
 6371 00a0 946F0000 		.4byte	.LASF454
 6372 00a4 05       		.byte	0x5
 6373 00a5 9002     		.uleb128 0x110
 6374 00a7 F44B0000 		.4byte	.LASF455
 6375 00ab 05       		.byte	0x5
 6376 00ac 9102     		.uleb128 0x111
 6377 00ae 426F0000 		.4byte	.LASF456
 6378 00b2 05       		.byte	0x5
 6379 00b3 9202     		.uleb128 0x112
 6380 00b5 24320000 		.4byte	.LASF457
 6381 00b9 05       		.byte	0x5
 6382 00ba 9302     		.uleb128 0x113
 6383 00bc 083E0000 		.4byte	.LASF458
 6384 00c0 05       		.byte	0x5
 6385 00c1 9402     		.uleb128 0x114
 6386 00c3 8E6C0000 		.4byte	.LASF459
 6387 00c7 05       		.byte	0x5
 6388 00c8 9502     		.uleb128 0x115
 6389 00ca 945F0000 		.4byte	.LASF460
 6390 00ce 05       		.byte	0x5
 6391 00cf 9602     		.uleb128 0x116
 6392 00d1 FD890000 		.4byte	.LASF461
 6393 00d5 05       		.byte	0x5
 6394 00d6 9702     		.uleb128 0x117
 6395 00d8 DD700000 		.4byte	.LASF462
 6396 00dc 05       		.byte	0x5
 6397 00dd 9802     		.uleb128 0x118
 6398 00df CE570000 		.4byte	.LASF463
 6399 00e3 05       		.byte	0x5
 6400 00e4 9902     		.uleb128 0x119
 6401 00e6 35540000 		.4byte	.LASF464
 6402 00ea 06       		.byte	0x6
 6403 00eb A602     		.uleb128 0x126
 6404 00ed 948C0000 		.4byte	.LASF465
 6405 00f1 06       		.byte	0x6
 6406 00f2 DB02     		.uleb128 0x15b
 6407 00f4 4A0C0000 		.4byte	.LASF466
 6408 00f8 06       		.byte	0x6
 6409 00f9 9103     		.uleb128 0x191
 6410 00fb 5C110000 		.4byte	.LASF467
 6411 00ff 05       		.byte	0x5
 6412 0100 9603     		.uleb128 0x196
 6413 0102 43350000 		.4byte	.LASF468
 6414 0106 06       		.byte	0x6
 6415 0107 9C03     		.uleb128 0x19c
 6416 0109 3E360000 		.4byte	.LASF469
 6417 010d 00       		.byte	0
 6418              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.d5a83c17f38162a5dd6f834eaf38f8ef,comdat
 6419              	.Ldebug_macro9:
 6420 0000 0400     		.2byte	0x4
 6421 0002 00       		.byte	0
 6422 0003 05       		.byte	0x5
 6423 0004 27       		.uleb128 0x27
 6424 0005 02450000 		.4byte	.LASF471
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 153


 6425 0009 05       		.byte	0x5
 6426 000a 28       		.uleb128 0x28
 6427 000b DB610000 		.4byte	.LASF472
 6428 000f 05       		.byte	0x5
 6429 0010 2A       		.uleb128 0x2a
 6430 0011 D4440000 		.4byte	.LASF473
 6431 0015 05       		.byte	0x5
 6432 0016 8901     		.uleb128 0x89
 6433 0018 104A0000 		.4byte	.LASF474
 6434 001c 05       		.byte	0x5
 6435 001d 8A01     		.uleb128 0x8a
 6436 001f B5430000 		.4byte	.LASF475
 6437 0023 05       		.byte	0x5
 6438 0024 8B01     		.uleb128 0x8b
 6439 0026 B5550000 		.4byte	.LASF476
 6440 002a 05       		.byte	0x5
 6441 002b 8C01     		.uleb128 0x8c
 6442 002d 57680000 		.4byte	.LASF477
 6443 0031 05       		.byte	0x5
 6444 0032 8D01     		.uleb128 0x8d
 6445 0034 FA840000 		.4byte	.LASF478
 6446 0038 05       		.byte	0x5
 6447 0039 8E01     		.uleb128 0x8e
 6448 003b 420D0000 		.4byte	.LASF479
 6449 003f 05       		.byte	0x5
 6450 0040 8F01     		.uleb128 0x8f
 6451 0042 C26F0000 		.4byte	.LASF480
 6452 0046 05       		.byte	0x5
 6453 0047 9001     		.uleb128 0x90
 6454 0049 715E0000 		.4byte	.LASF481
 6455 004d 05       		.byte	0x5
 6456 004e 9101     		.uleb128 0x91
 6457 0050 29570000 		.4byte	.LASF482
 6458 0054 06       		.byte	0x6
 6459 0055 A101     		.uleb128 0xa1
 6460 0057 0D840000 		.4byte	.LASF483
 6461 005b 06       		.byte	0x6
 6462 005c EE01     		.uleb128 0xee
 6463 005e 1C480000 		.4byte	.LASF449
 6464 0062 06       		.byte	0x6
 6465 0063 DB02     		.uleb128 0x15b
 6466 0065 4A0C0000 		.4byte	.LASF466
 6467 0069 06       		.byte	0x6
 6468 006a 9103     		.uleb128 0x191
 6469 006c 5C110000 		.4byte	.LASF467
 6470 0070 05       		.byte	0x5
 6471 0071 9603     		.uleb128 0x196
 6472 0073 43350000 		.4byte	.LASF468
 6473 0077 06       		.byte	0x6
 6474 0078 9C03     		.uleb128 0x19c
 6475 007a 3E360000 		.4byte	.LASF469
 6476 007e 05       		.byte	0x5
 6477 007f A103     		.uleb128 0x1a1
 6478 0081 95400000 		.4byte	.LASF484
 6479 0085 00       		.byte	0
 6480              		.section	.debug_macro,"G",%progbits,wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382,comdat
 6481              	.Ldebug_macro10:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 154


 6482 0000 0400     		.2byte	0x4
 6483 0002 00       		.byte	0
 6484 0003 05       		.byte	0x5
 6485 0004 06       		.uleb128 0x6
 6486 0005 275E0000 		.4byte	.LASF487
 6487 0009 05       		.byte	0x5
 6488 000a 0F       		.uleb128 0xf
 6489 000b 594F0000 		.4byte	.LASF488
 6490 000f 05       		.byte	0x5
 6491 0010 21       		.uleb128 0x21
 6492 0011 063C0000 		.4byte	.LASF489
 6493 0015 05       		.byte	0x5
 6494 0016 2F       		.uleb128 0x2f
 6495 0017 56290000 		.4byte	.LASF490
 6496 001b 05       		.byte	0x5
 6497 001c 45       		.uleb128 0x45
 6498 001d 72210000 		.4byte	.LASF491
 6499 0021 05       		.byte	0x5
 6500 0022 5F       		.uleb128 0x5f
 6501 0023 E4630000 		.4byte	.LASF492
 6502 0027 05       		.byte	0x5
 6503 0028 7E       		.uleb128 0x7e
 6504 0029 3E570000 		.4byte	.LASF493
 6505 002d 05       		.byte	0x5
 6506 002e 9801     		.uleb128 0x98
 6507 0030 0D160000 		.4byte	.LASF494
 6508 0034 05       		.byte	0x5
 6509 0035 AE01     		.uleb128 0xae
 6510 0037 E5350000 		.4byte	.LASF495
 6511 003b 05       		.byte	0x5
 6512 003c C001     		.uleb128 0xc0
 6513 003e 0D4E0000 		.4byte	.LASF496
 6514 0042 06       		.byte	0x6
 6515 0043 D601     		.uleb128 0xd6
 6516 0045 DE630000 		.4byte	.LASF497
 6517 0049 00       		.byte	0
 6518              		.section	.debug_macro,"G",%progbits,wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea,comdat
 6519              	.Ldebug_macro11:
 6520 0000 0400     		.2byte	0x4
 6521 0002 00       		.byte	0
 6522 0003 05       		.byte	0x5
 6523 0004 02       		.uleb128 0x2
 6524 0005 17970000 		.4byte	.LASF498
 6525 0009 05       		.byte	0x5
 6526 000a 0B       		.uleb128 0xb
 6527 000b ED5E0000 		.4byte	.LASF499
 6528 000f 05       		.byte	0x5
 6529 0010 0C       		.uleb128 0xc
 6530 0011 5D420000 		.4byte	.LASF500
 6531 0015 05       		.byte	0x5
 6532 0016 0D       		.uleb128 0xd
 6533 0017 BF5A0000 		.4byte	.LASF501
 6534 001b 05       		.byte	0x5
 6535 001c 0E       		.uleb128 0xe
 6536 001d 50910000 		.4byte	.LASF502
 6537 0021 05       		.byte	0x5
 6538 0022 0F       		.uleb128 0xf
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 155


 6539 0023 9F2D0000 		.4byte	.LASF503
 6540 0027 05       		.byte	0x5
 6541 0028 10       		.uleb128 0x10
 6542 0029 F00C0000 		.4byte	.LASF504
 6543 002d 05       		.byte	0x5
 6544 002e 11       		.uleb128 0x11
 6545 002f E5450000 		.4byte	.LASF505
 6546 0033 05       		.byte	0x5
 6547 0034 12       		.uleb128 0x12
 6548 0035 C1320000 		.4byte	.LASF506
 6549 0039 05       		.byte	0x5
 6550 003a 13       		.uleb128 0x13
 6551 003b 47280000 		.4byte	.LASF507
 6552 003f 05       		.byte	0x5
 6553 0040 14       		.uleb128 0x14
 6554 0041 94620000 		.4byte	.LASF508
 6555 0045 05       		.byte	0x5
 6556 0046 15       		.uleb128 0x15
 6557 0047 6D4B0000 		.4byte	.LASF509
 6558 004b 05       		.byte	0x5
 6559 004c 16       		.uleb128 0x16
 6560 004d 75850000 		.4byte	.LASF510
 6561 0051 00       		.byte	0
 6562              		.section	.debug_macro,"G",%progbits,wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068,comdat
 6563              	.Ldebug_macro12:
 6564 0000 0400     		.2byte	0x4
 6565 0002 00       		.byte	0
 6566 0003 06       		.byte	0x6
 6567 0004 7D       		.uleb128 0x7d
 6568 0005 07670000 		.4byte	.LASF511
 6569 0009 05       		.byte	0x5
 6570 000a 9001     		.uleb128 0x90
 6571 000c 2F390000 		.4byte	.LASF512
 6572 0010 06       		.byte	0x6
 6573 0011 9201     		.uleb128 0x92
 6574 0013 B27B0000 		.4byte	.LASF513
 6575 0017 05       		.byte	0x5
 6576 0018 9E01     		.uleb128 0x9e
 6577 001a 5D8E0000 		.4byte	.LASF514
 6578 001e 00       		.byte	0
 6579              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34,comdat
 6580              	.Ldebug_macro13:
 6581 0000 0400     		.2byte	0x4
 6582 0002 00       		.byte	0
 6583 0003 06       		.byte	0x6
 6584 0004 A101     		.uleb128 0xa1
 6585 0006 0D840000 		.4byte	.LASF483
 6586 000a 06       		.byte	0x6
 6587 000b EE01     		.uleb128 0xee
 6588 000d 1C480000 		.4byte	.LASF449
 6589 0011 06       		.byte	0x6
 6590 0012 DB02     		.uleb128 0x15b
 6591 0014 4A0C0000 		.4byte	.LASF466
 6592 0018 05       		.byte	0x5
 6593 0019 E002     		.uleb128 0x160
 6594 001b 6C270000 		.4byte	.LASF515
 6595 001f 06       		.byte	0x6
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 156


 6596 0020 E702     		.uleb128 0x167
 6597 0022 F2690000 		.4byte	.LASF516
 6598 0026 06       		.byte	0x6
 6599 0027 9103     		.uleb128 0x191
 6600 0029 5C110000 		.4byte	.LASF467
 6601 002d 05       		.byte	0x5
 6602 002e 9603     		.uleb128 0x196
 6603 0030 43350000 		.4byte	.LASF468
 6604 0034 06       		.byte	0x6
 6605 0035 9C03     		.uleb128 0x19c
 6606 0037 3E360000 		.4byte	.LASF469
 6607 003b 05       		.byte	0x5
 6608 003c A103     		.uleb128 0x1a1
 6609 003e 95400000 		.4byte	.LASF484
 6610 0042 00       		.byte	0
 6611              		.section	.debug_macro,"G",%progbits,wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098,comdat
 6612              	.Ldebug_macro14:
 6613 0000 0400     		.2byte	0x4
 6614 0002 00       		.byte	0
 6615 0003 05       		.byte	0x5
 6616 0004 B701     		.uleb128 0xb7
 6617 0006 BC1B0000 		.4byte	.LASF517
 6618 000a 05       		.byte	0x5
 6619 000b BA01     		.uleb128 0xba
 6620 000d F9550000 		.4byte	.LASF518
 6621 0011 05       		.byte	0x5
 6622 0012 BD01     		.uleb128 0xbd
 6623 0014 8F700000 		.4byte	.LASF519
 6624 0018 05       		.byte	0x5
 6625 0019 C001     		.uleb128 0xc0
 6626 001b 453F0000 		.4byte	.LASF520
 6627 001f 00       		.byte	0
 6628              		.section	.debug_macro,"G",%progbits,wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f,comdat
 6629              	.Ldebug_macro15:
 6630 0000 0400     		.2byte	0x4
 6631 0002 00       		.byte	0
 6632 0003 05       		.byte	0x5
 6633 0004 11       		.uleb128 0x11
 6634 0005 F92F0000 		.4byte	.LASF521
 6635 0009 05       		.byte	0x5
 6636 000a 15       		.uleb128 0x15
 6637 000b 57750000 		.4byte	.LASF522
 6638 000f 05       		.byte	0x5
 6639 0010 48       		.uleb128 0x48
 6640 0011 785A0000 		.4byte	.LASF523
 6641 0015 05       		.byte	0x5
 6642 0016 64       		.uleb128 0x64
 6643 0017 BE950000 		.4byte	.LASF524
 6644 001b 05       		.byte	0x5
 6645 001c 6A       		.uleb128 0x6a
 6646 001d E27E0000 		.4byte	.LASF525
 6647 0021 05       		.byte	0x5
 6648 0022 B201     		.uleb128 0xb2
 6649 0024 9F450000 		.4byte	.LASF526
 6650 0028 05       		.byte	0x5
 6651 0029 B802     		.uleb128 0x138
 6652 002b F5730000 		.4byte	.LASF527
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 157


 6653 002f 05       		.byte	0x5
 6654 0030 B902     		.uleb128 0x139
 6655 0032 14420000 		.4byte	.LASF528
 6656 0036 05       		.byte	0x5
 6657 0037 BA02     		.uleb128 0x13a
 6658 0039 801F0000 		.4byte	.LASF529
 6659 003d 05       		.byte	0x5
 6660 003e BB02     		.uleb128 0x13b
 6661 0040 4D820000 		.4byte	.LASF530
 6662 0044 05       		.byte	0x5
 6663 0045 BC02     		.uleb128 0x13c
 6664 0047 37730000 		.4byte	.LASF531
 6665 004b 05       		.byte	0x5
 6666 004c BD02     		.uleb128 0x13d
 6667 004e 3A550000 		.4byte	.LASF532
 6668 0052 05       		.byte	0x5
 6669 0053 BE02     		.uleb128 0x13e
 6670 0055 B7930000 		.4byte	.LASF533
 6671 0059 05       		.byte	0x5
 6672 005a CA02     		.uleb128 0x14a
 6673 005c 53100000 		.4byte	.LASF534
 6674 0060 05       		.byte	0x5
 6675 0061 CB02     		.uleb128 0x14b
 6676 0063 7D970000 		.4byte	.LASF535
 6677 0067 05       		.byte	0x5
 6678 0068 CC02     		.uleb128 0x14c
 6679 006a C4030000 		.4byte	.LASF536
 6680 006e 05       		.byte	0x5
 6681 006f F404     		.uleb128 0x274
 6682 0071 9A160000 		.4byte	.LASF537
 6683 0075 05       		.byte	0x5
 6684 0076 8A05     		.uleb128 0x28a
 6685 0078 DC570000 		.4byte	.LASF538
 6686 007c 05       		.byte	0x5
 6687 007d BA05     		.uleb128 0x2ba
 6688 007f CC7C0000 		.4byte	.LASF539
 6689 0083 05       		.byte	0x5
 6690 0084 C805     		.uleb128 0x2c8
 6691 0086 5A8C0000 		.4byte	.LASF540
 6692 008a 05       		.byte	0x5
 6693 008b C905     		.uleb128 0x2c9
 6694 008d 61110000 		.4byte	.LASF541
 6695 0091 05       		.byte	0x5
 6696 0092 CA05     		.uleb128 0x2ca
 6697 0094 A9700000 		.4byte	.LASF542
 6698 0098 05       		.byte	0x5
 6699 0099 CB05     		.uleb128 0x2cb
 6700 009b 964A0000 		.4byte	.LASF543
 6701 009f 05       		.byte	0x5
 6702 00a0 CC05     		.uleb128 0x2cc
 6703 00a2 2C340000 		.4byte	.LASF544
 6704 00a6 05       		.byte	0x5
 6705 00a7 CD05     		.uleb128 0x2cd
 6706 00a9 DC640000 		.4byte	.LASF545
 6707 00ad 05       		.byte	0x5
 6708 00ae CE05     		.uleb128 0x2ce
 6709 00b0 E4440000 		.4byte	.LASF546
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 158


 6710 00b4 05       		.byte	0x5
 6711 00b5 D005     		.uleb128 0x2d0
 6712 00b7 BC2E0000 		.4byte	.LASF547
 6713 00bb 05       		.byte	0x5
 6714 00bc D105     		.uleb128 0x2d1
 6715 00be EA3A0000 		.4byte	.LASF548
 6716 00c2 05       		.byte	0x5
 6717 00c3 D205     		.uleb128 0x2d2
 6718 00c5 C2140000 		.4byte	.LASF549
 6719 00c9 05       		.byte	0x5
 6720 00ca D305     		.uleb128 0x2d3
 6721 00cc 9A480000 		.4byte	.LASF550
 6722 00d0 05       		.byte	0x5
 6723 00d1 D405     		.uleb128 0x2d4
 6724 00d3 621E0000 		.4byte	.LASF551
 6725 00d7 05       		.byte	0x5
 6726 00d8 D505     		.uleb128 0x2d5
 6727 00da 660A0000 		.4byte	.LASF552
 6728 00de 05       		.byte	0x5
 6729 00df D605     		.uleb128 0x2d6
 6730 00e1 E91F0000 		.4byte	.LASF553
 6731 00e5 05       		.byte	0x5
 6732 00e6 D705     		.uleb128 0x2d7
 6733 00e8 336C0000 		.4byte	.LASF554
 6734 00ec 05       		.byte	0x5
 6735 00ed D805     		.uleb128 0x2d8
 6736 00ef E7060000 		.4byte	.LASF555
 6737 00f3 05       		.byte	0x5
 6738 00f4 D905     		.uleb128 0x2d9
 6739 00f6 BC6A0000 		.4byte	.LASF556
 6740 00fa 05       		.byte	0x5
 6741 00fb DA05     		.uleb128 0x2da
 6742 00fd 347C0000 		.4byte	.LASF557
 6743 0101 05       		.byte	0x5
 6744 0102 DB05     		.uleb128 0x2db
 6745 0104 F6280000 		.4byte	.LASF558
 6746 0108 05       		.byte	0x5
 6747 0109 DC05     		.uleb128 0x2dc
 6748 010b CA0A0000 		.4byte	.LASF559
 6749 010f 05       		.byte	0x5
 6750 0110 DD05     		.uleb128 0x2dd
 6751 0112 F1370000 		.4byte	.LASF560
 6752 0116 05       		.byte	0x5
 6753 0117 DE05     		.uleb128 0x2de
 6754 0119 6B370000 		.4byte	.LASF561
 6755 011d 05       		.byte	0x5
 6756 011e DF05     		.uleb128 0x2df
 6757 0120 73680000 		.4byte	.LASF562
 6758 0124 05       		.byte	0x5
 6759 0125 E005     		.uleb128 0x2e0
 6760 0127 416A0000 		.4byte	.LASF563
 6761 012b 05       		.byte	0x5
 6762 012c E105     		.uleb128 0x2e1
 6763 012e 2E270000 		.4byte	.LASF564
 6764 0132 05       		.byte	0x5
 6765 0133 E205     		.uleb128 0x2e2
 6766 0135 A34D0000 		.4byte	.LASF565
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 159


 6767 0139 05       		.byte	0x5
 6768 013a E305     		.uleb128 0x2e3
 6769 013c CE6D0000 		.4byte	.LASF566
 6770 0140 05       		.byte	0x5
 6771 0141 E405     		.uleb128 0x2e4
 6772 0143 94200000 		.4byte	.LASF567
 6773 0147 05       		.byte	0x5
 6774 0148 E505     		.uleb128 0x2e5
 6775 014a F84E0000 		.4byte	.LASF568
 6776 014e 05       		.byte	0x5
 6777 014f E605     		.uleb128 0x2e6
 6778 0151 9E920000 		.4byte	.LASF569
 6779 0155 05       		.byte	0x5
 6780 0156 E705     		.uleb128 0x2e7
 6781 0158 25010000 		.4byte	.LASF570
 6782 015c 05       		.byte	0x5
 6783 015d EB05     		.uleb128 0x2eb
 6784 015f DF600000 		.4byte	.LASF571
 6785 0163 05       		.byte	0x5
 6786 0164 F305     		.uleb128 0x2f3
 6787 0166 F6030000 		.4byte	.LASF572
 6788 016a 05       		.byte	0x5
 6789 016b FB05     		.uleb128 0x2fb
 6790 016d C1810000 		.4byte	.LASF573
 6791 0171 05       		.byte	0x5
 6792 0172 8B06     		.uleb128 0x30b
 6793 0174 6B290000 		.4byte	.LASF574
 6794 0178 05       		.byte	0x5
 6795 0179 8E06     		.uleb128 0x30e
 6796 017b 32780000 		.4byte	.LASF575
 6797 017f 05       		.byte	0x5
 6798 0180 9406     		.uleb128 0x314
 6799 0182 7F010000 		.4byte	.LASF576
 6800 0186 00       		.byte	0
 6801              		.section	.debug_macro,"G",%progbits,wm4.cdefs.h.47.d0af77d4010113800282e6476aca9724,comdat
 6802              	.Ldebug_macro16:
 6803 0000 0400     		.2byte	0x4
 6804 0002 00       		.byte	0
 6805 0003 05       		.byte	0x5
 6806 0004 2F       		.uleb128 0x2f
 6807 0005 18220000 		.4byte	.LASF578
 6808 0009 05       		.byte	0x5
 6809 000a 30       		.uleb128 0x30
 6810 000b 31670000 		.4byte	.LASF579
 6811 000f 05       		.byte	0x5
 6812 0010 31       		.uleb128 0x31
 6813 0011 DD4E0000 		.4byte	.LASF580
 6814 0015 05       		.byte	0x5
 6815 0016 34       		.uleb128 0x34
 6816 0017 110C0000 		.4byte	.LASF581
 6817 001b 05       		.byte	0x5
 6818 001c 37       		.uleb128 0x37
 6819 001d 3F1E0000 		.4byte	.LASF582
 6820 0021 05       		.byte	0x5
 6821 0022 38       		.uleb128 0x38
 6822 0023 AE8F0000 		.4byte	.LASF583
 6823 0027 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 160


 6824 0028 3A       		.uleb128 0x3a
 6825 0029 2E3E0000 		.4byte	.LASF584
 6826 002d 05       		.byte	0x5
 6827 002e 3B       		.uleb128 0x3b
 6828 002f 592D0000 		.4byte	.LASF585
 6829 0033 05       		.byte	0x5
 6830 0034 3C       		.uleb128 0x3c
 6831 0035 39210000 		.4byte	.LASF586
 6832 0039 05       		.byte	0x5
 6833 003a 3D       		.uleb128 0x3d
 6834 003b 44850000 		.4byte	.LASF587
 6835 003f 05       		.byte	0x5
 6836 0040 40       		.uleb128 0x40
 6837 0041 A10D0000 		.4byte	.LASF588
 6838 0045 05       		.byte	0x5
 6839 0046 41       		.uleb128 0x41
 6840 0047 6F090000 		.4byte	.LASF589
 6841 004b 05       		.byte	0x5
 6842 004c 42       		.uleb128 0x42
 6843 004d D8750000 		.4byte	.LASF590
 6844 0051 05       		.byte	0x5
 6845 0052 4C       		.uleb128 0x4c
 6846 0053 3E110000 		.4byte	.LASF591
 6847 0057 05       		.byte	0x5
 6848 0058 4F       		.uleb128 0x4f
 6849 0059 B83A0000 		.4byte	.LASF592
 6850 005d 05       		.byte	0x5
 6851 005e 55       		.uleb128 0x55
 6852 005f DD7B0000 		.4byte	.LASF593
 6853 0063 05       		.byte	0x5
 6854 0064 5C       		.uleb128 0x5c
 6855 0065 AC640000 		.4byte	.LASF594
 6856 0069 05       		.byte	0x5
 6857 006a 5D       		.uleb128 0x5d
 6858 006b B17A0000 		.4byte	.LASF595
 6859 006f 05       		.byte	0x5
 6860 0070 69       		.uleb128 0x69
 6861 0071 99310000 		.4byte	.LASF596
 6862 0075 05       		.byte	0x5
 6863 0076 6A       		.uleb128 0x6a
 6864 0077 7E430000 		.4byte	.LASF597
 6865 007b 05       		.byte	0x5
 6866 007c 6E       		.uleb128 0x6e
 6867 007d 9F040000 		.4byte	.LASF598
 6868 0081 05       		.byte	0x5
 6869 0082 6F       		.uleb128 0x6f
 6870 0083 B6790000 		.4byte	.LASF599
 6871 0087 05       		.byte	0x5
 6872 0088 70       		.uleb128 0x70
 6873 0089 18000000 		.4byte	.LASF600
 6874 008d 05       		.byte	0x5
 6875 008e 73       		.uleb128 0x73
 6876 008f 20290000 		.4byte	.LASF601
 6877 0093 05       		.byte	0x5
 6878 0094 76       		.uleb128 0x76
 6879 0095 1D130000 		.4byte	.LASF602
 6880 0099 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 161


 6881 009a 7D       		.uleb128 0x7d
 6882 009b 822E0000 		.4byte	.LASF603
 6883 009f 05       		.byte	0x5
 6884 00a0 7E       		.uleb128 0x7e
 6885 00a1 0F5D0000 		.4byte	.LASF604
 6886 00a5 05       		.byte	0x5
 6887 00a6 7F       		.uleb128 0x7f
 6888 00a7 308A0000 		.4byte	.LASF605
 6889 00ab 05       		.byte	0x5
 6890 00ac 8301     		.uleb128 0x83
 6891 00ae F4640000 		.4byte	.LASF606
 6892 00b2 05       		.byte	0x5
 6893 00b3 8A01     		.uleb128 0x8a
 6894 00b5 F9710000 		.4byte	.LASF607
 6895 00b9 05       		.byte	0x5
 6896 00ba 8E01     		.uleb128 0x8e
 6897 00bc 815E0000 		.4byte	.LASF608
 6898 00c0 05       		.byte	0x5
 6899 00c1 8F01     		.uleb128 0x8f
 6900 00c3 E2210000 		.4byte	.LASF609
 6901 00c7 05       		.byte	0x5
 6902 00c8 9201     		.uleb128 0x92
 6903 00ca 965C0000 		.4byte	.LASF610
 6904 00ce 05       		.byte	0x5
 6905 00cf 9501     		.uleb128 0x95
 6906 00d1 E7300000 		.4byte	.LASF611
 6907 00d5 05       		.byte	0x5
 6908 00d6 9601     		.uleb128 0x96
 6909 00d8 286A0000 		.4byte	.LASF612
 6910 00dc 05       		.byte	0x5
 6911 00dd 9701     		.uleb128 0x97
 6912 00df 0A7F0000 		.4byte	.LASF613
 6913 00e3 05       		.byte	0x5
 6914 00e4 9901     		.uleb128 0x99
 6915 00e6 D9420000 		.4byte	.LASF614
 6916 00ea 05       		.byte	0x5
 6917 00eb 9A01     		.uleb128 0x9a
 6918 00ed 8F8B0000 		.4byte	.LASF615
 6919 00f1 05       		.byte	0x5
 6920 00f2 9C01     		.uleb128 0x9c
 6921 00f4 B58C0000 		.4byte	.LASF616
 6922 00f8 05       		.byte	0x5
 6923 00f9 9E01     		.uleb128 0x9e
 6924 00fb 1D1A0000 		.4byte	.LASF617
 6925 00ff 05       		.byte	0x5
 6926 0100 AF01     		.uleb128 0xaf
 6927 0102 861A0000 		.4byte	.LASF618
 6928 0106 05       		.byte	0x5
 6929 0107 B001     		.uleb128 0xb0
 6930 0109 4E0E0000 		.4byte	.LASF619
 6931 010d 05       		.byte	0x5
 6932 010e B101     		.uleb128 0xb1
 6933 0110 5E040000 		.4byte	.LASF620
 6934 0114 05       		.byte	0x5
 6935 0115 B201     		.uleb128 0xb2
 6936 0117 615D0000 		.4byte	.LASF621
 6937 011b 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 162


 6938 011c B301     		.uleb128 0xb3
 6939 011e 402D0000 		.4byte	.LASF622
 6940 0122 05       		.byte	0x5
 6941 0123 B501     		.uleb128 0xb5
 6942 0125 C3190000 		.4byte	.LASF623
 6943 0129 05       		.byte	0x5
 6944 012a B601     		.uleb128 0xb6
 6945 012c 7D6A0000 		.4byte	.LASF624
 6946 0130 05       		.byte	0x5
 6947 0131 B701     		.uleb128 0xb7
 6948 0133 985A0000 		.4byte	.LASF625
 6949 0137 05       		.byte	0x5
 6950 0138 EF01     		.uleb128 0xef
 6951 013a D8520000 		.4byte	.LASF626
 6952 013e 05       		.byte	0x5
 6953 013f FC01     		.uleb128 0xfc
 6954 0141 40630000 		.4byte	.LASF627
 6955 0145 05       		.byte	0x5
 6956 0146 FD01     		.uleb128 0xfd
 6957 0148 4D410000 		.4byte	.LASF628
 6958 014c 05       		.byte	0x5
 6959 014d FE01     		.uleb128 0xfe
 6960 014f A2880000 		.4byte	.LASF629
 6961 0153 05       		.byte	0x5
 6962 0154 FF01     		.uleb128 0xff
 6963 0156 10670000 		.4byte	.LASF630
 6964 015a 05       		.byte	0x5
 6965 015b 8002     		.uleb128 0x100
 6966 015d 5E960000 		.4byte	.LASF631
 6967 0161 05       		.byte	0x5
 6968 0162 8102     		.uleb128 0x101
 6969 0164 C3080000 		.4byte	.LASF632
 6970 0168 05       		.byte	0x5
 6971 0169 8202     		.uleb128 0x102
 6972 016b 8B3A0000 		.4byte	.LASF633
 6973 016f 05       		.byte	0x5
 6974 0170 8502     		.uleb128 0x105
 6975 0172 93670000 		.4byte	.LASF634
 6976 0176 05       		.byte	0x5
 6977 0177 8A02     		.uleb128 0x10a
 6978 0179 4B1F0000 		.4byte	.LASF635
 6979 017d 05       		.byte	0x5
 6980 017e A002     		.uleb128 0x120
 6981 0180 B0690000 		.4byte	.LASF636
 6982 0184 05       		.byte	0x5
 6983 0185 A702     		.uleb128 0x127
 6984 0187 B9910000 		.4byte	.LASF637
 6985 018b 05       		.byte	0x5
 6986 018c AF02     		.uleb128 0x12f
 6987 018e 438F0000 		.4byte	.LASF638
 6988 0192 05       		.byte	0x5
 6989 0193 B502     		.uleb128 0x135
 6990 0195 F5590000 		.4byte	.LASF639
 6991 0199 05       		.byte	0x5
 6992 019a D202     		.uleb128 0x152
 6993 019c 98350000 		.4byte	.LASF640
 6994 01a0 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 163


 6995 01a1 E602     		.uleb128 0x166
 6996 01a3 D27A0000 		.4byte	.LASF641
 6997 01a7 05       		.byte	0x5
 6998 01a8 EC02     		.uleb128 0x16c
 6999 01aa EC5B0000 		.4byte	.LASF642
 7000 01ae 05       		.byte	0x5
 7001 01af ED02     		.uleb128 0x16d
 7002 01b1 56310000 		.4byte	.LASF643
 7003 01b5 05       		.byte	0x5
 7004 01b6 F402     		.uleb128 0x174
 7005 01b8 981E0000 		.4byte	.LASF644
 7006 01bc 05       		.byte	0x5
 7007 01bd FA02     		.uleb128 0x17a
 7008 01bf 15250000 		.4byte	.LASF645
 7009 01c3 05       		.byte	0x5
 7010 01c4 8003     		.uleb128 0x180
 7011 01c6 11930000 		.4byte	.LASF646
 7012 01ca 05       		.byte	0x5
 7013 01cb 8103     		.uleb128 0x181
 7014 01cd 963C0000 		.4byte	.LASF647
 7015 01d1 05       		.byte	0x5
 7016 01d2 8803     		.uleb128 0x188
 7017 01d4 B27F0000 		.4byte	.LASF648
 7018 01d8 05       		.byte	0x5
 7019 01d9 8903     		.uleb128 0x189
 7020 01db 910C0000 		.4byte	.LASF649
 7021 01df 05       		.byte	0x5
 7022 01e0 9003     		.uleb128 0x190
 7023 01e2 642B0000 		.4byte	.LASF650
 7024 01e6 05       		.byte	0x5
 7025 01e7 9603     		.uleb128 0x196
 7026 01e9 EF870000 		.4byte	.LASF651
 7027 01ed 05       		.byte	0x5
 7028 01ee A803     		.uleb128 0x1a8
 7029 01f0 B2530000 		.4byte	.LASF652
 7030 01f4 05       		.byte	0x5
 7031 01f5 CB03     		.uleb128 0x1cb
 7032 01f7 5D200000 		.4byte	.LASF653
 7033 01fb 05       		.byte	0x5
 7034 01fc CC03     		.uleb128 0x1cc
 7035 01fe BE530000 		.4byte	.LASF654
 7036 0202 05       		.byte	0x5
 7037 0203 D303     		.uleb128 0x1d3
 7038 0205 92610000 		.4byte	.LASF655
 7039 0209 05       		.byte	0x5
 7040 020a D403     		.uleb128 0x1d4
 7041 020c BB290000 		.4byte	.LASF656
 7042 0210 05       		.byte	0x5
 7043 0211 D503     		.uleb128 0x1d5
 7044 0213 54260000 		.4byte	.LASF657
 7045 0217 05       		.byte	0x5
 7046 0218 DC03     		.uleb128 0x1dc
 7047 021a C9280000 		.4byte	.LASF658
 7048 021e 05       		.byte	0x5
 7049 021f DD03     		.uleb128 0x1dd
 7050 0221 A2820000 		.4byte	.LASF659
 7051 0225 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 164


 7052 0226 E703     		.uleb128 0x1e7
 7053 0228 4A6E0000 		.4byte	.LASF660
 7054 022c 05       		.byte	0x5
 7055 022d FD03     		.uleb128 0x1fd
 7056 022f 437F0000 		.4byte	.LASF661
 7057 0233 05       		.byte	0x5
 7058 0234 FF03     		.uleb128 0x1ff
 7059 0236 29890000 		.4byte	.LASF662
 7060 023a 05       		.byte	0x5
 7061 023b 8104     		.uleb128 0x201
 7062 023d 7B910000 		.4byte	.LASF663
 7063 0241 05       		.byte	0x5
 7064 0242 8204     		.uleb128 0x202
 7065 0244 0B1B0000 		.4byte	.LASF664
 7066 0248 05       		.byte	0x5
 7067 0249 8404     		.uleb128 0x204
 7068 024b 914B0000 		.4byte	.LASF665
 7069 024f 05       		.byte	0x5
 7070 0250 9004     		.uleb128 0x210
 7071 0252 F2810000 		.4byte	.LASF666
 7072 0256 05       		.byte	0x5
 7073 0257 9E04     		.uleb128 0x21e
 7074 0259 3E620000 		.4byte	.LASF667
 7075 025d 05       		.byte	0x5
 7076 025e A304     		.uleb128 0x223
 7077 0260 6B870000 		.4byte	.LASF668
 7078 0264 05       		.byte	0x5
 7079 0265 A804     		.uleb128 0x228
 7080 0267 A0100000 		.4byte	.LASF669
 7081 026b 05       		.byte	0x5
 7082 026c AB04     		.uleb128 0x22b
 7083 026e D1460000 		.4byte	.LASF670
 7084 0272 05       		.byte	0x5
 7085 0273 AF04     		.uleb128 0x22f
 7086 0275 4D8A0000 		.4byte	.LASF671
 7087 0279 05       		.byte	0x5
 7088 027a B104     		.uleb128 0x231
 7089 027c 5A230000 		.4byte	.LASF672
 7090 0280 05       		.byte	0x5
 7091 0281 D404     		.uleb128 0x254
 7092 0283 A75D0000 		.4byte	.LASF673
 7093 0287 05       		.byte	0x5
 7094 0288 D804     		.uleb128 0x258
 7095 028a 3F790000 		.4byte	.LASF674
 7096 028e 05       		.byte	0x5
 7097 028f DC04     		.uleb128 0x25c
 7098 0291 ED050000 		.4byte	.LASF675
 7099 0295 05       		.byte	0x5
 7100 0296 E004     		.uleb128 0x260
 7101 0298 F1290000 		.4byte	.LASF676
 7102 029c 05       		.byte	0x5
 7103 029d E404     		.uleb128 0x264
 7104 029f 37610000 		.4byte	.LASF677
 7105 02a3 05       		.byte	0x5
 7106 02a4 E804     		.uleb128 0x268
 7107 02a6 BF240000 		.4byte	.LASF678
 7108 02aa 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 165


 7109 02ab EC04     		.uleb128 0x26c
 7110 02ad E2850000 		.4byte	.LASF679
 7111 02b1 05       		.byte	0x5
 7112 02b2 F004     		.uleb128 0x270
 7113 02b4 CE1C0000 		.4byte	.LASF680
 7114 02b8 05       		.byte	0x5
 7115 02b9 8105     		.uleb128 0x281
 7116 02bb 82600000 		.4byte	.LASF681
 7117 02bf 05       		.byte	0x5
 7118 02c0 8205     		.uleb128 0x282
 7119 02c2 7E920000 		.4byte	.LASF682
 7120 02c6 05       		.byte	0x5
 7121 02c7 9405     		.uleb128 0x294
 7122 02c9 17800000 		.4byte	.LASF683
 7123 02cd 05       		.byte	0x5
 7124 02ce 9805     		.uleb128 0x298
 7125 02d0 2C7A0000 		.4byte	.LASF684
 7126 02d4 05       		.byte	0x5
 7127 02d5 9B05     		.uleb128 0x29b
 7128 02d7 F0080000 		.4byte	.LASF685
 7129 02db 05       		.byte	0x5
 7130 02dc 9D05     		.uleb128 0x29d
 7131 02de 50880000 		.4byte	.LASF686
 7132 02e2 05       		.byte	0x5
 7133 02e3 A105     		.uleb128 0x2a1
 7134 02e5 176D0000 		.4byte	.LASF687
 7135 02e9 05       		.byte	0x5
 7136 02ea A305     		.uleb128 0x2a3
 7137 02ec 2B380000 		.4byte	.LASF688
 7138 02f0 05       		.byte	0x5
 7139 02f1 A705     		.uleb128 0x2a7
 7140 02f3 96590000 		.4byte	.LASF689
 7141 02f7 05       		.byte	0x5
 7142 02f8 AA05     		.uleb128 0x2aa
 7143 02fa 3E5F0000 		.4byte	.LASF690
 7144 02fe 05       		.byte	0x5
 7145 02ff AC05     		.uleb128 0x2ac
 7146 0301 D0960000 		.4byte	.LASF691
 7147 0305 05       		.byte	0x5
 7148 0306 B005     		.uleb128 0x2b0
 7149 0308 E6720000 		.4byte	.LASF692
 7150 030c 05       		.byte	0x5
 7151 030d B205     		.uleb128 0x2b2
 7152 030f B82B0000 		.4byte	.LASF693
 7153 0313 05       		.byte	0x5
 7154 0314 B405     		.uleb128 0x2b4
 7155 0316 31560000 		.4byte	.LASF694
 7156 031a 05       		.byte	0x5
 7157 031b B805     		.uleb128 0x2b8
 7158 031d 046F0000 		.4byte	.LASF695
 7159 0321 05       		.byte	0x5
 7160 0322 BB05     		.uleb128 0x2bb
 7161 0324 9D7C0000 		.4byte	.LASF696
 7162 0328 05       		.byte	0x5
 7163 0329 BC05     		.uleb128 0x2bc
 7164 032b 687C0000 		.4byte	.LASF697
 7165 032f 00       		.byte	0
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 166


 7166              		.section	.debug_macro,"G",%progbits,wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d,comdat
 7167              	.Ldebug_macro17:
 7168 0000 0400     		.2byte	0x4
 7169 0002 00       		.byte	0
 7170 0003 05       		.byte	0x5
 7171 0004 08       		.uleb128 0x8
 7172 0005 01300000 		.4byte	.LASF699
 7173 0009 06       		.byte	0x6
 7174 000a 0D       		.uleb128 0xd
 7175 000b 7F560000 		.4byte	.LASF700
 7176 000f 05       		.byte	0x5
 7177 0010 10       		.uleb128 0x10
 7178 0011 6B700000 		.4byte	.LASF701
 7179 0015 00       		.byte	0
 7180              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.56.f7bb76d8eb43fb7e79a949819dbf4bda,comdat
 7181              	.Ldebug_macro18:
 7182 0000 0400     		.2byte	0x4
 7183 0002 00       		.byte	0
 7184 0003 05       		.byte	0x5
 7185 0004 38       		.uleb128 0x38
 7186 0005 0E010000 		.4byte	.LASF702
 7187 0009 05       		.byte	0x5
 7188 000a 3C       		.uleb128 0x3c
 7189 000b CC930000 		.4byte	.LASF703
 7190 000f 05       		.byte	0x5
 7191 0010 3D       		.uleb128 0x3d
 7192 0011 348F0000 		.4byte	.LASF704
 7193 0015 05       		.byte	0x5
 7194 0016 3F       		.uleb128 0x3f
 7195 0017 5E3D0000 		.4byte	.LASF705
 7196 001b 05       		.byte	0x5
 7197 001c 43       		.uleb128 0x43
 7198 001d 114C0000 		.4byte	.LASF706
 7199 0021 05       		.byte	0x5
 7200 0022 A301     		.uleb128 0xa3
 7201 0024 C28A0000 		.4byte	.LASF707
 7202 0028 00       		.byte	0
 7203              		.section	.debug_macro,"G",%progbits,wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd,comdat
 7204              	.Ldebug_macro19:
 7205 0000 0400     		.2byte	0x4
 7206 0002 00       		.byte	0
 7207 0003 05       		.byte	0x5
 7208 0004 08       		.uleb128 0x8
 7209 0005 1E7C0000 		.4byte	.LASF708
 7210 0009 05       		.byte	0x5
 7211 000a 0F       		.uleb128 0xf
 7212 000b B4270000 		.4byte	.LASF429
 7213 000f 05       		.byte	0x5
 7214 0010 10       		.uleb128 0x10
 7215 0011 EA3F0000 		.4byte	.LASF431
 7216 0015 00       		.byte	0
 7217              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.161.19e15733342b50ead2919490b095303e,comdat
 7218              	.Ldebug_macro20:
 7219 0000 0400     		.2byte	0x4
 7220 0002 00       		.byte	0
 7221 0003 06       		.byte	0x6
 7222 0004 A101     		.uleb128 0xa1
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 167


 7223 0006 0D840000 		.4byte	.LASF483
 7224 000a 06       		.byte	0x6
 7225 000b EE01     		.uleb128 0xee
 7226 000d 1C480000 		.4byte	.LASF449
 7227 0011 06       		.byte	0x6
 7228 0012 DB02     		.uleb128 0x15b
 7229 0014 4A0C0000 		.4byte	.LASF466
 7230 0018 06       		.byte	0x6
 7231 0019 9103     		.uleb128 0x191
 7232 001b 5C110000 		.4byte	.LASF467
 7233 001f 05       		.byte	0x5
 7234 0020 9603     		.uleb128 0x196
 7235 0022 43350000 		.4byte	.LASF468
 7236 0026 06       		.byte	0x6
 7237 0027 9C03     		.uleb128 0x19c
 7238 0029 3E360000 		.4byte	.LASF469
 7239 002d 05       		.byte	0x5
 7240 002e A103     		.uleb128 0x1a1
 7241 0030 95400000 		.4byte	.LASF484
 7242 0034 00       		.byte	0
 7243              		.section	.debug_macro,"G",%progbits,wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b,comdat
 7244              	.Ldebug_macro21:
 7245 0000 0400     		.2byte	0x4
 7246 0002 00       		.byte	0
 7247 0003 05       		.byte	0x5
 7248 0004 0A       		.uleb128 0xa
 7249 0005 F68C0000 		.4byte	.LASF713
 7250 0009 05       		.byte	0x5
 7251 000a 10       		.uleb128 0x10
 7252 000b 3D4F0000 		.4byte	.LASF714
 7253 000f 05       		.byte	0x5
 7254 0010 1A       		.uleb128 0x1a
 7255 0011 496B0000 		.4byte	.LASF715
 7256 0015 05       		.byte	0x5
 7257 0016 21       		.uleb128 0x21
 7258 0017 092D0000 		.4byte	.LASF716
 7259 001b 06       		.byte	0x6
 7260 001c 38       		.uleb128 0x38
 7261 001d 05990000 		.4byte	.LASF717
 7262 0021 06       		.byte	0x6
 7263 0022 39       		.uleb128 0x39
 7264 0023 B27B0000 		.4byte	.LASF513
 7265 0027 06       		.byte	0x6
 7266 0028 3A       		.uleb128 0x3a
 7267 0029 F0250000 		.4byte	.LASF718
 7268 002d 06       		.byte	0x6
 7269 002e 3B       		.uleb128 0x3b
 7270 002f D9600000 		.4byte	.LASF719
 7271 0033 02       		.byte	0x2
 7272 0034 3C       		.uleb128 0x3c
 7273 0035 696E7400 		.ascii	"int\000"
 7274 0039 06       		.byte	0x6
 7275 003a 3D       		.uleb128 0x3d
 7276 003b 27970000 		.4byte	.LASF720
 7277 003f 06       		.byte	0x6
 7278 0040 3E       		.uleb128 0x3e
 7279 0041 8D6A0000 		.4byte	.LASF721
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 168


 7280 0045 05       		.byte	0x5
 7281 0046 3F       		.uleb128 0x3f
 7282 0047 D1270000 		.4byte	.LASF722
 7283 004b 05       		.byte	0x5
 7284 004c 40       		.uleb128 0x40
 7285 004d E2410000 		.4byte	.LASF723
 7286 0051 05       		.byte	0x5
 7287 0052 41       		.uleb128 0x41
 7288 0053 77560000 		.4byte	.LASF724
 7289 0057 05       		.byte	0x5
 7290 0058 42       		.uleb128 0x42
 7291 0059 8B620000 		.4byte	.LASF725
 7292 005d 05       		.byte	0x5
 7293 005e 43       		.uleb128 0x43
 7294 005f B4000000 		.4byte	.LASF726
 7295 0063 05       		.byte	0x5
 7296 0064 44       		.uleb128 0x44
 7297 0065 443E0000 		.4byte	.LASF727
 7298 0069 05       		.byte	0x5
 7299 006a 45       		.uleb128 0x45
 7300 006b 8B930000 		.4byte	.LASF728
 7301 006f 05       		.byte	0x5
 7302 0070 4E       		.uleb128 0x4e
 7303 0071 B8390000 		.4byte	.LASF729
 7304 0075 05       		.byte	0x5
 7305 0076 55       		.uleb128 0x55
 7306 0077 91980000 		.4byte	.LASF730
 7307 007b 05       		.byte	0x5
 7308 007c 5D       		.uleb128 0x5d
 7309 007d 92090000 		.4byte	.LASF731
 7310 0081 05       		.byte	0x5
 7311 0082 68       		.uleb128 0x68
 7312 0083 2E550000 		.4byte	.LASF732
 7313 0087 05       		.byte	0x5
 7314 0088 73       		.uleb128 0x73
 7315 0089 998A0000 		.4byte	.LASF733
 7316 008d 05       		.byte	0x5
 7317 008e 7C       		.uleb128 0x7c
 7318 008f EF920000 		.4byte	.LASF734
 7319 0093 05       		.byte	0x5
 7320 0094 8301     		.uleb128 0x83
 7321 0096 4E860000 		.4byte	.LASF735
 7322 009a 05       		.byte	0x5
 7323 009b 8C01     		.uleb128 0x8c
 7324 009d 231C0000 		.4byte	.LASF736
 7325 00a1 05       		.byte	0x5
 7326 00a2 9301     		.uleb128 0x93
 7327 00a4 AB430000 		.4byte	.LASF737
 7328 00a8 05       		.byte	0x5
 7329 00a9 9E01     		.uleb128 0x9e
 7330 00ab C1410000 		.4byte	.LASF738
 7331 00af 05       		.byte	0x5
 7332 00b0 A201     		.uleb128 0xa2
 7333 00b2 29520000 		.4byte	.LASF739
 7334 00b6 05       		.byte	0x5
 7335 00b7 AD01     		.uleb128 0xad
 7336 00b9 357F0000 		.4byte	.LASF740
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 169


 7337 00bd 05       		.byte	0x5
 7338 00be B801     		.uleb128 0xb8
 7339 00c0 0F120000 		.4byte	.LASF741
 7340 00c4 05       		.byte	0x5
 7341 00c5 C101     		.uleb128 0xc1
 7342 00c7 DE5E0000 		.4byte	.LASF742
 7343 00cb 06       		.byte	0x6
 7344 00cc C301     		.uleb128 0xc3
 7345 00ce 05990000 		.4byte	.LASF717
 7346 00d2 06       		.byte	0x6
 7347 00d3 C401     		.uleb128 0xc4
 7348 00d5 B27B0000 		.4byte	.LASF513
 7349 00d9 06       		.byte	0x6
 7350 00da C501     		.uleb128 0xc5
 7351 00dc F0250000 		.4byte	.LASF718
 7352 00e0 06       		.byte	0x6
 7353 00e1 C601     		.uleb128 0xc6
 7354 00e3 D9600000 		.4byte	.LASF719
 7355 00e7 02       		.byte	0x2
 7356 00e8 C701     		.uleb128 0xc7
 7357 00ea 696E7400 		.ascii	"int\000"
 7358 00ee 06       		.byte	0x6
 7359 00ef C801     		.uleb128 0xc8
 7360 00f1 8D6A0000 		.4byte	.LASF721
 7361 00f5 06       		.byte	0x6
 7362 00f6 CD01     		.uleb128 0xcd
 7363 00f8 27970000 		.4byte	.LASF720
 7364 00fc 00       		.byte	0
 7365              		.section	.debug_macro,"G",%progbits,wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9,comdat
 7366              	.Ldebug_macro22:
 7367 0000 0400     		.2byte	0x4
 7368 0002 00       		.byte	0
 7369 0003 05       		.byte	0x5
 7370 0004 0A       		.uleb128 0xa
 7371 0005 DA3F0000 		.4byte	.LASF743
 7372 0009 05       		.byte	0x5
 7373 000a 15       		.uleb128 0x15
 7374 000b E2860000 		.4byte	.LASF744
 7375 000f 05       		.byte	0x5
 7376 0010 19       		.uleb128 0x19
 7377 0011 0D6C0000 		.4byte	.LASF745
 7378 0015 05       		.byte	0x5
 7379 0016 1B       		.uleb128 0x1b
 7380 0017 376E0000 		.4byte	.LASF746
 7381 001b 05       		.byte	0x5
 7382 001c 21       		.uleb128 0x21
 7383 001d 06900000 		.4byte	.LASF747
 7384 0021 05       		.byte	0x5
 7385 0022 25       		.uleb128 0x25
 7386 0023 EA0F0000 		.4byte	.LASF748
 7387 0027 05       		.byte	0x5
 7388 0028 27       		.uleb128 0x27
 7389 0029 AC440000 		.4byte	.LASF749
 7390 002d 05       		.byte	0x5
 7391 002e 2D       		.uleb128 0x2d
 7392 002f 8B030000 		.4byte	.LASF750
 7393 0033 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 170


 7394 0034 31       		.uleb128 0x31
 7395 0035 1E030000 		.4byte	.LASF751
 7396 0039 05       		.byte	0x5
 7397 003a 33       		.uleb128 0x33
 7398 003b AA3D0000 		.4byte	.LASF752
 7399 003f 05       		.byte	0x5
 7400 0040 39       		.uleb128 0x39
 7401 0041 4D6F0000 		.4byte	.LASF753
 7402 0045 05       		.byte	0x5
 7403 0046 3D       		.uleb128 0x3d
 7404 0047 F6510000 		.4byte	.LASF754
 7405 004b 05       		.byte	0x5
 7406 004c 3F       		.uleb128 0x3f
 7407 004d A3850000 		.4byte	.LASF755
 7408 0051 05       		.byte	0x5
 7409 0052 44       		.uleb128 0x44
 7410 0053 D1450000 		.4byte	.LASF756
 7411 0057 05       		.byte	0x5
 7412 0058 49       		.uleb128 0x49
 7413 0059 796C0000 		.4byte	.LASF757
 7414 005d 00       		.byte	0
 7415              		.section	.debug_macro,"G",%progbits,wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281,comdat
 7416              	.Ldebug_macro23:
 7417 0000 0400     		.2byte	0x4
 7418 0002 00       		.byte	0
 7419 0003 05       		.byte	0x5
 7420 0004 17       		.uleb128 0x17
 7421 0005 72930000 		.4byte	.LASF758
 7422 0009 05       		.byte	0x5
 7423 000a 1D       		.uleb128 0x1d
 7424 000b 1E990000 		.4byte	.LASF759
 7425 000f 05       		.byte	0x5
 7426 0010 23       		.uleb128 0x23
 7427 0011 AA360000 		.4byte	.LASF760
 7428 0015 05       		.byte	0x5
 7429 0016 29       		.uleb128 0x29
 7430 0017 97340000 		.4byte	.LASF761
 7431 001b 05       		.byte	0x5
 7432 001c 35       		.uleb128 0x35
 7433 001d 3F390000 		.4byte	.LASF762
 7434 0021 05       		.byte	0x5
 7435 0022 3F       		.uleb128 0x3f
 7436 0023 CA540000 		.4byte	.LASF763
 7437 0027 05       		.byte	0x5
 7438 0028 49       		.uleb128 0x49
 7439 0029 AC0D0000 		.4byte	.LASF764
 7440 002d 05       		.byte	0x5
 7441 002e 53       		.uleb128 0x53
 7442 002f 29240000 		.4byte	.LASF765
 7443 0033 05       		.byte	0x5
 7444 0034 9301     		.uleb128 0x93
 7445 0036 C8970000 		.4byte	.LASF766
 7446 003a 05       		.byte	0x5
 7447 003b 9401     		.uleb128 0x94
 7448 003d 72060000 		.4byte	.LASF767
 7449 0041 05       		.byte	0x5
 7450 0042 9501     		.uleb128 0x95
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 171


 7451 0044 AC180000 		.4byte	.LASF768
 7452 0048 05       		.byte	0x5
 7453 0049 AB01     		.uleb128 0xab
 7454 004b 0F640000 		.4byte	.LASF769
 7455 004f 05       		.byte	0x5
 7456 0050 AC01     		.uleb128 0xac
 7457 0052 00000000 		.4byte	.LASF770
 7458 0056 05       		.byte	0x5
 7459 0057 AD01     		.uleb128 0xad
 7460 0059 3E930000 		.4byte	.LASF771
 7461 005d 05       		.byte	0x5
 7462 005e B501     		.uleb128 0xb5
 7463 0060 07850000 		.4byte	.LASF772
 7464 0064 05       		.byte	0x5
 7465 0065 B601     		.uleb128 0xb6
 7466 0067 8A110000 		.4byte	.LASF773
 7467 006b 05       		.byte	0x5
 7468 006c B701     		.uleb128 0xb7
 7469 006e 49720000 		.4byte	.LASF774
 7470 0072 05       		.byte	0x5
 7471 0073 C101     		.uleb128 0xc1
 7472 0075 65020000 		.4byte	.LASF775
 7473 0079 05       		.byte	0x5
 7474 007a C201     		.uleb128 0xc2
 7475 007c 530D0000 		.4byte	.LASF776
 7476 0080 05       		.byte	0x5
 7477 0081 C301     		.uleb128 0xc3
 7478 0083 66600000 		.4byte	.LASF777
 7479 0087 05       		.byte	0x5
 7480 0088 CB01     		.uleb128 0xcb
 7481 008a 154D0000 		.4byte	.LASF778
 7482 008e 05       		.byte	0x5
 7483 008f CC01     		.uleb128 0xcc
 7484 0091 D5090000 		.4byte	.LASF779
 7485 0095 05       		.byte	0x5
 7486 0096 CD01     		.uleb128 0xcd
 7487 0098 852C0000 		.4byte	.LASF780
 7488 009c 05       		.byte	0x5
 7489 009d D701     		.uleb128 0xd7
 7490 009f 50710000 		.4byte	.LASF781
 7491 00a3 05       		.byte	0x5
 7492 00a4 D801     		.uleb128 0xd8
 7493 00a6 4A2A0000 		.4byte	.LASF782
 7494 00aa 05       		.byte	0x5
 7495 00ab D901     		.uleb128 0xd9
 7496 00ad 0D490000 		.4byte	.LASF783
 7497 00b1 05       		.byte	0x5
 7498 00b2 E701     		.uleb128 0xe7
 7499 00b4 F42E0000 		.4byte	.LASF784
 7500 00b8 05       		.byte	0x5
 7501 00b9 E801     		.uleb128 0xe8
 7502 00bb 87260000 		.4byte	.LASF785
 7503 00bf 05       		.byte	0x5
 7504 00c0 E901     		.uleb128 0xe9
 7505 00c2 1C770000 		.4byte	.LASF786
 7506 00c6 05       		.byte	0x5
 7507 00c7 F901     		.uleb128 0xf9
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 172


 7508 00c9 F87F0000 		.4byte	.LASF787
 7509 00cd 05       		.byte	0x5
 7510 00ce FA01     		.uleb128 0xfa
 7511 00d0 D2480000 		.4byte	.LASF788
 7512 00d4 05       		.byte	0x5
 7513 00d5 FB01     		.uleb128 0xfb
 7514 00d7 531C0000 		.4byte	.LASF789
 7515 00db 05       		.byte	0x5
 7516 00dc 8902     		.uleb128 0x109
 7517 00de 94120000 		.4byte	.LASF790
 7518 00e2 05       		.byte	0x5
 7519 00e3 8A02     		.uleb128 0x10a
 7520 00e5 2D100000 		.4byte	.LASF791
 7521 00e9 05       		.byte	0x5
 7522 00ea 8B02     		.uleb128 0x10b
 7523 00ec 6B670000 		.4byte	.LASF792
 7524 00f0 05       		.byte	0x5
 7525 00f1 9902     		.uleb128 0x119
 7526 00f3 8B530000 		.4byte	.LASF793
 7527 00f7 05       		.byte	0x5
 7528 00f8 9A02     		.uleb128 0x11a
 7529 00fa A8230000 		.4byte	.LASF794
 7530 00fe 05       		.byte	0x5
 7531 00ff 9B02     		.uleb128 0x11b
 7532 0101 EE670000 		.4byte	.LASF795
 7533 0105 05       		.byte	0x5
 7534 0106 A902     		.uleb128 0x129
 7535 0108 65080000 		.4byte	.LASF796
 7536 010c 05       		.byte	0x5
 7537 010d AA02     		.uleb128 0x12a
 7538 010f 48540000 		.4byte	.LASF797
 7539 0113 05       		.byte	0x5
 7540 0114 AB02     		.uleb128 0x12b
 7541 0116 3E2B0000 		.4byte	.LASF798
 7542 011a 05       		.byte	0x5
 7543 011b B902     		.uleb128 0x139
 7544 011d 8A140000 		.4byte	.LASF799
 7545 0121 05       		.byte	0x5
 7546 0122 BA02     		.uleb128 0x13a
 7547 0124 2F970000 		.4byte	.LASF800
 7548 0128 05       		.byte	0x5
 7549 0129 BB02     		.uleb128 0x13b
 7550 012b 21280000 		.4byte	.LASF801
 7551 012f 05       		.byte	0x5
 7552 0130 C902     		.uleb128 0x149
 7553 0132 E55D0000 		.4byte	.LASF802
 7554 0136 05       		.byte	0x5
 7555 0137 CA02     		.uleb128 0x14a
 7556 0139 588D0000 		.4byte	.LASF803
 7557 013d 05       		.byte	0x5
 7558 013e CB02     		.uleb128 0x14b
 7559 0140 3E300000 		.4byte	.LASF804
 7560 0144 05       		.byte	0x5
 7561 0145 D902     		.uleb128 0x159
 7562 0147 2E2A0000 		.4byte	.LASF805
 7563 014b 05       		.byte	0x5
 7564 014c DA02     		.uleb128 0x15a
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 173


 7565 014e C91D0000 		.4byte	.LASF806
 7566 0152 05       		.byte	0x5
 7567 0153 E202     		.uleb128 0x162
 7568 0155 3F420000 		.4byte	.LASF807
 7569 0159 05       		.byte	0x5
 7570 015a EA02     		.uleb128 0x16a
 7571 015c 916D0000 		.4byte	.LASF808
 7572 0160 05       		.byte	0x5
 7573 0161 F002     		.uleb128 0x170
 7574 0163 69320000 		.4byte	.LASF809
 7575 0167 05       		.byte	0x5
 7576 0168 F102     		.uleb128 0x171
 7577 016a FA270000 		.4byte	.LASF810
 7578 016e 05       		.byte	0x5
 7579 016f F502     		.uleb128 0x175
 7580 0171 2A0B0000 		.4byte	.LASF811
 7581 0175 05       		.byte	0x5
 7582 0176 F902     		.uleb128 0x179
 7583 0178 E9970000 		.4byte	.LASF812
 7584 017c 05       		.byte	0x5
 7585 017d FE02     		.uleb128 0x17e
 7586 017f 92410000 		.4byte	.LASF813
 7587 0183 05       		.byte	0x5
 7588 0184 8903     		.uleb128 0x189
 7589 0186 00710000 		.4byte	.LASF814
 7590 018a 05       		.byte	0x5
 7591 018b 9303     		.uleb128 0x193
 7592 018d 1C4A0000 		.4byte	.LASF815
 7593 0191 05       		.byte	0x5
 7594 0192 9803     		.uleb128 0x198
 7595 0194 50000000 		.4byte	.LASF816
 7596 0198 05       		.byte	0x5
 7597 0199 9F03     		.uleb128 0x19f
 7598 019b 4B3E0000 		.4byte	.LASF817
 7599 019f 05       		.byte	0x5
 7600 01a0 A003     		.uleb128 0x1a0
 7601 01a2 DE830000 		.4byte	.LASF818
 7602 01a6 05       		.byte	0x5
 7603 01a7 AB03     		.uleb128 0x1ab
 7604 01a9 080E0000 		.4byte	.LASF819
 7605 01ad 05       		.byte	0x5
 7606 01ae AC03     		.uleb128 0x1ac
 7607 01b0 95320000 		.4byte	.LASF820
 7608 01b4 05       		.byte	0x5
 7609 01b5 B703     		.uleb128 0x1b7
 7610 01b7 C0750000 		.4byte	.LASF821
 7611 01bb 05       		.byte	0x5
 7612 01bc B803     		.uleb128 0x1b8
 7613 01be 00530000 		.4byte	.LASF822
 7614 01c2 05       		.byte	0x5
 7615 01c3 C403     		.uleb128 0x1c4
 7616 01c5 44370000 		.4byte	.LASF823
 7617 01c9 05       		.byte	0x5
 7618 01ca C503     		.uleb128 0x1c5
 7619 01cc CB710000 		.4byte	.LASF824
 7620 01d0 05       		.byte	0x5
 7621 01d1 D403     		.uleb128 0x1d4
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 174


 7622 01d3 2A260000 		.4byte	.LASF825
 7623 01d7 05       		.byte	0x5
 7624 01d8 D503     		.uleb128 0x1d5
 7625 01da 7F630000 		.4byte	.LASF826
 7626 01de 00       		.byte	0
 7627              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8,comda
 7628              	.Ldebug_macro24:
 7629 0000 0400     		.2byte	0x4
 7630 0002 00       		.byte	0
 7631 0003 05       		.byte	0x5
 7632 0004 44       		.uleb128 0x44
 7633 0005 2B300000 		.4byte	.LASF828
 7634 0009 05       		.byte	0x5
 7635 000a 5C       		.uleb128 0x5c
 7636 000b 80340000 		.4byte	.LASF829
 7637 000f 05       		.byte	0x5
 7638 0010 5D       		.uleb128 0x5d
 7639 0011 7C090000 		.4byte	.LASF830
 7640 0015 05       		.byte	0x5
 7641 0016 5E       		.uleb128 0x5e
 7642 0017 75270000 		.4byte	.LASF831
 7643 001b 05       		.byte	0x5
 7644 001c 5F       		.uleb128 0x5f
 7645 001d F1360000 		.4byte	.LASF832
 7646 0021 05       		.byte	0x5
 7647 0022 60       		.uleb128 0x60
 7648 0023 DD4F0000 		.4byte	.LASF833
 7649 0027 05       		.byte	0x5
 7650 0028 61       		.uleb128 0x61
 7651 0029 C6000000 		.4byte	.LASF834
 7652 002d 05       		.byte	0x5
 7653 002e 62       		.uleb128 0x62
 7654 002f 9A570000 		.4byte	.LASF835
 7655 0033 05       		.byte	0x5
 7656 0034 63       		.uleb128 0x63
 7657 0035 7A640000 		.4byte	.LASF836
 7658 0039 05       		.byte	0x5
 7659 003a 64       		.uleb128 0x64
 7660 003b E4200000 		.4byte	.LASF837
 7661 003f 05       		.byte	0x5
 7662 0040 65       		.uleb128 0x65
 7663 0041 22960000 		.4byte	.LASF838
 7664 0045 05       		.byte	0x5
 7665 0046 66       		.uleb128 0x66
 7666 0047 F7490000 		.4byte	.LASF839
 7667 004b 05       		.byte	0x5
 7668 004c 67       		.uleb128 0x67
 7669 004d 4B020000 		.4byte	.LASF840
 7670 0051 05       		.byte	0x5
 7671 0052 68       		.uleb128 0x68
 7672 0053 7A610000 		.4byte	.LASF841
 7673 0057 05       		.byte	0x5
 7674 0058 69       		.uleb128 0x69
 7675 0059 BD450000 		.4byte	.LASF842
 7676 005d 05       		.byte	0x5
 7677 005e 6B       		.uleb128 0x6b
 7678 005f 165C0000 		.4byte	.LASF843
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 175


 7679 0063 05       		.byte	0x5
 7680 0064 6D       		.uleb128 0x6d
 7681 0065 24510000 		.4byte	.LASF844
 7682 0069 05       		.byte	0x5
 7683 006a 6E       		.uleb128 0x6e
 7684 006b DA030000 		.4byte	.LASF845
 7685 006f 05       		.byte	0x5
 7686 0070 6F       		.uleb128 0x6f
 7687 0071 07370000 		.4byte	.LASF846
 7688 0075 05       		.byte	0x5
 7689 0076 70       		.uleb128 0x70
 7690 0077 F2420000 		.4byte	.LASF847
 7691 007b 05       		.byte	0x5
 7692 007c 71       		.uleb128 0x71
 7693 007d 776F0000 		.4byte	.LASF848
 7694 0081 05       		.byte	0x5
 7695 0082 72       		.uleb128 0x72
 7696 0083 723D0000 		.4byte	.LASF849
 7697 0087 05       		.byte	0x5
 7698 0088 77       		.uleb128 0x77
 7699 0089 9F5E0000 		.4byte	.LASF850
 7700 008d 05       		.byte	0x5
 7701 008e 78       		.uleb128 0x78
 7702 008f 4D320000 		.4byte	.LASF851
 7703 0093 05       		.byte	0x5
 7704 0094 79       		.uleb128 0x79
 7705 0095 C7340000 		.4byte	.LASF852
 7706 0099 05       		.byte	0x5
 7707 009a 7A       		.uleb128 0x7a
 7708 009b E2770000 		.4byte	.LASF853
 7709 009f 05       		.byte	0x5
 7710 00a0 7B       		.uleb128 0x7b
 7711 00a1 B8070000 		.4byte	.LASF854
 7712 00a5 05       		.byte	0x5
 7713 00a6 7C       		.uleb128 0x7c
 7714 00a7 C32C0000 		.4byte	.LASF855
 7715 00ab 05       		.byte	0x5
 7716 00ac 7D       		.uleb128 0x7d
 7717 00ad C95E0000 		.4byte	.LASF856
 7718 00b1 05       		.byte	0x5
 7719 00b2 7E       		.uleb128 0x7e
 7720 00b3 5E4A0000 		.4byte	.LASF857
 7721 00b7 05       		.byte	0x5
 7722 00b8 8101     		.uleb128 0x81
 7723 00ba F20E0000 		.4byte	.LASF858
 7724 00be 05       		.byte	0x5
 7725 00bf 8201     		.uleb128 0x82
 7726 00c1 1B3E0000 		.4byte	.LASF859
 7727 00c5 05       		.byte	0x5
 7728 00c6 8301     		.uleb128 0x83
 7729 00c8 FB090000 		.4byte	.LASF860
 7730 00cc 05       		.byte	0x5
 7731 00cd 8401     		.uleb128 0x84
 7732 00cf 8D100000 		.4byte	.LASF861
 7733 00d3 05       		.byte	0x5
 7734 00d4 8701     		.uleb128 0x87
 7735 00d6 2A360000 		.4byte	.LASF862
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 176


 7736 00da 05       		.byte	0x5
 7737 00db 8801     		.uleb128 0x88
 7738 00dd EE110000 		.4byte	.LASF863
 7739 00e1 05       		.byte	0x5
 7740 00e2 8901     		.uleb128 0x89
 7741 00e4 F9950000 		.4byte	.LASF864
 7742 00e8 05       		.byte	0x5
 7743 00e9 8A01     		.uleb128 0x8a
 7744 00eb EE410000 		.4byte	.LASF865
 7745 00ef 05       		.byte	0x5
 7746 00f0 9001     		.uleb128 0x90
 7747 00f2 844A0000 		.4byte	.LASF866
 7748 00f6 05       		.byte	0x5
 7749 00f7 9401     		.uleb128 0x94
 7750 00f9 DD940000 		.4byte	.LASF867
 7751 00fd 05       		.byte	0x5
 7752 00fe 9601     		.uleb128 0x96
 7753 0100 294B0000 		.4byte	.LASF868
 7754 0104 05       		.byte	0x5
 7755 0105 9C01     		.uleb128 0x9c
 7756 0107 A7370000 		.4byte	.LASF869
 7757 010b 00       		.byte	0
 7758              		.section	.debug_macro,"G",%progbits,wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066,comdat
 7759              	.Ldebug_macro25:
 7760 0000 0400     		.2byte	0x4
 7761 0002 00       		.byte	0
 7762 0003 05       		.byte	0x5
 7763 0004 43       		.uleb128 0x43
 7764 0005 E8340000 		.4byte	.LASF870
 7765 0009 05       		.byte	0x5
 7766 000a 4C       		.uleb128 0x4c
 7767 000b 16400000 		.4byte	.LASF871
 7768 000f 05       		.byte	0x5
 7769 0010 4E       		.uleb128 0x4e
 7770 0011 33320000 		.4byte	.LASF872
 7771 0015 05       		.byte	0x5
 7772 0016 4F       		.uleb128 0x4f
 7773 0017 0E5E0000 		.4byte	.LASF873
 7774 001b 05       		.byte	0x5
 7775 001c 51       		.uleb128 0x51
 7776 001d AF320000 		.4byte	.LASF874
 7777 0021 05       		.byte	0x5
 7778 0022 52       		.uleb128 0x52
 7779 0023 95940000 		.4byte	.LASF875
 7780 0027 05       		.byte	0x5
 7781 0028 53       		.uleb128 0x53
 7782 0029 A05F0000 		.4byte	.LASF876
 7783 002d 05       		.byte	0x5
 7784 002e 54       		.uleb128 0x54
 7785 002f 4C690000 		.4byte	.LASF877
 7786 0033 05       		.byte	0x5
 7787 0034 57       		.uleb128 0x57
 7788 0035 29310000 		.4byte	.LASF878
 7789 0039 05       		.byte	0x5
 7790 003a 58       		.uleb128 0x58
 7791 003b 6D940000 		.4byte	.LASF879
 7792 003f 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 177


 7793 0040 59       		.uleb128 0x59
 7794 0041 B81C0000 		.4byte	.LASF880
 7795 0045 00       		.byte	0
 7796              		.section	.debug_macro,"G",%progbits,wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946,comdat
 7797              	.Ldebug_macro26:
 7798 0000 0400     		.2byte	0x4
 7799 0002 00       		.byte	0
 7800 0003 05       		.byte	0x5
 7801 0004 44       		.uleb128 0x44
 7802 0005 4B8D0000 		.4byte	.LASF882
 7803 0009 05       		.byte	0x5
 7804 000a 55       		.uleb128 0x55
 7805 000b 52150000 		.4byte	.LASF883
 7806 000f 05       		.byte	0x5
 7807 0010 56       		.uleb128 0x56
 7808 0011 CD7B0000 		.4byte	.LASF884
 7809 0015 05       		.byte	0x5
 7810 0016 57       		.uleb128 0x57
 7811 0017 0B310000 		.4byte	.LASF885
 7812 001b 05       		.byte	0x5
 7813 001c 58       		.uleb128 0x58
 7814 001d 6C750000 		.4byte	.LASF886
 7815 0021 05       		.byte	0x5
 7816 0022 59       		.uleb128 0x59
 7817 0023 D91F0000 		.4byte	.LASF887
 7818 0027 05       		.byte	0x5
 7819 0028 5A       		.uleb128 0x5a
 7820 0029 17390000 		.4byte	.LASF888
 7821 002d 05       		.byte	0x5
 7822 002e 5B       		.uleb128 0x5b
 7823 002f F66A0000 		.4byte	.LASF889
 7824 0033 05       		.byte	0x5
 7825 0034 6A       		.uleb128 0x6a
 7826 0035 8D2A0000 		.4byte	.LASF890
 7827 0039 05       		.byte	0x5
 7828 003a 6F       		.uleb128 0x6f
 7829 003b 51500000 		.4byte	.LASF891
 7830 003f 05       		.byte	0x5
 7831 0040 70       		.uleb128 0x70
 7832 0041 F38A0000 		.4byte	.LASF892
 7833 0045 05       		.byte	0x5
 7834 0046 71       		.uleb128 0x71
 7835 0047 DA8C0000 		.4byte	.LASF893
 7836 004b 05       		.byte	0x5
 7837 004c 77       		.uleb128 0x77
 7838 004d A24C0000 		.4byte	.LASF894
 7839 0051 05       		.byte	0x5
 7840 0052 78       		.uleb128 0x78
 7841 0053 AF350000 		.4byte	.LASF895
 7842 0057 05       		.byte	0x5
 7843 0058 79       		.uleb128 0x79
 7844 0059 66630000 		.4byte	.LASF896
 7845 005d 05       		.byte	0x5
 7846 005e 7A       		.uleb128 0x7a
 7847 005f BD560000 		.4byte	.LASF897
 7848 0063 05       		.byte	0x5
 7849 0064 7B       		.uleb128 0x7b
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 178


 7850 0065 954F0000 		.4byte	.LASF898
 7851 0069 05       		.byte	0x5
 7852 006a 8301     		.uleb128 0x83
 7853 006c 295B0000 		.4byte	.LASF899
 7854 0070 05       		.byte	0x5
 7855 0071 8401     		.uleb128 0x84
 7856 0073 C43E0000 		.4byte	.LASF900
 7857 0077 05       		.byte	0x5
 7858 0078 8501     		.uleb128 0x85
 7859 007a 39870000 		.4byte	.LASF901
 7860 007e 05       		.byte	0x5
 7861 007f 8601     		.uleb128 0x86
 7862 0081 9B3B0000 		.4byte	.LASF902
 7863 0085 05       		.byte	0x5
 7864 0086 8701     		.uleb128 0x87
 7865 0088 ED380000 		.4byte	.LASF903
 7866 008c 05       		.byte	0x5
 7867 008d 8801     		.uleb128 0x88
 7868 008f 69500000 		.4byte	.LASF904
 7869 0093 05       		.byte	0x5
 7870 0094 8E01     		.uleb128 0x8e
 7871 0096 D66F0000 		.4byte	.LASF905
 7872 009a 05       		.byte	0x5
 7873 009b 8F01     		.uleb128 0x8f
 7874 009d CA180000 		.4byte	.LASF906
 7875 00a1 05       		.byte	0x5
 7876 00a2 9501     		.uleb128 0x95
 7877 00a4 4A360000 		.4byte	.LASF907
 7878 00a8 05       		.byte	0x5
 7879 00a9 9B01     		.uleb128 0x9b
 7880 00ab 9C830000 		.4byte	.LASF908
 7881 00af 05       		.byte	0x5
 7882 00b0 AF01     		.uleb128 0xaf
 7883 00b2 C1740000 		.4byte	.LASF909
 7884 00b6 05       		.byte	0x5
 7885 00b7 B001     		.uleb128 0xb0
 7886 00b9 5E510000 		.4byte	.LASF910
 7887 00bd 05       		.byte	0x5
 7888 00be B401     		.uleb128 0xb4
 7889 00c0 44770000 		.4byte	.LASF911
 7890 00c4 05       		.byte	0x5
 7891 00c5 BC01     		.uleb128 0xbc
 7892 00c7 5F950000 		.4byte	.LASF912
 7893 00cb 05       		.byte	0x5
 7894 00cc C001     		.uleb128 0xc0
 7895 00ce 848B0000 		.4byte	.LASF913
 7896 00d2 00       		.byte	0
 7897              		.section	.debug_macro,"G",%progbits,wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5,comdat
 7898              	.Ldebug_macro27:
 7899 0000 0400     		.2byte	0x4
 7900 0002 00       		.byte	0
 7901 0003 05       		.byte	0x5
 7902 0004 C502     		.uleb128 0x145
 7903 0006 3D090000 		.4byte	.LASF914
 7904 000a 05       		.byte	0x5
 7905 000b D902     		.uleb128 0x159
 7906 000d 0F270000 		.4byte	.LASF915
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 179


 7907 0011 00       		.byte	0
 7908              		.section	.debug_macro,"G",%progbits,wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168,comdat
 7909              	.Ldebug_macro28:
 7910 0000 0400     		.2byte	0x4
 7911 0002 00       		.byte	0
 7912 0003 05       		.byte	0x5
 7913 0004 43       		.uleb128 0x43
 7914 0005 6A6D0000 		.4byte	.LASF916
 7915 0009 05       		.byte	0x5
 7916 000a 9101     		.uleb128 0x91
 7917 000c 9D0B0000 		.4byte	.LASF917
 7918 0010 05       		.byte	0x5
 7919 0011 9201     		.uleb128 0x92
 7920 0013 EB1B0000 		.4byte	.LASF918
 7921 0017 05       		.byte	0x5
 7922 0018 9301     		.uleb128 0x93
 7923 001a F95F0000 		.4byte	.LASF919
 7924 001e 00       		.byte	0
 7925              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e,comdat
 7926              	.Ldebug_macro29:
 7927 0000 0400     		.2byte	0x4
 7928 0002 00       		.byte	0
 7929 0003 05       		.byte	0x5
 7930 0004 AB01     		.uleb128 0xab
 7931 0006 5D980000 		.4byte	.LASF920
 7932 000a 05       		.byte	0x5
 7933 000b AF01     		.uleb128 0xaf
 7934 000d 7C8D0000 		.4byte	.LASF921
 7935 0011 05       		.byte	0x5
 7936 0012 B301     		.uleb128 0xb3
 7937 0014 DA5F0000 		.4byte	.LASF922
 7938 0018 05       		.byte	0x5
 7939 0019 B701     		.uleb128 0xb7
 7940 001b C12D0000 		.4byte	.LASF923
 7941 001f 05       		.byte	0x5
 7942 0020 BB01     		.uleb128 0xbb
 7943 0022 AD260000 		.4byte	.LASF924
 7944 0026 05       		.byte	0x5
 7945 0027 BF01     		.uleb128 0xbf
 7946 0029 338B0000 		.4byte	.LASF925
 7947 002d 05       		.byte	0x5
 7948 002e C701     		.uleb128 0xc7
 7949 0030 9A280000 		.4byte	.LASF926
 7950 0034 05       		.byte	0x5
 7951 0035 D301     		.uleb128 0xd3
 7952 0037 DB150000 		.4byte	.LASF927
 7953 003b 05       		.byte	0x5
 7954 003c DF01     		.uleb128 0xdf
 7955 003e B2960000 		.4byte	.LASF928
 7956 0042 05       		.byte	0x5
 7957 0043 EF01     		.uleb128 0xef
 7958 0045 29710000 		.4byte	.LASF929
 7959 0049 05       		.byte	0x5
 7960 004a F301     		.uleb128 0xf3
 7961 004c 38990000 		.4byte	.LASF930
 7962 0050 05       		.byte	0x5
 7963 0051 F701     		.uleb128 0xf7
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 180


 7964 0053 627B0000 		.4byte	.LASF931
 7965 0057 05       		.byte	0x5
 7966 0058 FE01     		.uleb128 0xfe
 7967 005a F22C0000 		.4byte	.LASF932
 7968 005e 05       		.byte	0x5
 7969 005f 9302     		.uleb128 0x113
 7970 0061 6C100000 		.4byte	.LASF933
 7971 0065 05       		.byte	0x5
 7972 0066 9702     		.uleb128 0x117
 7973 0068 7A5D0000 		.4byte	.LASF934
 7974 006c 05       		.byte	0x5
 7975 006d A402     		.uleb128 0x124
 7976 006f 601D0000 		.4byte	.LASF935
 7977 0073 05       		.byte	0x5
 7978 0074 A802     		.uleb128 0x128
 7979 0076 F0230000 		.4byte	.LASF936
 7980 007a 05       		.byte	0x5
 7981 007b AC02     		.uleb128 0x12c
 7982 007d CC0C0000 		.4byte	.LASF937
 7983 0081 05       		.byte	0x5
 7984 0082 B902     		.uleb128 0x139
 7985 0084 84860000 		.4byte	.LASF938
 7986 0088 05       		.byte	0x5
 7987 0089 C002     		.uleb128 0x140
 7988 008b 61090000 		.4byte	.LASF939
 7989 008f 05       		.byte	0x5
 7990 0090 C602     		.uleb128 0x146
 7991 0092 58790000 		.4byte	.LASF940
 7992 0096 05       		.byte	0x5
 7993 0097 CC02     		.uleb128 0x14c
 7994 0099 A7010000 		.4byte	.LASF941
 7995 009d 05       		.byte	0x5
 7996 009e D202     		.uleb128 0x152
 7997 00a0 E98F0000 		.4byte	.LASF942
 7998 00a4 05       		.byte	0x5
 7999 00a5 D702     		.uleb128 0x157
 8000 00a7 63340000 		.4byte	.LASF943
 8001 00ab 05       		.byte	0x5
 8002 00ac DC02     		.uleb128 0x15c
 8003 00ae 7B040000 		.4byte	.LASF944
 8004 00b2 05       		.byte	0x5
 8005 00b3 E202     		.uleb128 0x162
 8006 00b5 642A0000 		.4byte	.LASF945
 8007 00b9 05       		.byte	0x5
 8008 00ba EB02     		.uleb128 0x16b
 8009 00bc B20B0000 		.4byte	.LASF946
 8010 00c0 05       		.byte	0x5
 8011 00c1 F302     		.uleb128 0x173
 8012 00c3 7D220000 		.4byte	.LASF947
 8013 00c7 05       		.byte	0x5
 8014 00c8 FB02     		.uleb128 0x17b
 8015 00ca B25C0000 		.4byte	.LASF948
 8016 00ce 05       		.byte	0x5
 8017 00cf 8303     		.uleb128 0x183
 8018 00d1 B1860000 		.4byte	.LASF949
 8019 00d5 05       		.byte	0x5
 8020 00d6 8D03     		.uleb128 0x18d
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 181


 8021 00d8 71990000 		.4byte	.LASF950
 8022 00dc 05       		.byte	0x5
 8023 00dd 9103     		.uleb128 0x191
 8024 00df CB3A0000 		.4byte	.LASF951
 8025 00e3 05       		.byte	0x5
 8026 00e4 9503     		.uleb128 0x195
 8027 00e6 94290000 		.4byte	.LASF952
 8028 00ea 05       		.byte	0x5
 8029 00eb 9903     		.uleb128 0x199
 8030 00ed 6C540000 		.4byte	.LASF953
 8031 00f1 05       		.byte	0x5
 8032 00f2 9D03     		.uleb128 0x19d
 8033 00f4 32860000 		.4byte	.LASF954
 8034 00f8 05       		.byte	0x5
 8035 00f9 A103     		.uleb128 0x1a1
 8036 00fb C3220000 		.4byte	.LASF955
 8037 00ff 05       		.byte	0x5
 8038 0100 A503     		.uleb128 0x1a5
 8039 0102 075A0000 		.4byte	.LASF956
 8040 0106 05       		.byte	0x5
 8041 0107 A903     		.uleb128 0x1a9
 8042 0109 14200000 		.4byte	.LASF957
 8043 010d 05       		.byte	0x5
 8044 010e AD03     		.uleb128 0x1ad
 8045 0110 2C750000 		.4byte	.LASF958
 8046 0114 05       		.byte	0x5
 8047 0115 B103     		.uleb128 0x1b1
 8048 0117 03210000 		.4byte	.LASF959
 8049 011b 05       		.byte	0x5
 8050 011c B503     		.uleb128 0x1b5
 8051 011e 463B0000 		.4byte	.LASF960
 8052 0122 05       		.byte	0x5
 8053 0123 B903     		.uleb128 0x1b9
 8054 0125 040B0000 		.4byte	.LASF961
 8055 0129 05       		.byte	0x5
 8056 012a BD03     		.uleb128 0x1bd
 8057 012c EB880000 		.4byte	.LASF962
 8058 0130 05       		.byte	0x5
 8059 0131 C103     		.uleb128 0x1c1
 8060 0133 67860000 		.4byte	.LASF963
 8061 0137 05       		.byte	0x5
 8062 0138 C503     		.uleb128 0x1c5
 8063 013a A6130000 		.4byte	.LASF964
 8064 013e 05       		.byte	0x5
 8065 013f C903     		.uleb128 0x1c9
 8066 0141 52850000 		.4byte	.LASF965
 8067 0145 05       		.byte	0x5
 8068 0146 CD03     		.uleb128 0x1cd
 8069 0148 93930000 		.4byte	.LASF966
 8070 014c 05       		.byte	0x5
 8071 014d D103     		.uleb128 0x1d1
 8072 014f 94780000 		.4byte	.LASF967
 8073 0153 05       		.byte	0x5
 8074 0154 D503     		.uleb128 0x1d5
 8075 0156 53970000 		.4byte	.LASF968
 8076 015a 05       		.byte	0x5
 8077 015b D903     		.uleb128 0x1d9
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 182


 8078 015d 665C0000 		.4byte	.LASF969
 8079 0161 05       		.byte	0x5
 8080 0162 DD03     		.uleb128 0x1dd
 8081 0164 764D0000 		.4byte	.LASF970
 8082 0168 05       		.byte	0x5
 8083 0169 E103     		.uleb128 0x1e1
 8084 016b DB980000 		.4byte	.LASF971
 8085 016f 05       		.byte	0x5
 8086 0170 E503     		.uleb128 0x1e5
 8087 0172 CE3B0000 		.4byte	.LASF972
 8088 0176 05       		.byte	0x5
 8089 0177 E903     		.uleb128 0x1e9
 8090 0179 D05B0000 		.4byte	.LASF973
 8091 017d 05       		.byte	0x5
 8092 017e ED03     		.uleb128 0x1ed
 8093 0180 7E310000 		.4byte	.LASF974
 8094 0184 05       		.byte	0x5
 8095 0185 F103     		.uleb128 0x1f1
 8096 0187 CD330000 		.4byte	.LASF975
 8097 018b 05       		.byte	0x5
 8098 018c F503     		.uleb128 0x1f5
 8099 018e 1E3A0000 		.4byte	.LASF976
 8100 0192 05       		.byte	0x5
 8101 0193 F903     		.uleb128 0x1f9
 8102 0195 F7650000 		.4byte	.LASF977
 8103 0199 05       		.byte	0x5
 8104 019a FD03     		.uleb128 0x1fd
 8105 019c F07B0000 		.4byte	.LASF978
 8106 01a0 05       		.byte	0x5
 8107 01a1 8104     		.uleb128 0x201
 8108 01a3 1A5F0000 		.4byte	.LASF979
 8109 01a7 05       		.byte	0x5
 8110 01a8 8504     		.uleb128 0x205
 8111 01aa 332E0000 		.4byte	.LASF980
 8112 01ae 05       		.byte	0x5
 8113 01af 8904     		.uleb128 0x209
 8114 01b1 E45C0000 		.4byte	.LASF981
 8115 01b5 05       		.byte	0x5
 8116 01b6 8D04     		.uleb128 0x20d
 8117 01b8 1C0D0000 		.4byte	.LASF982
 8118 01bc 05       		.byte	0x5
 8119 01bd 9104     		.uleb128 0x211
 8120 01bf 891B0000 		.4byte	.LASF983
 8121 01c3 05       		.byte	0x5
 8122 01c4 9504     		.uleb128 0x215
 8123 01c6 0A660000 		.4byte	.LASF984
 8124 01ca 05       		.byte	0x5
 8125 01cb 9904     		.uleb128 0x219
 8126 01cd B22F0000 		.4byte	.LASF985
 8127 01d1 05       		.byte	0x5
 8128 01d2 9D04     		.uleb128 0x21d
 8129 01d4 C50D0000 		.4byte	.LASF986
 8130 01d8 05       		.byte	0x5
 8131 01d9 A104     		.uleb128 0x221
 8132 01db 0D690000 		.4byte	.LASF987
 8133 01df 05       		.byte	0x5
 8134 01e0 A504     		.uleb128 0x225
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 183


 8135 01e2 EE150000 		.4byte	.LASF988
 8136 01e6 05       		.byte	0x5
 8137 01e7 A904     		.uleb128 0x229
 8138 01e9 DB7F0000 		.4byte	.LASF989
 8139 01ed 05       		.byte	0x5
 8140 01ee AD04     		.uleb128 0x22d
 8141 01f0 7C820000 		.4byte	.LASF990
 8142 01f4 05       		.byte	0x5
 8143 01f5 B104     		.uleb128 0x231
 8144 01f7 B71F0000 		.4byte	.LASF991
 8145 01fb 05       		.byte	0x5
 8146 01fc B504     		.uleb128 0x235
 8147 01fe AF680000 		.4byte	.LASF992
 8148 0202 05       		.byte	0x5
 8149 0203 B904     		.uleb128 0x239
 8150 0205 E2900000 		.4byte	.LASF993
 8151 0209 05       		.byte	0x5
 8152 020a BD04     		.uleb128 0x23d
 8153 020c 480B0000 		.4byte	.LASF994
 8154 0210 05       		.byte	0x5
 8155 0211 C104     		.uleb128 0x241
 8156 0213 F38B0000 		.4byte	.LASF995
 8157 0217 05       		.byte	0x5
 8158 0218 C504     		.uleb128 0x245
 8159 021a 6B3F0000 		.4byte	.LASF996
 8160 021e 05       		.byte	0x5
 8161 021f C904     		.uleb128 0x249
 8162 0221 B5040000 		.4byte	.LASF997
 8163 0225 05       		.byte	0x5
 8164 0226 CD04     		.uleb128 0x24d
 8165 0228 FC930000 		.4byte	.LASF998
 8166 022c 05       		.byte	0x5
 8167 022d D104     		.uleb128 0x251
 8168 022f 6B660000 		.4byte	.LASF999
 8169 0233 05       		.byte	0x5
 8170 0234 D504     		.uleb128 0x255
 8171 0236 2D1C0000 		.4byte	.LASF1000
 8172 023a 05       		.byte	0x5
 8173 023b D904     		.uleb128 0x259
 8174 023d 54350000 		.4byte	.LASF1001
 8175 0241 05       		.byte	0x5
 8176 0242 DD04     		.uleb128 0x25d
 8177 0244 A06C0000 		.4byte	.LASF1002
 8178 0248 05       		.byte	0x5
 8179 0249 E104     		.uleb128 0x261
 8180 024b 552E0000 		.4byte	.LASF1003
 8181 024f 05       		.byte	0x5
 8182 0250 F704     		.uleb128 0x277
 8183 0252 61620000 		.4byte	.LASF1004
 8184 0256 05       		.byte	0x5
 8185 0257 FB04     		.uleb128 0x27b
 8186 0259 64790000 		.4byte	.LASF1005
 8187 025d 05       		.byte	0x5
 8188 025e FF04     		.uleb128 0x27f
 8189 0260 E3540000 		.4byte	.LASF1006
 8190 0264 05       		.byte	0x5
 8191 0265 8305     		.uleb128 0x283
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 184


 8192 0267 FE0F0000 		.4byte	.LASF1007
 8193 026b 05       		.byte	0x5
 8194 026c 8705     		.uleb128 0x287
 8195 026e 45050000 		.4byte	.LASF1008
 8196 0272 05       		.byte	0x5
 8197 0273 8B05     		.uleb128 0x28b
 8198 0275 5F460000 		.4byte	.LASF1009
 8199 0279 05       		.byte	0x5
 8200 027a 9305     		.uleb128 0x293
 8201 027c B1600000 		.4byte	.LASF1010
 8202 0280 05       		.byte	0x5
 8203 0281 9B05     		.uleb128 0x29b
 8204 0283 8B540000 		.4byte	.LASF1011
 8205 0287 05       		.byte	0x5
 8206 0288 9F05     		.uleb128 0x29f
 8207 028a 981F0000 		.4byte	.LASF1012
 8208 028e 05       		.byte	0x5
 8209 028f A305     		.uleb128 0x2a3
 8210 0291 E83D0000 		.4byte	.LASF1013
 8211 0295 05       		.byte	0x5
 8212 0296 A705     		.uleb128 0x2a7
 8213 0298 D41B0000 		.4byte	.LASF1014
 8214 029c 05       		.byte	0x5
 8215 029d AB05     		.uleb128 0x2ab
 8216 029f 6D730000 		.4byte	.LASF1015
 8217 02a3 05       		.byte	0x5
 8218 02a4 AF05     		.uleb128 0x2af
 8219 02a6 97790000 		.4byte	.LASF1016
 8220 02aa 05       		.byte	0x5
 8221 02ab B305     		.uleb128 0x2b3
 8222 02ad D2910000 		.4byte	.LASF1017
 8223 02b1 05       		.byte	0x5
 8224 02b2 B705     		.uleb128 0x2b7
 8225 02b4 11620000 		.4byte	.LASF1018
 8226 02b8 05       		.byte	0x5
 8227 02b9 BB05     		.uleb128 0x2bb
 8228 02bb 1E3F0000 		.4byte	.LASF1019
 8229 02bf 05       		.byte	0x5
 8230 02c0 C705     		.uleb128 0x2c7
 8231 02c2 5A120000 		.4byte	.LASF1020
 8232 02c6 05       		.byte	0x5
 8233 02c7 CB05     		.uleb128 0x2cb
 8234 02c9 652F0000 		.4byte	.LASF1021
 8235 02cd 05       		.byte	0x5
 8236 02ce D505     		.uleb128 0x2d5
 8237 02d0 9E030000 		.4byte	.LASF1022
 8238 02d4 05       		.byte	0x5
 8239 02d5 D905     		.uleb128 0x2d9
 8240 02d7 A7190000 		.4byte	.LASF1023
 8241 02db 05       		.byte	0x5
 8242 02dc DA05     		.uleb128 0x2da
 8243 02de C9510000 		.4byte	.LASF1024
 8244 02e2 05       		.byte	0x5
 8245 02e3 DB05     		.uleb128 0x2db
 8246 02e5 C15F0000 		.4byte	.LASF1025
 8247 02e9 05       		.byte	0x5
 8248 02ea DC05     		.uleb128 0x2dc
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 185


 8249 02ec 2D460000 		.4byte	.LASF1026
 8250 02f0 05       		.byte	0x5
 8251 02f1 DD05     		.uleb128 0x2dd
 8252 02f3 A8500000 		.4byte	.LASF1027
 8253 02f7 05       		.byte	0x5
 8254 02f8 DE05     		.uleb128 0x2de
 8255 02fa EC480000 		.4byte	.LASF1028
 8256 02fe 05       		.byte	0x5
 8257 02ff DF05     		.uleb128 0x2df
 8258 0301 CA650000 		.4byte	.LASF1029
 8259 0305 05       		.byte	0x5
 8260 0306 E005     		.uleb128 0x2e0
 8261 0308 DD1E0000 		.4byte	.LASF1030
 8262 030c 05       		.byte	0x5
 8263 030d E105     		.uleb128 0x2e1
 8264 030f B2250000 		.4byte	.LASF1031
 8265 0313 05       		.byte	0x5
 8266 0314 E205     		.uleb128 0x2e2
 8267 0316 37950000 		.4byte	.LASF1032
 8268 031a 05       		.byte	0x5
 8269 031b E305     		.uleb128 0x2e3
 8270 031d 957B0000 		.4byte	.LASF1033
 8271 0321 05       		.byte	0x5
 8272 0322 E405     		.uleb128 0x2e4
 8273 0324 E20D0000 		.4byte	.LASF1034
 8274 0328 05       		.byte	0x5
 8275 0329 E505     		.uleb128 0x2e5
 8276 032b 7C2D0000 		.4byte	.LASF1035
 8277 032f 05       		.byte	0x5
 8278 0330 E605     		.uleb128 0x2e6
 8279 0332 8D730000 		.4byte	.LASF1036
 8280 0336 05       		.byte	0x5
 8281 0337 E705     		.uleb128 0x2e7
 8282 0339 09460000 		.4byte	.LASF1037
 8283 033d 05       		.byte	0x5
 8284 033e EB05     		.uleb128 0x2eb
 8285 0340 A8660000 		.4byte	.LASF1038
 8286 0344 05       		.byte	0x5
 8287 0345 EC05     		.uleb128 0x2ec
 8288 0347 B0710000 		.4byte	.LASF1039
 8289 034b 05       		.byte	0x5
 8290 034c ED05     		.uleb128 0x2ed
 8291 034e A8940000 		.4byte	.LASF1040
 8292 0352 05       		.byte	0x5
 8293 0353 EE05     		.uleb128 0x2ee
 8294 0355 9F650000 		.4byte	.LASF1041
 8295 0359 00       		.byte	0
 8296              		.section	.debug_macro,"G",%progbits,wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370,comdat
 8297              	.Ldebug_macro30:
 8298 0000 0400     		.2byte	0x4
 8299 0002 00       		.byte	0
 8300 0003 05       		.byte	0x5
 8301 0004 60       		.uleb128 0x60
 8302 0005 99470000 		.4byte	.LASF1043
 8303 0009 05       		.byte	0x5
 8304 000a 7F       		.uleb128 0x7f
 8305 000b BE3D0000 		.4byte	.LASF1044
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 186


 8306 000f 05       		.byte	0x5
 8307 0010 AB01     		.uleb128 0xab
 8308 0012 B58D0000 		.4byte	.LASF1045
 8309 0016 05       		.byte	0x5
 8310 0017 B401     		.uleb128 0xb4
 8311 0019 810E0000 		.4byte	.LASF1046
 8312 001d 05       		.byte	0x5
 8313 001e BD01     		.uleb128 0xbd
 8314 0020 C0010000 		.4byte	.LASF1047
 8315 0024 05       		.byte	0x5
 8316 0025 C701     		.uleb128 0xc7
 8317 0027 9B630000 		.4byte	.LASF1048
 8318 002b 05       		.byte	0x5
 8319 002c D001     		.uleb128 0xd0
 8320 002e E61D0000 		.4byte	.LASF1049
 8321 0032 05       		.byte	0x5
 8322 0033 D801     		.uleb128 0xd8
 8323 0035 06050000 		.4byte	.LASF1050
 8324 0039 05       		.byte	0x5
 8325 003a E001     		.uleb128 0xe0
 8326 003c 94970000 		.4byte	.LASF1051
 8327 0040 05       		.byte	0x5
 8328 0041 E801     		.uleb128 0xe8
 8329 0043 5D7A0000 		.4byte	.LASF1052
 8330 0047 05       		.byte	0x5
 8331 0048 F101     		.uleb128 0xf1
 8332 004a 22920000 		.4byte	.LASF1053
 8333 004e 05       		.byte	0x5
 8334 004f F601     		.uleb128 0xf6
 8335 0051 2B700000 		.4byte	.LASF1054
 8336 0055 05       		.byte	0x5
 8337 0056 8C02     		.uleb128 0x10c
 8338 0058 66800000 		.4byte	.LASF1055
 8339 005c 05       		.byte	0x5
 8340 005d AA02     		.uleb128 0x12a
 8341 005f CF070000 		.4byte	.LASF1056
 8342 0063 05       		.byte	0x5
 8343 0064 B502     		.uleb128 0x135
 8344 0066 C0130000 		.4byte	.LASF1057
 8345 006a 05       		.byte	0x5
 8346 006b BD02     		.uleb128 0x13d
 8347 006d 412C0000 		.4byte	.LASF1058
 8348 0071 05       		.byte	0x5
 8349 0072 C402     		.uleb128 0x144
 8350 0074 991A0000 		.4byte	.LASF1059
 8351 0078 00       		.byte	0
 8352              		.section	.debug_macro,"G",%progbits,wm4.task.h.84.e110bc08aaffa67ce542955b890201b4,comdat
 8353              	.Ldebug_macro31:
 8354 0000 0400     		.2byte	0x4
 8355 0002 00       		.byte	0
 8356 0003 05       		.byte	0x5
 8357 0004 54       		.uleb128 0x54
 8358 0005 9E750000 		.4byte	.LASF1060
 8359 0009 05       		.byte	0x5
 8360 000a 55       		.uleb128 0x55
 8361 000b 44510000 		.4byte	.LASF1061
 8362 000f 05       		.byte	0x5
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 187


 8363 0010 56       		.uleb128 0x56
 8364 0011 49340000 		.4byte	.LASF1062
 8365 0015 05       		.byte	0x5
 8366 0016 57       		.uleb128 0x57
 8367 0017 C8770000 		.4byte	.LASF1063
 8368 001b 05       		.byte	0x5
 8369 001c B201     		.uleb128 0xb2
 8370 001e 546C0000 		.4byte	.LASF1064
 8371 0022 05       		.byte	0x5
 8372 0023 BC01     		.uleb128 0xbc
 8373 0025 CF300000 		.4byte	.LASF1065
 8374 0029 05       		.byte	0x5
 8375 002a CA01     		.uleb128 0xca
 8376 002c 6A190000 		.4byte	.LASF1066
 8377 0030 05       		.byte	0x5
 8378 0031 D801     		.uleb128 0xd8
 8379 0033 7E720000 		.4byte	.LASF1067
 8380 0037 05       		.byte	0x5
 8381 0038 E201     		.uleb128 0xe2
 8382 003a 59530000 		.4byte	.LASF1068
 8383 003e 05       		.byte	0x5
 8384 003f EC01     		.uleb128 0xec
 8385 0041 ED120000 		.4byte	.LASF1069
 8386 0045 05       		.byte	0x5
 8387 0046 F101     		.uleb128 0xf1
 8388 0048 07560000 		.4byte	.LASF1070
 8389 004c 05       		.byte	0x5
 8390 004d F201     		.uleb128 0xf2
 8391 004f 81900000 		.4byte	.LASF1071
 8392 0053 05       		.byte	0x5
 8393 0054 F301     		.uleb128 0xf3
 8394 0056 A78B0000 		.4byte	.LASF1072
 8395 005a 05       		.byte	0x5
 8396 005b CA02     		.uleb128 0x14a
 8397 005d EF320000 		.4byte	.LASF1073
 8398 0061 05       		.byte	0x5
 8399 0062 8F03     		.uleb128 0x18f
 8400 0064 06760000 		.4byte	.LASF1074
 8401 0068 00       		.byte	0
 8402              		.section	.debug_macro,"G",%progbits,wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94,comdat
 8403              	.Ldebug_macro32:
 8404 0000 0400     		.2byte	0x4
 8405 0002 00       		.byte	0
 8406 0003 05       		.byte	0x5
 8407 0004 44       		.uleb128 0x44
 8408 0005 EC730000 		.4byte	.LASF1075
 8409 0009 05       		.byte	0x5
 8410 000a 65       		.uleb128 0x65
 8411 000b 57070000 		.4byte	.LASF1076
 8412 000f 05       		.byte	0x5
 8413 0010 66       		.uleb128 0x66
 8414 0011 94420000 		.4byte	.LASF1077
 8415 0015 05       		.byte	0x5
 8416 0016 67       		.uleb128 0x67
 8417 0017 FF2D0000 		.4byte	.LASF1078
 8418 001b 05       		.byte	0x5
 8419 001c 6A       		.uleb128 0x6a
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 188


 8420 001d A6160000 		.4byte	.LASF1079
 8421 0021 05       		.byte	0x5
 8422 0022 6B       		.uleb128 0x6b
 8423 0023 D3840000 		.4byte	.LASF1080
 8424 0027 05       		.byte	0x5
 8425 0028 6C       		.uleb128 0x6c
 8426 0029 2C640000 		.4byte	.LASF1081
 8427 002d 05       		.byte	0x5
 8428 002e 6D       		.uleb128 0x6d
 8429 002f 404D0000 		.4byte	.LASF1082
 8430 0033 05       		.byte	0x5
 8431 0034 6E       		.uleb128 0x6e
 8432 0035 81550000 		.4byte	.LASF1083
 8433 0039 05       		.byte	0x5
 8434 003a 6F       		.uleb128 0x6f
 8435 003b 3A940000 		.4byte	.LASF1084
 8436 003f 05       		.byte	0x5
 8437 0040 A901     		.uleb128 0xa9
 8438 0042 10430000 		.4byte	.LASF1085
 8439 0046 05       		.byte	0x5
 8440 0047 FB01     		.uleb128 0xfb
 8441 0049 37520000 		.4byte	.LASF1086
 8442 004d 05       		.byte	0x5
 8443 004e CD02     		.uleb128 0x14d
 8444 0050 13650000 		.4byte	.LASF1087
 8445 0054 05       		.byte	0x5
 8446 0055 A103     		.uleb128 0x1a1
 8447 0057 C2430000 		.4byte	.LASF1088
 8448 005b 05       		.byte	0x5
 8449 005c F403     		.uleb128 0x1f4
 8450 005e C13C0000 		.4byte	.LASF1089
 8451 0062 05       		.byte	0x5
 8452 0063 AC05     		.uleb128 0x2ac
 8453 0065 B54A0000 		.4byte	.LASF1090
 8454 0069 05       		.byte	0x5
 8455 006a AA06     		.uleb128 0x32a
 8456 006c 7F490000 		.4byte	.LASF1091
 8457 0070 05       		.byte	0x5
 8458 0071 8108     		.uleb128 0x401
 8459 0073 1D0F0000 		.4byte	.LASF1092
 8460 0077 05       		.byte	0x5
 8461 0078 C808     		.uleb128 0x448
 8462 007a 0D740000 		.4byte	.LASF1093
 8463 007e 05       		.byte	0x5
 8464 007f 9F09     		.uleb128 0x49f
 8465 0081 5D6B0000 		.4byte	.LASF1094
 8466 0085 05       		.byte	0x5
 8467 0086 E909     		.uleb128 0x4e9
 8468 0088 EE820000 		.4byte	.LASF1095
 8469 008c 05       		.byte	0x5
 8470 008d AB0B     		.uleb128 0x5ab
 8471 008f 494E0000 		.4byte	.LASF1096
 8472 0093 05       		.byte	0x5
 8473 0094 AC0B     		.uleb128 0x5ac
 8474 0096 0D450000 		.4byte	.LASF1097
 8475 009a 05       		.byte	0x5
 8476 009b AD0B     		.uleb128 0x5ad
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 189


 8477 009d A68E0000 		.4byte	.LASF1098
 8478 00a1 05       		.byte	0x5
 8479 00a2 AE0B     		.uleb128 0x5ae
 8480 00a4 C6620000 		.4byte	.LASF1099
 8481 00a8 05       		.byte	0x5
 8482 00a9 D40B     		.uleb128 0x5d4
 8483 00ab 57390000 		.4byte	.LASF1100
 8484 00af 00       		.byte	0
 8485              		.section	.debug_line,"",%progbits
 8486              	.Ldebug_line0:
 8487 0000 77080000 		.section	.debug_str,"MS",%progbits,1
 8487      02005603 
 8487      00000201 
 8487      FB0E0D00 
 8487      01010101 
 8488              	.LASF770:
 8489 0000 494E5438 		.ascii	"INT8_MAX (__INT8_MAX__)\000"
 8489      5F4D4158 
 8489      20285F5F 
 8489      494E5438 
 8489      5F4D4158 
 8490              	.LASF600:
 8491 0018 5F5F474E 		.ascii	"__GNUCLIKE___SECTION 1\000"
 8491      55434C49 
 8491      4B455F5F 
 8491      5F534543 
 8491      54494F4E 
 8492              	.LASF352:
 8493 002f 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 8493      585F5459 
 8493      5045494E 
 8493      464F5F45 
 8493      5155414C 
 8494              	.LASF816:
 8495 0050 57494E54 		.ascii	"WINT_MIN (__WINT_MIN__)\000"
 8495      5F4D494E 
 8495      20285F5F 
 8495      57494E54 
 8495      5F4D494E 
 8496              	.LASF1191:
 8497 0068 70764974 		.ascii	"pvItemToQueue\000"
 8497      656D546F 
 8497      51756575 
 8497      6500
 8498              	.LASF1187:
 8499 0076 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8499      75654372 
 8499      65617465 
 8499      436F756E 
 8499      74696E67 
 8500              	.LASF294:
 8501 0094 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
 8501      415F4642 
 8501      49545F5F 
 8501      203800
 8502              	.LASF395:
 8503 00a3 5F5F5356 		.ascii	"__SVID_VISIBLE 1\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 190


 8503      49445F56 
 8503      49534942 
 8503      4C452031 
 8503      00
 8504              	.LASF726:
 8505 00b4 5F5F696E 		.ascii	"__int20 +2\000"
 8505      74323020 
 8505      2B3200
 8506              	.LASF1125:
 8507 00bf 696E7438 		.ascii	"int8_t\000"
 8507      5F7400
 8508              	.LASF834:
 8509 00c6 636F6E66 		.ascii	"configTICK_RATE_HZ ( ( portTickType ) 1200 )\000"
 8509      69675449 
 8509      434B5F52 
 8509      4154455F 
 8509      485A2028 
 8510              	.LASF184:
 8511 00f3 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
 8511      43313238 
 8511      5F455053 
 8511      494C4F4E 
 8511      5F5F2031 
 8512              	.LASF702:
 8513 010e 5F5F636F 		.ascii	"__compar_fn_t_defined \000"
 8513      6D706172 
 8513      5F666E5F 
 8513      745F6465 
 8513      66696E65 
 8514              	.LASF570:
 8515 0125 5F524545 		.ascii	"_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._ge"
 8515      4E545F47 
 8515      45544441 
 8515      54455F45 
 8515      52525F50 
 8516 0158 74646174 		.ascii	"tdate_err))\000"
 8516      655F6572 
 8516      72292900 
 8517              	.LASF306:
 8518 0164 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 8518      41525F55 
 8518      4E534947 
 8518      4E45445F 
 8518      5F203100 
 8519              	.LASF1112:
 8520 0178 73697A65 		.ascii	"size_t\000"
 8520      5F7400
 8521              	.LASF576:
 8522 017f 5F474C4F 		.ascii	"_GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)\000"
 8522      42414C5F 
 8522      41544558 
 8522      49542028 
 8522      5F474C4F 
 8523              	.LASF941:
 8524 01a7 74726163 		.ascii	"traceTASK_SWITCHED_IN() \000"
 8524      65544153 
 8524      4B5F5357 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 191


 8524      49544348 
 8524      45445F49 
 8525              	.LASF1047:
 8526 01c0 6C697374 		.ascii	"listSET_LIST_ITEM_VALUE(pxListItem,xValue) ( ( pxLi"
 8526      5345545F 
 8526      4C495354 
 8526      5F495445 
 8526      4D5F5641 
 8527 01f3 73744974 		.ascii	"stItem )->xItemValue = ( xValue ) )\000"
 8527      656D2029 
 8527      2D3E7849 
 8527      74656D56 
 8527      616C7565 
 8528              	.LASF186:
 8529 0217 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
 8529      52414354 
 8529      5F464249 
 8529      545F5F20 
 8529      3700
 8530              	.LASF1124:
 8531 0229 73697A65 		.ascii	"sizetype\000"
 8531      74797065 
 8531      00
 8532              	.LASF1106:
 8533 0232 71756575 		.ascii	"queueQUEUE_IS_MUTEX NULL\000"
 8533      65515545 
 8533      55455F49 
 8533      535F4D55 
 8533      54455820 
 8534              	.LASF840:
 8535 024b 636F6E66 		.ascii	"configIDLE_SHOULD_YIELD 0\000"
 8535      69674944 
 8535      4C455F53 
 8535      484F554C 
 8535      445F5949 
 8536              	.LASF775:
 8537 0265 494E5431 		.ascii	"INT16_MIN (-__INT16_MAX__ - 1)\000"
 8537      365F4D49 
 8537      4E20282D 
 8537      5F5F494E 
 8537      5431365F 
 8538              	.LASF258:
 8539 0284 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 8539      41434355 
 8539      4D5F4D49 
 8539      4E5F5F20 
 8539      282D3058 
 8540              	.LASF250:
 8541 02ab 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 8541      4343554D 
 8541      5F455053 
 8541      494C4F4E 
 8541      5F5F2030 
 8542              	.LASF1168:
 8543 02c8 70635175 		.ascii	"pcQueueName\000"
 8543      6575654E 
 8543      616D6500 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 192


 8544              	.LASF76:
 8545 02d4 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 0x7fffffff\000"
 8545      52444946 
 8545      465F4D41 
 8545      585F5F20 
 8545      30783766 
 8546              	.LASF423:
 8547 02ef 5F4C4F4E 		.ascii	"_LONG_DOUBLE long double\000"
 8547      475F444F 
 8547      55424C45 
 8547      206C6F6E 
 8547      6720646F 
 8548              	.LASF79:
 8549 0308 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
 8549      544D4158 
 8549      5F432863 
 8549      29206320 
 8549      2323204C 
 8550              	.LASF751:
 8551 031e 5F55494E 		.ascii	"_UINT32_T_DECLARED \000"
 8551      5433325F 
 8551      545F4445 
 8551      434C4152 
 8551      45442000 
 8552              	.LASF78:
 8553 0332 5F5F494E 		.ascii	"__INTMAX_MAX__ 0x7fffffffffffffffLL\000"
 8553      544D4158 
 8553      5F4D4158 
 8553      5F5F2030 
 8553      78376666 
 8554              	.LASF171:
 8555 0356 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 8555      4333325F 
 8555      5355424E 
 8555      4F524D41 
 8555      4C5F4D49 
 8556              	.LASF275:
 8557 037d 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 8557      5F494249 
 8557      545F5F20 
 8557      3000
 8558              	.LASF750:
 8559 038b 5F494E54 		.ascii	"_INT32_T_DECLARED \000"
 8559      33325F54 
 8559      5F444543 
 8559      4C415245 
 8559      442000
 8560              	.LASF1022:
 8561 039e 636F6E66 		.ascii	"configENABLE_BACKWARD_COMPATIBILITY 1\000"
 8561      6967454E 
 8561      41424C45 
 8561      5F424143 
 8561      4B574152 
 8562              	.LASF536:
 8563 03c4 5F524545 		.ascii	"_REENT_SIGNAL_SIZE 24\000"
 8563      4E545F53 
 8563      49474E41 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 193


 8563      4C5F5349 
 8563      5A452032 
 8564              	.LASF845:
 8565 03da 636F6E66 		.ascii	"configUSE_ALTERNATIVE_API 0\000"
 8565      69675553 
 8565      455F414C 
 8565      5445524E 
 8565      41544956 
 8566              	.LASF572:
 8567 03f6 5F4B6D61 		.ascii	"_Kmax (sizeof (size_t) << 3)\000"
 8567      78202873 
 8567      697A656F 
 8567      66202873 
 8567      697A655F 
 8568              	.LASF11:
 8569 0413 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 8569      4F4D4943 
 8569      5F434F4E 
 8569      53554D45 
 8569      203100
 8570              	.LASF208:
 8571 0426 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 8571      52414354 
 8571      5F4D494E 
 8571      5F5F2028 
 8571      2D302E35 
 8572              	.LASF72:
 8573 0444 5F5F5743 		.ascii	"__WCHAR_MAX__ 0xffffffffU\000"
 8573      4841525F 
 8573      4D41585F 
 8573      5F203078 
 8573      66666666 
 8574              	.LASF620:
 8575 045e 5F5F434F 		.ascii	"__CONCAT(x,y) __CONCAT1(x,y)\000"
 8575      4E434154 
 8575      28782C79 
 8575      29205F5F 
 8575      434F4E43 
 8576              	.LASF944:
 8577 047b 74726163 		.ascii	"traceLOW_POWER_IDLE_END() \000"
 8577      654C4F57 
 8577      5F504F57 
 8577      45525F49 
 8577      444C455F 
 8578              	.LASF1200:
 8579 0496 70764275 		.ascii	"pvBuffer\000"
 8579      66666572 
 8579      00
 8580              	.LASF598:
 8581 049f 5F5F474E 		.ascii	"__GNUCLIKE___TYPEOF 1\000"
 8581      55434C49 
 8581      4B455F5F 
 8581      5F545950 
 8581      454F4620 
 8582              	.LASF997:
 8583 04b5 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS_FROM_ISR(xEventGroup,ux"
 8583      65455645 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 194


 8583      4E545F47 
 8583      524F5550 
 8583      5F434C45 
 8584 04e8 42697473 		.ascii	"BitsToClear) \000"
 8584      546F436C 
 8584      65617229 
 8584      2000
 8585              	.LASF709:
 8586 04f6 5F535953 		.ascii	"_SYS__LOCALE_H \000"
 8586      5F5F4C4F 
 8586      43414C45 
 8586      5F482000 
 8587              	.LASF1050:
 8588 0506 6C697374 		.ascii	"listGET_HEAD_ENTRY(pxList) ( ( ( pxList )->xListEnd"
 8588      4745545F 
 8588      48454144 
 8588      5F454E54 
 8588      52592870 
 8589 0539 20292E70 		.ascii	" ).pxNext )\000"
 8589      784E6578 
 8589      74202900 
 8590              	.LASF1008:
 8591 0545 7076506F 		.ascii	"pvPortMallocAligned(x,puxStackBuffer) ( ( ( puxStac"
 8591      72744D61 
 8591      6C6C6F63 
 8591      416C6967 
 8591      6E656428 
 8592 0578 6B427566 		.ascii	"kBuffer ) == NULL ) ? ( pvPortMalloc( ( x ) ) ) : ("
 8592      66657220 
 8592      29203D3D 
 8592      204E554C 
 8592      4C202920 
 8593 05ab 20707578 		.ascii	" puxStackBuffer ) )\000"
 8593      53746163 
 8593      6B427566 
 8593      66657220 
 8593      29202900 
 8594              	.LASF15:
 8595 05bf 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 8595      5A454F46 
 8595      5F4C4F4E 
 8595      475F4C4F 
 8595      4E475F5F 
 8596              	.LASF142:
 8597 05d6 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 8597      4C5F4D41 
 8597      585F3130 
 8597      5F455850 
 8597      5F5F2033 
 8598              	.LASF675:
 8599 05ed 5F5F5243 		.ascii	"__RCSID_SOURCE(s) struct __hack\000"
 8599      5349445F 
 8599      534F5552 
 8599      43452873 
 8599      29207374 
 8600              	.LASF198:
 8601 060d 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 195


 8601      4143545F 
 8601      4D494E5F 
 8601      5F20282D 
 8601      302E3552 
 8602              	.LASF394:
 8603 0628 5F5F504F 		.ascii	"__POSIX_VISIBLE 200809\000"
 8603      5349585F 
 8603      56495349 
 8603      424C4520 
 8603      32303038 
 8604              	.LASF234:
 8605 063f 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 8605      41434355 
 8605      4D5F4D41 
 8605      585F5F20 
 8605      30584646 
 8606              	.LASF168:
 8607 065c 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
 8607      4333325F 
 8607      4D494E5F 
 8607      5F203145 
 8607      2D393544 
 8608              	.LASF767:
 8609 0672 494E5450 		.ascii	"INTPTR_MAX (__INTPTR_MAX__)\000"
 8609      54525F4D 
 8609      41582028 
 8609      5F5F494E 
 8609      54505452 
 8610              	.LASF271:
 8611 068e 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 8611      5F494249 
 8611      545F5F20 
 8611      3000
 8612              	.LASF25:
 8613 069c 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 8613      4445525F 
 8613      5044505F 
 8613      454E4449 
 8613      414E5F5F 
 8614              	.LASF29:
 8615 06b6 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 8615      5A455F54 
 8615      5950455F 
 8615      5F20756E 
 8615      7369676E 
 8616              	.LASF174:
 8617 06d1 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 8617      4336345F 
 8617      4D41585F 
 8617      4558505F 
 8617      5F203338 
 8618              	.LASF555:
 8619 06e7 5F524545 		.ascii	"_REENT_MP_FREELIST(ptr) ((ptr)->_freelist)\000"
 8619      4E545F4D 
 8619      505F4652 
 8619      45454C49 
 8619      53542870 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 196


 8620              	.LASF134:
 8621 0712 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 8621      545F4841 
 8621      535F4445 
 8621      4E4F524D 
 8621      5F5F2031 
 8622              	.LASF38:
 8623 0727 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 8623      54385F54 
 8623      5950455F 
 8623      5F207369 
 8623      676E6564 
 8624              	.LASF334:
 8625 0741 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 8625      4D5F4152 
 8625      43485F50 
 8625      524F4649 
 8625      4C452037 
 8626              	.LASF1076:
 8627 0757 71756575 		.ascii	"queueSEND_TO_BACK ( ( BaseT_t ) 0 )\000"
 8627      6553454E 
 8627      445F544F 
 8627      5F424143 
 8627      4B202820 
 8628              	.LASF1203:
 8629 077b 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8629      75655265 
 8629      63656976 
 8629      6546726F 
 8629      6D495352 
 8630              	.LASF1145:
 8631 0790 7854494D 		.ascii	"xTIME_OUT\000"
 8631      455F4F55 
 8631      5400
 8632              	.LASF417:
 8633 079a 5F455846 		.ascii	"_EXFUN(name,proto) name proto\000"
 8633      554E286E 
 8633      616D652C 
 8633      70726F74 
 8633      6F29206E 
 8634              	.LASF854:
 8635 07b8 494E434C 		.ascii	"INCLUDE_vTaskSuspend 1\000"
 8635      5544455F 
 8635      76546173 
 8635      6B537573 
 8635      70656E64 
 8636              	.LASF1056:
 8637 07cf 6C697374 		.ascii	"listGET_OWNER_OF_HEAD_ENTRY(pxList) ( (&( ( pxList "
 8637      4745545F 
 8637      4F574E45 
 8637      525F4F46 
 8637      5F484541 
 8638 0802 292D3E78 		.ascii	")->xListEnd ))->pxNext->pvOwner )\000"
 8638      4C697374 
 8638      456E6420 
 8638      29292D3E 
 8638      70784E65 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 197


 8639              	.LASF157:
 8640 0824 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 8640      43494D41 
 8640      4C5F4449 
 8640      475F5F20 
 8640      313700
 8641              	.LASF153:
 8642 0837 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 8642      424C5F4D 
 8642      494E5F45 
 8642      58505F5F 
 8642      20282D31 
 8643              	.LASF151:
 8644 0850 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 8644      424C5F4D 
 8644      414E545F 
 8644      4449475F 
 8644      5F203533 
 8645              	.LASF796:
 8646 0865 494E545F 		.ascii	"INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)\000"
 8646      46415354 
 8646      31365F4D 
 8646      494E2028 
 8646      2D5F5F49 
 8647              	.LASF1201:
 8648 088e 784A7573 		.ascii	"xJustPeeking\000"
 8648      74506565 
 8648      6B696E67 
 8648      00
 8649              	.LASF101:
 8650 089b 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 8650      4E54385F 
 8650      43286329 
 8650      206300
 8651              	.LASF39:
 8652 08aa 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 8652      5431365F 
 8652      54595045 
 8652      5F5F2073 
 8652      686F7274 
 8653              	.LASF632:
 8654 08c3 5F5F616C 		.ascii	"__aligned(x) __attribute__((__aligned__(x)))\000"
 8654      69676E65 
 8654      64287829 
 8654      205F5F61 
 8654      74747269 
 8655              	.LASF685:
 8656 08f0 5F5F6C6F 		.ascii	"__locks_exclusive(...) __lock_annotate(exclusive_lo"
 8656      636B735F 
 8656      6578636C 
 8656      75736976 
 8656      65282E2E 
 8657 0923 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 8657      756E6374 
 8657      696F6E28 
 8657      5F5F5641 
 8657      5F415247 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 198


 8658              	.LASF914:
 8659 093d 706F7274 		.ascii	"portBYTE_ALIGNMENT_MASK ( 0x0007U )\000"
 8659      42595445 
 8659      5F414C49 
 8659      474E4D45 
 8659      4E545F4D 
 8660              	.LASF939:
 8661 0961 74726163 		.ascii	"traceSTART() \000"
 8661      65535441 
 8661      52542829 
 8661      2000
 8662              	.LASF589:
 8663 096f 5F5F756E 		.ascii	"__unbounded \000"
 8663      626F756E 
 8663      64656420 
 8663      00
 8664              	.LASF830:
 8665 097c 636F6E66 		.ascii	"configUSE_IDLE_HOOK 0\000"
 8665      69675553 
 8665      455F4944 
 8665      4C455F48 
 8665      4F4F4B20 
 8666              	.LASF731:
 8667 0992 5F5F494E 		.ascii	"__INT8 \"hh\"\000"
 8667      54382022 
 8667      68682200 
 8668              	.LASF1190:
 8669 099e 78517565 		.ascii	"xQueueGenericSend\000"
 8669      75654765 
 8669      6E657269 
 8669      6353656E 
 8669      6400
 8670              	.LASF307:
 8671 09b0 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 8671      435F4841 
 8671      56455F53 
 8671      594E435F 
 8671      434F4D50 
 8672              	.LASF779:
 8673 09d5 494E545F 		.ascii	"INT_LEAST16_MAX (__INT_LEAST16_MAX__)\000"
 8673      4C454153 
 8673      5431365F 
 8673      4D415820 
 8673      285F5F49 
 8674              	.LASF860:
 8675 09fb 636F6E66 		.ascii	"configIP_ADDR2 0\000"
 8675      69674950 
 8675      5F414444 
 8675      52322030 
 8675      00
 8676              	.LASF102:
 8677 0a0c 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 0xffff\000"
 8677      4E545F4C 
 8677      45415354 
 8677      31365F4D 
 8677      41585F5F 
 8678              	.LASF1:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 199


 8679 0a28 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 8679      44435F48 
 8679      4F535445 
 8679      445F5F20 
 8679      3100
 8680              	.LASF221:
 8681 0a3a 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 8681      4C465241 
 8681      43545F46 
 8681      4249545F 
 8681      5F203634 
 8682              	.LASF371:
 8683 0a4f 5F4C4442 		.ascii	"_LDBL_EQ_DBL 1\000"
 8683      4C5F4551 
 8683      5F44424C 
 8683      203100
 8684              	.LASF1169:
 8685 0a5e 7848616E 		.ascii	"xHandle\000"
 8685      646C6500 
 8686              	.LASF552:
 8687 0a66 5F524545 		.ascii	"_REENT_MP_RESULT(ptr) ((ptr)->_result)\000"
 8687      4E545F4D 
 8687      505F5245 
 8687      53554C54 
 8687      28707472 
 8688              	.LASF57:
 8689 0a8d 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 8689      545F4641 
 8689      53543634 
 8689      5F545950 
 8689      455F5F20 
 8690              	.LASF32:
 8691 0aaf 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 8691      4E545F54 
 8691      5950455F 
 8691      5F20756E 
 8691      7369676E 
 8692              	.LASF559:
 8693 0aca 5F524545 		.ascii	"_REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok"
 8693      4E545F53 
 8693      5452544F 
 8693      4B5F4C41 
 8693      53542870 
 8694 0afd 5F6C6173 		.ascii	"_last)\000"
 8694      742900
 8695              	.LASF961:
 8696 0b04 74726163 		.ascii	"traceQUEUE_SEND(pxQueue) \000"
 8696      65515545 
 8696      55455F53 
 8696      454E4428 
 8696      70785175 
 8697              	.LASF433:
 8698 0b1e 5F5F5349 		.ascii	"__SIZE_T__ \000"
 8698      5A455F54 
 8698      5F5F2000 
 8699              	.LASF811:
 8700 0b2a 50545244 		.ascii	"PTRDIFF_MAX (__PTRDIFF_MAX__)\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 200


 8700      4946465F 
 8700      4D415820 
 8700      285F5F50 
 8700      54524449 
 8701              	.LASF994:
 8702 0b48 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_BLOCK(xEventGroup,uxBits"
 8702      65455645 
 8702      4E545F47 
 8702      524F5550 
 8702      5F574149 
 8703 0b7b 546F5761 		.ascii	"ToWaitFor) \000"
 8703      6974466F 
 8703      72292000 
 8704              	.LASF304:
 8705 0b87 5F5F474E 		.ascii	"__GNUC_GNU_INLINE__ 1\000"
 8705      55435F47 
 8705      4E555F49 
 8705      4E4C494E 
 8705      455F5F20 
 8706              	.LASF917:
 8707 0b9d 50524956 		.ascii	"PRIVILEGED_FUNCTION \000"
 8707      494C4547 
 8707      45445F46 
 8707      554E4354 
 8707      494F4E20 
 8708              	.LASF946:
 8709 0bb2 74726163 		.ascii	"traceTASK_PRIORITY_INHERIT(pxTCBOfMutexHolder,uxInh"
 8709      65544153 
 8709      4B5F5052 
 8709      494F5249 
 8709      54595F49 
 8710 0be5 65726974 		.ascii	"eritedPriority) \000"
 8710      65645072 
 8710      696F7269 
 8710      74792920 
 8710      00
 8711              	.LASF194:
 8712 0bf6 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
 8712      46524143 
 8712      545F4D41 
 8712      585F5F20 
 8712      30584646 
 8713              	.LASF581:
 8714 0c11 5F5F4153 		.ascii	"__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) "
 8714      4D4E414D 
 8714      4528636E 
 8714      616D6529 
 8714      205F5F58 
 8715 0c44 636E616D 		.ascii	"cname\000"
 8715      6500
 8716              	.LASF466:
 8717 0c4a 5F5F6E65 		.ascii	"__need_wchar_t\000"
 8717      65645F77 
 8717      63686172 
 8717      5F7400
 8718              	.LASF1109:
 8719 0c59 71756575 		.ascii	"queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_A"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 201


 8719      65594945 
 8719      4C445F49 
 8719      465F5553 
 8719      494E475F 
 8720 0c8c 50492829 		.ascii	"PI()\000"
 8720      00
 8721              	.LASF649:
 8722 0c91 5F5F7265 		.ascii	"__result_use_check __attribute__((__warn_unused_res"
 8722      73756C74 
 8722      5F757365 
 8722      5F636865 
 8722      636B205F 
 8723 0cc4 756C745F 		.ascii	"ult__))\000"
 8723      5F292900 
 8724              	.LASF937:
 8725 0ccc 706F7274 		.ascii	"portSETUP_TCB(pxTCB) ( void ) pxTCB\000"
 8725      53455455 
 8725      505F5443 
 8725      42287078 
 8725      54434229 
 8726              	.LASF504:
 8727 0cf0 5F5F6C6F 		.ascii	"__lock_close_recursive(lock) (_CAST_VOID 0)\000"
 8727      636B5F63 
 8727      6C6F7365 
 8727      5F726563 
 8727      75727369 
 8728              	.LASF982:
 8729 0d1c 74726163 		.ascii	"traceTASK_INCREMENT_TICK(xTickCount) \000"
 8729      65544153 
 8729      4B5F494E 
 8729      4352454D 
 8729      454E545F 
 8730              	.LASF479:
 8731 0d42 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
 8731      5F505452 
 8731      44494646 
 8731      5F545F20 
 8731      00
 8732              	.LASF776:
 8733 0d53 494E5431 		.ascii	"INT16_MAX (__INT16_MAX__)\000"
 8733      365F4D41 
 8733      5820285F 
 8733      5F494E54 
 8733      31365F4D 
 8734              	.LASF1154:
 8735 0d6d 70635461 		.ascii	"pcTail\000"
 8735      696C00
 8736              	.LASF291:
 8737 0d74 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 8737      5F494249 
 8737      545F5F20 
 8737      333200
 8738              	.LASF211:
 8739 0d83 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 8739      46524143 
 8739      545F4642 
 8739      49545F5F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 202


 8739      20333200 
 8740              	.LASF448:
 8741 0d97 5F5F7369 		.ascii	"__size_t \000"
 8741      7A655F74 
 8741      2000
 8742              	.LASF588:
 8743 0da1 5F5F626F 		.ascii	"__bounded \000"
 8743      756E6465 
 8743      642000
 8744              	.LASF764:
 8745 0dac 5F5F696E 		.ascii	"__int_fast32_t_defined 1\000"
 8745      745F6661 
 8745      73743332 
 8745      5F745F64 
 8745      6566696E 
 8746              	.LASF986:
 8747 0dc5 74726163 		.ascii	"traceTIMER_EXPIRED(pxTimer) \000"
 8747      6554494D 
 8747      45525F45 
 8747      58504952 
 8747      45442870 
 8748              	.LASF1034:
 8749 0de2 7854696D 		.ascii	"xTimerHandle TimerHandle_t\000"
 8749      65724861 
 8749      6E646C65 
 8749      2054696D 
 8749      65724861 
 8750              	.LASF1150:
 8751 0dfd 70635265 		.ascii	"pcReadFrom\000"
 8751      61644672 
 8751      6F6D00
 8752              	.LASF819:
 8753 0e08 494E5431 		.ascii	"INT16_C(x) __INT16_C(x)\000"
 8753      365F4328 
 8753      7829205F 
 8753      5F494E54 
 8753      31365F43 
 8754              	.LASF397:
 8755 0e20 5F504F49 		.ascii	"_POINTER_INT long\000"
 8755      4E544552 
 8755      5F494E54 
 8755      206C6F6E 
 8755      6700
 8756              	.LASF190:
 8757 0e32 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 8757      52414354 
 8757      5F455053 
 8757      494C4F4E 
 8757      5F5F2030 
 8758              	.LASF619:
 8759 0e4e 5F5F434F 		.ascii	"__CONCAT1(x,y) x ## y\000"
 8759      4E434154 
 8759      3128782C 
 8759      79292078 
 8759      20232320 
 8760              	.LASF437:
 8761 0e64 5F545F53 		.ascii	"_T_SIZE \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 203


 8761      495A4520 
 8761      00
 8762              	.LASF97:
 8763 0e6d 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 8763      5433325F 
 8763      43286329 
 8763      20632023 
 8763      23204C00 
 8764              	.LASF1046:
 8765 0e81 6C697374 		.ascii	"listGET_LIST_ITEM_OWNER(pxListItem) ( ( pxListItem "
 8765      4745545F 
 8765      4C495354 
 8765      5F495445 
 8765      4D5F4F57 
 8766 0eb4 292D3E70 		.ascii	")->pvOwner )\000"
 8766      764F776E 
 8766      65722029 
 8766      00
 8767              	.LASF24:
 8768 0ec1 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 8768      4445525F 
 8768      4249475F 
 8768      454E4449 
 8768      414E5F5F 
 8769              	.LASF372:
 8770 0edb 5F465657 		.ascii	"_FVWRITE_IN_STREAMIO 1\000"
 8770      52495445 
 8770      5F494E5F 
 8770      53545245 
 8770      414D494F 
 8771              	.LASF858:
 8772 0ef2 636F6E66 		.ascii	"configIP_ADDR0 192\000"
 8772      69674950 
 8772      5F414444 
 8772      52302031 
 8772      393200
 8773              	.LASF270:
 8774 0f05 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 8774      5F464249 
 8774      545F5F20 
 8774      333100
 8775              	.LASF1206:
 8776 0f14 75785265 		.ascii	"uxReturn\000"
 8776      7475726E 
 8776      00
 8777              	.LASF1092:
 8778 0f1d 78517565 		.ascii	"xQueueSendToFrontFromISR(xQueue,pvItemToQueue,pxHig"
 8778      75655365 
 8778      6E64546F 
 8778      46726F6E 
 8778      7446726F 
 8779 0f50 68657250 		.ascii	"herPriorityTaskWoken) xQueueGenericSendFromISR( ( x"
 8779      72696F72 
 8779      69747954 
 8779      61736B57 
 8779      6F6B656E 
 8780 0f83 51756575 		.ascii	"Queue ), ( pvItemToQueue ), ( pxHigherPriorityTaskW"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 204


 8780      6520292C 
 8780      20282070 
 8780      76497465 
 8780      6D546F51 
 8781 0fb6 6F6B656E 		.ascii	"oken ), queueSEND_TO_FRONT )\000"
 8781      20292C20 
 8781      71756575 
 8781      6553454E 
 8781      445F544F 
 8782              	.LASF300:
 8783 0fd3 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 8783      415F4642 
 8783      49545F5F 
 8783      20363400 
 8784              	.LASF1132:
 8785 0fe3 70784E65 		.ascii	"pxNext\000"
 8785      787400
 8786              	.LASF748:
 8787 0fea 5F55494E 		.ascii	"_UINT16_T_DECLARED \000"
 8787      5431365F 
 8787      545F4445 
 8787      434C4152 
 8787      45442000 
 8788              	.LASF1007:
 8789 0ffe 706F7274 		.ascii	"portYIELD_WITHIN_API portYIELD\000"
 8789      5949454C 
 8789      445F5749 
 8789      5448494E 
 8789      5F415049 
 8790              	.LASF278:
 8791 101d 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 8791      515F4642 
 8791      49545F5F 
 8791      20313600 
 8792              	.LASF791:
 8793 102d 494E545F 		.ascii	"INT_LEAST64_MAX (__INT_LEAST64_MAX__)\000"
 8793      4C454153 
 8793      5436345F 
 8793      4D415820 
 8793      285F5F49 
 8794              	.LASF534:
 8795 1053 5F524545 		.ascii	"_REENT_EMERGENCY_SIZE 25\000"
 8795      4E545F45 
 8795      4D455247 
 8795      454E4359 
 8795      5F53495A 
 8796              	.LASF933:
 8797 106c 494E434C 		.ascii	"INCLUDE_xTaskGetSchedulerState 0\000"
 8797      5544455F 
 8797      78546173 
 8797      6B476574 
 8797      53636865 
 8798              	.LASF861:
 8799 108d 636F6E66 		.ascii	"configIP_ADDR3 201\000"
 8799      69674950 
 8799      5F414444 
 8799      52332032 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 205


 8799      303100
 8800              	.LASF669:
 8801 10a0 5F5F7765 		.ascii	"__weak_reference(sym,alias) __asm__(\".weak \" #ali"
 8801      616B5F72 
 8801      65666572 
 8801      656E6365 
 8801      2873796D 
 8802 10d1 6173293B 		.ascii	"as); __asm__(\".equ \" #alias \", \" #sym)\000"
 8802      205F5F61 
 8802      736D5F5F 
 8802      28222E65 
 8802      71752022 
 8803              	.LASF112:
 8804 10f8 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 0xffffffffU\000"
 8804      4E545F46 
 8804      41535438 
 8804      5F4D4158 
 8804      5F5F2030 
 8805              	.LASF1176:
 8806 1117 75785175 		.ascii	"uxQueueLength\000"
 8806      6575654C 
 8806      656E6774 
 8806      6800
 8807              	.LASF170:
 8808 1125 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 8808      4333325F 
 8808      45505349 
 8808      4C4F4E5F 
 8808      5F203145 
 8809              	.LASF591:
 8810 113e 5F5F6861 		.ascii	"__has_extension __has_feature\000"
 8810      735F6578 
 8810      74656E73 
 8810      696F6E20 
 8810      5F5F6861 
 8811              	.LASF467:
 8812 115c 4E554C4C 		.ascii	"NULL\000"
 8812      00
 8813              	.LASF541:
 8814 1161 5F524545 		.ascii	"_REENT_CHECK_MP(ptr) \000"
 8814      4E545F43 
 8814      4845434B 
 8814      5F4D5028 
 8814      70747229 
 8815              	.LASF247:
 8816 1177 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 8816      4343554D 
 8816      5F494249 
 8816      545F5F20 
 8816      333200
 8817              	.LASF773:
 8818 118a 494E545F 		.ascii	"INT_LEAST8_MAX (__INT_LEAST8_MAX__)\000"
 8818      4C454153 
 8818      54385F4D 
 8818      41582028 
 8818      5F5F494E 
 8819              	.LASF1182:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 206


 8820 11ae 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8820      75654769 
 8820      76654D75 
 8820      74657852 
 8820      65637572 
 8821              	.LASF1115:
 8822 11c7 5F5F7569 		.ascii	"__uint8_t\000"
 8822      6E74385F 
 8822      7400
 8823              	.LASF287:
 8824 11d1 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 8824      5F494249 
 8824      545F5F20 
 8824      3800
 8825              	.LASF358:
 8826 11df 5F5F4E45 		.ascii	"__NEWLIB_H__ 1\000"
 8826      574C4942 
 8826      5F485F5F 
 8826      203100
 8827              	.LASF863:
 8828 11ee 636F6E66 		.ascii	"configNET_MASK1 255\000"
 8828      69674E45 
 8828      545F4D41 
 8828      534B3120 
 8828      32353500 
 8829              	.LASF344:
 8830 1202 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 8830      505F4650 
 8830      5F5F2031 
 8830      00
 8831              	.LASF741:
 8832 120f 5F5F4C45 		.ascii	"__LEAST32 \"l\"\000"
 8832      41535433 
 8832      3220226C 
 8832      2200
 8833              	.LASF218:
 8834 121d 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
 8834      46524143 
 8834      545F4D49 
 8834      4E5F5F20 
 8834      282D302E 
 8835              	.LASF1224:
 8836 123e 46726565 		.ascii	"FreeRTOS/queue.c\000"
 8836      52544F53 
 8836      2F717565 
 8836      75652E63 
 8836      00
 8837              	.LASF398:
 8838 124f 5F5F5241 		.ascii	"__RAND_MAX\000"
 8838      4E445F4D 
 8838      415800
 8839              	.LASF1020:
 8840 125a 6D74434F 		.ascii	"mtCOVERAGE_TEST_MARKER() \000"
 8840      56455241 
 8840      47455F54 
 8840      4553545F 
 8840      4D41524B 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 207


 8841              	.LASF113:
 8842 1274 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 0xffffffffU\000"
 8842      4E545F46 
 8842      41535431 
 8842      365F4D41 
 8842      585F5F20 
 8843              	.LASF790:
 8844 1294 494E545F 		.ascii	"INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)\000"
 8844      4C454153 
 8844      5436345F 
 8844      4D494E20 
 8844      282D5F5F 
 8845              	.LASF62:
 8846 12bf 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 8846      54505452 
 8846      5F545950 
 8846      455F5F20 
 8846      696E7400 
 8847              	.LASF116:
 8848 12d3 5F5F494E 		.ascii	"__INTPTR_MAX__ 0x7fffffff\000"
 8848      54505452 
 8848      5F4D4158 
 8848      5F5F2030 
 8848      78376666 
 8849              	.LASF1069:
 8850 12ed 7461736B 		.ascii	"taskENABLE_INTERRUPTS() portENABLE_INTERRUPTS()\000"
 8850      454E4142 
 8850      4C455F49 
 8850      4E544552 
 8850      52555054 
 8851              	.LASF602:
 8852 131d 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_CONSTANT_P 1\000"
 8852      55434C49 
 8852      4B455F42 
 8852      55494C54 
 8852      494E5F43 
 8853              	.LASF378:
 8854 133d 5F5F474E 		.ascii	"__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_M"
 8854      55435F50 
 8854      52455245 
 8854      51286D61 
 8854      6A2C6D69 
 8855 1370 494E4F52 		.ascii	"INOR__ >= ((maj) << 16) + (min))\000"
 8855      5F5F203E 
 8855      3D202828 
 8855      6D616A29 
 8855      203C3C20 
 8856              	.LASF203:
 8857 1391 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 8857      52414354 
 8857      5F4D494E 
 8857      5F5F2030 
 8857      2E305552 
 8858              	.LASF964:
 8859 13a6 74726163 		.ascii	"traceQUEUE_PEEK(pxQueue) \000"
 8859      65515545 
 8859      55455F50 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 208


 8859      45454B28 
 8859      70785175 
 8860              	.LASF1057:
 8861 13c0 6C697374 		.ascii	"listIS_CONTAINED_WITHIN(pxList,pxListItem) ( ( Base"
 8861      49535F43 
 8861      4F4E5441 
 8861      494E4544 
 8861      5F574954 
 8862 13f3 545F7420 		.ascii	"T_t ) ( ( pxListItem )->pvContainer == ( void * ) ("
 8862      29202820 
 8862      28207078 
 8862      4C697374 
 8862      4974656D 
 8863 1426 2070784C 		.ascii	" pxList ) ) )\000"
 8863      69737420 
 8863      29202920 
 8863      2900
 8864              	.LASF1225:
 8865 1434 433A5C55 		.ascii	"C:\\Users\\STUDENT\\Desktop\\RSC\\Embedded\\Interup"
 8865      73657273 
 8865      5C535455 
 8865      44454E54 
 8865      5C446573 
 8866 1461 747300   		.ascii	"ts\000"
 8867              	.LASF411:
 8868 1464 5F434F4E 		.ascii	"_CONST const\000"
 8868      53542063 
 8868      6F6E7374 
 8868      00
 8869              	.LASF1220:
 8870 1471 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8870      75654973 
 8870      51756575 
 8870      6546756C 
 8870      6C46726F 
 8871              	.LASF799:
 8872 148a 494E545F 		.ascii	"INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)\000"
 8872      46415354 
 8872      33325F4D 
 8872      494E2028 
 8872      2D5F5F49 
 8873              	.LASF435:
 8874 14b3 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 8874      5F53495A 
 8874      455F545F 
 8874      482000
 8875              	.LASF549:
 8876 14c2 5F524545 		.ascii	"_REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._s"
 8876      4E545F52 
 8876      414E4434 
 8876      385F5345 
 8876      45442870 
 8877 14f5 65656429 		.ascii	"eed)\000"
 8877      00
 8878              	.LASF50:
 8879 14fa 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 8879      4E545F4C 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 209


 8879      45415354 
 8879      385F5459 
 8879      50455F5F 
 8880              	.LASF1217:
 8881 151d 70727649 		.ascii	"prvIsQueueEmpty\000"
 8881      73517565 
 8881      7565456D 
 8881      70747900 
 8882              	.LASF388:
 8883 152d 5F5F4154 		.ascii	"__ATFILE_VISIBLE 1\000"
 8883      46494C45 
 8883      5F564953 
 8883      49424C45 
 8883      203100
 8884              	.LASF236:
 8885 1540 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 8885      43554D5F 
 8885      46424954 
 8885      5F5F2031 
 8885      3500
 8886              	.LASF883:
 8887 1552 706F7274 		.ascii	"portCHAR char\000"
 8887      43484152 
 8887      20636861 
 8887      7200
 8888              	.LASF242:
 8889 1560 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
 8889      4343554D 
 8889      5F494249 
 8889      545F5F20 
 8889      313600
 8890              	.LASF1119:
 8891 1573 6C6F6E67 		.ascii	"long int\000"
 8891      20696E74 
 8891      00
 8892              	.LASF111:
 8893 157c 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 0x7fffffffffffffffLL\000"
 8893      545F4641 
 8893      53543634 
 8893      5F4D4158 
 8893      5F5F2030 
 8894              	.LASF1177:
 8895 15a4 70785175 		.ascii	"pxQueue\000"
 8895      65756500 
 8896              	.LASF145:
 8897 15ac 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 8897      4C5F4D49 
 8897      4E5F5F20 
 8897      2828646F 
 8897      75626C65 
 8898              	.LASF927:
 8899 15db 636F6E66 		.ascii	"configUSE_TIMERS 0\000"
 8899      69675553 
 8899      455F5449 
 8899      4D455253 
 8899      203000
 8900              	.LASF988:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 210


 8901 15ee 74726163 		.ascii	"traceMALLOC(pvAddress,uiSize) \000"
 8901      654D414C 
 8901      4C4F4328 
 8901      70764164 
 8901      64726573 
 8902              	.LASF494:
 8903 160d 5F5F5F69 		.ascii	"___int_least16_t_defined 1\000"
 8903      6E745F6C 
 8903      65617374 
 8903      31365F74 
 8903      5F646566 
 8904              	.LASF346:
 8905 1628 5F5F4152 		.ascii	"__ARM_ARCH_7M__ 1\000"
 8905      4D5F4152 
 8905      43485F37 
 8905      4D5F5F20 
 8905      3100
 8906              	.LASF1152:
 8907 163a 51756575 		.ascii	"QueueDefinition\000"
 8907      65446566 
 8907      696E6974 
 8907      696F6E00 
 8908              	.LASF54:
 8909 164a 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 8909      545F4641 
 8909      5354385F 
 8909      54595045 
 8909      5F5F2069 
 8910              	.LASF427:
 8911 1661 5F4E4F49 		.ascii	"_NOINLINE __attribute__ ((__noinline__))\000"
 8911      4E4C494E 
 8911      45205F5F 
 8911      61747472 
 8911      69627574 
 8912              	.LASF298:
 8913 168a 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 8913      415F4642 
 8913      49545F5F 
 8913      20333200 
 8914              	.LASF537:
 8915 169a 5F4E5F4C 		.ascii	"_N_LISTS 30\000"
 8915      49535453 
 8915      20333000 
 8916              	.LASF1079:
 8917 16a6 71756575 		.ascii	"queueQUEUE_TYPE_BASE ( ( uint8_t ) 0U )\000"
 8917      65515545 
 8917      55455F54 
 8917      5950455F 
 8917      42415345 
 8918              	.LASF235:
 8919 16ce 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 8919      41434355 
 8919      4D5F4550 
 8919      53494C4F 
 8919      4E5F5F20 
 8920              	.LASF81:
 8921 16ec 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 211


 8921      4E544D41 
 8921      585F4328 
 8921      63292063 
 8921      20232320 
 8922              	.LASF28:
 8923 1704 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 8923      5A454F46 
 8923      5F504F49 
 8923      4E544552 
 8923      5F5F2034 
 8924              	.LASF46:
 8925 1719 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 8925      545F4C45 
 8925      41535438 
 8925      5F545950 
 8925      455F5F20 
 8926              	.LASF310:
 8927 1739 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 8927      435F4154 
 8927      4F4D4943 
 8927      5F424F4F 
 8927      4C5F4C4F 
 8928              	.LASF426:
 8929 1757 5F454C49 		.ascii	"_ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__a"
 8929      4441424C 
 8929      455F494E 
 8929      4C494E45 
 8929      20657874 
 8930 178a 6C776179 		.ascii	"lways_inline__))\000"
 8930      735F696E 
 8930      6C696E65 
 8930      5F5F2929 
 8930      00
 8931              	.LASF1219:
 8932 179b 70727649 		.ascii	"prvIsQueueFull\000"
 8932      73517565 
 8932      75654675 
 8932      6C6C00
 8933              	.LASF1110:
 8934 17aa 7072764C 		.ascii	"prvLockQueue(pxQueue) taskENTER_CRITICAL(); { if( ("
 8934      6F636B51 
 8934      75657565 
 8934      28707851 
 8934      75657565 
 8935 17dd 20707851 		.ascii	" pxQueue )->xRxLock == queueUNLOCKED ) { ( pxQueue "
 8935      75657565 
 8935      20292D3E 
 8935      7852784C 
 8935      6F636B20 
 8936 1810 292D3E78 		.ascii	")->xRxLock = queueLOCKED_UNMODIFIED; } if( ( pxQueu"
 8936      52784C6F 
 8936      636B203D 
 8936      20717565 
 8936      75654C4F 
 8937 1843 6520292D 		.ascii	"e )->xTxLock == queueUNLOCKED ) { ( pxQueue )->xTxL"
 8937      3E785478 
 8937      4C6F636B 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 212


 8937      203D3D20 
 8937      71756575 
 8938 1876 6F636B20 		.ascii	"ock = queueLOCKED_UNMODIFIED; } } taskEXIT_CRITICAL"
 8938      3D207175 
 8938      6575654C 
 8938      4F434B45 
 8938      445F554E 
 8939 18a9 282900   		.ascii	"()\000"
 8940              	.LASF768:
 8941 18ac 55494E54 		.ascii	"UINTPTR_MAX (__UINTPTR_MAX__)\000"
 8941      5054525F 
 8941      4D415820 
 8941      285F5F55 
 8941      494E5450 
 8942              	.LASF906:
 8943 18ca 706F7274 		.ascii	"portTASK_FUNCTION(vFunction,pvParameters) void vFun"
 8943      5441534B 
 8943      5F46554E 
 8943      4354494F 
 8943      4E287646 
 8944 18fd 6374696F 		.ascii	"ction( void *pvParameters )\000"
 8944      6E282076 
 8944      6F696420 
 8944      2A707650 
 8944      6172616D 
 8945              	.LASF292:
 8946 1919 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 8946      5F464249 
 8946      545F5F20 
 8946      363300
 8947              	.LASF345:
 8948 1928 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 8948      554D425F 
 8948      494E5445 
 8948      52574F52 
 8948      4B5F5F20 
 8949              	.LASF224:
 8950 193e 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 8950      4C465241 
 8950      43545F4D 
 8950      41585F5F 
 8950      20305846 
 8951              	.LASF1066:
 8952 196a 7461736B 		.ascii	"taskENTER_CRITICAL() portENTER_CRITICAL()\000"
 8952      454E5445 
 8952      525F4352 
 8952      49544943 
 8952      414C2829 
 8953              	.LASF1118:
 8954 1994 73686F72 		.ascii	"short unsigned int\000"
 8954      7420756E 
 8954      7369676E 
 8954      65642069 
 8954      6E7400
 8955              	.LASF1023:
 8956 19a7 65546173 		.ascii	"eTaskStateGet eTaskGetState\000"
 8956      6B537461 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 213


 8956      74654765 
 8956      74206554 
 8956      61736B47 
 8957              	.LASF623:
 8958 19c3 5F5F636F 		.ascii	"__const const\000"
 8958      6E737420 
 8958      636F6E73 
 8958      7400
 8959              	.LASF444:
 8960 19d1 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 8960      455F545F 
 8960      4445434C 
 8960      41524544 
 8960      2000
 8961              	.LASF36:
 8962 19e3 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 8962      41523332 
 8962      5F545950 
 8962      455F5F20 
 8962      6C6F6E67 
 8963              	.LASF385:
 8964 1a05 5F504F53 		.ascii	"_POSIX_C_SOURCE 200809L\000"
 8964      49585F43 
 8964      5F534F55 
 8964      52434520 
 8964      32303038 
 8965              	.LASF617:
 8966 1a1d 5F5F4343 		.ascii	"__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\000"
 8966      5F535550 
 8966      504F5254 
 8966      535F4459 
 8966      4E414D49 
 8967              	.LASF114:
 8968 1a40 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 0xffffffffU\000"
 8968      4E545F46 
 8968      41535433 
 8968      325F4D41 
 8968      585F5F20 
 8969              	.LASF127:
 8970 1a60 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 8970      545F4D41 
 8970      585F4558 
 8970      505F5F20 
 8970      31323800 
 8971              	.LASF14:
 8972 1a74 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 8972      5A454F46 
 8972      5F4C4F4E 
 8972      475F5F20 
 8972      3400
 8973              	.LASF618:
 8974 1a86 5F5F5028 		.ascii	"__P(protos) protos\000"
 8974      70726F74 
 8974      6F732920 
 8974      70726F74 
 8974      6F7300
 8975              	.LASF1059:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 214


 8976 1a99 6C697374 		.ascii	"listLIST_IS_INITIALISED(pxList) ( ( pxList )->xList"
 8976      4C495354 
 8976      5F49535F 
 8976      494E4954 
 8976      49414C49 
 8977 1acc 456E642E 		.ascii	"End.xItemValue == portMAX_DELAY )\000"
 8977      78497465 
 8977      6D56616C 
 8977      7565203D 
 8977      3D20706F 
 8978              	.LASF424:
 8979 1aee 5F504152 		.ascii	"_PARAMS(paramlist) paramlist\000"
 8979      414D5328 
 8979      70617261 
 8979      6D6C6973 
 8979      74292070 
 8980              	.LASF664:
 8981 1b0b 5F5F7374 		.ascii	"__strfmonlike(fmtarg,firstvararg) __attribute__((__"
 8981      72666D6F 
 8981      6E6C696B 
 8981      6528666D 
 8981      74617267 
 8982 1b3e 666F726D 		.ascii	"format__ (__strfmon__, fmtarg, firstvararg)))\000"
 8982      61745F5F 
 8982      20285F5F 
 8982      73747266 
 8982      6D6F6E5F 
 8983              	.LASF403:
 8984 1b6c 5F524541 		.ascii	"_READ_WRITE_BUFSIZE_TYPE int\000"
 8984      445F5752 
 8984      4954455F 
 8984      42554653 
 8984      495A455F 
 8985              	.LASF983:
 8986 1b89 74726163 		.ascii	"traceTIMER_CREATE(pxNewTimer) \000"
 8986      6554494D 
 8986      45525F43 
 8986      52454154 
 8986      45287078 
 8987              	.LASF18:
 8988 1ba8 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 8988      5A454F46 
 8988      5F444F55 
 8988      424C455F 
 8988      5F203800 
 8989              	.LASF517:
 8990 1bbc 5F434C4F 		.ascii	"_CLOCK_T_ unsigned long\000"
 8990      434B5F54 
 8990      5F20756E 
 8990      7369676E 
 8990      6564206C 
 8991              	.LASF1014:
 8992 1bd4 636F6E66 		.ascii	"configUSE_QUEUE_SETS 0\000"
 8992      69675553 
 8992      455F5155 
 8992      4555455F 
 8992      53455453 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 215


 8993              	.LASF918:
 8994 1beb 50524956 		.ascii	"PRIVILEGED_DATA \000"
 8994      494C4547 
 8994      45445F44 
 8994      41544120 
 8994      00
 8995              	.LASF1196:
 8996 1bfc 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8996      75654765 
 8996      6E657269 
 8996      6353656E 
 8996      6446726F 
 8997              	.LASF1163:
 8998 1c15 75785175 		.ascii	"uxQueueNumber\000"
 8998      6575654E 
 8998      756D6265 
 8998      7200
 8999              	.LASF736:
 9000 1c23 5F5F4641 		.ascii	"__FAST16 \000"
 9000      53543136 
 9000      2000
 9001              	.LASF1000:
 9002 1c2d 74726163 		.ascii	"traceEVENT_GROUP_DELETE(xEventGroup) \000"
 9002      65455645 
 9002      4E545F47 
 9002      524F5550 
 9002      5F44454C 
 9003              	.LASF789:
 9004 1c53 55494E54 		.ascii	"UINT64_MAX (__UINT64_MAX__)\000"
 9004      36345F4D 
 9004      41582028 
 9004      5F5F5549 
 9004      4E543634 
 9005              	.LASF392:
 9006 1c6f 5F5F4C41 		.ascii	"__LARGEFILE_VISIBLE 0\000"
 9006      52474546 
 9006      494C455F 
 9006      56495349 
 9006      424C4520 
 9007              	.LASF176:
 9008 1c85 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 9008      4336345F 
 9008      4D41585F 
 9008      5F20392E 
 9008      39393939 
 9009              	.LASF361:
 9010 1cab 5F5F4E45 		.ascii	"__NEWLIB__ 2\000"
 9010      574C4942 
 9010      5F5F2032 
 9010      00
 9011              	.LASF880:
 9012 1cb8 65727251 		.ascii	"errQUEUE_YIELD ( -5 )\000"
 9012      55455545 
 9012      5F594945 
 9012      4C442028 
 9012      202D3520 
 9013              	.LASF680:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 216


 9014 1cce 5F5F4445 		.ascii	"__DEQUALIFY(type,var) ((type)(__uintptr_t)(const vo"
 9014      5155414C 
 9014      49465928 
 9014      74797065 
 9014      2C766172 
 9015 1d01 6C617469 		.ascii	"latile void *)(var))\000"
 9015      6C652076 
 9015      6F696420 
 9015      2A292876 
 9015      61722929 
 9016              	.LASF126:
 9017 1d16 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 9017      545F4D49 
 9017      4E5F3130 
 9017      5F455850 
 9017      5F5F2028 
 9018              	.LASF180:
 9019 1d2f 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
 9019      43313238 
 9019      5F4D494E 
 9019      5F455850 
 9019      5F5F2028 
 9020              	.LASF129:
 9021 1d4a 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 9021      545F4445 
 9021      43494D41 
 9021      4C5F4449 
 9021      475F5F20 
 9022              	.LASF935:
 9023 1d60 706F7274 		.ascii	"portCLEAN_UP_TCB(pxTCB) ( void ) pxTCB\000"
 9023      434C4541 
 9023      4E5F5550 
 9023      5F544342 
 9023      28707854 
 9024              	.LASF96:
 9025 1d87 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 0x7fffffffL\000"
 9025      545F4C45 
 9025      41535433 
 9025      325F4D41 
 9025      585F5F20 
 9026              	.LASF1149:
 9027 1da7 51756575 		.ascii	"QueueHandle_t\000"
 9027      6548616E 
 9027      646C655F 
 9027      7400
 9028              	.LASF1114:
 9029 1db5 7369676E 		.ascii	"signed char\000"
 9029      65642063 
 9029      68617200 
 9030              	.LASF1126:
 9031 1dc1 75696E74 		.ascii	"uint8_t\000"
 9031      385F7400 
 9032              	.LASF806:
 9033 1dc9 494E544D 		.ascii	"INTMAX_MIN (-INTMAX_MAX - 1)\000"
 9033      41585F4D 
 9033      494E2028 
 9033      2D494E54 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 217


 9033      4D41585F 
 9034              	.LASF1049:
 9035 1de6 6C697374 		.ascii	"listGET_ITEM_VALUE_OF_HEAD_ENTRY(pxList) ( ( ( pxLi"
 9035      4745545F 
 9035      4954454D 
 9035      5F56414C 
 9035      55455F4F 
 9036 1e19 73742029 		.ascii	"st )->xListEnd ).pxNext->xItemValue )\000"
 9036      2D3E784C 
 9036      69737445 
 9036      6E642029 
 9036      2E70784E 
 9037              	.LASF582:
 9038 1e3f 5F5F7074 		.ascii	"__ptr_t void *\000"
 9038      725F7420 
 9038      766F6964 
 9038      202A00
 9039              	.LASF369:
 9040 1e4e 5F484156 		.ascii	"_HAVE_LONG_DOUBLE 1\000"
 9040      455F4C4F 
 9040      4E475F44 
 9040      4F55424C 
 9040      45203100 
 9041              	.LASF551:
 9042 1e62 5F524545 		.ascii	"_REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._ad"
 9042      4E545F52 
 9042      414E4434 
 9042      385F4144 
 9042      44287074 
 9043 1e95 642900   		.ascii	"d)\000"
 9044              	.LASF644:
 9045 1e98 5F5F616C 		.ascii	"__always_inline __attribute__((__always_inline__))\000"
 9045      77617973 
 9045      5F696E6C 
 9045      696E6520 
 9045      5F5F6174 
 9046              	.LASF196:
 9047 1ecb 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 9047      4143545F 
 9047      46424954 
 9047      5F5F2031 
 9047      3500
 9048              	.LASF1030:
 9049 1edd 7854696D 		.ascii	"xTimeOutType TimeOut_t\000"
 9049      654F7574 
 9049      54797065 
 9049      2054696D 
 9049      654F7574 
 9050              	.LASF260:
 9051 1ef4 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 9051      41434355 
 9051      4D5F4550 
 9051      53494C4F 
 9051      4E5F5F20 
 9052              	.LASF4:
 9053 1f13 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 1\000"
 9053      55435F50 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 218


 9053      41544348 
 9053      4C455645 
 9053      4C5F5F20 
 9054              	.LASF313:
 9055 1f29 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 9055      435F4154 
 9055      4F4D4943 
 9055      5F434841 
 9055      5233325F 
 9056              	.LASF635:
 9057 1f4b 5F5F616C 		.ascii	"__alloc_align(x) __attribute__((__alloc_align__(x))"
 9057      6C6F635F 
 9057      616C6967 
 9057      6E287829 
 9057      205F5F61 
 9058 1f7e 2900     		.ascii	")\000"
 9059              	.LASF529:
 9060 1f80 5F52414E 		.ascii	"_RAND48_SEED_2 (0x1234)\000"
 9060      4434385F 
 9060      53454544 
 9060      5F322028 
 9060      30783132 
 9061              	.LASF1012:
 9062 1f98 636F6E66 		.ascii	"configPRE_SLEEP_PROCESSING(x) \000"
 9062      69675052 
 9062      455F534C 
 9062      4545505F 
 9062      50524F43 
 9063              	.LASF991:
 9064 1fb7 74726163 		.ascii	"traceEVENT_GROUP_CREATE_FAILED() \000"
 9064      65455645 
 9064      4E545F47 
 9064      524F5550 
 9064      5F435245 
 9065              	.LASF887:
 9066 1fd9 706F7274 		.ascii	"portSHORT short\000"
 9066      53484F52 
 9066      54207368 
 9066      6F727400 
 9067              	.LASF553:
 9068 1fe9 5F524545 		.ascii	"_REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)\000"
 9068      4E545F4D 
 9068      505F5245 
 9068      53554C54 
 9068      5F4B2870 
 9069              	.LASF957:
 9070 2014 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE(pxMutex) \000"
 9070      6554414B 
 9070      455F4D55 
 9070      5445585F 
 9070      52454355 
 9071              	.LASF420:
 9072 2038 5F444546 		.ascii	"_DEFUN(name,arglist,args) name(args)\000"
 9072      554E286E 
 9072      616D652C 
 9072      6172676C 
 9072      6973742C 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 219


 9073              	.LASF653:
 9074 205d 5F5F7072 		.ascii	"__predict_true(exp) __builtin_expect((exp), 1)\000"
 9074      65646963 
 9074      745F7472 
 9074      75652865 
 9074      78702920 
 9075              	.LASF1180:
 9076 208c 78526574 		.ascii	"xReturn\000"
 9076      75726E00 
 9077              	.LASF567:
 9078 2094 5F524545 		.ascii	"_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wc"
 9078      4E545F57 
 9078      43535254 
 9078      4F4D4253 
 9078      5F535441 
 9079 20c7 7372746F 		.ascii	"srtombs_state)\000"
 9079      6D62735F 
 9079      73746174 
 9079      652900
 9080              	.LASF124:
 9081 20d6 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 9081      545F4449 
 9081      475F5F20 
 9081      3600
 9082              	.LASF837:
 9083 20e4 636F6E66 		.ascii	"configMAX_TASK_NAME_LEN ( 12 )\000"
 9083      69674D41 
 9083      585F5441 
 9083      534B5F4E 
 9083      414D455F 
 9084              	.LASF959:
 9085 2103 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE() \000"
 9085      65435245 
 9085      4154455F 
 9085      434F554E 
 9085      54494E47 
 9086              	.LASF1156:
 9087 2125 78546173 		.ascii	"xTasksWaitingToSend\000"
 9087      6B735761 
 9087      6974696E 
 9087      67546F53 
 9087      656E6400 
 9088              	.LASF586:
 9089 2139 5F5F6174 		.ascii	"__attribute_format_strfmon__(a,b) \000"
 9089      74726962 
 9089      7574655F 
 9089      666F726D 
 9089      61745F73 
 9090              	.LASF443:
 9091 215c 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 9091      5F53495A 
 9091      455F545F 
 9091      44454649 
 9091      4E45445F 
 9092              	.LASF491:
 9093 2172 5F5F5F69 		.ascii	"___int32_t_defined 1\000"
 9093      6E743332 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 220


 9093      5F745F64 
 9093      6566696E 
 9093      65642031 
 9094              	.LASF60:
 9095 2187 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 9095      4E545F46 
 9095      41535433 
 9095      325F5459 
 9095      50455F5F 
 9096              	.LASF1175:
 9097 21a9 78517565 		.ascii	"xQueueGenericCreate\000"
 9097      75654765 
 9097      6E657269 
 9097      63437265 
 9097      61746500 
 9098              	.LASF17:
 9099 21bd 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 9099      5A454F46 
 9099      5F464C4F 
 9099      41545F5F 
 9099      203400
 9100              	.LASF227:
 9101 21d0 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 9101      4343554D 
 9101      5F494249 
 9101      545F5F20 
 9101      3800
 9102              	.LASF609:
 9103 21e2 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_RELOPS \000"
 9103      55434C49 
 9103      4B455F4D 
 9103      4154485F 
 9103      4255494C 
 9104              	.LASF128:
 9105 2202 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 9105      545F4D41 
 9105      585F3130 
 9105      5F455850 
 9105      5F5F2033 
 9106              	.LASF578:
 9107 2218 5F5F504D 		.ascii	"__PMT(args) args\000"
 9107      54286172 
 9107      67732920 
 9107      61726773 
 9107      00
 9108              	.LASF183:
 9109 2229 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 9109      43313238 
 9109      5F4D4158 
 9109      5F5F2039 
 9109      2E393939 
 9110 225c 36313434 		.ascii	"6144DL\000"
 9110      444C00
 9111              	.LASF199:
 9112 2263 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 9112      4143545F 
 9112      4D41585F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 221


 9112      5F203058 
 9112      37464646 
 9113              	.LASF947:
 9114 227d 74726163 		.ascii	"traceTASK_PRIORITY_DISINHERIT(pxTCBOfMutexHolder,ux"
 9114      65544153 
 9114      4B5F5052 
 9114      494F5249 
 9114      54595F44 
 9115 22b0 4F726967 		.ascii	"OriginalPriority) \000"
 9115      696E616C 
 9115      5072696F 
 9115      72697479 
 9115      292000
 9116              	.LASF955:
 9117 22c3 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE(pxMutex) \000"
 9117      65474956 
 9117      455F4D55 
 9117      5445585F 
 9117      52454355 
 9118              	.LASF110:
 9119 22e7 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 0x7fffffff\000"
 9119      545F4641 
 9119      53543332 
 9119      5F4D4158 
 9119      5F5F2030 
 9120              	.LASF7:
 9121 2305 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
 9121      4F4D4943 
 9121      5F534551 
 9121      5F435354 
 9121      203500
 9122              	.LASF402:
 9123 2318 5F524541 		.ascii	"_READ_WRITE_RETURN_TYPE int\000"
 9123      445F5752 
 9123      4954455F 
 9123      52455455 
 9123      524E5F54 
 9124              	.LASF135:
 9125 2334 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 9125      545F4841 
 9125      535F494E 
 9125      46494E49 
 9125      54595F5F 
 9126              	.LASF1139:
 9127 234b 4D696E69 		.ascii	"MiniListItem_t\000"
 9127      4C697374 
 9127      4974656D 
 9127      5F7400
 9128              	.LASF672:
 9129 235a 5F5F7379 		.ascii	"__sym_default(sym,impl,verid) __asm__(\".symver \" "
 9129      6D5F6465 
 9129      6661756C 
 9129      74287379 
 9129      6D2C696D 
 9130 238b 23696D70 		.ascii	"#impl \", \" #sym \"@@\" #verid)\000"
 9130      6C20222C 
 9130      20222023 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 222


 9130      73796D20 
 9130      22404022 
 9131              	.LASF794:
 9132 23a8 494E545F 		.ascii	"INT_FAST8_MAX (__INT_FAST8_MAX__)\000"
 9132      46415354 
 9132      385F4D41 
 9132      5820285F 
 9132      5F494E54 
 9133              	.LASF89:
 9134 23ca 5F5F5549 		.ascii	"__UINT16_MAX__ 0xffff\000"
 9134      4E543136 
 9134      5F4D4158 
 9134      5F5F2030 
 9134      78666666 
 9135              	.LASF274:
 9136 23e0 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 9136      5F464249 
 9136      545F5F20 
 9136      31323700 
 9137              	.LASF936:
 9138 23f0 706F7274 		.ascii	"portPRE_TASK_DELETE_HOOK(pvTaskToDelete,pxYieldPend"
 9138      5052455F 
 9138      5441534B 
 9138      5F44454C 
 9138      4554455F 
 9139 2423 696E6729 		.ascii	"ing) \000"
 9139      2000
 9140              	.LASF765:
 9141 2429 5F5F696E 		.ascii	"__int_fast64_t_defined 1\000"
 9141      745F6661 
 9141      73743634 
 9141      5F745F64 
 9141      6566696E 
 9142              	.LASF354:
 9143 2442 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 9143      45535F49 
 9143      4E495446 
 9143      494E495F 
 9143      5F203100 
 9144              	.LASF1147:
 9145 2456 7854696D 		.ascii	"xTimeOnEntering\000"
 9145      654F6E45 
 9145      6E746572 
 9145      696E6700 
 9146              	.LASF412:
 9147 2466 5F564F4C 		.ascii	"_VOLATILE volatile\000"
 9147      4154494C 
 9147      4520766F 
 9147      6C617469 
 9147      6C6500
 9148              	.LASF339:
 9149 2479 5F5F7468 		.ascii	"__thumb2__ 1\000"
 9149      756D6232 
 9149      5F5F2031 
 9149      00
 9150              	.LASF261:
 9151 2486 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 223


 9151      4C414343 
 9151      554D5F46 
 9151      4249545F 
 9151      5F203332 
 9152              	.LASF419:
 9153 249b 5F455846 		.ascii	"_EXFNPTR(name,proto) (* name) proto\000"
 9153      4E505452 
 9153      286E616D 
 9153      652C7072 
 9153      6F746F29 
 9154              	.LASF678:
 9155 24bf 5F5F4445 		.ascii	"__DECONST(type,var) ((type)(__uintptr_t)(const void"
 9155      434F4E53 
 9155      54287479 
 9155      70652C76 
 9155      61722920 
 9156 24f2 202A2928 		.ascii	" *)(var))\000"
 9156      76617229 
 9156      2900
 9157              	.LASF377:
 9158 24fc 5F535953 		.ascii	"_SYS_FEATURES_H \000"
 9158      5F464541 
 9158      54555245 
 9158      535F4820 
 9158      00
 9159              	.LASF1142:
 9160 250d 7078496E 		.ascii	"pxIndex\000"
 9160      64657800 
 9161              	.LASF645:
 9162 2515 5F5F6E6F 		.ascii	"__noinline __attribute__ ((__noinline__))\000"
 9162      696E6C69 
 9162      6E65205F 
 9162      5F617474 
 9162      72696275 
 9163              	.LASF698:
 9164 253f 5F4D4143 		.ascii	"_MACHSTDLIB_H_ \000"
 9164      48535444 
 9164      4C49425F 
 9164      485F2000 
 9165              	.LASF19:
 9166 254f 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 9166      5A454F46 
 9166      5F4C4F4E 
 9166      475F444F 
 9166      55424C45 
 9167              	.LASF1181:
 9168 2568 78517565 		.ascii	"xQueueCreateMutex\000"
 9168      75654372 
 9168      65617465 
 9168      4D757465 
 9168      7800
 9169              	.LASF322:
 9170 257a 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 9170      41474D41 
 9170      5F524544 
 9170      4546494E 
 9170      455F4558 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 224


 9171              	.LASF31:
 9172 2596 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 9172      4841525F 
 9172      54595045 
 9172      5F5F2075 
 9172      6E736967 
 9173              	.LASF1031:
 9174 25b2 784D656D 		.ascii	"xMemoryRegion MemoryRegion_t\000"
 9174      6F727952 
 9174      6567696F 
 9174      6E204D65 
 9174      6D6F7279 
 9175              	.LASF1151:
 9176 25cf 75785265 		.ascii	"uxRecursiveCallCount\000"
 9176      63757273 
 9176      69766543 
 9176      616C6C43 
 9176      6F756E74 
 9177              	.LASF881:
 9178 25e4 504F5254 		.ascii	"PORTABLE_H \000"
 9178      41424C45 
 9178      5F482000 
 9179              	.LASF718:
 9180 25f0 63686172 		.ascii	"char\000"
 9180      00
 9181              	.LASF297:
 9182 25f5 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 9182      415F4942 
 9182      49545F5F 
 9182      20313600 
 9183              	.LASF308:
 9184 2605 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 9184      435F4841 
 9184      56455F53 
 9184      594E435F 
 9184      434F4D50 
 9185              	.LASF825:
 9186 262a 494E544D 		.ascii	"INTMAX_C(x) __INTMAX_C(x)\000"
 9186      41585F43 
 9186      28782920 
 9186      5F5F494E 
 9186      544D4158 
 9187              	.LASF430:
 9188 2644 5F5F6E65 		.ascii	"__need_wchar_t \000"
 9188      65645F77 
 9188      63686172 
 9188      5F742000 
 9189              	.LASF657:
 9190 2654 5F5F6869 		.ascii	"__hidden __attribute__((__visibility__(\"hidden\"))"
 9190      6464656E 
 9190      205F5F61 
 9190      74747269 
 9190      62757465 
 9191 2685 2900     		.ascii	")\000"
 9192              	.LASF785:
 9193 2687 494E545F 		.ascii	"INT_LEAST32_MAX (__INT_LEAST32_MAX__)\000"
 9193      4C454153 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 225


 9193      5433325F 
 9193      4D415820 
 9193      285F5F49 
 9194              	.LASF924:
 9195 26ad 494E434C 		.ascii	"INCLUDE_pcTaskGetTaskName 0\000"
 9195      5544455F 
 9195      70635461 
 9195      736B4765 
 9195      74546173 
 9196              	.LASF1148:
 9197 26c9 54696D65 		.ascii	"TimeOut_t\000"
 9197      4F75745F 
 9197      7400
 9198              	.LASF61:
 9199 26d3 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 9199      4E545F46 
 9199      41535436 
 9199      345F5459 
 9199      50455F5F 
 9200              	.LASF1138:
 9201 26ff 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 9201      495F4C49 
 9201      53545F49 
 9201      54454D00 
 9202              	.LASF915:
 9203 270f 706F7274 		.ascii	"portNUM_CONFIGURABLE_REGIONS 1\000"
 9203      4E554D5F 
 9203      434F4E46 
 9203      49475552 
 9203      41424C45 
 9204              	.LASF564:
 9205 272e 5F524545 		.ascii	"_REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrt"
 9205      4E545F4D 
 9205      4252544F 
 9205      57435F53 
 9205      54415445 
 9206 2761 6F77635F 		.ascii	"owc_state)\000"
 9206      73746174 
 9206      652900
 9207              	.LASF515:
 9208 276c 5F57494E 		.ascii	"_WINT_T \000"
 9208      545F5420 
 9208      00
 9209              	.LASF831:
 9210 2775 636F6E66 		.ascii	"configMAX_PRIORITIES ( 8 )\000"
 9210      69674D41 
 9210      585F5052 
 9210      494F5249 
 9210      54494553 
 9211              	.LASF131:
 9212 2790 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 9212      545F4D49 
 9212      4E5F5F20 
 9212      312E3137 
 9212      35343934 
 9213              	.LASF429:
 9214 27b4 5F5F6E65 		.ascii	"__need_size_t \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 226


 9214      65645F73 
 9214      697A655F 
 9214      742000
 9215              	.LASF286:
 9216 27c3 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
 9216      5F464249 
 9216      545F5F20 
 9216      3700
 9217              	.LASF722:
 9218 27d1 7369676E 		.ascii	"signed +0\000"
 9218      6564202B 
 9218      3000
 9219              	.LASF318:
 9220 27db 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 9220      435F4154 
 9220      4F4D4943 
 9220      5F4C4C4F 
 9220      4E475F4C 
 9221              	.LASF810:
 9222 27fa 5349475F 		.ascii	"SIG_ATOMIC_MAX (__STDINT_EXP(INT_MAX))\000"
 9222      41544F4D 
 9222      49435F4D 
 9222      41582028 
 9222      5F5F5354 
 9223              	.LASF801:
 9224 2821 55494E54 		.ascii	"UINT_FAST32_MAX (__UINT_FAST32_MAX__)\000"
 9224      5F464153 
 9224      5433325F 
 9224      4D415820 
 9224      285F5F55 
 9225              	.LASF507:
 9226 2847 5F5F6C6F 		.ascii	"__lock_try_acquire(lock) (_CAST_VOID 0)\000"
 9226      636B5F74 
 9226      72795F61 
 9226      63717569 
 9226      7265286C 
 9227              	.LASF166:
 9228 286f 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 9228      4333325F 
 9228      4D494E5F 
 9228      4558505F 
 9228      5F20282D 
 9229              	.LASF192:
 9230 2887 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 9230      46524143 
 9230      545F4942 
 9230      49545F5F 
 9230      203000
 9231              	.LASF926:
 9232 289a 494E434C 		.ascii	"INCLUDE_eTaskGetState 0\000"
 9232      5544455F 
 9232      65546173 
 9232      6B476574 
 9232      53746174 
 9233              	.LASF193:
 9234 28b2 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 9234      46524143 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 227


 9234      545F4D49 
 9234      4E5F5F20 
 9234      302E3055 
 9235              	.LASF658:
 9236 28c9 5F5F6F66 		.ascii	"__offsetof(type,field) offsetof(type, field)\000"
 9236      66736574 
 9236      6F662874 
 9236      7970652C 
 9236      6669656C 
 9237              	.LASF558:
 9238 28f6 5F524545 		.ascii	"_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\000"
 9238      4E545F45 
 9238      4D455247 
 9238      454E4359 
 9238      28707472 
 9239              	.LASF601:
 9240 2920 5F5F474E 		.ascii	"__GNUCLIKE_CTOR_SECTION_HANDLING 1\000"
 9240      55434C49 
 9240      4B455F43 
 9240      544F525F 
 9240      53454354 
 9241              	.LASF88:
 9242 2943 5F5F5549 		.ascii	"__UINT8_MAX__ 0xff\000"
 9242      4E54385F 
 9242      4D41585F 
 9242      5F203078 
 9242      666600
 9243              	.LASF490:
 9244 2956 5F5F5F69 		.ascii	"___int16_t_defined 1\000"
 9244      6E743136 
 9244      5F745F64 
 9244      6566696E 
 9244      65642031 
 9245              	.LASF574:
 9246 296b 5F524545 		.ascii	"_REENT _impure_ptr\000"
 9246      4E54205F 
 9246      696D7075 
 9246      72655F70 
 9246      747200
 9247              	.LASF155:
 9248 297e 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 9248      424C5F4D 
 9248      41585F45 
 9248      58505F5F 
 9248      20313032 
 9249              	.LASF952:
 9250 2994 74726163 		.ascii	"traceQUEUE_CREATE_FAILED(ucQueueType) \000"
 9250      65515545 
 9250      55455F43 
 9250      52454154 
 9250      455F4641 
 9251              	.LASF656:
 9252 29bb 5F5F6578 		.ascii	"__exported __attribute__((__visibility__(\"default\""
 9252      706F7274 
 9252      6564205F 
 9252      5F617474 
 9252      72696275 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 228


 9253 29ed 29292900 		.ascii	")))\000"
 9254              	.LASF676:
 9255 29f1 5F5F5343 		.ascii	"__SCCSID(s) struct __hack\000"
 9255      43534944 
 9255      28732920 
 9255      73747275 
 9255      6374205F 
 9256              	.LASF1129:
 9257 2a0b 55426173 		.ascii	"UBaseT_t\000"
 9257      65545F74 
 9257      00
 9258              	.LASF432:
 9259 2a14 5F5F7369 		.ascii	"__size_t__ \000"
 9259      7A655F74 
 9259      5F5F2000 
 9260              	.LASF366:
 9261 2a20 5F4D425F 		.ascii	"_MB_LEN_MAX 1\000"
 9261      4C454E5F 
 9261      4D415820 
 9261      3100
 9262              	.LASF805:
 9263 2a2e 494E544D 		.ascii	"INTMAX_MAX (__INTMAX_MAX__)\000"
 9263      41585F4D 
 9263      41582028 
 9263      5F5F494E 
 9263      544D4158 
 9264              	.LASF782:
 9265 2a4a 494E5433 		.ascii	"INT32_MAX (__INT32_MAX__)\000"
 9265      325F4D41 
 9265      5820285F 
 9265      5F494E54 
 9265      33325F4D 
 9266              	.LASF945:
 9267 2a64 74726163 		.ascii	"traceTASK_SWITCHED_OUT() \000"
 9267      65544153 
 9267      4B5F5357 
 9267      49544348 
 9267      45445F4F 
 9268              	.LASF290:
 9269 2a7e 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 9269      5F464249 
 9269      545F5F20 
 9269      333100
 9270              	.LASF890:
 9271 2a8d 706F7274 		.ascii	"portMAX_DELAY ( TickType_t ) 0xffffffffUL\000"
 9271      4D41585F 
 9271      44454C41 
 9271      59202820 
 9271      5469636B 
 9272              	.LASF1135:
 9273 2ab7 7076436F 		.ascii	"pvContainer\000"
 9273      6E746169 
 9273      6E657200 
 9274              	.LASF94:
 9275 2ac3 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 0x7fff\000"
 9275      545F4C45 
 9275      41535431 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 229


 9275      365F4D41 
 9275      585F5F20 
 9276              	.LASF413:
 9277 2ade 5F534947 		.ascii	"_SIGNED signed\000"
 9277      4E454420 
 9277      7369676E 
 9277      656400
 9278              	.LASF133:
 9279 2aed 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 9279      545F4445 
 9279      4E4F524D 
 9279      5F4D494E 
 9279      5F5F2031 
 9280              	.LASF158:
 9281 2b18 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 9281      424C5F4D 
 9281      41585F5F 
 9281      20312E37 
 9281      39373639 
 9282              	.LASF798:
 9283 2b3e 55494E54 		.ascii	"UINT_FAST16_MAX (__UINT_FAST16_MAX__)\000"
 9283      5F464153 
 9283      5431365F 
 9283      4D415820 
 9283      285F5F55 
 9284              	.LASF650:
 9285 2b64 5F5F7265 		.ascii	"__returns_twice __attribute__((__returns_twice__))\000"
 9285      7475726E 
 9285      735F7477 
 9285      69636520 
 9285      5F5F6174 
 9286              	.LASF265:
 9287 2b97 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 9287      4C414343 
 9287      554D5F45 
 9287      5053494C 
 9287      4F4E5F5F 
 9288              	.LASF693:
 9289 2bb8 5F5F7265 		.ascii	"__requires_shared(...) __lock_annotate(shared_locks"
 9289      71756972 
 9289      65735F73 
 9289      68617265 
 9289      64282E2E 
 9290 2beb 5F726571 		.ascii	"_required(__VA_ARGS__))\000"
 9290      75697265 
 9290      64285F5F 
 9290      56415F41 
 9290      5247535F 
 9291              	.LASF406:
 9292 2c03 5F454E44 		.ascii	"_END_STD_C \000"
 9292      5F535444 
 9292      5F432000 
 9293              	.LASF65:
 9294 2c0f 5F5F6861 		.ascii	"__has_include_next(STR) __has_include_next__(STR)\000"
 9294      735F696E 
 9294      636C7564 
 9294      655F6E65 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 230


 9294      78742853 
 9295              	.LASF1058:
 9296 2c41 6C697374 		.ascii	"listLIST_ITEM_CONTAINER(pxListItem) ( ( pxListItem "
 9296      4C495354 
 9296      5F495445 
 9296      4D5F434F 
 9296      4E544149 
 9297 2c74 292D3E70 		.ascii	")->pvContainer )\000"
 9297      76436F6E 
 9297      7461696E 
 9297      65722029 
 9297      00
 9298              	.LASF780:
 9299 2c85 55494E54 		.ascii	"UINT_LEAST16_MAX (__UINT_LEAST16_MAX__)\000"
 9299      5F4C4541 
 9299      53543136 
 9299      5F4D4158 
 9299      20285F5F 
 9300              	.LASF105:
 9301 2cad 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 9301      4E543332 
 9301      5F432863 
 9301      29206320 
 9301      23232055 
 9302              	.LASF855:
 9303 2cc3 494E434C 		.ascii	"INCLUDE_vTaskDelayUntil 1\000"
 9303      5544455F 
 9303      76546173 
 9303      6B44656C 
 9303      6179556E 
 9304              	.LASF243:
 9305 2cdd 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 9305      4343554D 
 9305      5F4D494E 
 9305      5F5F2030 
 9305      2E30554B 
 9306              	.LASF932:
 9307 2cf2 636F6E66 		.ascii	"configASSERT_DEFINED 1\000"
 9307      69674153 
 9307      53455254 
 9307      5F444546 
 9307      494E4544 
 9308              	.LASF716:
 9309 2d09 5F5F6861 		.ascii	"__have_long32 1\000"
 9309      76655F6C 
 9309      6F6E6733 
 9309      32203100 
 9310              	.LASF132:
 9311 2d19 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 9311      545F4550 
 9311      53494C4F 
 9311      4E5F5F20 
 9311      312E3139 
 9312              	.LASF622:
 9313 2d40 5F5F5853 		.ascii	"__XSTRING(x) __STRING(x)\000"
 9313      5452494E 
 9313      47287829 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 231


 9313      205F5F53 
 9313      5452494E 
 9314              	.LASF585:
 9315 2d59 5F5F6174 		.ascii	"__attribute_pure__ \000"
 9315      74726962 
 9315      7574655F 
 9315      70757265 
 9315      5F5F2000 
 9316              	.LASF374:
 9317 2d6d 5F574944 		.ascii	"_WIDE_ORIENT 1\000"
 9317      455F4F52 
 9317      49454E54 
 9317      203100
 9318              	.LASF1035:
 9319 2d7c 78436F52 		.ascii	"xCoRoutineHandle CoRoutineHandle_t\000"
 9319      6F757469 
 9319      6E654861 
 9319      6E646C65 
 9319      20436F52 
 9320              	.LASF503:
 9321 2d9f 5F5F6C6F 		.ascii	"__lock_close(lock) (_CAST_VOID 0)\000"
 9321      636B5F63 
 9321      6C6F7365 
 9321      286C6F63 
 9321      6B292028 
 9322              	.LASF923:
 9323 2dc1 494E434C 		.ascii	"INCLUDE_xSemaphoreGetMutexHolder INCLUDE_xQueueGetM"
 9323      5544455F 
 9323      7853656D 
 9323      6170686F 
 9323      72654765 
 9324 2df4 75746578 		.ascii	"utexHolder\000"
 9324      486F6C64 
 9324      657200
 9325              	.LASF1078:
 9326 2dff 71756575 		.ascii	"queueOVERWRITE ( ( BaseT_t ) 2 )\000"
 9326      654F5645 
 9326      52575249 
 9326      54452028 
 9326      20282042 
 9327              	.LASF1170:
 9328 2e20 78517565 		.ascii	"xQueueRegistryItem\000"
 9328      75655265 
 9328      67697374 
 9328      72794974 
 9328      656D00
 9329              	.LASF980:
 9330 2e33 74726163 		.ascii	"traceTASK_RESUME(pxTaskToResume) \000"
 9330      65544153 
 9330      4B5F5245 
 9330      53554D45 
 9330      28707854 
 9331              	.LASF1003:
 9332 2e55 74726163 		.ascii	"traceQUEUE_REGISTRY_ADD(xQueue,pcQueueName) \000"
 9332      65515545 
 9332      55455F52 
 9332      45474953 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 232


 9332      5452595F 
 9333              	.LASF603:
 9334 2e82 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VARARGS 1\000"
 9334      55434C49 
 9334      4B455F42 
 9334      55494C54 
 9334      494E5F56 
 9335              	.LASF42:
 9336 2e9f 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 9336      4E54385F 
 9336      54595045 
 9336      5F5F2075 
 9336      6E736967 
 9337              	.LASF547:
 9338 2ebc 5F524545 		.ascii	"_REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_sign"
 9338      4E545F53 
 9338      49474E47 
 9338      414D2870 
 9338      74722920 
 9339 2eef 67616D29 		.ascii	"gam)\000"
 9339      00
 9340              	.LASF784:
 9341 2ef4 494E545F 		.ascii	"INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)\000"
 9341      4C454153 
 9341      5433325F 
 9341      4D494E20 
 9341      282D5F5F 
 9342              	.LASF315:
 9343 2f1f 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 9343      435F4154 
 9343      4F4D4943 
 9343      5F53484F 
 9343      52545F4C 
 9344              	.LASF1167:
 9345 2f3e 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 9345      455F5245 
 9345      47495354 
 9345      52595F49 
 9345      54454D00 
 9346              	.LASF231:
 9347 2f52 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 9347      41434355 
 9347      4D5F4642 
 9347      49545F5F 
 9347      203800
 9348              	.LASF1021:
 9349 2f65 706F7274 		.ascii	"portASSERT_IF_IN_ISR() \000"
 9349      41535345 
 9349      52545F49 
 9349      465F494E 
 9349      5F495352 
 9350              	.LASF319:
 9351 2f7d 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 9351      435F4154 
 9351      4F4D4943 
 9351      5F544553 
 9351      545F414E 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 233


 9352              	.LASF393:
 9353 2fa1 5F5F4D49 		.ascii	"__MISC_VISIBLE 1\000"
 9353      53435F56 
 9353      49534942 
 9353      4C452031 
 9353      00
 9354              	.LASF985:
 9355 2fb2 74726163 		.ascii	"traceTIMER_COMMAND_SEND(xTimer,xMessageID,xMessageV"
 9355      6554494D 
 9355      45525F43 
 9355      4F4D4D41 
 9355      4E445F53 
 9356 2fe5 616C7565 		.ascii	"alueValue,xReturn) \000"
 9356      56616C75 
 9356      652C7852 
 9356      65747572 
 9356      6E292000 
 9357              	.LASF521:
 9358 2ff9 5F4E554C 		.ascii	"_NULL 0\000"
 9358      4C203000 
 9359              	.LASF699:
 9360 3001 5F4E4557 		.ascii	"_NEWLIB_ALLOCA_H \000"
 9360      4C49425F 
 9360      414C4C4F 
 9360      43415F48 
 9360      2000
 9361              	.LASF163:
 9362 3013 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 9362      424C5F48 
 9362      41535F49 
 9362      4E46494E 
 9362      4954595F 
 9363              	.LASF828:
 9364 302b 46524545 		.ascii	"FREERTOS_CONFIG_H \000"
 9364      52544F53 
 9364      5F434F4E 
 9364      4649475F 
 9364      482000
 9365              	.LASF804:
 9366 303e 55494E54 		.ascii	"UINT_FAST64_MAX (__UINT_FAST64_MAX__)\000"
 9366      5F464153 
 9366      5436345F 
 9366      4D415820 
 9366      285F5F55 
 9367              	.LASF169:
 9368 3064 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 9368      4333325F 
 9368      4D41585F 
 9368      5F20392E 
 9368      39393939 
 9369              	.LASF5:
 9370 3080 5F5F5645 		.ascii	"__VERSION__ \"5.4.1 20160919 (release) [ARM/embedde"
 9370      5253494F 
 9370      4E5F5F20 
 9370      22352E34 
 9370      2E312032 
 9371 30b2 642D352D 		.ascii	"d-5-branch revision 240496]\"\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 234


 9371      6272616E 
 9371      63682072 
 9371      65766973 
 9371      696F6E20 
 9372              	.LASF1065:
 9373 30cf 7461736B 		.ascii	"taskYIELD() portYIELD()\000"
 9373      5949454C 
 9373      44282920 
 9373      706F7274 
 9373      5949454C 
 9374              	.LASF611:
 9375 30e7 5F5F4343 		.ascii	"__CC_SUPPORTS_INLINE 1\000"
 9375      5F535550 
 9375      504F5254 
 9375      535F494E 
 9375      4C494E45 
 9376              	.LASF1210:
 9377 30fe 76517565 		.ascii	"vQueueDelete\000"
 9377      75654465 
 9377      6C657465 
 9377      00
 9378              	.LASF885:
 9379 310b 706F7274 		.ascii	"portDOUBLE double\000"
 9379      444F5542 
 9379      4C452064 
 9379      6F75626C 
 9379      6500
 9380              	.LASF347:
 9381 311d 5F5F4152 		.ascii	"__ARM_PCS 1\000"
 9381      4D5F5043 
 9381      53203100 
 9382              	.LASF878:
 9383 3129 65727243 		.ascii	"errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY ( -1 )\000"
 9383      4F554C44 
 9383      5F4E4F54 
 9383      5F414C4C 
 9383      4F434154 
 9384              	.LASF643:
 9385 3156 5F5F7075 		.ascii	"__pure __attribute__((__pure__))\000"
 9385      7265205F 
 9385      5F617474 
 9385      72696275 
 9385      74655F5F 
 9386              	.LASF1153:
 9387 3177 70634865 		.ascii	"pcHead\000"
 9387      616400
 9388              	.LASF974:
 9389 317e 74726163 		.ascii	"traceTASK_CREATE_FAILED() \000"
 9389      65544153 
 9389      4B5F4352 
 9389      45415445 
 9389      5F464149 
 9390              	.LASF596:
 9391 3199 5F5F474E 		.ascii	"__GNUCLIKE_ASM 3\000"
 9391      55434C49 
 9391      4B455F41 
 9391      534D2033 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 235


 9391      00
 9392              	.LASF83:
 9393 31aa 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 9393      475F4154 
 9393      4F4D4943 
 9393      5F4D494E 
 9393      5F5F2028 
 9394              	.LASF100:
 9395 31d7 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 0xff\000"
 9395      4E545F4C 
 9395      45415354 
 9395      385F4D41 
 9395      585F5F20 
 9396              	.LASF1107:
 9397 31f0 71756575 		.ascii	"queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )"
 9397      6553454D 
 9397      4150484F 
 9397      52455F51 
 9397      55455545 
 9398 3223 00       		.ascii	"\000"
 9399              	.LASF457:
 9400 3224 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 9400      5F574348 
 9400      41525F54 
 9400      5F2000
 9401              	.LASF872:
 9402 3233 70644641 		.ascii	"pdFALSE ( ( BaseT_t ) 0 )\000"
 9402      4C534520 
 9402      28202820 
 9402      42617365 
 9402      545F7420 
 9403              	.LASF851:
 9404 324d 494E434C 		.ascii	"INCLUDE_uxTaskPriorityGet 1\000"
 9404      5544455F 
 9404      75785461 
 9404      736B5072 
 9404      696F7269 
 9405              	.LASF809:
 9406 3269 5349475F 		.ascii	"SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)\000"
 9406      41544F4D 
 9406      49435F4D 
 9406      494E2028 
 9406      2D5F5F53 
 9407              	.LASF820:
 9408 3295 55494E54 		.ascii	"UINT16_C(x) __UINT16_C(x)\000"
 9408      31365F43 
 9408      28782920 
 9408      5F5F5549 
 9408      4E543136 
 9409              	.LASF874:
 9410 32af 70645041 		.ascii	"pdPASS ( pdTRUE )\000"
 9410      53532028 
 9410      20706454 
 9410      52554520 
 9410      2900
 9411              	.LASF506:
 9412 32c1 5F5F6C6F 		.ascii	"__lock_acquire_recursive(lock) (_CAST_VOID 0)\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 236


 9412      636B5F61 
 9412      63717569 
 9412      72655F72 
 9412      65637572 
 9413              	.LASF1073:
 9414 32ef 78546173 		.ascii	"xTaskCreate(pvTaskCode,pcName,usStackDepth,pvParame"
 9414      6B437265 
 9414      61746528 
 9414      70765461 
 9414      736B436F 
 9415 3322 74657273 		.ascii	"ters,uxPriority,pxCreatedTask) xTaskGenericCreate( "
 9415      2C757850 
 9415      72696F72 
 9415      6974792C 
 9415      70784372 
 9416 3355 28207076 		.ascii	"( pvTaskCode ), ( pcName ), ( usStackDepth ), ( pvP"
 9416      5461736B 
 9416      436F6465 
 9416      20292C20 
 9416      28207063 
 9417 3388 6172616D 		.ascii	"arameters ), ( uxPriority ), ( pxCreatedTask ), ( N"
 9417      65746572 
 9417      7320292C 
 9417      20282075 
 9417      78507269 
 9418 33bb 554C4C20 		.ascii	"ULL ), ( NULL ) )\000"
 9418      292C2028 
 9418      204E554C 
 9418      4C202920 
 9418      2900
 9419              	.LASF975:
 9420 33cd 74726163 		.ascii	"traceTASK_DELETE(pxTaskToDelete) \000"
 9420      65544153 
 9420      4B5F4445 
 9420      4C455445 
 9420      28707854 
 9421              	.LASF34:
 9422 33ef 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 9422      4E544D41 
 9422      585F5459 
 9422      50455F5F 
 9422      206C6F6E 
 9423              	.LASF148:
 9424 3417 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 9424      4C5F4841 
 9424      535F4445 
 9424      4E4F524D 
 9424      5F5F2031 
 9425              	.LASF544:
 9426 342c 5F524545 		.ascii	"_REENT_CHECK_EMERGENCY(ptr) \000"
 9426      4E545F43 
 9426      4845434B 
 9426      5F454D45 
 9426      5247454E 
 9427              	.LASF1062:
 9428 3449 74736B4B 		.ascii	"tskKERNEL_VERSION_MINOR 1\000"
 9428      45524E45 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 237


 9428      4C5F5645 
 9428      5253494F 
 9428      4E5F4D49 
 9429              	.LASF943:
 9430 3463 74726163 		.ascii	"traceLOW_POWER_IDLE_BEGIN() \000"
 9430      654C4F57 
 9430      5F504F57 
 9430      45525F49 
 9430      444C455F 
 9431              	.LASF829:
 9432 3480 636F6E66 		.ascii	"configUSE_PREEMPTION 1\000"
 9432      69675553 
 9432      455F5052 
 9432      45454D50 
 9432      54494F4E 
 9433              	.LASF761:
 9434 3497 5F5F696E 		.ascii	"__int_least64_t_defined 1\000"
 9434      745F6C65 
 9434      61737436 
 9434      345F745F 
 9434      64656669 
 9435              	.LASF121:
 9436 34b1 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 9436      435F4556 
 9436      414C5F4D 
 9436      4554484F 
 9436      445F5F20 
 9437              	.LASF852:
 9438 34c7 494E434C 		.ascii	"INCLUDE_vTaskDelete 1\000"
 9438      5544455F 
 9438      76546173 
 9438      6B44656C 
 9438      65746520 
 9439              	.LASF1160:
 9440 34dd 75784974 		.ascii	"uxItemSize\000"
 9440      656D5369 
 9440      7A6500
 9441              	.LASF870:
 9442 34e8 50524F4A 		.ascii	"PROJDEFS_H \000"
 9442      44454653 
 9442      5F482000 
 9443              	.LASF178:
 9444 34f4 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
 9444      4336345F 
 9444      5355424E 
 9444      4F524D41 
 9444      4C5F4D49 
 9445              	.LASF195:
 9446 3525 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 9446      46524143 
 9446      545F4550 
 9446      53494C4F 
 9446      4E5F5F20 
 9447              	.LASF468:
 9448 3543 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 9448      20282876 
 9448      6F696420 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 238


 9448      2A293029 
 9448      00
 9449              	.LASF1001:
 9450 3554 74726163 		.ascii	"tracePEND_FUNC_CALL(xFunctionToPend,pvParameter1,ul"
 9450      6550454E 
 9450      445F4655 
 9450      4E435F43 
 9450      414C4C28 
 9451 3587 50617261 		.ascii	"Parameter2,ret) \000"
 9451      6D657465 
 9451      72322C72 
 9451      65742920 
 9451      00
 9452              	.LASF640:
 9453 3598 5F546872 		.ascii	"_Thread_local __thread\000"
 9453      6561645F 
 9453      6C6F6361 
 9453      6C205F5F 
 9453      74687265 
 9454              	.LASF895:
 9455 35af 706F7274 		.ascii	"portNVIC_PENDSVSET_BIT ( 1UL << 28UL )\000"
 9455      4E564943 
 9455      5F50454E 
 9455      44535653 
 9455      45545F42 
 9456              	.LASF1189:
 9457 35d6 7578496E 		.ascii	"uxInitialCount\000"
 9457      69746961 
 9457      6C436F75 
 9457      6E7400
 9458              	.LASF495:
 9459 35e5 5F5F5F69 		.ascii	"___int_least32_t_defined 1\000"
 9459      6E745F6C 
 9459      65617374 
 9459      33325F74 
 9459      5F646566 
 9460              	.LASF259:
 9461 3600 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 9461      41434355 
 9461      4D5F4D41 
 9461      585F5F20 
 9461      30583746 
 9462              	.LASF862:
 9463 362a 636F6E66 		.ascii	"configNET_MASK0 255\000"
 9463      69674E45 
 9463      545F4D41 
 9463      534B3020 
 9463      32353500 
 9464              	.LASF469:
 9465 363e 5F5F6E65 		.ascii	"__need_NULL\000"
 9465      65645F4E 
 9465      554C4C00 
 9466              	.LASF907:
 9467 364a 706F7274 		.ascii	"portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime) vPo"
 9467      53555050 
 9467      52455353 
 9467      5F544943 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 239


 9467      4B535F41 
 9468 367d 72745375 		.ascii	"rtSuppressTicksAndSleep( xExpectedIdleTime )\000"
 9468      70707265 
 9468      73735469 
 9468      636B7341 
 9468      6E64536C 
 9469              	.LASF760:
 9470 36aa 5F5F696E 		.ascii	"__int_least32_t_defined 1\000"
 9470      745F6C65 
 9470      61737433 
 9470      325F745F 
 9470      64656669 
 9471              	.LASF1161:
 9472 36c4 7852784C 		.ascii	"xRxLock\000"
 9472      6F636B00 
 9473              	.LASF91:
 9474 36cc 5F5F5549 		.ascii	"__UINT64_MAX__ 0xffffffffffffffffULL\000"
 9474      4E543634 
 9474      5F4D4158 
 9474      5F5F2030 
 9474      78666666 
 9475              	.LASF832:
 9476 36f1 636F6E66 		.ascii	"configUSE_TICK_HOOK 1\000"
 9476      69675553 
 9476      455F5449 
 9476      434B5F48 
 9476      4F4F4B20 
 9477              	.LASF846:
 9478 3707 636F6E66 		.ascii	"configCHECK_FOR_STACK_OVERFLOW 0\000"
 9478      69674348 
 9478      45434B5F 
 9478      464F525F 
 9478      53544143 
 9479              	.LASF90:
 9480 3728 5F5F5549 		.ascii	"__UINT32_MAX__ 0xffffffffUL\000"
 9480      4E543332 
 9480      5F4D4158 
 9480      5F5F2030 
 9480      78666666 
 9481              	.LASF823:
 9482 3744 494E5436 		.ascii	"INT64_C(x) __INT64_C(x)\000"
 9482      345F4328 
 9482      7829205F 
 9482      5F494E54 
 9482      36345F43 
 9483              	.LASF386:
 9484 375c 5F415446 		.ascii	"_ATFILE_SOURCE\000"
 9484      494C455F 
 9484      534F5552 
 9484      434500
 9485              	.LASF561:
 9486 376b 5F524545 		.ascii	"_REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtow"
 9486      4E545F4D 
 9486      42544F57 
 9486      435F5354 
 9486      41544528 
 9487 379e 635F7374 		.ascii	"c_state)\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 240


 9487      61746529 
 9487      00
 9488              	.LASF869:
 9489 37a7 636F6E66 		.ascii	"configASSERT(x) if( ( x ) == 0 ) { taskDISABLE_INTE"
 9489      69674153 
 9489      53455254 
 9489      28782920 
 9489      69662820 
 9490 37da 52525550 		.ascii	"RRUPTS(); for( ;; ); }\000"
 9490      54532829 
 9490      3B20666F 
 9490      7228203B 
 9490      3B20293B 
 9491              	.LASF560:
 9492 37f1 5F524545 		.ascii	"_REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_"
 9492      4E545F4D 
 9492      424C454E 
 9492      5F535441 
 9492      54452870 
 9493 3824 73746174 		.ascii	"state)\000"
 9493      652900
 9494              	.LASF688:
 9495 382b 5F5F7472 		.ascii	"__trylocks_shared(...) __lock_annotate(shared_trylo"
 9495      796C6F63 
 9495      6B735F73 
 9495      68617265 
 9495      64282E2E 
 9496 385e 636B5F66 		.ascii	"ck_function(__VA_ARGS__))\000"
 9496      756E6374 
 9496      696F6E28 
 9496      5F5F5641 
 9496      5F415247 
 9497              	.LASF92:
 9498 3878 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 0x7f\000"
 9498      545F4C45 
 9498      41535438 
 9498      5F4D4158 
 9498      5F5F2030 
 9499              	.LASF320:
 9500 3890 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 9500      435F4154 
 9500      4F4D4943 
 9500      5F504F49 
 9500      4E544552 
 9501              	.LASF326:
 9502 38b1 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 9502      4D5F4645 
 9502      41545552 
 9502      455F5142 
 9502      49542031 
 9503              	.LASF331:
 9504 38c6 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 9504      4D5F4645 
 9504      41545552 
 9504      455F434C 
 9504      5A203100 
 9505              	.LASF8:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 241


 9506 38da 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 9506      4F4D4943 
 9506      5F414351 
 9506      55495245 
 9506      203200
 9507              	.LASF903:
 9508 38ed 706F7274 		.ascii	"portENTER_CRITICAL() vPortEnterCritical()\000"
 9508      454E5445 
 9508      525F4352 
 9508      49544943 
 9508      414C2829 
 9509              	.LASF888:
 9510 3917 706F7274 		.ascii	"portSTACK_TYPE uint32_t\000"
 9510      53544143 
 9510      4B5F5459 
 9510      50452075 
 9510      696E7433 
 9511              	.LASF512:
 9512 392f 756E7369 		.ascii	"unsigned signed\000"
 9512      676E6564 
 9512      20736967 
 9512      6E656400 
 9513              	.LASF762:
 9514 393f 5F5F696E 		.ascii	"__int_fast8_t_defined 1\000"
 9514      745F6661 
 9514      7374385F 
 9514      745F6465 
 9514      66696E65 
 9515              	.LASF1100:
 9516 3957 78517565 		.ascii	"xQueueReset(xQueue) xQueueGenericReset( xQueue, pdF"
 9516      75655265 
 9516      73657428 
 9516      78517565 
 9516      75652920 
 9517 398a 414C5345 		.ascii	"ALSE )\000"
 9517      202900
 9518              	.LASF45:
 9519 3991 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 9519      4E543634 
 9519      5F545950 
 9519      455F5F20 
 9519      6C6F6E67 
 9520              	.LASF729:
 9521 39b8 5F494E54 		.ascii	"_INTPTR_EQ_INT \000"
 9521      5054525F 
 9521      45515F49 
 9521      4E542000 
 9522              	.LASF333:
 9523 39c8 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 9523      4D5F5349 
 9523      5A454F46 
 9523      5F574348 
 9523      41525F54 
 9524              	.LASF1184:
 9525 39df 70784D75 		.ascii	"pxMutex\000"
 9525      74657800 
 9526              	.LASF64:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 242


 9527 39e7 5F5F6861 		.ascii	"__has_include(STR) __has_include__(STR)\000"
 9527      735F696E 
 9527      636C7564 
 9527      65285354 
 9527      5229205F 
 9528              	.LASF1146:
 9529 3a0f 784F7665 		.ascii	"xOverflowCount\000"
 9529      72666C6F 
 9529      77436F75 
 9529      6E7400
 9530              	.LASF976:
 9531 3a1e 74726163 		.ascii	"traceTASK_DELAY_UNTIL() \000"
 9531      65544153 
 9531      4B5F4445 
 9531      4C41595F 
 9531      554E5449 
 9532              	.LASF104:
 9533 3a37 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 0xffffffffUL\000"
 9533      4E545F4C 
 9533      45415354 
 9533      33325F4D 
 9533      41585F5F 
 9534              	.LASF146:
 9535 3a59 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 9535      4C5F4550 
 9535      53494C4F 
 9535      4E5F5F20 
 9535      2828646F 
 9536              	.LASF633:
 9537 3a8b 5F5F7365 		.ascii	"__section(x) __attribute__((__section__(x)))\000"
 9537      6374696F 
 9537      6E287829 
 9537      205F5F61 
 9537      74747269 
 9538              	.LASF592:
 9539 3ab8 5F5F6861 		.ascii	"__has_feature(x) 0\000"
 9539      735F6665 
 9539      61747572 
 9539      65287829 
 9539      203000
 9540              	.LASF951:
 9541 3acb 74726163 		.ascii	"traceQUEUE_CREATE(pxNewQueue) \000"
 9541      65515545 
 9541      55455F43 
 9541      52454154 
 9541      45287078 
 9542              	.LASF548:
 9543 3aea 5F524545 		.ascii	"_REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_nex"
 9543      4E545F52 
 9543      414E445F 
 9543      4E455854 
 9543      28707472 
 9544 3b1d 742900   		.ascii	"t)\000"
 9545              	.LASF1128:
 9546 3b20 42617365 		.ascii	"BaseT_t\000"
 9546      545F7400 
 9547              	.LASF239:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 243


 9548 3b28 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 9548      43554D5F 
 9548      4D41585F 
 9548      5F203058 
 9548      37464646 
 9549              	.LASF960:
 9550 3b46 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE_FAILED() \000"
 9550      65435245 
 9550      4154455F 
 9550      434F554E 
 9550      54494E47 
 9551              	.LASF84:
 9552 3b6f 5F5F494E 		.ascii	"__INT8_MAX__ 0x7f\000"
 9552      54385F4D 
 9552      41585F5F 
 9552      20307837 
 9552      6600
 9553              	.LASF1218:
 9554 3b81 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 9554      75654973 
 9554      51756575 
 9554      65456D70 
 9554      74794672 
 9555              	.LASF902:
 9556 3b9b 706F7274 		.ascii	"portENABLE_INTERRUPTS() vPortClearInterruptMask(0)\000"
 9556      454E4142 
 9556      4C455F49 
 9556      4E544552 
 9556      52555054 
 9557              	.LASF972:
 9558 3bce 74726163 		.ascii	"traceQUEUE_DELETE(pxQueue) \000"
 9558      65515545 
 9558      55455F44 
 9558      454C4554 
 9558      45287078 
 9559              	.LASF321:
 9560 3bea 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 9560      435F4841 
 9560      56455F44 
 9560      57415246 
 9560      325F4346 
 9561              	.LASF489:
 9562 3c06 5F5F5F69 		.ascii	"___int8_t_defined 1\000"
 9562      6E74385F 
 9562      745F6465 
 9562      66696E65 
 9562      64203100 
 9563              	.LASF188:
 9564 3c1a 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 9564      52414354 
 9564      5F4D494E 
 9564      5F5F2028 
 9564      2D302E35 
 9565              	.LASF1121:
 9566 3c38 6C6F6E67 		.ascii	"long unsigned int\000"
 9566      20756E73 
 9566      69676E65 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 244


 9566      6420696E 
 9566      7400
 9567              	.LASF289:
 9568 3c4a 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 9568      5F494249 
 9568      545F5F20 
 9568      313600
 9569              	.LASF1166:
 9570 3c59 51756575 		.ascii	"Queue_t\000"
 9570      655F7400 
 9571              	.LASF1204:
 9572 3c61 78517565 		.ascii	"xQueuePeekFromISR\000"
 9572      75655065 
 9572      656B4672 
 9572      6F6D4953 
 9572      5200
 9573              	.LASF119:
 9574 3c73 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 9574      435F4945 
 9574      435F3535 
 9574      395F434F 
 9574      4D504C45 
 9575              	.LASF2:
 9576 3c8b 5F5F474E 		.ascii	"__GNUC__ 5\000"
 9576      55435F5F 
 9576      203500
 9577              	.LASF647:
 9578 3c96 5F5F6E6F 		.ascii	"__nonnull_all __attribute__((__nonnull__))\000"
 9578      6E6E756C 
 9578      6C5F616C 
 9578      6C205F5F 
 9578      61747472 
 9579              	.LASF1089:
 9580 3cc1 78517565 		.ascii	"xQueueOverwrite(xQueue,pvItemToQueue) xQueueGeneric"
 9580      75654F76 
 9580      65727772 
 9580      69746528 
 9580      78517565 
 9581 3cf4 53656E64 		.ascii	"Send( ( xQueue ), ( pvItemToQueue ), 0, queueOVERWR"
 9581      28202820 
 9581      78517565 
 9581      75652029 
 9581      2C202820 
 9582 3d27 49544520 		.ascii	"ITE )\000"
 9582      2900
 9583              	.LASF43:
 9584 3d2d 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 9584      4E543136 
 9584      5F545950 
 9584      455F5F20 
 9584      73686F72 
 9585              	.LASF382:
 9586 3d50 5F504F53 		.ascii	"_POSIX_SOURCE\000"
 9586      49585F53 
 9586      4F555243 
 9586      4500
 9587              	.LASF705:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 245


 9588 3d5e 52414E44 		.ascii	"RAND_MAX __RAND_MAX\000"
 9588      5F4D4158 
 9588      205F5F52 
 9588      414E445F 
 9588      4D415800 
 9589              	.LASF849:
 9590 3d72 636F6E66 		.ascii	"configGENERATE_RUN_TIME_STATS 0\000"
 9590      69674745 
 9590      4E455241 
 9590      54455F52 
 9590      554E5F54 
 9591              	.LASF1120:
 9592 3d92 5F5F7569 		.ascii	"__uint32_t\000"
 9592      6E743332 
 9592      5F7400
 9593              	.LASF343:
 9594 3d9d 5F5F534F 		.ascii	"__SOFTFP__ 1\000"
 9594      46544650 
 9594      5F5F2031 
 9594      00
 9595              	.LASF752:
 9596 3daa 5F5F696E 		.ascii	"__int32_t_defined 1\000"
 9596      7433325F 
 9596      745F6465 
 9596      66696E65 
 9596      64203100 
 9597              	.LASF1044:
 9598 3dbe 636F6E66 		.ascii	"configLIST_VOLATILE \000"
 9598      69674C49 
 9598      53545F56 
 9598      4F4C4154 
 9598      494C4520 
 9599              	.LASF167:
 9600 3dd3 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 9600      4333325F 
 9600      4D41585F 
 9600      4558505F 
 9600      5F203937 
 9601              	.LASF1013:
 9602 3de8 636F6E66 		.ascii	"configPOST_SLEEP_PROCESSING(x) \000"
 9602      6967504F 
 9602      53545F53 
 9602      4C454550 
 9602      5F50524F 
 9603              	.LASF458:
 9604 3e08 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 9604      41525F54 
 9604      5F444546 
 9604      494E4544 
 9604      5F2000
 9605              	.LASF859:
 9606 3e1b 636F6E66 		.ascii	"configIP_ADDR1 168\000"
 9606      69674950 
 9606      5F414444 
 9606      52312031 
 9606      363800
 9607              	.LASF584:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 246


 9608 3e2e 5F5F6174 		.ascii	"__attribute_malloc__ \000"
 9608      74726962 
 9608      7574655F 
 9608      6D616C6C 
 9608      6F635F5F 
 9609              	.LASF727:
 9610 3e44 696E7420 		.ascii	"int +2\000"
 9610      2B3200
 9611              	.LASF817:
 9612 3e4b 494E5438 		.ascii	"INT8_C(x) __INT8_C(x)\000"
 9612      5F432878 
 9612      29205F5F 
 9612      494E5438 
 9612      5F432878 
 9613              	.LASF58:
 9614 3e61 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 9614      4E545F46 
 9614      41535438 
 9614      5F545950 
 9614      455F5F20 
 9615              	.LASF257:
 9616 3e82 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 9616      41434355 
 9616      4D5F4942 
 9616      49545F5F 
 9616      20333200 
 9617              	.LASF200:
 9618 3e96 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 9618      4143545F 
 9618      45505349 
 9618      4C4F4E5F 
 9618      5F203078 
 9619              	.LASF1105:
 9620 3eb1 75785175 		.ascii	"uxQueueType pcHead\000"
 9620      65756554 
 9620      79706520 
 9620      70634865 
 9620      616400
 9621              	.LASF900:
 9622 3ec4 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK_FROM_ISR(x) vPortClearInte"
 9622      434C4541 
 9622      525F494E 
 9622      54455252 
 9622      5550545F 
 9623 3ef7 72727570 		.ascii	"rruptMask(x)\000"
 9623      744D6173 
 9623      6B287829 
 9623      00
 9624              	.LASF86:
 9625 3f04 5F5F494E 		.ascii	"__INT32_MAX__ 0x7fffffffL\000"
 9625      5433325F 
 9625      4D41585F 
 9625      5F203078 
 9625      37666666 
 9626              	.LASF1019:
 9627 3f1e 636F6E66 		.ascii	"configUSE_STATS_FORMATTING_FUNCTIONS 0\000"
 9627      69675553 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 247


 9627      455F5354 
 9627      4154535F 
 9627      464F524D 
 9628              	.LASF520:
 9629 3f45 5F54494D 		.ascii	"_TIMER_T_ unsigned long\000"
 9629      45525F54 
 9629      5F20756E 
 9629      7369676E 
 9629      6564206C 
 9630              	.LASF1193:
 9631 3f5d 78456E74 		.ascii	"xEntryTimeSet\000"
 9631      72795469 
 9631      6D655365 
 9631      7400
 9632              	.LASF996:
 9633 3f6b 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS(xEventGroup,uxBitsToCle"
 9633      65455645 
 9633      4E545F47 
 9633      524F5550 
 9633      5F434C45 
 9634 3f9e 61722920 		.ascii	"ar) \000"
 9634      00
 9635              	.LASF98:
 9636 3fa3 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 0x7fffffffffffffffLL\000"
 9636      545F4C45 
 9636      41535436 
 9636      345F4D41 
 9636      585F5F20 
 9637              	.LASF337:
 9638 3fcc 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 9638      43535F33 
 9638      325F5F20 
 9638      3100
 9639              	.LASF743:
 9640 3fda 5F535953 		.ascii	"_SYS__STDINT_H \000"
 9640      5F5F5354 
 9640      44494E54 
 9640      5F482000 
 9641              	.LASF431:
 9642 3fea 5F5F6E65 		.ascii	"__need_NULL \000"
 9642      65645F4E 
 9642      554C4C20 
 9642      00
 9643              	.LASF1186:
 9644 3ff7 78546963 		.ascii	"xTicksToWait\000"
 9644      6B73546F 
 9644      57616974 
 9644      00
 9645              	.LASF381:
 9646 4004 5F444546 		.ascii	"_DEFAULT_SOURCE 1\000"
 9646      41554C54 
 9646      5F534F55 
 9646      52434520 
 9646      3100
 9647              	.LASF871:
 9648 4016 70644D53 		.ascii	"pdMS_TO_TICKS(xTimeInMs) ( ( ( TickT_t ) ( xTimeInM"
 9648      5F544F5F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 248


 9648      5449434B 
 9648      53287854 
 9648      696D6549 
 9649 4049 73202920 		.ascii	"s ) * configTICK_RATE_HZ ) / ( TickT_t ) 1000 )\000"
 9649      2A20636F 
 9649      6E666967 
 9649      5449434B 
 9649      5F524154 
 9650              	.LASF117:
 9651 4079 5F5F5549 		.ascii	"__UINTPTR_MAX__ 0xffffffffU\000"
 9651      4E545054 
 9651      525F4D41 
 9651      585F5F20 
 9651      30786666 
 9652              	.LASF484:
 9653 4095 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 9653      65746F66 
 9653      28545950 
 9653      452C4D45 
 9653      4D424552 
 9654 40c8 42455229 		.ascii	"BER)\000"
 9654      00
 9655              	.LASF107:
 9656 40cd 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 9656      4E543634 
 9656      5F432863 
 9656      29206320 
 9656      23232055 
 9657              	.LASF53:
 9658 40e4 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 9658      4E545F4C 
 9658      45415354 
 9658      36345F54 
 9658      5950455F 
 9659              	.LASF191:
 9660 4111 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 9660      46524143 
 9660      545F4642 
 9660      49545F5F 
 9660      203800
 9661              	.LASF160:
 9662 4124 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 9662      424C5F45 
 9662      5053494C 
 9662      4F4E5F5F 
 9662      20322E32 
 9663              	.LASF628:
 9664 414d 5F5F7075 		.ascii	"__pure2 __attribute__((__const__))\000"
 9664      72653220 
 9664      5F5F6174 
 9664      74726962 
 9664      7574655F 
 9665              	.LASF312:
 9666 4170 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 9666      435F4154 
 9666      4F4D4943 
 9666      5F434841 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 249


 9666      5231365F 
 9667              	.LASF813:
 9668 4192 57434841 		.ascii	"WCHAR_MIN (__WCHAR_MIN__)\000"
 9668      525F4D49 
 9668      4E20285F 
 9668      5F574348 
 9668      41525F4D 
 9669              	.LASF141:
 9670 41ac 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 9670      4C5F4D41 
 9670      585F4558 
 9670      505F5F20 
 9670      31303234 
 9671              	.LASF738:
 9672 41c1 5F5F4641 		.ascii	"__FAST64 \"ll\"\000"
 9672      53543634 
 9672      20226C6C 
 9672      2200
 9673              	.LASF9:
 9674 41cf 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 9674      4F4D4943 
 9674      5F52454C 
 9674      45415345 
 9674      203300
 9675              	.LASF723:
 9676 41e2 756E7369 		.ascii	"unsigned +0\000"
 9676      676E6564 
 9676      202B3000 
 9677              	.LASF865:
 9678 41ee 636F6E66 		.ascii	"configNET_MASK3 0\000"
 9678      69674E45 
 9678      545F4D41 
 9678      534B3320 
 9678      3000
 9679              	.LASF123:
 9680 4200 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 9680      545F4D41 
 9680      4E545F44 
 9680      49475F5F 
 9680      20323400 
 9681              	.LASF528:
 9682 4214 5F52414E 		.ascii	"_RAND48_SEED_1 (0xabcd)\000"
 9682      4434385F 
 9682      53454544 
 9682      5F312028 
 9682      30786162 
 9683              	.LASF246:
 9684 422c 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
 9684      4343554D 
 9684      5F464249 
 9684      545F5F20 
 9684      333100
 9685              	.LASF807:
 9686 423f 55494E54 		.ascii	"UINTMAX_MAX (__UINTMAX_MAX__)\000"
 9686      4D41585F 
 9686      4D415820 
 9686      285F5F55 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 250


 9686      494E544D 
 9687              	.LASF500:
 9688 425d 5F5F4C4F 		.ascii	"__LOCK_INIT_RECURSIVE(class,lock) static int lock ="
 9688      434B5F49 
 9688      4E49545F 
 9688      52454355 
 9688      52534956 
 9689 4290 20303B00 		.ascii	" 0;\000"
 9690              	.LASF1077:
 9691 4294 71756575 		.ascii	"queueSEND_TO_FRONT ( ( BaseT_t ) 1 )\000"
 9691      6553454E 
 9691      445F544F 
 9691      5F46524F 
 9691      4E542028 
 9692              	.LASF244:
 9693 42b9 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 9693      4343554D 
 9693      5F4D4158 
 9693      5F5F2030 
 9693      58464646 
 9694              	.LASF614:
 9695 42d9 5F5F4343 		.ascii	"__CC_SUPPORTS___FUNC__ 1\000"
 9695      5F535550 
 9695      504F5254 
 9695      535F5F5F 
 9695      46554E43 
 9696              	.LASF847:
 9697 42f2 636F6E66 		.ascii	"configUSE_RECURSIVE_MUTEXES 1\000"
 9697      69675553 
 9697      455F5245 
 9697      43555253 
 9697      4956455F 
 9698              	.LASF1085:
 9699 4310 78517565 		.ascii	"xQueueCreate(uxQueueLength,uxItemSize) xQueueGeneri"
 9699      75654372 
 9699      65617465 
 9699      28757851 
 9699      75657565 
 9700 4343 63437265 		.ascii	"cCreate( uxQueueLength, uxItemSize, queueQUEUE_TYPE"
 9700      61746528 
 9700      20757851 
 9700      75657565 
 9700      4C656E67 
 9701 4376 5F424153 		.ascii	"_BASE )\000"
 9701      45202900 
 9702              	.LASF597:
 9703 437e 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_CONSTANTS \000"
 9703      55434C49 
 9703      4B455F4D 
 9703      4154485F 
 9703      4255494C 
 9704              	.LASF1213:
 9705 43a1 78506F73 		.ascii	"xPosition\000"
 9705      6974696F 
 9705      6E00
 9706              	.LASF737:
 9707 43ab 5F5F4641 		.ascii	"__FAST32 \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 251


 9707      53543332 
 9707      2000
 9708              	.LASF475:
 9709 43b5 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 9709      54524449 
 9709      46465F20 
 9709      00
 9710              	.LASF1088:
 9711 43c2 78517565 		.ascii	"xQueueSend(xQueue,pvItemToQueue,xTicksToWait) xQueu"
 9711      75655365 
 9711      6E642878 
 9711      51756575 
 9711      652C7076 
 9712 43f5 6547656E 		.ascii	"eGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTic"
 9712      65726963 
 9712      53656E64 
 9712      28202820 
 9712      78517565 
 9713 4428 6B73546F 		.ascii	"ksToWait ), queueSEND_TO_BACK )\000"
 9713      57616974 
 9713      20292C20 
 9713      71756575 
 9713      6553454E 
 9714              	.LASF161:
 9715 4448 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 9715      424C5F44 
 9715      454E4F52 
 9715      4D5F4D49 
 9715      4E5F5F20 
 9716              	.LASF87:
 9717 4475 5F5F494E 		.ascii	"__INT64_MAX__ 0x7fffffffffffffffLL\000"
 9717      5436345F 
 9717      4D41585F 
 9717      5F203078 
 9717      37666666 
 9718              	.LASF327:
 9719 4498 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 9719      4D5F4645 
 9719      41545552 
 9719      455F5341 
 9719      54203100 
 9720              	.LASF749:
 9721 44ac 5F5F696E 		.ascii	"__int16_t_defined 1\000"
 9721      7431365F 
 9721      745F6465 
 9721      66696E65 
 9721      64203100 
 9722              	.LASF222:
 9723 44c0 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 9723      4C465241 
 9723      43545F49 
 9723      4249545F 
 9723      5F203000 
 9724              	.LASF473:
 9725 44d4 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 9725      495F5354 
 9725      44444546 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 252


 9725      5F482000 
 9726              	.LASF546:
 9727 44e4 5F524545 		.ascii	"_REENT_CHECK_SIGNAL_BUF(ptr) \000"
 9727      4E545F43 
 9727      4845434B 
 9727      5F534947 
 9727      4E414C5F 
 9728              	.LASF471:
 9729 4502 5F535444 		.ascii	"_STDDEF_H \000"
 9729      4445465F 
 9729      482000
 9730              	.LASF1097:
 9731 450d 78517565 		.ascii	"xQueueAltSendToBack(xQueue,pvItemToQueue,xTicksToWa"
 9731      7565416C 
 9731      7453656E 
 9731      64546F42 
 9731      61636B28 
 9732 4540 69742920 		.ascii	"it) xQueueAltGenericSend( ( xQueue ), ( pvItemToQue"
 9732      78517565 
 9732      7565416C 
 9732      7447656E 
 9732      65726963 
 9733 4573 75652029 		.ascii	"ue ), ( xTicksToWait ), queueSEND_TO_BACK )\000"
 9733      2C202820 
 9733      78546963 
 9733      6B73546F 
 9733      57616974 
 9734              	.LASF526:
 9735 459f 5F524545 		.ascii	"_REENT_SMALL_CHECK_INIT(ptr) \000"
 9735      4E545F53 
 9735      4D414C4C 
 9735      5F434845 
 9735      434B5F49 
 9736              	.LASF842:
 9737 45bd 636F6E66 		.ascii	"configUSE_MUTEXES 1\000"
 9737      69675553 
 9737      455F4D55 
 9737      54455845 
 9737      53203100 
 9738              	.LASF756:
 9739 45d1 5F494E54 		.ascii	"_INTPTR_T_DECLARED \000"
 9739      5054525F 
 9739      545F4445 
 9739      434C4152 
 9739      45442000 
 9740              	.LASF505:
 9741 45e5 5F5F6C6F 		.ascii	"__lock_acquire(lock) (_CAST_VOID 0)\000"
 9741      636B5F61 
 9741      63717569 
 9741      7265286C 
 9741      6F636B29 
 9742              	.LASF1037:
 9743 4609 706F7274 		.ascii	"portTICK_RATE_MS portTICK_PERIOD_MS\000"
 9743      5449434B 
 9743      5F524154 
 9743      455F4D53 
 9743      20706F72 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 253


 9744              	.LASF1026:
 9745 462d 78517565 		.ascii	"xQueueHandle QueueHandle_t\000"
 9745      75654861 
 9745      6E646C65 
 9745      20517565 
 9745      75654861 
 9746              	.LASF1202:
 9747 4648 70634F72 		.ascii	"pcOriginalReadPosition\000"
 9747      6967696E 
 9747      616C5265 
 9747      6164506F 
 9747      73697469 
 9748              	.LASF1009:
 9749 465f 76506F72 		.ascii	"vPortFreeAligned(pvBlockToFree) vPortFree( pvBlockT"
 9749      74467265 
 9749      65416C69 
 9749      676E6564 
 9749      28707642 
 9750 4692 6F467265 		.ascii	"oFree )\000"
 9750      65202900 
 9751              	.LASF130:
 9752 469a 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 9752      545F4D41 
 9752      585F5F20 
 9752      332E3430 
 9752      32383233 
 9753              	.LASF241:
 9754 46be 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 9754      4343554D 
 9754      5F464249 
 9754      545F5F20 
 9754      313600
 9755              	.LASF670:
 9756 46d1 5F5F7761 		.ascii	"__warn_references(sym,msg) __asm__(\".section .gnu."
 9756      726E5F72 
 9756      65666572 
 9756      656E6365 
 9756      73287379 
 9757 4703 7761726E 		.ascii	"warning.\" #sym); __asm__(\".asciz \\\"\" msg \"\\\""
 9757      696E672E 
 9757      22202373 
 9757      796D293B 
 9757      205F5F61 
 9758 472f 22293B20 		.ascii	"\"); __asm__(\".previous\")\000"
 9758      5F5F6173 
 9758      6D5F5F28 
 9758      222E7072 
 9758      6576696F 
 9759              	.LASF205:
 9760 4748 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 9760      52414354 
 9760      5F455053 
 9760      494C4F4E 
 9760      5F5F2030 
 9761              	.LASF73:
 9762 4765 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 9762      4841525F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 254


 9762      4D494E5F 
 9762      5F203055 
 9762      00
 9763              	.LASF1221:
 9764 4776 76517565 		.ascii	"vQueueAddToRegistry\000"
 9764      75654164 
 9764      64546F52 
 9764      65676973 
 9764      74727900 
 9765              	.LASF277:
 9766 478a 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 9766      515F4942 
 9766      49545F5F 
 9766      203000
 9767              	.LASF1043:
 9768 4799 4C495354 		.ascii	"LIST_H \000"
 9768      5F482000 
 9769              	.LASF360:
 9770 47a1 5F4E4557 		.ascii	"_NEWLIB_VERSION \"2.4.0\"\000"
 9770      4C49425F 
 9770      56455253 
 9770      494F4E20 
 9770      22322E34 
 9771              	.LASF1222:
 9772 47b9 76517565 		.ascii	"vQueueUnregisterQueue\000"
 9772      7565556E 
 9772      72656769 
 9772      73746572 
 9772      51756575 
 9773              	.LASF317:
 9774 47cf 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 9774      435F4154 
 9774      4F4D4943 
 9774      5F4C4F4E 
 9774      475F4C4F 
 9775              	.LASF253:
 9776 47ed 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 9776      41434355 
 9776      4D5F4D49 
 9776      4E5F5F20 
 9776      302E3055 
 9777              	.LASF368:
 9778 4804 5F415445 		.ascii	"_ATEXIT_DYNAMIC_ALLOC 1\000"
 9778      5849545F 
 9778      44594E41 
 9778      4D49435F 
 9778      414C4C4F 
 9779              	.LASF449:
 9780 481c 5F5F6E65 		.ascii	"__need_size_t\000"
 9780      65645F73 
 9780      697A655F 
 9780      7400
 9781              	.LASF1198:
 9782 482a 75785361 		.ascii	"uxSavedInterruptStatus\000"
 9782      76656449 
 9782      6E746572 
 9782      72757074 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 255


 9782      53746174 
 9783              	.LASF336:
 9784 4841 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 9784      4D5F4152 
 9784      43482037 
 9784      00
 9785              	.LASF40:
 9786 484e 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 9786      5433325F 
 9786      54595045 
 9786      5F5F206C 
 9786      6F6E6720 
 9787              	.LASF439:
 9788 4866 5F53495A 		.ascii	"_SIZE_T_ \000"
 9788      455F545F 
 9788      2000
 9789              	.LASF414:
 9790 4870 5F444F54 		.ascii	"_DOTS , ...\000"
 9790      53202C20 
 9790      2E2E2E00 
 9791              	.LASF122:
 9792 487c 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 9792      545F5241 
 9792      4449585F 
 9792      5F203200 
 9793              	.LASF1122:
 9794 488c 6C6F6E67 		.ascii	"long long int\000"
 9794      206C6F6E 
 9794      6720696E 
 9794      7400
 9795              	.LASF550:
 9796 489a 5F524545 		.ascii	"_REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._m"
 9796      4E545F52 
 9796      414E4434 
 9796      385F4D55 
 9796      4C542870 
 9797 48cd 756C7429 		.ascii	"ult)\000"
 9797      00
 9798              	.LASF788:
 9799 48d2 494E5436 		.ascii	"INT64_MAX (__INT64_MAX__)\000"
 9799      345F4D41 
 9799      5820285F 
 9799      5F494E54 
 9799      36345F4D 
 9800              	.LASF1028:
 9801 48ec 78517565 		.ascii	"xQueueSetHandle QueueSetHandle_t\000"
 9801      75655365 
 9801      7448616E 
 9801      646C6520 
 9801      51756575 
 9802              	.LASF783:
 9803 490d 55494E54 		.ascii	"UINT32_MAX (__UINT32_MAX__)\000"
 9803      33325F4D 
 9803      41582028 
 9803      5F5F5549 
 9803      4E543332 
 9804              	.LASF164:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 256


 9805 4929 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 9805      424C5F48 
 9805      41535F51 
 9805      55494554 
 9805      5F4E414E 
 9806              	.LASF1108:
 9807 4942 71756575 		.ascii	"queueMUTEX_GIVE_BLOCK_TIME ( ( TickT_t ) 0U )\000"
 9807      654D5554 
 9807      45585F47 
 9807      4956455F 
 9807      424C4F43 
 9808              	.LASF1194:
 9809 4970 78596965 		.ascii	"xYieldRequired\000"
 9809      6C645265 
 9809      71756972 
 9809      656400
 9810              	.LASF1091:
 9811 497f 78517565 		.ascii	"xQueueReceive(xQueue,pvBuffer,xTicksToWait) xQueueG"
 9811      75655265 
 9811      63656976 
 9811      65287851 
 9811      75657565 
 9812 49b2 656E6572 		.ascii	"enericReceive( ( xQueue ), ( pvBuffer ), ( xTicksTo"
 9812      69635265 
 9812      63656976 
 9812      65282028 
 9812      20785175 
 9813 49e5 57616974 		.ascii	"Wait ), pdFALSE )\000"
 9813      20292C20 
 9813      70644641 
 9813      4C534520 
 9813      2900
 9814              	.LASF839:
 9815 49f7 636F6E66 		.ascii	"configUSE_16_BIT_TICKS 0\000"
 9815      69675553 
 9815      455F3136 
 9815      5F424954 
 9815      5F544943 
 9816              	.LASF474:
 9817 4a10 5F505452 		.ascii	"_PTRDIFF_T \000"
 9817      44494646 
 9817      5F542000 
 9818              	.LASF815:
 9819 4a1c 57494E54 		.ascii	"WINT_MAX (__WINT_MAX__)\000"
 9819      5F4D4158 
 9819      20285F5F 
 9819      57494E54 
 9819      5F4D4158 
 9820              	.LASF115:
 9821 4a34 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 0xffffffffffffffffULL\000"
 9821      4E545F46 
 9821      41535436 
 9821      345F4D41 
 9821      585F5F20 
 9822              	.LASF857:
 9823 4a5e 494E434C 		.ascii	"INCLUDE_uxTaskGetStackHighWaterMark 1\000"
 9823      5544455F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 257


 9823      75785461 
 9823      736B4765 
 9823      74537461 
 9824              	.LASF866:
 9825 4a84 636F6E66 		.ascii	"configPRIO_BITS 5\000"
 9825      69675052 
 9825      494F5F42 
 9825      49545320 
 9825      3500
 9826              	.LASF543:
 9827 4a96 5F524545 		.ascii	"_REENT_CHECK_ASCTIME_BUF(ptr) \000"
 9827      4E545F43 
 9827      4845434B 
 9827      5F415343 
 9827      54494D45 
 9828              	.LASF1090:
 9829 4ab5 78517565 		.ascii	"xQueuePeek(xQueue,pvBuffer,xTicksToWait) xQueueGene"
 9829      75655065 
 9829      656B2878 
 9829      51756575 
 9829      652C7076 
 9830 4ae8 72696352 		.ascii	"ricReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWai"
 9830      65636569 
 9830      76652820 
 9830      28207851 
 9830      75657565 
 9831 4b1b 7420292C 		.ascii	"t ), pdTRUE )\000"
 9831      20706454 
 9831      52554520 
 9831      2900
 9832              	.LASF868:
 9833 4b29 636F6E66 		.ascii	"configMAX_SYSCALL_INTERRUPT_PRIORITY ( 5 << (8 - co"
 9833      69674D41 
 9833      585F5359 
 9833      5343414C 
 9833      4C5F494E 
 9834 4b5c 6E666967 		.ascii	"nfigPRIO_BITS) )\000"
 9834      5052494F 
 9834      5F424954 
 9834      53292029 
 9834      00
 9835              	.LASF509:
 9836 4b6d 5F5F6C6F 		.ascii	"__lock_release(lock) (_CAST_VOID 0)\000"
 9836      636B5F72 
 9836      656C6561 
 9836      7365286C 
 9836      6F636B29 
 9837              	.LASF665:
 9838 4b91 5F5F7374 		.ascii	"__strftimelike(fmtarg,firstvararg) __attribute__((_"
 9838      72667469 
 9838      6D656C69 
 9838      6B652866 
 9838      6D746172 
 9839 4bc4 5F666F72 		.ascii	"_format__ (__strftime__, fmtarg, firstvararg)))\000"
 9839      6D61745F 
 9839      5F20285F 
 9839      5F737472 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 258


 9839      6674696D 
 9840              	.LASF455:
 9841 4bf4 5F5F5743 		.ascii	"__WCHAR_T \000"
 9841      4841525F 
 9841      542000
 9842              	.LASF376:
 9843 4bff 5F5F5359 		.ascii	"__SYS_CONFIG_H__ \000"
 9843      535F434F 
 9843      4E464947 
 9843      5F485F5F 
 9843      2000
 9844              	.LASF706:
 9845 4c11 4D425F43 		.ascii	"MB_CUR_MAX __locale_mb_cur_max()\000"
 9845      55525F4D 
 9845      4158205F 
 9845      5F6C6F63 
 9845      616C655F 
 9846              	.LASF1192:
 9847 4c32 78436F70 		.ascii	"xCopyPosition\000"
 9847      79506F73 
 9847      6974696F 
 9847      6E00
 9848              	.LASF370:
 9849 4c40 5F484156 		.ascii	"_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\000"
 9849      455F4343 
 9849      5F494E48 
 9849      49424954 
 9849      5F4C4F4F 
 9850              	.LASF41:
 9851 4c63 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 9851      5436345F 
 9851      54595045 
 9851      5F5F206C 
 9851      6F6E6720 
 9852              	.LASF206:
 9853 4c80 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 9853      52414354 
 9853      5F464249 
 9853      545F5F20 
 9853      333100
 9854              	.LASF21:
 9855 4c93 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 9855      41525F42 
 9855      49545F5F 
 9855      203800
 9856              	.LASF894:
 9857 4ca2 706F7274 		.ascii	"portNVIC_INT_CTRL_REG ( * ( ( volatile uint32_t * )"
 9857      4E564943 
 9857      5F494E54 
 9857      5F435452 
 9857      4C5F5245 
 9858 4cd5 20307865 		.ascii	" 0xe000ed04 ) )\000"
 9858      30303065 
 9858      64303420 
 9858      29202900 
 9859              	.LASF323:
 9860 4ce5 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 259


 9860      5A454F46 
 9860      5F574348 
 9860      41525F54 
 9860      5F5F2034 
 9861              	.LASF1137:
 9862 4cfa 784C4953 		.ascii	"xLIST_ITEM\000"
 9862      545F4954 
 9862      454D00
 9863              	.LASF389:
 9864 4d05 5F5F4253 		.ascii	"__BSD_VISIBLE 1\000"
 9864      445F5649 
 9864      5349424C 
 9864      45203100 
 9865              	.LASF778:
 9866 4d15 494E545F 		.ascii	"INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)\000"
 9866      4C454153 
 9866      5431365F 
 9866      4D494E20 
 9866      282D5F5F 
 9867              	.LASF1082:
 9868 4d40 71756575 		.ascii	"queueQUEUE_TYPE_COUNTING_SEMAPHORE ( ( uint8_t ) 2U"
 9868      65515545 
 9868      55455F54 
 9868      5950455F 
 9868      434F554E 
 9869 4d73 202900   		.ascii	" )\000"
 9870              	.LASF970:
 9871 4d76 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue) \000"
 9871      65515545 
 9871      55455F52 
 9871      45434549 
 9871      56455F46 
 9872              	.LASF565:
 9873 4da3 5F524545 		.ascii	"_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mb"
 9873      4E545F4D 
 9873      42535254 
 9873      4F574353 
 9873      5F535441 
 9874 4dd6 7372746F 		.ascii	"srtowcs_state)\000"
 9874      7763735F 
 9874      73746174 
 9874      652900
 9875              	.LASF1164:
 9876 4de5 75635175 		.ascii	"ucQueueType\000"
 9876      65756554 
 9876      79706500 
 9877              	.LASF204:
 9878 4df1 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 9878      52414354 
 9878      5F4D4158 
 9878      5F5F2030 
 9878      58464646 
 9879              	.LASF496:
 9880 4e0d 5F5F5F69 		.ascii	"___int_least64_t_defined 1\000"
 9880      6E745F6C 
 9880      65617374 
 9880      36345F74 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 260


 9880      5F646566 
 9881              	.LASF1102:
 9882 4e28 71756575 		.ascii	"queueUNLOCKED ( ( BaseT_t ) -1 )\000"
 9882      65554E4C 
 9882      4F434B45 
 9882      44202820 
 9882      28204261 
 9883              	.LASF1096:
 9884 4e49 78517565 		.ascii	"xQueueAltSendToFront(xQueue,pvItemToQueue,xTicksToW"
 9884      7565416C 
 9884      7453656E 
 9884      64546F46 
 9884      726F6E74 
 9885 4e7c 61697429 		.ascii	"ait) xQueueAltGenericSend( ( xQueue ), ( pvItemToQu"
 9885      20785175 
 9885      65756541 
 9885      6C744765 
 9885      6E657269 
 9886 4eaf 65756520 		.ascii	"eue ), ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9886      292C2028 
 9886      20785469 
 9886      636B7354 
 9886      6F576169 
 9887              	.LASF580:
 9888 4edd 5F5F5448 		.ascii	"__THROW \000"
 9888      524F5720 
 9888      00
 9889              	.LASF187:
 9890 4ee6 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
 9890      52414354 
 9890      5F494249 
 9890      545F5F20 
 9890      3000
 9891              	.LASF568:
 9892 4ef8 5F524545 		.ascii	"_REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)"
 9892      4E545F4C 
 9892      3634415F 
 9892      42554628 
 9892      70747229 
 9893 4f2b 00       		.ascii	"\000"
 9894              	.LASF387:
 9895 4f2c 5F415446 		.ascii	"_ATFILE_SOURCE 1\000"
 9895      494C455F 
 9895      534F5552 
 9895      43452031 
 9895      00
 9896              	.LASF714:
 9897 4f3d 5F5F5354 		.ascii	"__STDINT_EXP(x) __ ##x ##__\000"
 9897      44494E54 
 9897      5F455850 
 9897      28782920 
 9897      5F5F2023 
 9898              	.LASF488:
 9899 4f59 5F5F4558 		.ascii	"__EXP(x) __ ##x ##__\000"
 9899      50287829 
 9899      205F5F20 
 9899      23237820 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 261


 9899      23235F5F 
 9900              	.LASF26:
 9901 4f6e 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 9901      54455F4F 
 9901      52444552 
 9901      5F5F205F 
 9901      5F4F5244 
 9902              	.LASF898:
 9903 4f95 706F7274 		.ascii	"portYIELD_FROM_ISR(x) portEND_SWITCHING_ISR( x )\000"
 9903      5949454C 
 9903      445F4652 
 9903      4F4D5F49 
 9903      53522878 
 9904              	.LASF125:
 9905 4fc6 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 9905      545F4D49 
 9905      4E5F4558 
 9905      505F5F20 
 9905      282D3132 
 9906              	.LASF833:
 9907 4fdd 636F6E66 		.ascii	"configCPU_CLOCK_HZ ( ( unsigned long )120000000ul )"
 9907      69674350 
 9907      555F434C 
 9907      4F434B5F 
 9907      485A2028 
 9908 5010 00       		.ascii	"\000"
 9909              	.LASF220:
 9910 5011 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 9910      46524143 
 9910      545F4550 
 9910      53494C4F 
 9910      4E5F5F20 
 9911              	.LASF407:
 9912 5030 5F4E4F54 		.ascii	"_NOTHROW \000"
 9912      48524F57 
 9912      2000
 9913              	.LASF1159:
 9914 503a 75784C65 		.ascii	"uxLength\000"
 9914      6E677468 
 9914      00
 9915              	.LASF357:
 9916 5043 5F414E53 		.ascii	"_ANSIDECL_H_ \000"
 9916      49444543 
 9916      4C5F485F 
 9916      2000
 9917              	.LASF891:
 9918 5051 706F7274 		.ascii	"portSTACK_GROWTH ( -1 )\000"
 9918      53544143 
 9918      4B5F4752 
 9918      4F575448 
 9918      2028202D 
 9919              	.LASF904:
 9920 5069 706F7274 		.ascii	"portEXIT_CRITICAL() vPortExitCritical()\000"
 9920      45584954 
 9920      5F435249 
 9920      54494341 
 9920      4C282920 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 262


 9921              	.LASF303:
 9922 5091 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 9922      45525F4C 
 9922      4142454C 
 9922      5F505245 
 9922      4649585F 
 9923              	.LASF1027:
 9924 50a8 7853656D 		.ascii	"xSemaphoreHandle SemaphoreHandle_t\000"
 9924      6170686F 
 9924      72654861 
 9924      6E646C65 
 9924      2053656D 
 9925              	.LASF201:
 9926 50cb 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 9926      52414354 
 9926      5F464249 
 9926      545F5F20 
 9926      313600
 9927              	.LASF1042:
 9928 50de 494E435F 		.ascii	"INC_TASK_H \000"
 9928      5441534B 
 9928      5F482000 
 9929              	.LASF282:
 9930 50ea 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 9930      515F4642 
 9930      49545F5F 
 9930      20363400 
 9931              	.LASF1158:
 9932 50fa 75784D65 		.ascii	"uxMessagesWaiting\000"
 9932      73736167 
 9932      65735761 
 9932      6974696E 
 9932      6700
 9933              	.LASF156:
 9934 510c 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 9934      424C5F4D 
 9934      41585F31 
 9934      305F4558 
 9934      505F5F20 
 9935              	.LASF844:
 9936 5124 636F6E66 		.ascii	"configUSE_COUNTING_SEMAPHORES 1\000"
 9936      69675553 
 9936      455F434F 
 9936      554E5449 
 9936      4E475F53 
 9937              	.LASF1061:
 9938 5144 74736B4B 		.ascii	"tskKERNEL_VERSION_MAJOR 8\000"
 9938      45524E45 
 9938      4C5F5645 
 9938      5253494F 
 9938      4E5F4D41 
 9939              	.LASF910:
 9940 515e 706F7274 		.ascii	"portRESET_READY_PRIORITY(uxPriority,uxReadyPrioriti"
 9940      52455345 
 9940      545F5245 
 9940      4144595F 
 9940      5052494F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 263


 9941 5191 65732920 		.ascii	"es) ( uxReadyPriorities ) &= ~( 1UL << ( uxPriority"
 9941      28207578 
 9941      52656164 
 9941      79507269 
 9941      6F726974 
 9942 51c4 20292029 		.ascii	" ) )\000"
 9942      00
 9943              	.LASF1024:
 9944 51c9 706F7274 		.ascii	"portTickType TickT_t\000"
 9944      5469636B 
 9944      54797065 
 9944      20546963 
 9944      6B545F74 
 9945              	.LASF56:
 9946 51de 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 9946      545F4641 
 9946      53543332 
 9946      5F545950 
 9946      455F5F20 
 9947              	.LASF754:
 9948 51f6 5F55494E 		.ascii	"_UINT64_T_DECLARED \000"
 9948      5436345F 
 9948      545F4445 
 9948      434C4152 
 9948      45442000 
 9949              	.LASF1111:
 9950 520a 756E7369 		.ascii	"unsigned int\000"
 9950      676E6564 
 9950      20696E74 
 9950      00
 9951              	.LASF441:
 9952 5217 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 9952      455F545F 
 9952      44454649 
 9952      4E45445F 
 9952      2000
 9953              	.LASF739:
 9954 5229 5F5F4C45 		.ascii	"__LEAST8 \"hh\"\000"
 9954      41535438 
 9954      20226868 
 9954      2200
 9955              	.LASF1086:
 9956 5237 78517565 		.ascii	"xQueueSendToFront(xQueue,pvItemToQueue,xTicksToWait"
 9956      75655365 
 9956      6E64546F 
 9956      46726F6E 
 9956      74287851 
 9957 526a 29207851 		.ascii	") xQueueGenericSend( ( xQueue ), ( pvItemToQueue ),"
 9957      75657565 
 9957      47656E65 
 9957      72696353 
 9957      656E6428 
 9958 529d 20282078 		.ascii	" ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9958      5469636B 
 9958      73546F57 
 9958      61697420 
 9958      292C2071 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 264


 9959              	.LASF362:
 9960 52c5 5F5F4E45 		.ascii	"__NEWLIB_MINOR__ 4\000"
 9960      574C4942 
 9960      5F4D494E 
 9960      4F525F5F 
 9960      203400
 9961              	.LASF626:
 9962 52d8 5F5F7765 		.ascii	"__weak_symbol __attribute__((__weak__))\000"
 9962      616B5F73 
 9962      796D626F 
 9962      6C205F5F 
 9962      61747472 
 9963              	.LASF822:
 9964 5300 55494E54 		.ascii	"UINT32_C(x) __UINT32_C(x)\000"
 9964      33325F43 
 9964      28782920 
 9964      5F5F5549 
 9964      4E543332 
 9965              	.LASF264:
 9966 531a 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 9966      4C414343 
 9966      554D5F4D 
 9966      41585F5F 
 9966      20305846 
 9967              	.LASF232:
 9968 5346 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
 9968      41434355 
 9968      4D5F4942 
 9968      49545F5F 
 9968      203800
 9969              	.LASF1068:
 9970 5359 7461736B 		.ascii	"taskDISABLE_INTERRUPTS() portDISABLE_INTERRUPTS()\000"
 9970      44495341 
 9970      424C455F 
 9970      494E5445 
 9970      52525550 
 9971              	.LASF793:
 9972 538b 494E545F 		.ascii	"INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)\000"
 9972      46415354 
 9972      385F4D49 
 9972      4E20282D 
 9972      5F5F494E 
 9973              	.LASF652:
 9974 53b2 5F5F7265 		.ascii	"__restrict \000"
 9974      73747269 
 9974      63742000 
 9975              	.LASF654:
 9976 53be 5F5F7072 		.ascii	"__predict_false(exp) __builtin_expect((exp), 0)\000"
 9976      65646963 
 9976      745F6661 
 9976      6C736528 
 9976      65787029 
 9977              	.LASF262:
 9978 53ee 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 9978      4C414343 
 9978      554D5F49 
 9978      4249545F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 265


 9978      5F203332 
 9979              	.LASF245:
 9980 5403 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 9980      4343554D 
 9980      5F455053 
 9980      494C4F4E 
 9980      5F5F2030 
 9981              	.LASF1214:
 9982 5420 70727643 		.ascii	"prvCopyDataFromQueue\000"
 9982      6F707944 
 9982      61746146 
 9982      726F6D51 
 9982      75657565 
 9983              	.LASF464:
 9984 5435 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 9984      41525F54 
 9984      5F444543 
 9984      4C415245 
 9984      442000
 9985              	.LASF797:
 9986 5448 494E545F 		.ascii	"INT_FAST16_MAX (__INT_FAST16_MAX__)\000"
 9986      46415354 
 9986      31365F4D 
 9986      41582028 
 9986      5F5F494E 
 9987              	.LASF953:
 9988 546c 74726163 		.ascii	"traceCREATE_MUTEX(pxNewQueue) \000"
 9988      65435245 
 9988      4154455F 
 9988      4D555445 
 9988      58287078 
 9989              	.LASF1011:
 9990 548b 636F6E66 		.ascii	"configUSE_TICKLESS_IDLE 0\000"
 9990      69675553 
 9990      455F5449 
 9990      434B4C45 
 9990      53535F49 
 9991              	.LASF470:
 9992 54a5 5F535953 		.ascii	"_SYS_REENT_H_ \000"
 9992      5F524545 
 9992      4E545F48 
 9992      5F2000
 9993              	.LASF120:
 9994 54b4 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 9994      545F4556 
 9994      414C5F4D 
 9994      4554484F 
 9994      445F5F20 
 9995              	.LASF763:
 9996 54ca 5F5F696E 		.ascii	"__int_fast16_t_defined 1\000"
 9996      745F6661 
 9996      73743136 
 9996      5F745F64 
 9996      6566696E 
 9997              	.LASF1006:
 9998 54e3 706F7274 		.ascii	"portPRIVILEGE_BIT ( ( UBaseT_t ) 0x00 )\000"
 9998      50524956 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 266


 9998      494C4547 
 9998      455F4249 
 9998      54202820 
 9999              	.LASF1141:
 10000 550b 75784E75 		.ascii	"uxNumberOfItems\000"
 10000      6D626572 
 10000      4F664974 
 10000      656D7300 
 10001              	.LASF67:
 10002 551b 5F5F5343 		.ascii	"__SCHAR_MAX__ 0x7f\000"
 10002      4841525F 
 10002      4D41585F 
 10002      5F203078 
 10002      376600
 10003              	.LASF732:
 10004 552e 5F5F494E 		.ascii	"__INT16 \"h\"\000"
 10004      54313620 
 10004      22682200 
 10005              	.LASF532:
 10006 553a 5F52414E 		.ascii	"_RAND48_MULT_2 (0x0005)\000"
 10006      4434385F 
 10006      4D554C54 
 10006      5F322028 
 10006      30783030 
 10007              	.LASF416:
 10008 5552 5F455846 		.ascii	"_EXFUN_NOTHROW(name,proto) name proto _NOTHROW\000"
 10008      554E5F4E 
 10008      4F544852 
 10008      4F57286E 
 10008      616D652C 
 10009              	.LASF1083:
 10010 5581 71756575 		.ascii	"queueQUEUE_TYPE_BINARY_SEMAPHORE ( ( uint8_t ) 3U )"
 10010      65515545 
 10010      55455F54 
 10010      5950455F 
 10010      42494E41 
 10011 55b4 00       		.ascii	"\000"
 10012              	.LASF476:
 10013 55b5 5F545F50 		.ascii	"_T_PTRDIFF \000"
 10013      54524449 
 10013      46462000 
 10014              	.LASF276:
 10015 55c1 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 10015      515F4642 
 10015      49545F5F 
 10015      203800
 10016              	.LASF173:
 10017 55d0 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 10017      4336345F 
 10017      4D494E5F 
 10017      4558505F 
 10017      5F20282D 
 10018              	.LASF118:
 10019 55e9 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 10019      435F4945 
 10019      435F3535 
 10019      39203000 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 267


 10020              	.LASF518:
 10021 55f9 5F54494D 		.ascii	"_TIME_T_ long\000"
 10021      455F545F 
 10021      206C6F6E 
 10021      6700
 10022              	.LASF1070:
 10023 5607 7461736B 		.ascii	"taskSCHEDULER_SUSPENDED ( ( BaseT_t ) 0 )\000"
 10023      53434845 
 10023      44554C45 
 10023      525F5355 
 10023      5350454E 
 10024              	.LASF694:
 10025 5631 5F5F7265 		.ascii	"__requires_unlocked(...) __lock_annotate(locks_excl"
 10025      71756972 
 10025      65735F75 
 10025      6E6C6F63 
 10025      6B656428 
 10026 5664 75646564 		.ascii	"uded(__VA_ARGS__))\000"
 10026      285F5F56 
 10026      415F4152 
 10026      47535F5F 
 10026      292900
 10027              	.LASF724:
 10028 5677 63686172 		.ascii	"char +0\000"
 10028      202B3000 
 10029              	.LASF700:
 10030 567f 616C6C6F 		.ascii	"alloca\000"
 10030      636100
 10031              	.LASF209:
 10032 5686 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 10032      52414354 
 10032      5F4D4158 
 10032      5F5F2030 
 10032      58374646 
 10033              	.LASF325:
 10034 56a6 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 10034      5A454F46 
 10034      5F505452 
 10034      44494646 
 10034      5F545F5F 
 10035              	.LASF897:
 10036 56bd 706F7274 		.ascii	"portEND_SWITCHING_ISR(xSwitchRequired) if( xSwitchR"
 10036      454E445F 
 10036      53574954 
 10036      4348494E 
 10036      475F4953 
 10037 56f0 65717569 		.ascii	"equired ) portNVIC_INT_CTRL_REG = portNVIC_PENDSVSE"
 10037      72656420 
 10037      2920706F 
 10037      72744E56 
 10037      49435F49 
 10038 5723 545F4249 		.ascii	"T_BIT\000"
 10038      5400
 10039              	.LASF482:
 10040 5729 5F505452 		.ascii	"_PTRDIFF_T_DECLARED \000"
 10040      44494646 
 10040      5F545F44 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 268


 10040      45434C41 
 10040      52454420 
 10041              	.LASF493:
 10042 573e 5F5F5F69 		.ascii	"___int_least8_t_defined 1\000"
 10042      6E745F6C 
 10042      65617374 
 10042      385F745F 
 10042      64656669 
 10043              	.LASF350:
 10044 5758 5F5F4152 		.ascii	"__ARM_FEATURE_IDIV 1\000"
 10044      4D5F4645 
 10044      41545552 
 10044      455F4944 
 10044      49562031 
 10045              	.LASF27:
 10046 576d 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 10046      4F41545F 
 10046      574F5244 
 10046      5F4F5244 
 10046      45525F5F 
 10047              	.LASF835:
 10048 579a 636F6E66 		.ascii	"configMINIMAL_STACK_SIZE ( ( unsigned short ) 256 )"
 10048      69674D49 
 10048      4E494D41 
 10048      4C5F5354 
 10048      41434B5F 
 10049 57cd 00       		.ascii	"\000"
 10050              	.LASF463:
 10051 57ce 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 10051      5F574348 
 10051      41525F54 
 10051      2000
 10052              	.LASF538:
 10053 57dc 5F524545 		.ascii	"_REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1"
 10053      4E545F49 
 10053      4E495428 
 10053      76617229 
 10053      207B2030 
 10054 580f 5D2C2026 		.ascii	"], &(var).__sf[2], 0, \"\", 0, _NULL, 0, _NULL, _NU"
 10054      28766172 
 10054      292E5F5F 
 10054      73665B32 
 10054      5D2C2030 
 10055 5840 4C4C2C20 		.ascii	"LL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, \"\", "
 10055      302C205F 
 10055      4E554C4C 
 10055      2C205F4E 
 10055      554C4C2C 
 10056 5871 7B302C20 		.ascii	"{0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_"
 10056      302C2030 
 10056      2C20302C 
 10056      20302C20 
 10056      302C2030 
 10057 58a4 302C205F 		.ascii	"0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0"
 10057      52414E44 
 10057      34385F53 
 10057      4545445F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 269


 10057      312C205F 
 10058 58d7 2C205F52 		.ascii	", _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {"
 10058      414E4434 
 10058      385F4D55 
 10058      4C545F31 
 10058      2C205F52 
 10059 590a 302C207B 		.ascii	"0, {0}}, {0, {0}}, {0, {0}}, \"\", \"\", 0, {0, {0}"
 10059      307D7D2C 
 10059      207B302C 
 10059      207B307D 
 10059      7D2C207B 
 10060 5939 7D2C207B 		.ascii	"}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REE"
 10060      302C207B 
 10060      307D7D2C 
 10060      207B302C 
 10060      207B307D 
 10061 596c 4E545F49 		.ascii	"NT_INIT_ATEXIT _NULL, {_NULL, 0, _NULL} }\000"
 10061      4E49545F 
 10061      41544558 
 10061      4954205F 
 10061      4E554C4C 
 10062              	.LASF689:
 10063 5996 5F5F756E 		.ascii	"__unlocks(...) __lock_annotate(unlock_function(__VA"
 10063      6C6F636B 
 10063      73282E2E 
 10063      2E29205F 
 10063      5F6C6F63 
 10064 59c9 5F415247 		.ascii	"_ARGS__))\000"
 10064      535F5F29 
 10064      2900
 10065              	.LASF400:
 10066 59d3 5F5F4558 		.ascii	"__EXPORT \000"
 10066      504F5254 
 10066      2000
 10067              	.LASF37:
 10068 59dd 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 10068      475F4154 
 10068      4F4D4943 
 10068      5F545950 
 10068      455F5F20 
 10069              	.LASF639:
 10070 59f5 5F4E6F72 		.ascii	"_Noreturn __dead2\000"
 10070      65747572 
 10070      6E205F5F 
 10070      64656164 
 10070      3200
 10071              	.LASF956:
 10072 5a07 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 10072      65474956 
 10072      455F4D55 
 10072      5445585F 
 10072      52454355 
 10073              	.LASF1144:
 10074 5a32 4C697374 		.ascii	"List_t\000"
 10074      5F7400
 10075              	.LASF1155:
 10076 5a39 70635772 		.ascii	"pcWriteTo\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 270


 10076      69746554 
 10076      6F00
 10077              	.LASF179:
 10078 5a43 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 10078      43313238 
 10078      5F4D414E 
 10078      545F4449 
 10078      475F5F20 
 10079              	.LASF375:
 10080 5a5a 5F554E42 		.ascii	"_UNBUF_STREAM_OPT 1\000"
 10080      55465F53 
 10080      54524541 
 10080      4D5F4F50 
 10080      54203100 
 10081              	.LASF401:
 10082 5a6e 5F5F494D 		.ascii	"__IMPORT \000"
 10082      504F5254 
 10082      2000
 10083              	.LASF523:
 10084 5a78 5F415445 		.ascii	"_ATEXIT_SIZE 32\000"
 10084      5849545F 
 10084      53495A45 
 10084      20333200 
 10085              	.LASF296:
 10086 5a88 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 10086      415F4642 
 10086      49545F5F 
 10086      20313600 
 10087              	.LASF625:
 10088 5a98 5F5F766F 		.ascii	"__volatile volatile\000"
 10088      6C617469 
 10088      6C652076 
 10088      6F6C6174 
 10088      696C6500 
 10089              	.LASF486:
 10090 5aac 5F4D4143 		.ascii	"_MACHINE__TYPES_H \000"
 10090      48494E45 
 10090      5F5F5459 
 10090      5045535F 
 10090      482000
 10091              	.LASF501:
 10092 5abf 5F5F6C6F 		.ascii	"__lock_init(lock) (_CAST_VOID 0)\000"
 10092      636B5F69 
 10092      6E697428 
 10092      6C6F636B 
 10092      2920285F 
 10093              	.LASF356:
 10094 5ae0 5F5F4945 		.ascii	"__IEEE_LITTLE_ENDIAN \000"
 10094      45455F4C 
 10094      4954544C 
 10094      455F454E 
 10094      4449414E 
 10095              	.LASF154:
 10096 5af6 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 10096      424C5F4D 
 10096      494E5F31 
 10096      305F4558 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 271


 10096      505F5F20 
 10097              	.LASF136:
 10098 5b11 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 10098      545F4841 
 10098      535F5155 
 10098      4945545F 
 10098      4E414E5F 
 10099              	.LASF899:
 10100 5b29 706F7274 		.ascii	"portSET_INTERRUPT_MASK_FROM_ISR() ulPortSetInterrup"
 10100      5345545F 
 10100      494E5445 
 10100      52525550 
 10100      545F4D41 
 10101 5b5c 744D6173 		.ascii	"tMask()\000"
 10101      6B282900 
 10102              	.LASF311:
 10103 5b64 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 10103      435F4154 
 10103      4F4D4943 
 10103      5F434841 
 10103      525F4C4F 
 10104              	.LASF418:
 10105 5b82 5F455850 		.ascii	"_EXPARM(name,proto) (* name) proto\000"
 10105      41524D28 
 10105      6E616D65 
 10105      2C70726F 
 10105      746F2920 
 10106              	.LASF210:
 10107 5ba5 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 10107      52414354 
 10107      5F455053 
 10107      494C4F4E 
 10107      5F5F2030 
 10108              	.LASF405:
 10109 5bc2 5F424547 		.ascii	"_BEGIN_STD_C \000"
 10109      494E5F53 
 10109      54445F43 
 10109      2000
 10110              	.LASF973:
 10111 5bd0 74726163 		.ascii	"traceTASK_CREATE(pxNewTCB) \000"
 10111      65544153 
 10111      4B5F4352 
 10111      45415445 
 10111      2870784E 
 10112              	.LASF642:
 10113 5bec 5F5F6D61 		.ascii	"__malloc_like __attribute__((__malloc__))\000"
 10113      6C6C6F63 
 10113      5F6C696B 
 10113      65205F5F 
 10113      61747472 
 10114              	.LASF843:
 10115 5c16 636F6E66 		.ascii	"configMAX_CO_ROUTINE_PRIORITIES ( 2 )\000"
 10115      69674D41 
 10115      585F434F 
 10115      5F524F55 
 10115      54494E45 
 10116              	.LASF332:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 272


 10117 5c3c 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 10117      4D5F5349 
 10117      5A454F46 
 10117      5F4D494E 
 10117      494D414C 
 10118              	.LASF1116:
 10119 5c58 756E7369 		.ascii	"unsigned char\000"
 10119      676E6564 
 10119      20636861 
 10119      7200
 10120              	.LASF969:
 10121 5c66 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR(pxQueue) \000"
 10121      65515545 
 10121      55455F52 
 10121      45434549 
 10121      56455F46 
 10122              	.LASF335:
 10123 5c8c 5F5F6172 		.ascii	"__arm__ 1\000"
 10123      6D5F5F20 
 10123      3100
 10124              	.LASF610:
 10125 5c96 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_MEMCPY 1\000"
 10125      55434C49 
 10125      4B455F42 
 10125      55494C54 
 10125      494E5F4D 
 10126              	.LASF948:
 10127 5cb2 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue) \000"
 10127      65424C4F 
 10127      434B494E 
 10127      475F4F4E 
 10127      5F515545 
 10128              	.LASF1143:
 10129 5cdb 784C6973 		.ascii	"xListEnd\000"
 10129      74456E64 
 10129      00
 10130              	.LASF981:
 10131 5ce4 74726163 		.ascii	"traceTASK_RESUME_FROM_ISR(pxTaskToResume) \000"
 10131      65544153 
 10131      4B5F5245 
 10131      53554D45 
 10131      5F46524F 
 10132              	.LASF604:
 10133 5d0f 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_STDARG 1\000"
 10133      55434C49 
 10133      4B455F42 
 10133      55494C54 
 10133      494E5F53 
 10134              	.LASF445:
 10135 5d2b 5F5F5F69 		.ascii	"___int_size_t_h \000"
 10135      6E745F73 
 10135      697A655F 
 10135      745F6820 
 10135      00
 10136              	.LASF399:
 10137 5d3c 5F5F5241 		.ascii	"__RAND_MAX 0x7fffffff\000"
 10137      4E445F4D 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 273


 10137      41582030 
 10137      78376666 
 10137      66666666 
 10138              	.LASF1226:
 10139 5d52 78517565 		.ascii	"xQueueRegistry\000"
 10139      75655265 
 10139      67697374 
 10139      727900
 10140              	.LASF621:
 10141 5d61 5F5F5354 		.ascii	"__STRING(x) #x\000"
 10141      52494E47 
 10141      28782920 
 10141      237800
 10142              	.LASF452:
 10143 5d70 5F574348 		.ascii	"_WCHAR_T \000"
 10143      41525F54 
 10143      2000
 10144              	.LASF934:
 10145 5d7a 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle 0\000"
 10145      5544455F 
 10145      78546173 
 10145      6B476574 
 10145      43757272 
 10146              	.LASF1195:
 10147 5d9e 7854696D 		.ascii	"xTimeOut\000"
 10147      654F7574 
 10147      00
 10148              	.LASF673:
 10149 5da7 5F5F4642 		.ascii	"__FBSDID(s) struct __hack\000"
 10149      53444944 
 10149      28732920 
 10149      73747275 
 10149      6374205F 
 10150              	.LASF165:
 10151 5dc1 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 10151      4333325F 
 10151      4D414E54 
 10151      5F444947 
 10151      5F5F2037 
 10152              	.LASF1215:
 10153 5dd6 70727655 		.ascii	"prvUnlockQueue\000"
 10153      6E6C6F63 
 10153      6B517565 
 10153      756500
 10154              	.LASF802:
 10155 5de5 494E545F 		.ascii	"INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)\000"
 10155      46415354 
 10155      36345F4D 
 10155      494E2028 
 10155      2D5F5F49 
 10156              	.LASF873:
 10157 5e0e 70645452 		.ascii	"pdTRUE ( ( BaseT_t ) 1 )\000"
 10157      55452028 
 10157      20282042 
 10157      61736554 
 10157      5F742029 
 10158              	.LASF487:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 274


 10159 5e27 5F4D4143 		.ascii	"_MACHINE__DEFAULT_TYPES_H \000"
 10159      48494E45 
 10159      5F5F4445 
 10159      4641554C 
 10159      545F5459 
 10160              	.LASF22:
 10161 5e42 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
 10161      47474553 
 10161      545F414C 
 10161      49474E4D 
 10161      454E545F 
 10162              	.LASF233:
 10163 5e5a 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 10163      41434355 
 10163      4D5F4D49 
 10163      4E5F5F20 
 10163      302E3055 
 10164              	.LASF481:
 10165 5e71 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 10165      5F505452 
 10165      44494646 
 10165      5F542000 
 10166              	.LASF608:
 10167 5e81 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_NEXT_ARG 1\000"
 10167      55434C49 
 10167      4B455F42 
 10167      55494C54 
 10167      494E5F4E 
 10168              	.LASF850:
 10169 5e9f 494E434C 		.ascii	"INCLUDE_vTaskPrioritySet 1\000"
 10169      5544455F 
 10169      76546173 
 10169      6B507269 
 10169      6F726974 
 10170              	.LASF293:
 10171 5eba 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 10171      5F494249 
 10171      545F5F20 
 10171      363400
 10172              	.LASF856:
 10173 5ec9 494E434C 		.ascii	"INCLUDE_vTaskDelay 1\000"
 10173      5544455F 
 10173      76546173 
 10173      6B44656C 
 10173      61792031 
 10174              	.LASF742:
 10175 5ede 5F5F4C45 		.ascii	"__LEAST64 \"ll\"\000"
 10175      41535436 
 10175      3420226C 
 10175      6C2200
 10176              	.LASF499:
 10177 5eed 5F5F4C4F 		.ascii	"__LOCK_INIT(class,lock) static int lock = 0;\000"
 10177      434B5F49 
 10177      4E495428 
 10177      636C6173 
 10177      732C6C6F 
 10178              	.LASF979:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 275


 10179 5f1a 74726163 		.ascii	"traceTASK_SUSPEND(pxTaskToSuspend) \000"
 10179      65544153 
 10179      4B5F5355 
 10179      5350454E 
 10179      44287078 
 10180              	.LASF690:
 10181 5f3e 5F5F6173 		.ascii	"__asserts_exclusive(...) __lock_annotate(assert_exc"
 10181      73657274 
 10181      735F6578 
 10181      636C7573 
 10181      69766528 
 10182 5f71 6C757369 		.ascii	"lusive_lock(__VA_ARGS__))\000"
 10182      76655F6C 
 10182      6F636B28 
 10182      5F5F5641 
 10182      5F415247 
 10183              	.LASF434:
 10184 5f8b 5F53495A 		.ascii	"_SIZE_T \000"
 10184      455F5420 
 10184      00
 10185              	.LASF460:
 10186 5f94 5F574348 		.ascii	"_WCHAR_T_H \000"
 10186      41525F54 
 10186      5F482000 
 10187              	.LASF876:
 10188 5fa0 65727251 		.ascii	"errQUEUE_EMPTY ( ( BaseT_t ) 0 )\000"
 10188      55455545 
 10188      5F454D50 
 10188      54592028 
 10188      20282042 
 10189              	.LASF1025:
 10190 5fc1 78546173 		.ascii	"xTaskHandle TaskHandle_t\000"
 10190      6B48616E 
 10190      646C6520 
 10190      5461736B 
 10190      48616E64 
 10191              	.LASF922:
 10192 5fda 494E434C 		.ascii	"INCLUDE_xQueueGetMutexHolder 0\000"
 10192      5544455F 
 10192      78517565 
 10192      75654765 
 10192      744D7574 
 10193              	.LASF919:
 10194 5ff9 706F7274 		.ascii	"portUSING_MPU_WRAPPERS 0\000"
 10194      5553494E 
 10194      475F4D50 
 10194      555F5752 
 10194      41505045 
 10195              	.LASF340:
 10196 6012 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 10196      4D5F4152 
 10196      43485F49 
 10196      53415F54 
 10196      48554D42 
 10197              	.LASF71:
 10198 6029 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 0x7fffffffffffffffLL\000"
 10198      4E475F4C 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 276


 10198      4F4E475F 
 10198      4D41585F 
 10198      5F203078 
 10199              	.LASF373:
 10200 6050 5F465345 		.ascii	"_FSEEK_OPTIMIZATION 1\000"
 10200      454B5F4F 
 10200      5054494D 
 10200      495A4154 
 10200      494F4E20 
 10201              	.LASF777:
 10202 6066 55494E54 		.ascii	"UINT16_MAX (__UINT16_MAX__)\000"
 10202      31365F4D 
 10202      41582028 
 10202      5F5F5549 
 10202      4E543136 
 10203              	.LASF681:
 10204 6082 5F5F6172 		.ascii	"__arg_type_tag(arg_kind,arg_idx,type_tag_idx) \000"
 10204      675F7479 
 10204      70655F74 
 10204      61672861 
 10204      72675F6B 
 10205              	.LASF1010:
 10206 60b1 636F6E66 		.ascii	"configEXPECTED_IDLE_TIME_BEFORE_SLEEP 2\000"
 10206      69674558 
 10206      50454354 
 10206      45445F49 
 10206      444C455F 
 10207              	.LASF719:
 10208 60d9 73686F72 		.ascii	"short\000"
 10208      7400
 10209              	.LASF571:
 10210 60df 5F524545 		.ascii	"_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(va"
 10210      4E545F49 
 10210      4E49545F 
 10210      50545228 
 10210      76617229 
 10211 6112 72292929 		.ascii	"r))); _REENT_INIT_PTR_ZEROED(var); }\000"
 10211      3B205F52 
 10211      45454E54 
 10211      5F494E49 
 10211      545F5054 
 10212              	.LASF677:
 10213 6137 5F5F434F 		.ascii	"__COPYRIGHT(s) struct __hack\000"
 10213      50595249 
 10213      47485428 
 10213      73292073 
 10213      74727563 
 10214              	.LASF202:
 10215 6154 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 10215      52414354 
 10215      5F494249 
 10215      545F5F20 
 10215      3000
 10216              	.LASF329:
 10217 6166 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 10217      4D5F3332 
 10217      4249545F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 277


 10217      53544154 
 10217      45203100 
 10218              	.LASF841:
 10219 617a 636F6E66 		.ascii	"configUSE_CO_ROUTINES 0\000"
 10219      69675553 
 10219      455F434F 
 10219      5F524F55 
 10219      54494E45 
 10220              	.LASF655:
 10221 6192 5F5F7365 		.ascii	"__sentinel __attribute__((__sentinel__))\000"
 10221      6E74696E 
 10221      656C205F 
 10221      5F617474 
 10221      72696275 
 10222              	.LASF93:
 10223 61bb 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 10223      54385F43 
 10223      28632920 
 10223      6300
 10224              	.LASF207:
 10225 61c9 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 10225      52414354 
 10225      5F494249 
 10225      545F5F20 
 10225      3000
 10226              	.LASF472:
 10227 61db 5F535444 		.ascii	"_STDDEF_H_ \000"
 10227      4445465F 
 10227      485F2000 
 10228              	.LASF1134:
 10229 61e7 70764F77 		.ascii	"pvOwner\000"
 10229      6E657200 
 10230              	.LASF139:
 10231 61ef 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 10231      4C5F4D49 
 10231      4E5F4558 
 10231      505F5F20 
 10231      282D3130 
 10232              	.LASF438:
 10233 6207 5F5F5349 		.ascii	"__SIZE_T \000"
 10233      5A455F54 
 10233      2000
 10234              	.LASF1018:
 10235 6211 636F6E66 		.ascii	"configUSE_NEWLIB_REENTRANT 0\000"
 10235      69675553 
 10235      455F4E45 
 10235      574C4942 
 10235      5F524545 
 10236              	.LASF711:
 10237 622e 494E435F 		.ascii	"INC_FREERTOS_H \000"
 10237      46524545 
 10237      52544F53 
 10237      5F482000 
 10238              	.LASF667:
 10239 623e 5F5F7072 		.ascii	"__printf0like(fmtarg,firstvararg) \000"
 10239      696E7466 
 10239      306C696B 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 278


 10239      6528666D 
 10239      74617267 
 10240              	.LASF1004:
 10241 6261 706F7274 		.ascii	"portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \000"
 10241      434F4E46 
 10241      49475552 
 10241      455F5449 
 10241      4D45525F 
 10242              	.LASF725:
 10243 628b 73686F72 		.ascii	"short +1\000"
 10243      74202B31 
 10243      00
 10244              	.LASF508:
 10245 6294 5F5F6C6F 		.ascii	"__lock_try_acquire_recursive(lock) (_CAST_VOID 0)\000"
 10245      636B5F74 
 10245      72795F61 
 10245      63717569 
 10245      72655F72 
 10246              	.LASF1099:
 10247 62c6 78517565 		.ascii	"xQueueAltPeek(xQueue,pvBuffer,xTicksToWait) xQueueA"
 10247      7565416C 
 10247      74506565 
 10247      6B287851 
 10247      75657565 
 10248 62f9 6C744765 		.ascii	"ltGenericReceive( ( xQueue ), ( pvBuffer ), ( xTick"
 10248      6E657269 
 10248      63526563 
 10248      65697665 
 10248      28202820 
 10249 632c 73546F57 		.ascii	"sToWait ), pdTRUE )\000"
 10249      61697420 
 10249      292C2070 
 10249      64545255 
 10249      45202900 
 10250              	.LASF627:
 10251 6340 5F5F6465 		.ascii	"__dead2 __attribute__((__noreturn__))\000"
 10251      61643220 
 10251      5F5F6174 
 10251      74726962 
 10251      7574655F 
 10252              	.LASF896:
 10253 6366 706F7274 		.ascii	"portYIELD() vPortYield()\000"
 10253      5949454C 
 10253      44282920 
 10253      76506F72 
 10253      74596965 
 10254              	.LASF826:
 10255 637f 55494E54 		.ascii	"UINTMAX_C(x) __UINTMAX_C(x)\000"
 10255      4D41585F 
 10255      43287829 
 10255      205F5F55 
 10255      494E544D 
 10256              	.LASF1048:
 10257 639b 6C697374 		.ascii	"listGET_LIST_ITEM_VALUE(pxListItem) ( ( pxListItem "
 10257      4745545F 
 10257      4C495354 
 10257      5F495445 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 279


 10257      4D5F5641 
 10258 63ce 292D3E78 		.ascii	")->xItemValue )\000"
 10258      4974656D 
 10258      56616C75 
 10258      65202900 
 10259              	.LASF497:
 10260 63de 5F5F4558 		.ascii	"__EXP\000"
 10260      5000
 10261              	.LASF492:
 10262 63e4 5F5F5F69 		.ascii	"___int64_t_defined 1\000"
 10262      6E743634 
 10262      5F745F64 
 10262      6566696E 
 10262      65642031 
 10263              	.LASF162:
 10264 63f9 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 10264      424C5F48 
 10264      41535F44 
 10264      454E4F52 
 10264      4D5F5F20 
 10265              	.LASF769:
 10266 640f 494E5438 		.ascii	"INT8_MIN (-__INT8_MAX__ - 1)\000"
 10266      5F4D494E 
 10266      20282D5F 
 10266      5F494E54 
 10266      385F4D41 
 10267              	.LASF1081:
 10268 642c 71756575 		.ascii	"queueQUEUE_TYPE_MUTEX ( ( uint8_t ) 1U )\000"
 10268      65515545 
 10268      55455F54 
 10268      5950455F 
 10268      4D555445 
 10269              	.LASF309:
 10270 6455 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
 10270      435F4841 
 10270      56455F53 
 10270      594E435F 
 10270      434F4D50 
 10271              	.LASF836:
 10272 647a 636F6E66 		.ascii	"configTOTAL_HEAP_SIZE ( ( size_t ) ( 8 * 1024 ) )\000"
 10272      6967544F 
 10272      54414C5F 
 10272      48454150 
 10272      5F53495A 
 10273              	.LASF594:
 10274 64ac 5F5F4245 		.ascii	"__BEGIN_DECLS \000"
 10274      47494E5F 
 10274      4445434C 
 10274      532000
 10275              	.LASF238:
 10276 64bb 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 10276      43554D5F 
 10276      4D494E5F 
 10276      5F20282D 
 10276      30583150 
 10277              	.LASF545:
 10278 64dc 5F524545 		.ascii	"_REENT_CHECK_MISC(ptr) \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 280


 10278      4E545F43 
 10278      4845434B 
 10278      5F4D4953 
 10278      43287074 
 10279              	.LASF606:
 10280 64f4 5F5F474E 		.ascii	"__GNUC_VA_LIST_COMPATIBILITY 1\000"
 10280      55435F56 
 10280      415F4C49 
 10280      53545F43 
 10280      4F4D5041 
 10281              	.LASF1087:
 10282 6513 78517565 		.ascii	"xQueueSendToBack(xQueue,pvItemToQueue,xTicksToWait)"
 10282      75655365 
 10282      6E64546F 
 10282      4261636B 
 10282      28785175 
 10283 6546 20785175 		.ascii	" xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), "
 10283      65756547 
 10283      656E6572 
 10283      69635365 
 10283      6E642820 
 10284 6579 28207854 		.ascii	"( xTicksToWait ), queueSEND_TO_BACK )\000"
 10284      69636B73 
 10284      546F5761 
 10284      69742029 
 10284      2C207175 
 10285              	.LASF1041:
 10286 659f 784C6973 		.ascii	"xList List_t\000"
 10286      74204C69 
 10286      73745F74 
 10286      00
 10287              	.LASF48:
 10288 65ac 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
 10288      545F4C45 
 10288      41535433 
 10288      325F5459 
 10288      50455F5F 
 10289              	.LASF1029:
 10290 65ca 78517565 		.ascii	"xQueueSetMemberHandle QueueSetMemberHandle_t\000"
 10290      75655365 
 10290      744D656D 
 10290      62657248 
 10290      616E646C 
 10291              	.LASF977:
 10292 65f7 74726163 		.ascii	"traceTASK_DELAY() \000"
 10292      65544153 
 10292      4B5F4445 
 10292      4C415928 
 10292      292000
 10293              	.LASF984:
 10294 660a 74726163 		.ascii	"traceTIMER_CREATE_FAILED() \000"
 10294      6554494D 
 10294      45525F43 
 10294      52454154 
 10294      455F4641 
 10295              	.LASF106:
 10296 6626 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 0xffffffffffffffffULL\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 281


 10296      4E545F4C 
 10296      45415354 
 10296      36345F4D 
 10296      41585F5F 
 10297              	.LASF1113:
 10298 6651 5F5F696E 		.ascii	"__int8_t\000"
 10298      74385F74 
 10298      00
 10299              	.LASF197:
 10300 665a 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 10300      4143545F 
 10300      49424954 
 10300      5F5F2030 
 10300      00
 10301              	.LASF999:
 10302 666b 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS_FROM_ISR(xEventGroup,uxBi"
 10302      65455645 
 10302      4E545F47 
 10302      524F5550 
 10302      5F534554 
 10303 669e 7473546F 		.ascii	"tsToSet) \000"
 10303      53657429 
 10303      2000
 10304              	.LASF1038:
 10305 66a8 746D7254 		.ascii	"tmrTIMER_CALLBACK TimerCallbackFunction_t\000"
 10305      494D4552 
 10305      5F43414C 
 10305      4C424143 
 10305      4B205469 
 10306              	.LASF363:
 10307 66d2 5F5F4E45 		.ascii	"__NEWLIB_PATCHLEVEL__ 0\000"
 10307      574C4942 
 10307      5F504154 
 10307      43484C45 
 10307      56454C5F 
 10308              	.LASF23:
 10309 66ea 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 10309      4445525F 
 10309      4C495454 
 10309      4C455F45 
 10309      4E444941 
 10310              	.LASF511:
 10311 6707 5F5F7369 		.ascii	"__size_t\000"
 10311      7A655F74 
 10311      00
 10312              	.LASF630:
 10313 6710 5F5F7573 		.ascii	"__used __attribute__((__used__))\000"
 10313      6564205F 
 10313      5F617474 
 10313      72696275 
 10313      74655F5F 
 10314              	.LASF579:
 10315 6731 5F5F444F 		.ascii	"__DOTS , ...\000"
 10315      5453202C 
 10315      202E2E2E 
 10315      00
 10316              	.LASF172:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 282


 10317 673e 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 10317      4336345F 
 10317      4D414E54 
 10317      5F444947 
 10317      5F5F2031 
 10318              	.LASF1123:
 10319 6754 6C6F6E67 		.ascii	"long long unsigned int\000"
 10319      206C6F6E 
 10319      6720756E 
 10319      7369676E 
 10319      65642069 
 10320              	.LASF792:
 10321 676b 55494E54 		.ascii	"UINT_LEAST64_MAX (__UINT_LEAST64_MAX__)\000"
 10321      5F4C4541 
 10321      53543634 
 10321      5F4D4158 
 10321      20285F5F 
 10322              	.LASF634:
 10323 6793 5F5F616C 		.ascii	"__alloc_size(x) __attribute__((__alloc_size__(x)))\000"
 10323      6C6F635F 
 10323      73697A65 
 10323      28782920 
 10323      5F5F6174 
 10324              	.LASF252:
 10325 67c6 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 10325      41434355 
 10325      4D5F4942 
 10325      49545F5F 
 10325      20333200 
 10326              	.LASF68:
 10327 67da 5F5F5348 		.ascii	"__SHRT_MAX__ 0x7fff\000"
 10327      52545F4D 
 10327      41585F5F 
 10327      20307837 
 10327      66666600 
 10328              	.LASF795:
 10329 67ee 55494E54 		.ascii	"UINT_FAST8_MAX (__UINT_FAST8_MAX__)\000"
 10329      5F464153 
 10329      54385F4D 
 10329      41582028 
 10329      5F5F5549 
 10330              	.LASF30:
 10331 6812 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 10331      52444946 
 10331      465F5459 
 10331      50455F5F 
 10331      20696E74 
 10332              	.LASF442:
 10333 6827 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 10333      455F545F 
 10333      44454649 
 10333      4E454420 
 10333      00
 10334              	.LASF272:
 10335 6838 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 10335      5F464249 
 10335      545F5F20 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 283


 10335      363300
 10336              	.LASF390:
 10337 6847 5F5F474E 		.ascii	"__GNU_VISIBLE 0\000"
 10337      555F5649 
 10337      5349424C 
 10337      45203000 
 10338              	.LASF477:
 10339 6857 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 10339      52444946 
 10339      465F5420 
 10339      00
 10340              	.LASF279:
 10341 6864 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 10341      515F4942 
 10341      49545F5F 
 10341      203000
 10342              	.LASF562:
 10343 6873 5F524545 		.ascii	"_REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctom"
 10343      4E545F57 
 10343      43544F4D 
 10343      425F5354 
 10343      41544528 
 10344 68a6 625F7374 		.ascii	"b_state)\000"
 10344      61746529 
 10344      00
 10345              	.LASF992:
 10346 68af 74726163 		.ascii	"traceEVENT_GROUP_SYNC_BLOCK(xEventGroup,uxBitsToSet"
 10346      65455645 
 10346      4E545F47 
 10346      524F5550 
 10346      5F53594E 
 10347 68e2 2C757842 		.ascii	",uxBitsToWaitFor) \000"
 10347      69747354 
 10347      6F576169 
 10347      74466F72 
 10347      292000
 10348              	.LASF55:
 10349 68f5 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 10349      545F4641 
 10349      53543136 
 10349      5F545950 
 10349      455F5F20 
 10350              	.LASF987:
 10351 690d 74726163 		.ascii	"traceTIMER_COMMAND_RECEIVED(pxTimer,xMessageID,xMes"
 10351      6554494D 
 10351      45525F43 
 10351      4F4D4D41 
 10351      4E445F52 
 10352 6940 73616765 		.ascii	"sageValue) \000"
 10352      56616C75 
 10352      65292000 
 10353              	.LASF877:
 10354 694c 65727251 		.ascii	"errQUEUE_FULL ( ( BaseT_t ) 0 )\000"
 10354      55455545 
 10354      5F46554C 
 10354      4C202820 
 10354      28204261 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 284


 10355              	.LASF228:
 10356 696c 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 10356      4343554D 
 10356      5F4D494E 
 10356      5F5F2028 
 10356      2D305831 
 10357              	.LASF214:
 10358 698e 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 10358      46524143 
 10358      545F4D41 
 10358      585F5F20 
 10358      30584646 
 10359              	.LASF636:
 10360 69b0 5F416C69 		.ascii	"_Alignas(x) __aligned(x)\000"
 10360      676E6173 
 10360      28782920 
 10360      5F5F616C 
 10360      69676E65 
 10361              	.LASF51:
 10362 69c9 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 10362      4E545F4C 
 10362      45415354 
 10362      31365F54 
 10362      5950455F 
 10363              	.LASF516:
 10364 69f2 5F5F6E65 		.ascii	"__need_wint_t\000"
 10364      65645F77 
 10364      696E745F 
 10364      7400
 10365              	.LASF249:
 10366 6a00 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 10366      4343554D 
 10366      5F4D4158 
 10366      5F5F2030 
 10366      58374646 
 10367              	.LASF612:
 10368 6a28 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE 1\000"
 10368      5F535550 
 10368      504F5254 
 10368      535F5F5F 
 10368      494E4C49 
 10369              	.LASF563:
 10370 6a41 5F524545 		.ascii	"_REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrle"
 10370      4E545F4D 
 10370      42524C45 
 10370      4E5F5354 
 10370      41544528 
 10371 6a74 6E5F7374 		.ascii	"n_state)\000"
 10371      61746529 
 10371      00
 10372              	.LASF624:
 10373 6a7d 5F5F7369 		.ascii	"__signed signed\000"
 10373      676E6564 
 10373      20736967 
 10373      6E656400 
 10374              	.LASF721:
 10375 6a8d 6C6F6E67 		.ascii	"long\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 285


 10375      00
 10376              	.LASF284:
 10377 6a92 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 10377      515F4642 
 10377      49545F5F 
 10377      20313238 
 10377      00
 10378              	.LASF1185:
 10379 6aa3 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 10379      75655461 
 10379      6B654D75 
 10379      74657852 
 10379      65637572 
 10380              	.LASF556:
 10381 6abc 5F524545 		.ascii	"_REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctim"
 10381      4E545F41 
 10381      53435449 
 10381      4D455F42 
 10381      55462870 
 10382 6aef 655F6275 		.ascii	"e_buf)\000"
 10382      662900
 10383              	.LASF889:
 10384 6af6 706F7274 		.ascii	"portBASE_TYPE long\000"
 10384      42415345 
 10384      5F545950 
 10384      45206C6F 
 10384      6E6700
 10385              	.LASF12:
 10386 6b09 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 10386      4E495445 
 10386      5F4D4154 
 10386      485F4F4E 
 10386      4C595F5F 
 10387              	.LASF1133:
 10388 6b20 70785072 		.ascii	"pxPrevious\000"
 10388      6576696F 
 10388      757300
 10389              	.LASF109:
 10390 6b2b 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 0x7fffffff\000"
 10390      545F4641 
 10390      53543136 
 10390      5F4D4158 
 10390      5F5F2030 
 10391              	.LASF715:
 10392 6b49 5F5F6861 		.ascii	"__have_longlong64 1\000"
 10392      76655F6C 
 10392      6F6E676C 
 10392      6F6E6736 
 10392      34203100 
 10393              	.LASF1094:
 10394 6b5d 78517565 		.ascii	"xQueueOverwriteFromISR(xQueue,pvItemToQueue,pxHighe"
 10394      75654F76 
 10394      65727772 
 10394      69746546 
 10394      726F6D49 
 10395 6b90 72507269 		.ascii	"rPriorityTaskWoken) xQueueGenericSendFromISR( ( xQu"
 10395      6F726974 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 286


 10395      79546173 
 10395      6B576F6B 
 10395      656E2920 
 10396 6bc3 65756520 		.ascii	"eue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWok"
 10396      292C2028 
 10396      20707649 
 10396      74656D54 
 10396      6F517565 
 10397 6bf6 656E2029 		.ascii	"en ), queueOVERWRITE )\000"
 10397      2C207175 
 10397      6575654F 
 10397      56455257 
 10397      52495445 
 10398              	.LASF745:
 10399 6c0d 5F55494E 		.ascii	"_UINT8_T_DECLARED \000"
 10399      54385F54 
 10399      5F444543 
 10399      4C415245 
 10399      442000
 10400              	.LASF16:
 10401 6c20 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 10401      5A454F46 
 10401      5F53484F 
 10401      52545F5F 
 10401      203200
 10402              	.LASF554:
 10403 6c33 5F524545 		.ascii	"_REENT_MP_P5S(ptr) ((ptr)->_p5s)\000"
 10403      4E545F4D 
 10403      505F5035 
 10403      53287074 
 10403      72292028 
 10404              	.LASF1064:
 10405 6c54 74736B49 		.ascii	"tskIDLE_PRIORITY ( ( UBaseT_t ) 0U )\000"
 10405      444C455F 
 10405      5052494F 
 10405      52495459 
 10405      20282028 
 10406              	.LASF757:
 10407 6c79 5F55494E 		.ascii	"_UINTPTR_T_DECLARED \000"
 10407      54505452 
 10407      5F545F44 
 10407      45434C41 
 10407      52454420 
 10408              	.LASF459:
 10409 6c8e 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 10409      41525F54 
 10409      5F444546 
 10409      494E4544 
 10409      2000
 10410              	.LASF1002:
 10411 6ca0 74726163 		.ascii	"tracePEND_FUNC_CALL_FROM_ISR(xFunctionToPend,pvPara"
 10411      6550454E 
 10411      445F4655 
 10411      4E435F43 
 10411      414C4C5F 
 10412 6cd3 6D657465 		.ascii	"meter1,ulParameter2,ret) \000"
 10412      72312C75 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 287


 10412      6C506172 
 10412      616D6574 
 10412      6572322C 
 10413              	.LASF254:
 10414 6ced 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 10414      41434355 
 10414      4D5F4D41 
 10414      585F5F20 
 10414      30584646 
 10415              	.LASF687:
 10416 6d17 5F5F7472 		.ascii	"__trylocks_exclusive(...) __lock_annotate(exclusive"
 10416      796C6F63 
 10416      6B735F65 
 10416      78636C75 
 10416      73697665 
 10417 6d4a 5F747279 		.ascii	"_trylock_function(__VA_ARGS__))\000"
 10417      6C6F636B 
 10417      5F66756E 
 10417      6374696F 
 10417      6E285F5F 
 10418              	.LASF916:
 10419 6d6a 4D50555F 		.ascii	"MPU_WRAPPERS_H \000"
 10419      57524150 
 10419      50455253 
 10419      5F482000 
 10420              	.LASF213:
 10421 6d7a 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 10421      46524143 
 10421      545F4D49 
 10421      4E5F5F20 
 10421      302E3055 
 10422              	.LASF808:
 10423 6d91 53495A45 		.ascii	"SIZE_MAX (__SIZE_MAX__)\000"
 10423      5F4D4158 
 10423      20285F5F 
 10423      53495A45 
 10423      5F4D4158 
 10424              	.LASF1157:
 10425 6da9 78546173 		.ascii	"xTasksWaitingToReceive\000"
 10425      6B735761 
 10425      6974696E 
 10425      67546F52 
 10425      65636569 
 10426              	.LASF273:
 10427 6dc0 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 10427      5F494249 
 10427      545F5F20 
 10427      3000
 10428              	.LASF566:
 10429 6dce 5F524545 		.ascii	"_REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrt"
 10429      4E545F57 
 10429      4352544F 
 10429      4D425F53 
 10429      54415445 
 10430 6e01 6F6D625F 		.ascii	"omb_state)\000"
 10430      73746174 
 10430      652900
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 288


 10431              	.LASF1205:
 10432 6e0c 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 10432      6575654D 
 10432      65737361 
 10432      67657357 
 10432      61697469 
 10433              	.LASF1212:
 10434 6e23 75635175 		.ascii	"ucQueueGetQueueType\000"
 10434      65756547 
 10434      65745175 
 10434      65756554 
 10434      79706500 
 10435              	.LASF746:
 10436 6e37 5F5F696E 		.ascii	"__int8_t_defined 1\000"
 10436      74385F74 
 10436      5F646566 
 10436      696E6564 
 10436      203100
 10437              	.LASF660:
 10438 6e4a 5F5F636F 		.ascii	"__containerof(x,s,m) ({ const volatile __typeof(((s"
 10438      6E746169 
 10438      6E65726F 
 10438      6628782C 
 10438      732C6D29 
 10439 6e7d 202A2930 		.ascii	" *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volat"
 10439      292D3E6D 
 10439      29202A5F 
 10439      5F78203D 
 10439      20287829 
 10440 6eb0 696C6520 		.ascii	"ile char *)__x - __offsetof(s, m));})\000"
 10440      63686172 
 10440      202A295F 
 10440      5F78202D 
 10440      205F5F6F 
 10441              	.LASF421:
 10442 6ed6 5F444546 		.ascii	"_DEFUN_VOID(name) name(_NOARGS)\000"
 10442      554E5F56 
 10442      4F494428 
 10442      6E616D65 
 10442      29206E61 
 10443              	.LASF440:
 10444 6ef6 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 10444      5F53495A 
 10444      455F545F 
 10444      2000
 10445              	.LASF695:
 10446 6f04 5F5F6E6F 		.ascii	"__no_lock_analysis __lock_annotate(no_thread_safety"
 10446      5F6C6F63 
 10446      6B5F616E 
 10446      616C7973 
 10446      6973205F 
 10447 6f37 5F616E61 		.ascii	"_analysis)\000"
 10447      6C797369 
 10447      732900
 10448              	.LASF456:
 10449 6f42 5F574348 		.ascii	"_WCHAR_T_ \000"
 10449      41525F54 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 289


 10449      5F2000
 10450              	.LASF753:
 10451 6f4d 5F494E54 		.ascii	"_INT64_T_DECLARED \000"
 10451      36345F54 
 10451      5F444543 
 10451      4C415245 
 10451      442000
 10452              	.LASF66:
 10453 6f60 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1009\000"
 10453      585F4142 
 10453      495F5645 
 10453      5253494F 
 10453      4E203130 
 10454              	.LASF848:
 10455 6f77 636F6E66 		.ascii	"configQUEUE_REGISTRY_SIZE 10\000"
 10455      69675155 
 10455      4555455F 
 10455      52454749 
 10455      53545259 
 10456              	.LASF454:
 10457 6f94 5F545F57 		.ascii	"_T_WCHAR \000"
 10457      43484152 
 10457      2000
 10458              	.LASF1101:
 10459 6f9e 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE\000"
 10459      57524150 
 10459      50455253 
 10459      5F494E43 
 10459      4C554445 
 10460              	.LASF480:
 10461 6fc2 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 10461      6E745F70 
 10461      74726469 
 10461      66665F74 
 10461      5F682000 
 10462              	.LASF905:
 10463 6fd6 706F7274 		.ascii	"portTASK_FUNCTION_PROTO(vFunction,pvParameters) voi"
 10463      5441534B 
 10463      5F46554E 
 10463      4354494F 
 10463      4E5F5052 
 10464 7009 64207646 		.ascii	"d vFunction( void *pvParameters )\000"
 10464      756E6374 
 10464      696F6E28 
 10464      20766F69 
 10464      64202A70 
 10465              	.LASF1054:
 10466 702b 6C697374 		.ascii	"listCURRENT_LIST_LENGTH(pxList) ( ( pxList )->uxNum"
 10466      43555252 
 10466      454E545F 
 10466      4C495354 
 10466      5F4C454E 
 10467 705e 6265724F 		.ascii	"berOfItems )\000"
 10467      66497465 
 10467      6D732029 
 10467      00
 10468              	.LASF701:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 290


 10469 706b 616C6C6F 		.ascii	"alloca(size) __builtin_alloca(size)\000"
 10469      63612873 
 10469      697A6529 
 10469      205F5F62 
 10469      75696C74 
 10470              	.LASF519:
 10471 708f 5F434C4F 		.ascii	"_CLOCKID_T_ unsigned long\000"
 10471      434B4944 
 10471      5F545F20 
 10471      756E7369 
 10471      676E6564 
 10472              	.LASF542:
 10473 70a9 5F524545 		.ascii	"_REENT_CHECK_TM(ptr) \000"
 10473      4E545F43 
 10473      4845434B 
 10473      5F544D28 
 10473      70747229 
 10474              	.LASF285:
 10475 70bf 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 10475      515F4942 
 10475      49545F5F 
 10475      203000
 10476              	.LASF288:
 10477 70ce 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 10477      5F464249 
 10477      545F5F20 
 10477      313500
 10478              	.LASF462:
 10479 70dd 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 10479      545F5743 
 10479      4841525F 
 10479      545F4820 
 10479      00
 10480              	.LASF422:
 10481 70ee 5F434153 		.ascii	"_CAST_VOID (void)\000"
 10481      545F564F 
 10481      49442028 
 10481      766F6964 
 10481      2900
 10482              	.LASF814:
 10483 7100 57434841 		.ascii	"WCHAR_MAX (__WCHAR_MAX__)\000"
 10483      525F4D41 
 10483      5820285F 
 10483      5F574348 
 10483      41525F4D 
 10484              	.LASF348:
 10485 711a 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 10485      4D5F4541 
 10485      42495F5F 
 10485      203100
 10486              	.LASF929:
 10487 7129 494E434C 		.ascii	"INCLUDE_xTaskResumeFromISR 1\000"
 10487      5544455F 
 10487      78546173 
 10487      6B526573 
 10487      756D6546 
 10488              	.LASF353:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 291


 10489 7146 5F5F454C 		.ascii	"__ELF__ 1\000"
 10489      465F5F20 
 10489      3100
 10490              	.LASF781:
 10491 7150 494E5433 		.ascii	"INT32_MIN (-__INT32_MAX__ - 1)\000"
 10491      325F4D49 
 10491      4E20282D 
 10491      5F5F494E 
 10491      5433325F 
 10492              	.LASF342:
 10493 716f 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 10493      554D4245 
 10493      4C5F5F20 
 10493      3100
 10494              	.LASF710:
 10495 717d 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE \000"
 10495      57524150 
 10495      50455253 
 10495      5F494E43 
 10495      4C554445 
 10496              	.LASF267:
 10497 71a2 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 10497      5F494249 
 10497      545F5F20 
 10497      3000
 10498              	.LASF1039:
 10499 71b0 70645441 		.ascii	"pdTASK_CODE TaskFunction_t\000"
 10499      534B5F43 
 10499      4F444520 
 10499      5461736B 
 10499      46756E63 
 10500              	.LASF824:
 10501 71cb 55494E54 		.ascii	"UINT64_C(x) __UINT64_C(x)\000"
 10501      36345F43 
 10501      28782920 
 10501      5F5F5549 
 10501      4E543634 
 10502              	.LASF256:
 10503 71e5 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 10503      41434355 
 10503      4D5F4642 
 10503      49545F5F 
 10503      20333100 
 10504              	.LASF607:
 10505 71f9 5F5F636F 		.ascii	"__compiler_membar() __asm __volatile(\" \" : : : \""
 10505      6D70696C 
 10505      65725F6D 
 10505      656D6261 
 10505      72282920 
 10506 7229 6D656D6F 		.ascii	"memory\")\000"
 10506      72792229 
 10506      00
 10507              	.LASF1173:
 10508 7232 784E6577 		.ascii	"xNewQueue\000"
 10508      51756575 
 10508      6500
 10509              	.LASF410:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 292


 10510 723c 5F4E4F41 		.ascii	"_NOARGS void\000"
 10510      52475320 
 10510      766F6964 
 10510      00
 10511              	.LASF774:
 10512 7249 55494E54 		.ascii	"UINT_LEAST8_MAX (__UINT_LEAST8_MAX__)\000"
 10512      5F4C4541 
 10512      5354385F 
 10512      4D415820 
 10512      285F5F55 
 10513              	.LASF281:
 10514 726f 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 10514      515F4942 
 10514      49545F5F 
 10514      203000
 10515              	.LASF1067:
 10516 727e 7461736B 		.ascii	"taskEXIT_CRITICAL() portEXIT_CRITICAL()\000"
 10516      45584954 
 10516      5F435249 
 10516      54494341 
 10516      4C282920 
 10517              	.LASF3:
 10518 72a6 5F5F474E 		.ascii	"__GNUC_MINOR__ 4\000"
 10518      55435F4D 
 10518      494E4F52 
 10518      5F5F2034 
 10518      00
 10519              	.LASF52:
 10520 72b7 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 10520      4E545F4C 
 10520      45415354 
 10520      33325F54 
 10520      5950455F 
 10521              	.LASF1183:
 10522 72df 784D7574 		.ascii	"xMutex\000"
 10522      657800
 10523              	.LASF692:
 10524 72e6 5F5F7265 		.ascii	"__requires_exclusive(...) __lock_annotate(exclusive"
 10524      71756972 
 10524      65735F65 
 10524      78636C75 
 10524      73697665 
 10525 7319 5F6C6F63 		.ascii	"_locks_required(__VA_ARGS__))\000"
 10525      6B735F72 
 10525      65717569 
 10525      72656428 
 10525      5F5F5641 
 10526              	.LASF531:
 10527 7337 5F52414E 		.ascii	"_RAND48_MULT_1 (0xdeec)\000"
 10527      4434385F 
 10527      4D554C54 
 10527      5F312028 
 10527      30786465 
 10528              	.LASF33:
 10529 734f 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 10529      544D4158 
 10529      5F545950 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 293


 10529      455F5F20 
 10529      6C6F6E67 
 10530              	.LASF1015:
 10531 736d 706F7274 		.ascii	"portTASK_USES_FLOATING_POINT() \000"
 10531      5441534B 
 10531      5F555345 
 10531      535F464C 
 10531      4F415449 
 10532              	.LASF1036:
 10533 738d 70645441 		.ascii	"pdTASK_HOOK_CODE TaskHookFunction_t\000"
 10533      534B5F48 
 10533      4F4F4B5F 
 10533      434F4445 
 10533      20546173 
 10534              	.LASF316:
 10535 73b1 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 10535      435F4154 
 10535      4F4D4943 
 10535      5F494E54 
 10535      5F4C4F43 
 10536              	.LASF1208:
 10537 73ce 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 10537      6575654D 
 10537      65737361 
 10537      67657357 
 10537      61697469 
 10538              	.LASF1075:
 10539 73ec 51554555 		.ascii	"QUEUE_H \000"
 10539      455F4820 
 10539      00
 10540              	.LASF527:
 10541 73f5 5F52414E 		.ascii	"_RAND48_SEED_0 (0x330e)\000"
 10541      4434385F 
 10541      53454544 
 10541      5F302028 
 10541      30783333 
 10542              	.LASF1093:
 10543 740d 78517565 		.ascii	"xQueueSendToBackFromISR(xQueue,pvItemToQueue,pxHigh"
 10543      75655365 
 10543      6E64546F 
 10543      4261636B 
 10543      46726F6D 
 10544 7440 65725072 		.ascii	"erPriorityTaskWoken) xQueueGenericSendFromISR( ( xQ"
 10544      696F7269 
 10544      74795461 
 10544      736B576F 
 10544      6B656E29 
 10545 7473 75657565 		.ascii	"ueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWo"
 10545      20292C20 
 10545      28207076 
 10545      4974656D 
 10545      546F5175 
 10546 74a6 6B656E20 		.ascii	"ken ), queueSEND_TO_BACK )\000"
 10546      292C2071 
 10546      75657565 
 10546      53454E44 
 10546      5F544F5F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 294


 10547              	.LASF909:
 10548 74c1 706F7274 		.ascii	"portRECORD_READY_PRIORITY(uxPriority,uxReadyPriorit"
 10548      5245434F 
 10548      52445F52 
 10548      45414459 
 10548      5F505249 
 10549 74f4 69657329 		.ascii	"ies) ( uxReadyPriorities ) |= ( 1UL << ( uxPriority"
 10549      20282075 
 10549      78526561 
 10549      64795072 
 10549      696F7269 
 10550 7527 20292029 		.ascii	" ) )\000"
 10550      00
 10551              	.LASF958:
 10552 752c 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 10552      6554414B 
 10552      455F4D55 
 10552      5445585F 
 10552      52454355 
 10553              	.LASF522:
 10554 7557 5F5F4C6F 		.ascii	"__Long long\000"
 10554      6E67206C 
 10554      6F6E6700 
 10555              	.LASF447:
 10556 7563 5F53495A 		.ascii	"_SIZET_ \000"
 10556      45545F20 
 10556      00
 10557              	.LASF886:
 10558 756c 706F7274 		.ascii	"portLONG long\000"
 10558      4C4F4E47 
 10558      206C6F6E 
 10558      6700
 10559              	.LASF355:
 10560 757a 5F535444 		.ascii	"_STDLIB_H_ \000"
 10560      4C49425F 
 10560      485F2000 
 10561              	.LASF150:
 10562 7586 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 10562      4C5F4841 
 10562      535F5155 
 10562      4945545F 
 10562      4E414E5F 
 10563              	.LASF1060:
 10564 759e 74736B4B 		.ascii	"tskKERNEL_VERSION_NUMBER \"V8.1.2\"\000"
 10564      45524E45 
 10564      4C5F5645 
 10564      5253494F 
 10564      4E5F4E55 
 10565              	.LASF821:
 10566 75c0 494E5433 		.ascii	"INT32_C(x) __INT32_C(x)\000"
 10566      325F4328 
 10566      7829205F 
 10566      5F494E54 
 10566      33325F43 
 10567              	.LASF590:
 10568 75d8 5F5F7074 		.ascii	"__ptrvalue \000"
 10568      7276616C 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 295


 10568      75652000 
 10569              	.LASF428:
 10570 75e4 5F4E4F49 		.ascii	"_NOINLINE_STATIC _NOINLINE static\000"
 10570      4E4C494E 
 10570      455F5354 
 10570      41544943 
 10570      205F4E4F 
 10571              	.LASF1074:
 10572 7606 78546173 		.ascii	"xTaskCreateRestricted(x,pxCreatedTask) xTaskGeneric"
 10572      6B437265 
 10572      61746552 
 10572      65737472 
 10572      69637465 
 10573 7639 43726561 		.ascii	"Create( ((x)->pvTaskCode), ((x)->pcName), ((x)->usS"
 10573      74652820 
 10573      28287829 
 10573      2D3E7076 
 10573      5461736B 
 10574 766c 7461636B 		.ascii	"tackDepth), ((x)->pvParameters), ((x)->uxPriority),"
 10574      44657074 
 10574      68292C20 
 10574      28287829 
 10574      2D3E7076 
 10575 769f 20287078 		.ascii	" (pxCreatedTask), ((x)->puxStackBuffer), ((x)->xReg"
 10575      43726561 
 10575      74656454 
 10575      61736B29 
 10575      2C202828 
 10576 76d2 696F6E73 		.ascii	"ions) )\000"
 10576      29202900 
 10577              	.LASF219:
 10578 76da 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 10578      46524143 
 10578      545F4D41 
 10578      585F5F20 
 10578      30583746 
 10579              	.LASF181:
 10580 7704 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 10580      43313238 
 10580      5F4D4158 
 10580      5F455850 
 10580      5F5F2036 
 10581              	.LASF786:
 10582 771c 55494E54 		.ascii	"UINT_LEAST32_MAX (__UINT_LEAST32_MAX__)\000"
 10582      5F4C4541 
 10582      53543332 
 10582      5F4D4158 
 10582      20285F5F 
 10583              	.LASF911:
 10584 7744 706F7274 		.ascii	"portGET_HIGHEST_PRIORITY(uxTopPriority,uxReadyPrior"
 10584      4745545F 
 10584      48494748 
 10584      4553545F 
 10584      5052494F 
 10585 7777 69746965 		.ascii	"ities) uxTopPriority = ( 31 - ucPortCountLeadingZer"
 10585      73292075 
 10585      78546F70 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 296


 10585      5072696F 
 10585      72697479 
 10586 77aa 6F732820 		.ascii	"os( ( uxReadyPriorities ) ) )\000"
 10586      28207578 
 10586      52656164 
 10586      79507269 
 10586      6F726974 
 10587              	.LASF1063:
 10588 77c8 74736B4B 		.ascii	"tskKERNEL_VERSION_BUILD 2\000"
 10588      45524E45 
 10588      4C5F5645 
 10588      5253494F 
 10588      4E5F4255 
 10589              	.LASF853:
 10590 77e2 494E434C 		.ascii	"INCLUDE_vTaskCleanUpResources 0\000"
 10590      5544455F 
 10590      76546173 
 10590      6B436C65 
 10590      616E5570 
 10591              	.LASF1104:
 10592 7802 70784D75 		.ascii	"pxMutexHolder pcTail\000"
 10592      74657848 
 10592      6F6C6465 
 10592      72207063 
 10592      5461696C 
 10593              	.LASF229:
 10594 7817 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 10594      4343554D 
 10594      5F4D4158 
 10594      5F5F2030 
 10594      58374646 
 10595              	.LASF575:
 10596 7832 5F474C4F 		.ascii	"_GLOBAL_REENT _global_impure_ptr\000"
 10596      42414C5F 
 10596      5245454E 
 10596      54205F67 
 10596      6C6F6261 
 10597              	.LASF35:
 10598 7853 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
 10598      41523136 
 10598      5F545950 
 10598      455F5F20 
 10598      73686F72 
 10599              	.LASF63:
 10600 7876 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 10600      4E545054 
 10600      525F5459 
 10600      50455F5F 
 10600      20756E73 
 10601              	.LASF967:
 10602 7894 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR(pxQueue) \000"
 10602      65515545 
 10602      55455F53 
 10602      454E445F 
 10602      46524F4D 
 10603              	.LASF302:
 10604 78b7 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 297


 10604      47495354 
 10604      45525F50 
 10604      52454649 
 10604      585F5F20 
 10605              	.LASF185:
 10606 78cc 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 10606      43313238 
 10606      5F535542 
 10606      4E4F524D 
 10606      414C5F4D 
 10607 78ff 30303030 		.ascii	"000000001E-6143DL\000"
 10607      30303030 
 10607      31452D36 
 10607      31343344 
 10607      4C00
 10608              	.LASF138:
 10609 7911 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 10609      4C5F4449 
 10609      475F5F20 
 10609      313500
 10610              	.LASF215:
 10611 7920 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 10611      46524143 
 10611      545F4550 
 10611      53494C4F 
 10611      4E5F5F20 
 10612              	.LASF674:
 10613 793f 5F5F5243 		.ascii	"__RCSID(s) struct __hack\000"
 10613      53494428 
 10613      73292073 
 10613      74727563 
 10613      74205F5F 
 10614              	.LASF940:
 10615 7958 74726163 		.ascii	"traceEND() \000"
 10615      65454E44 
 10615      28292000 
 10616              	.LASF1005:
 10617 7964 636F6E66 		.ascii	"configUSE_MALLOC_FAILED_HOOK 0\000"
 10617      69675553 
 10617      455F4D41 
 10617      4C4C4F43 
 10617      5F464149 
 10618              	.LASF20:
 10619 7983 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 10619      5A454F46 
 10619      5F53495A 
 10619      455F545F 
 10619      5F203400 
 10620              	.LASF1016:
 10621 7997 636F6E66 		.ascii	"configUSE_TIME_SLICING 1\000"
 10621      69675553 
 10621      455F5449 
 10621      4D455F53 
 10621      4C494349 
 10622              	.LASF1140:
 10623 79b0 784C4953 		.ascii	"xLIST\000"
 10623      5400
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 298


 10624              	.LASF599:
 10625 79b6 5F5F474E 		.ascii	"__GNUCLIKE___OFFSETOF 1\000"
 10625      55434C49 
 10625      4B455F5F 
 10625      5F4F4646 
 10625      5345544F 
 10626              	.LASF182:
 10627 79ce 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 10627      43313238 
 10627      5F4D494E 
 10627      5F5F2031 
 10627      452D3631 
 10628              	.LASF99:
 10629 79e7 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 10629      5436345F 
 10629      43286329 
 10629      20632023 
 10629      23204C4C 
 10630              	.LASF1197:
 10631 79fc 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 10631      67686572 
 10631      5072696F 
 10631      72697479 
 10631      5461736B 
 10632              	.LASF367:
 10633 7a16 48415645 		.ascii	"HAVE_INITFINI_ARRAY 1\000"
 10633      5F494E49 
 10633      5446494E 
 10633      495F4152 
 10633      52415920 
 10634              	.LASF684:
 10635 7a2c 5F5F6C6F 		.ascii	"__lockable __lock_annotate(lockable)\000"
 10635      636B6162 
 10635      6C65205F 
 10635      5F6C6F63 
 10635      6B5F616E 
 10636              	.LASF404:
 10637 7a51 5F484156 		.ascii	"_HAVE_STDC \000"
 10637      455F5354 
 10637      44432000 
 10638              	.LASF1052:
 10639 7a5d 6C697374 		.ascii	"listGET_END_MARKER(pxList) ( ( ListItem_t const * )"
 10639      4745545F 
 10639      454E445F 
 10639      4D41524B 
 10639      45522870 
 10640 7a90 20282026 		.ascii	" ( &( ( pxList )->xListEnd ) ) )\000"
 10640      28202820 
 10640      70784C69 
 10640      73742029 
 10640      2D3E784C 
 10641              	.LASF595:
 10642 7ab1 5F5F454E 		.ascii	"__END_DECLS \000"
 10642      445F4445 
 10642      434C5320 
 10642      00
 10643              	.LASF827:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 299


 10644 7abe 5F474343 		.ascii	"_GCC_WRAP_STDINT_H \000"
 10644      5F575241 
 10644      505F5354 
 10644      44494E54 
 10644      5F482000 
 10645              	.LASF641:
 10646 7ad2 5F5F6765 		.ascii	"__generic(expr,t,yes,no) __builtin_choose_expr( __b"
 10646      6E657269 
 10646      63286578 
 10646      70722C74 
 10646      2C796573 
 10647 7b05 75696C74 		.ascii	"uiltin_types_compatible_p(__typeof(expr), t), yes, "
 10647      696E5F74 
 10647      79706573 
 10647      5F636F6D 
 10647      70617469 
 10648 7b38 6E6F2900 		.ascii	"no)\000"
 10649              	.LASF159:
 10650 7b3c 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 10650      424C5F4D 
 10650      494E5F5F 
 10650      20322E32 
 10650      32353037 
 10651              	.LASF931:
 10652 7b62 494E434C 		.ascii	"INCLUDE_xTimerPendFunctionCall 0\000"
 10652      5544455F 
 10652      7854696D 
 10652      65725065 
 10652      6E644675 
 10653              	.LASF237:
 10654 7b83 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
 10654      43554D5F 
 10654      49424954 
 10654      5F5F2031 
 10654      3600
 10655              	.LASF1033:
 10656 7b95 78546173 		.ascii	"xTaskStatusType TaskStatus_t\000"
 10656      6B537461 
 10656      74757354 
 10656      79706520 
 10656      5461736B 
 10657              	.LASF513:
 10658 7bb2 756E7369 		.ascii	"unsigned\000"
 10658      676E6564 
 10658      00
 10659              	.LASF1179:
 10660 7bbb 78517565 		.ascii	"xQueueSizeInBytes\000"
 10660      75655369 
 10660      7A65496E 
 10660      42797465 
 10660      7300
 10661              	.LASF884:
 10662 7bcd 706F7274 		.ascii	"portFLOAT float\000"
 10662      464C4F41 
 10662      5420666C 
 10662      6F617400 
 10663              	.LASF593:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 300


 10664 7bdd 5F5F6861 		.ascii	"__has_builtin(x) 0\000"
 10664      735F6275 
 10664      696C7469 
 10664      6E287829 
 10664      203000
 10665              	.LASF978:
 10666 7bf0 74726163 		.ascii	"traceTASK_PRIORITY_SET(pxTask,uxNewPriority) \000"
 10666      65544153 
 10666      4B5F5052 
 10666      494F5249 
 10666      54595F53 
 10667              	.LASF708:
 10668 7c1e 5F535452 		.ascii	"_STRING_H_ \000"
 10668      494E475F 
 10668      485F2000 
 10669              	.LASF1117:
 10670 7c2a 73686F72 		.ascii	"short int\000"
 10670      7420696E 
 10670      7400
 10671              	.LASF557:
 10672 7c34 5F524545 		.ascii	"_REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)"
 10672      4E545F54 
 10672      4D287074 
 10672      72292028 
 10672      26287074 
 10673 7c67 00       		.ascii	"\000"
 10674              	.LASF697:
 10675 7c68 5F5F7074 		.ascii	"__pt_guarded_by(x) __lock_annotate(pt_guarded_by(x)"
 10675      5F677561 
 10675      72646564 
 10675      5F627928 
 10675      7829205F 
 10676 7c9b 2900     		.ascii	")\000"
 10677              	.LASF696:
 10678 7c9d 5F5F6775 		.ascii	"__guarded_by(x) __lock_annotate(guarded_by(x))\000"
 10678      61726465 
 10678      645F6279 
 10678      28782920 
 10678      5F5F6C6F 
 10679              	.LASF539:
 10680 7ccc 5F524545 		.ascii	"_REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = &(var"
 10680      4E545F49 
 10680      4E49545F 
 10680      5054525F 
 10680      5A45524F 
 10681 7cff 292D3E5F 		.ascii	")->__sf[0]; (var)->_stdout = &(var)->__sf[1]; (var)"
 10681      5F73665B 
 10681      305D3B20 
 10681      28766172 
 10681      292D3E5F 
 10682 7d32 2D3E5F73 		.ascii	"->_stderr = &(var)->__sf[2]; (var)->_new._reent._ra"
 10682      74646572 
 10682      72203D20 
 10682      26287661 
 10682      72292D3E 
 10683 7d65 6E645F6E 		.ascii	"nd_next = 1; (var)->_new._reent._r48._seed[0] = _RA"
 10683      65787420 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 301


 10683      3D20313B 
 10683      20287661 
 10683      72292D3E 
 10684 7d98 4E443438 		.ascii	"ND48_SEED_0; (var)->_new._reent._r48._seed[1] = _RA"
 10684      5F534545 
 10684      445F303B 
 10684      20287661 
 10684      72292D3E 
 10685 7dcb 4E443438 		.ascii	"ND48_SEED_1; (var)->_new._reent._r48._seed[2] = _RA"
 10685      5F534545 
 10685      445F313B 
 10685      20287661 
 10685      72292D3E 
 10686 7dfe 4E443438 		.ascii	"ND48_SEED_2; (var)->_new._reent._r48._mult[0] = _RA"
 10686      5F534545 
 10686      445F323B 
 10686      20287661 
 10686      72292D3E 
 10687 7e31 4E443438 		.ascii	"ND48_MULT_0; (var)->_new._reent._r48._mult[1] = _RA"
 10687      5F4D554C 
 10687      545F303B 
 10687      20287661 
 10687      72292D3E 
 10688 7e64 4E443438 		.ascii	"ND48_MULT_1; (var)->_new._reent._r48._mult[2] = _RA"
 10688      5F4D554C 
 10688      545F313B 
 10688      20287661 
 10688      72292D3E 
 10689 7e97 4E443438 		.ascii	"ND48_MULT_2; (var)->_new._reent._r48._add = _RAND48"
 10689      5F4D554C 
 10689      545F323B 
 10689      20287661 
 10689      72292D3E 
 10690 7eca 5F414444 		.ascii	"_ADD; }\000"
 10690      3B207D00 
 10691              	.LASF103:
 10692 7ed2 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 10692      4E543136 
 10692      5F432863 
 10692      29206300 
 10693              	.LASF525:
 10694 7ee2 5F524545 		.ascii	"_REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,\000"
 10694      4E545F49 
 10694      4E49545F 
 10694      41544558 
 10694      4954205F 
 10695              	.LASF613:
 10696 7f0a 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE__ 1\000"
 10696      5F535550 
 10696      504F5254 
 10696      535F5F5F 
 10696      494E4C49 
 10697              	.LASF299:
 10698 7f25 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 10698      415F4942 
 10698      49545F5F 
 10698      20333200 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 302


 10699              	.LASF740:
 10700 7f35 5F5F4C45 		.ascii	"__LEAST16 \"h\"\000"
 10700      41535431 
 10700      36202268 
 10700      2200
 10701              	.LASF661:
 10702 7f43 5F5F7072 		.ascii	"__printflike(fmtarg,firstvararg) __attribute__((__f"
 10702      696E7466 
 10702      6C696B65 
 10702      28666D74 
 10702      6172672C 
 10703 7f76 6F726D61 		.ascii	"ormat__ (__printf__, fmtarg, firstvararg)))\000"
 10703      745F5F20 
 10703      285F5F70 
 10703      72696E74 
 10703      665F5F2C 
 10704              	.LASF305:
 10705 7fa2 5F5F4E4F 		.ascii	"__NO_INLINE__ 1\000"
 10705      5F494E4C 
 10705      494E455F 
 10705      5F203100 
 10706              	.LASF648:
 10707 7fb2 5F5F6661 		.ascii	"__fastcall __attribute__((__fastcall__))\000"
 10707      73746361 
 10707      6C6C205F 
 10707      5F617474 
 10707      72696275 
 10708              	.LASF989:
 10709 7fdb 74726163 		.ascii	"traceFREE(pvAddress,uiSize) \000"
 10709      65465245 
 10709      45287076 
 10709      41646472 
 10709      6573732C 
 10710              	.LASF787:
 10711 7ff8 494E5436 		.ascii	"INT64_MIN (-__INT64_MAX__ - 1)\000"
 10711      345F4D49 
 10711      4E20282D 
 10711      5F5F494E 
 10711      5436345F 
 10712              	.LASF683:
 10713 8017 5F5F6C6F 		.ascii	"__lock_annotate(x) \000"
 10713      636B5F61 
 10713      6E6E6F74 
 10713      61746528 
 10713      78292000 
 10714              	.LASF6:
 10715 802b 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 10715      4F4D4943 
 10715      5F52454C 
 10715      41584544 
 10715      203000
 10716              	.LASF425:
 10717 803e 5F415454 		.ascii	"_ATTRIBUTE(attrs) __attribute__ (attrs)\000"
 10717      52494255 
 10717      54452861 
 10717      74747273 
 10717      29205F5F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 303


 10718              	.LASF1055:
 10719 8066 6C697374 		.ascii	"listGET_OWNER_OF_NEXT_ENTRY(pxTCB,pxList) { List_t "
 10719      4745545F 
 10719      4F574E45 
 10719      525F4F46 
 10719      5F4E4558 
 10720 8099 2A20636F 		.ascii	"* const pxConstList = ( pxList ); ( pxConstList )->"
 10720      6E737420 
 10720      7078436F 
 10720      6E73744C 
 10720      69737420 
 10721 80cc 7078496E 		.ascii	"pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( v"
 10721      64657820 
 10721      3D202820 
 10721      7078436F 
 10721      6E73744C 
 10722 80ff 6F696420 		.ascii	"oid * ) ( pxConstList )->pxIndex == ( void * ) &( ("
 10722      2A202920 
 10722      28207078 
 10722      436F6E73 
 10722      744C6973 
 10723 8132 20707843 		.ascii	" pxConstList )->xListEnd ) ) { ( pxConstList )->pxI"
 10723      6F6E7374 
 10723      4C697374 
 10723      20292D3E 
 10723      784C6973 
 10724 8165 6E646578 		.ascii	"ndex = ( pxConstList )->pxIndex->pxNext; } ( pxTCB "
 10724      203D2028 
 10724      20707843 
 10724      6F6E7374 
 10724      4C697374 
 10725 8198 29203D20 		.ascii	") = ( pxConstList )->pxIndex->pvOwner; }\000"
 10725      28207078 
 10725      436F6E73 
 10725      744C6973 
 10725      7420292D 
 10726              	.LASF573:
 10727 81c1 5F5F4154 		.ascii	"__ATTRIBUTE_IMPURE_PTR__ \000"
 10727      54524942 
 10727      5554455F 
 10727      494D5055 
 10727      52455F50 
 10728              	.LASF149:
 10729 81db 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 10729      4C5F4841 
 10729      535F494E 
 10729      46494E49 
 10729      54595F5F 
 10730              	.LASF666:
 10731 81f2 5F5F676E 		.ascii	"__gnu_inline __attribute__((__gnu_inline__, __artif"
 10731      755F696E 
 10731      6C696E65 
 10731      205F5F61 
 10731      74747269 
 10732 8225 69636961 		.ascii	"icial__))\000"
 10732      6C5F5F29 
 10732      2900
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 304


 10733              	.LASF82:
 10734 822f 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 0x7fffffff\000"
 10734      475F4154 
 10734      4F4D4943 
 10734      5F4D4158 
 10734      5F5F2030 
 10735              	.LASF530:
 10736 824d 5F52414E 		.ascii	"_RAND48_MULT_0 (0xe66d)\000"
 10736      4434385F 
 10736      4D554C54 
 10736      5F302028 
 10736      30786536 
 10737              	.LASF1207:
 10738 8265 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 10738      65756553 
 10738      70616365 
 10738      73417661 
 10738      696C6162 
 10739              	.LASF990:
 10740 827c 74726163 		.ascii	"traceEVENT_GROUP_CREATE(xEventGroup) \000"
 10740      65455645 
 10740      4E545F47 
 10740      524F5550 
 10740      5F435245 
 10741              	.LASF659:
 10742 82a2 5F5F7261 		.ascii	"__rangeof(type,start,end) (__offsetof(type, end) - "
 10742      6E67656F 
 10742      66287479 
 10742      70652C73 
 10742      74617274 
 10743 82d5 5F5F6F66 		.ascii	"__offsetof(type, start))\000"
 10743      66736574 
 10743      6F662874 
 10743      7970652C 
 10743      20737461 
 10744              	.LASF1095:
 10745 82ee 78517565 		.ascii	"xQueueSendFromISR(xQueue,pvItemToQueue,pxHigherPrio"
 10745      75655365 
 10745      6E644672 
 10745      6F6D4953 
 10745      52287851 
 10746 8321 72697479 		.ascii	"rityTaskWoken) xQueueGenericSendFromISR( ( xQueue )"
 10746      5461736B 
 10746      576F6B65 
 10746      6E292078 
 10746      51756575 
 10747 8354 2C202820 		.ascii	", ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ),"
 10747      70764974 
 10747      656D546F 
 10747      51756575 
 10747      6520292C 
 10748 8387 20717565 		.ascii	" queueSEND_TO_BACK )\000"
 10748      75655345 
 10748      4E445F54 
 10748      4F5F4241 
 10748      434B2029 
 10749              	.LASF908:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 305


 10750 839c 636F6E66 		.ascii	"configUSE_PORT_OPTIMISED_TASK_SELECTION 1\000"
 10750      69675553 
 10750      455F504F 
 10750      52545F4F 
 10750      5054494D 
 10751              	.LASF349:
 10752 83c6 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 10752      4D5F4152 
 10752      43485F45 
 10752      58545F49 
 10752      4449565F 
 10753              	.LASF818:
 10754 83de 55494E54 		.ascii	"UINT8_C(x) __UINT8_C(x)\000"
 10754      385F4328 
 10754      7829205F 
 10754      5F55494E 
 10754      54385F43 
 10755              	.LASF175:
 10756 83f6 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 10756      4336345F 
 10756      4D494E5F 
 10756      5F203145 
 10756      2D333833 
 10757              	.LASF483:
 10758 840d 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 10758      65645F70 
 10758      74726469 
 10758      66665F74 
 10758      00
 10759              	.LASF143:
 10760 841e 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 10760      4C5F4445 
 10760      43494D41 
 10760      4C5F4449 
 10760      475F5F20 
 10761              	.LASF1223:
 10762 8435 474E5520 		.ascii	"GNU C89 5.4.1 20160919 (release) [ARM/embedded-5-br"
 10762      43383920 
 10762      352E342E 
 10762      31203230 
 10762      31363039 
 10763 8468 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m3 -mthumb -g -g"
 10763      20726576 
 10763      6973696F 
 10763      6E203234 
 10763      30343936 
 10764 849b 67646233 		.ascii	"gdb3 -O0 -std=gnu90 -ffunction-sections -fdata-sect"
 10764      202D4F30 
 10764      202D7374 
 10764      643D676E 
 10764      75393020 
 10765 84ce 696F6E73 		.ascii	"ions\000"
 10765      00
 10766              	.LASF1080:
 10767 84d3 71756575 		.ascii	"queueQUEUE_TYPE_SET ( ( uint8_t ) 0U )\000"
 10767      65515545 
 10767      55455F54 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 306


 10767      5950455F 
 10767      53455420 
 10768              	.LASF478:
 10769 84fa 5F505452 		.ascii	"_PTRDIFF_T_ \000"
 10769      44494646 
 10769      5F545F20 
 10769      00
 10770              	.LASF772:
 10771 8507 494E545F 		.ascii	"INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)\000"
 10771      4C454153 
 10771      54385F4D 
 10771      494E2028 
 10771      2D5F5F49 
 10772              	.LASF251:
 10773 8530 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 10773      41434355 
 10773      4D5F4642 
 10773      49545F5F 
 10773      20333200 
 10774              	.LASF587:
 10775 8544 5F5F666C 		.ascii	"__flexarr [0]\000"
 10775      65786172 
 10775      72205B30 
 10775      5D00
 10776              	.LASF965:
 10777 8552 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR(pxQueue) \000"
 10777      65515545 
 10777      55455F50 
 10777      45454B5F 
 10777      46524F4D 
 10778              	.LASF510:
 10779 8575 5F5F6C6F 		.ascii	"__lock_release_recursive(lock) (_CAST_VOID 0)\000"
 10779      636B5F72 
 10779      656C6561 
 10779      73655F72 
 10779      65637572 
 10780              	.LASF755:
 10781 85a3 5F5F696E 		.ascii	"__int64_t_defined 1\000"
 10781      7436345F 
 10781      745F6465 
 10781      66696E65 
 10781      64203100 
 10782              	.LASF85:
 10783 85b7 5F5F494E 		.ascii	"__INT16_MAX__ 0x7fff\000"
 10783      5431365F 
 10783      4D41585F 
 10783      5F203078 
 10783      37666666 
 10784              	.LASF365:
 10785 85cc 5F57414E 		.ascii	"_WANT_REGISTER_FINI 1\000"
 10785      545F5245 
 10785      47495354 
 10785      45525F46 
 10785      494E4920 
 10786              	.LASF679:
 10787 85e2 5F5F4445 		.ascii	"__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatil"
 10787      564F4C41 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 307


 10787      54494C45 
 10787      28747970 
 10787      652C7661 
 10788 8615 6520766F 		.ascii	"e void *)(var))\000"
 10788      6964202A 
 10788      29287661 
 10788      72292900 
 10789              	.LASF451:
 10790 8625 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 10790      4841525F 
 10790      545F5F20 
 10790      00
 10791              	.LASF954:
 10792 8632 74726163 		.ascii	"traceCREATE_MUTEX_FAILED() \000"
 10792      65435245 
 10792      4154455F 
 10792      4D555445 
 10792      585F4641 
 10793              	.LASF735:
 10794 864e 5F5F4641 		.ascii	"__FAST8 \000"
 10794      53543820 
 10794      00
 10795              	.LASF396:
 10796 8657 5F5F5853 		.ascii	"__XSI_VISIBLE 0\000"
 10796      495F5649 
 10796      5349424C 
 10796      45203000 
 10797              	.LASF963:
 10798 8667 74726163 		.ascii	"traceQUEUE_RECEIVE(pxQueue) \000"
 10798      65515545 
 10798      55455F52 
 10798      45434549 
 10798      56452870 
 10799              	.LASF938:
 10800 8684 706F7274 		.ascii	"portPOINTER_SIZE_TYPE uint32_t\000"
 10800      504F494E 
 10800      5445525F 
 10800      53495A45 
 10800      5F545950 
 10801              	.LASF266:
 10802 86a3 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 10802      5F464249 
 10802      545F5F20 
 10802      3700
 10803              	.LASF949:
 10804 86b1 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_SEND(pxQueue) \000"
 10804      65424C4F 
 10804      434B494E 
 10804      475F4F4E 
 10804      5F515545 
 10805              	.LASF1136:
 10806 86d7 4C697374 		.ascii	"ListItem_t\000"
 10806      4974656D 
 10806      5F7400
 10807              	.LASF744:
 10808 86e2 5F494E54 		.ascii	"_INT8_T_DECLARED \000"
 10808      385F545F 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 308


 10808      4445434C 
 10808      41524544 
 10808      2000
 10809              	.LASF1130:
 10810 86f4 5469636B 		.ascii	"TickT_t\000"
 10810      545F7400 
 10811              	.LASF379:
 10812 86fc 5F5F474E 		.ascii	"__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\000"
 10812      55435F50 
 10812      52455245 
 10812      515F5F28 
 10812      6D612C6D 
 10813              	.LASF301:
 10814 8729 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 10814      415F4942 
 10814      49545F5F 
 10814      20363400 
 10815              	.LASF901:
 10816 8739 706F7274 		.ascii	"portDISABLE_INTERRUPTS() ulPortSetInterruptMask()\000"
 10816      44495341 
 10816      424C455F 
 10816      494E5445 
 10816      52525550 
 10817              	.LASF668:
 10818 876b 5F5F7374 		.ascii	"__strong_reference(sym,aliassym) extern __typeof (s"
 10818      726F6E67 
 10818      5F726566 
 10818      6572656E 
 10818      63652873 
 10819 879e 796D2920 		.ascii	"ym) aliassym __attribute__ ((__alias__ (#sym)))\000"
 10819      616C6961 
 10819      7373796D 
 10819      205F5F61 
 10819      74747269 
 10820              	.LASF225:
 10821 87ce 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 10821      4C465241 
 10821      43545F45 
 10821      5053494C 
 10821      4F4E5F5F 
 10822              	.LASF651:
 10823 87ef 5F5F756E 		.ascii	"__unreachable() __builtin_unreachable()\000"
 10823      72656163 
 10823      6861626C 
 10823      65282920 
 10823      5F5F6275 
 10824              	.LASF324:
 10825 8817 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 10825      5A454F46 
 10825      5F57494E 
 10825      545F545F 
 10825      5F203400 
 10826              	.LASF328:
 10827 882b 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 10827      4D5F4645 
 10827      41545552 
 10827      455F554E 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 309


 10827      414C4947 
 10828              	.LASF0:
 10829 8845 5F5F5354 		.ascii	"__STDC__ 1\000"
 10829      44435F5F 
 10829      203100
 10830              	.LASF686:
 10831 8850 5F5F6C6F 		.ascii	"__locks_shared(...) __lock_annotate(shared_lock_fun"
 10831      636B735F 
 10831      73686172 
 10831      6564282E 
 10831      2E2E2920 
 10832 8883 6374696F 		.ascii	"ction(__VA_ARGS__))\000"
 10832      6E285F5F 
 10832      56415F41 
 10832      5247535F 
 10832      5F292900 
 10833              	.LASF415:
 10834 8897 5F564F49 		.ascii	"_VOID void\000"
 10834      4420766F 
 10834      696400
 10835              	.LASF629:
 10836 88a2 5F5F756E 		.ascii	"__unused __attribute__((__unused__))\000"
 10836      75736564 
 10836      205F5F61 
 10836      74747269 
 10836      62757465 
 10837              	.LASF248:
 10838 88c7 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 10838      4343554D 
 10838      5F4D494E 
 10838      5F5F2028 
 10838      2D305831 
 10839              	.LASF962:
 10840 88eb 74726163 		.ascii	"traceQUEUE_SEND_FAILED(pxQueue) \000"
 10840      65515545 
 10840      55455F53 
 10840      454E445F 
 10840      4641494C 
 10841              	.LASF108:
 10842 890c 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 0x7fffffff\000"
 10842      545F4641 
 10842      5354385F 
 10842      4D41585F 
 10842      5F203078 
 10843              	.LASF662:
 10844 8929 5F5F7363 		.ascii	"__scanflike(fmtarg,firstvararg) __attribute__((__fo"
 10844      616E666C 
 10844      696B6528 
 10844      666D7461 
 10844      72672C66 
 10845 895c 726D6174 		.ascii	"rmat__ (__scanf__, fmtarg, firstvararg)))\000"
 10845      5F5F2028 
 10845      5F5F7363 
 10845      616E665F 
 10845      5F2C2066 
 10846              	.LASF147:
 10847 8986 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 310


 10847      4C5F4445 
 10847      4E4F524D 
 10847      5F4D494E 
 10847      5F5F2028 
 10848 89b9 4C2900   		.ascii	"L)\000"
 10849              	.LASF263:
 10850 89bc 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
 10850      4C414343 
 10850      554D5F4D 
 10850      494E5F5F 
 10850      20302E30 
 10851              	.LASF485:
 10852 89d5 5F535953 		.ascii	"_SYS__TYPES_H \000"
 10852      5F5F5459 
 10852      5045535F 
 10852      482000
 10853              	.LASF70:
 10854 89e4 5F5F4C4F 		.ascii	"__LONG_MAX__ 0x7fffffffL\000"
 10854      4E475F4D 
 10854      41585F5F 
 10854      20307837 
 10854      66666666 
 10855              	.LASF461:
 10856 89fd 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 10856      6E745F77 
 10856      63686172 
 10856      5F745F68 
 10856      2000
 10857              	.LASF314:
 10858 8a0f 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 10858      435F4154 
 10858      4F4D4943 
 10858      5F574348 
 10858      41525F54 
 10859              	.LASF605:
 10860 8a30 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VAALIST 1\000"
 10860      55434C49 
 10860      4B455F42 
 10860      55494C54 
 10860      494E5F56 
 10861              	.LASF671:
 10862 8a4d 5F5F7379 		.ascii	"__sym_compat(sym,impl,verid) __asm__(\".symver \" #"
 10862      6D5F636F 
 10862      6D706174 
 10862      2873796D 
 10862      2C696D70 
 10863 8a7e 696D706C 		.ascii	"impl \", \" #sym \"@\" #verid)\000"
 10863      20222C20 
 10863      22202373 
 10863      796D2022 
 10863      40222023 
 10864              	.LASF733:
 10865 8a99 5F5F494E 		.ascii	"__INT32 \"l\"\000"
 10865      54333220 
 10865      226C2200 
 10866              	.LASF351:
 10867 8aa5 5F5F4152 		.ascii	"__ARM_ASM_SYNTAX_UNIFIED__ 1\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 311


 10867      4D5F4153 
 10867      4D5F5359 
 10867      4E544158 
 10867      5F554E49 
 10868              	.LASF707:
 10869 8ac2 73747274 		.ascii	"strtodf strtof\000"
 10869      6F646620 
 10869      73747274 
 10869      6F6600
 10870              	.LASF44:
 10871 8ad1 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 10871      4E543332 
 10871      5F545950 
 10871      455F5F20 
 10871      6C6F6E67 
 10872              	.LASF892:
 10873 8af3 706F7274 		.ascii	"portTICK_PERIOD_MS ( ( TickType_t ) 1000 / configTI"
 10873      5449434B 
 10873      5F504552 
 10873      494F445F 
 10873      4D532028 
 10874 8b26 434B5F52 		.ascii	"CK_RATE_HZ )\000"
 10874      4154455F 
 10874      485A2029 
 10874      00
 10875              	.LASF925:
 10876 8b33 636F6E66 		.ascii	"configUSE_APPLICATION_TASK_TAG 0\000"
 10876      69675553 
 10876      455F4150 
 10876      504C4943 
 10876      4154494F 
 10877              	.LASF380:
 10878 8b54 5F444546 		.ascii	"_DEFAULT_SOURCE\000"
 10878      41554C54 
 10878      5F534F55 
 10878      52434500 
 10879              	.LASF1216:
 10880 8b64 70727643 		.ascii	"prvCopyDataToQueue\000"
 10880      6F707944 
 10880      61746154 
 10880      6F517565 
 10880      756500
 10881              	.LASF446:
 10882 8b77 5F474343 		.ascii	"_GCC_SIZE_T \000"
 10882      5F53495A 
 10882      455F5420 
 10882      00
 10883              	.LASF913:
 10884 8b84 706F7274 		.ascii	"portNOP() \000"
 10884      4E4F5028 
 10884      292000
 10885              	.LASF615:
 10886 8b8f 5F5F4343 		.ascii	"__CC_SUPPORTS_WARNING 1\000"
 10886      5F535550 
 10886      504F5254 
 10886      535F5741 
 10886      524E494E 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 312


 10887              	.LASF1072:
 10888 8ba7 7461736B 		.ascii	"taskSCHEDULER_RUNNING ( ( BaseT_t ) 2 )\000"
 10888      53434845 
 10888      44554C45 
 10888      525F5255 
 10888      4E4E494E 
 10889              	.LASF223:
 10890 8bcf 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 10890      4C465241 
 10890      43545F4D 
 10890      494E5F5F 
 10890      20302E30 
 10891              	.LASF453:
 10892 8be8 5F545F57 		.ascii	"_T_WCHAR_ \000"
 10892      43484152 
 10892      5F2000
 10893              	.LASF995:
 10894 8bf3 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_END(xEventGroup,uxBitsTo"
 10894      65455645 
 10894      4E545F47 
 10894      524F5550 
 10894      5F574149 
 10895 8c26 57616974 		.ascii	"WaitFor,xTimeoutOccurred) ( void ) xTimeoutOccurred"
 10895      466F722C 
 10895      7854696D 
 10895      656F7574 
 10895      4F636375 
 10896 8c59 00       		.ascii	"\000"
 10897              	.LASF540:
 10898 8c5a 5F524545 		.ascii	"_REENT_CHECK_RAND48(ptr) \000"
 10898      4E545F43 
 10898      4845434B 
 10898      5F52414E 
 10898      44343828 
 10899              	.LASF283:
 10900 8c74 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 10900      515F4942 
 10900      49545F5F 
 10900      203000
 10901              	.LASF13:
 10902 8c83 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 10902      5A454F46 
 10902      5F494E54 
 10902      5F5F2034 
 10902      00
 10903              	.LASF465:
 10904 8c94 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 10904      5F574348 
 10904      41525F54 
 10904      5F00
 10905              	.LASF217:
 10906 8ca2 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 10906      46524143 
 10906      545F4942 
 10906      49545F5F 
 10906      203000
 10907              	.LASF616:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 313


 10908 8cb5 5F5F4343 		.ascii	"__CC_SUPPORTS_VARADIC_XXX 1\000"
 10908      5F535550 
 10908      504F5254 
 10908      535F5641 
 10908      52414449 
 10909              	.LASF1127:
 10910 8cd1 75696E74 		.ascii	"uint32_t\000"
 10910      33325F74 
 10910      00
 10911              	.LASF893:
 10912 8cda 706F7274 		.ascii	"portBYTE_ALIGNMENT 8\000"
 10912      42595445 
 10912      5F414C49 
 10912      474E4D45 
 10912      4E542038 
 10913              	.LASF1172:
 10914 8cef 78517565 		.ascii	"xQueue\000"
 10914      756500
 10915              	.LASF713:
 10916 8cf6 5F535953 		.ascii	"_SYS__INTSUP_H \000"
 10916      5F5F494E 
 10916      54535550 
 10916      5F482000 
 10917              	.LASF1171:
 10918 8d06 51756575 		.ascii	"QueueRegistryItem_t\000"
 10918      65526567 
 10918      69737472 
 10918      79497465 
 10918      6D5F7400 
 10919              	.LASF230:
 10920 8d1a 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
 10920      4343554D 
 10920      5F455053 
 10920      494C4F4E 
 10920      5F5F2030 
 10921              	.LASF1211:
 10922 8d36 76517565 		.ascii	"vQueueSetQueueNumber\000"
 10922      75655365 
 10922      74517565 
 10922      75654E75 
 10922      6D626572 
 10923              	.LASF882:
 10924 8d4b 504F5254 		.ascii	"PORTMACRO_H \000"
 10924      4D414352 
 10924      4F5F4820 
 10924      00
 10925              	.LASF803:
 10926 8d58 494E545F 		.ascii	"INT_FAST64_MAX (__INT_FAST64_MAX__)\000"
 10926      46415354 
 10926      36345F4D 
 10926      41582028 
 10926      5F5F494E 
 10927              	.LASF921:
 10928 8d7c 494E434C 		.ascii	"INCLUDE_xTimerGetTimerDaemonTaskHandle 0\000"
 10928      5544455F 
 10928      7854696D 
 10928      65724765 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 314


 10928      7454696D 
 10929              	.LASF383:
 10930 8da5 5F504F53 		.ascii	"_POSIX_SOURCE 1\000"
 10930      49585F53 
 10930      4F555243 
 10930      45203100 
 10931              	.LASF1045:
 10932 8db5 6C697374 		.ascii	"listSET_LIST_ITEM_OWNER(pxListItem,pxOwner) ( ( pxL"
 10932      5345545F 
 10932      4C495354 
 10932      5F495445 
 10932      4D5F4F57 
 10933 8de8 69737449 		.ascii	"istItem )->pvOwner = ( void * ) ( pxOwner ) )\000"
 10933      74656D20 
 10933      292D3E70 
 10933      764F776E 
 10933      6572203D 
 10934              	.LASF59:
 10935 8e16 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 10935      4E545F46 
 10935      41535431 
 10935      365F5459 
 10935      50455F5F 
 10936              	.LASF295:
 10937 8e38 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 10937      415F4942 
 10937      49545F5F 
 10937      203800
 10938              	.LASF359:
 10939 8e47 5F4E4557 		.ascii	"_NEWLIB_VERSION_H__ 1\000"
 10939      4C49425F 
 10939      56455253 
 10939      494F4E5F 
 10939      485F5F20 
 10940              	.LASF514:
 10941 8e5d 5F5F6E65 		.ascii	"__need_wint_t \000"
 10941      65645F77 
 10941      696E745F 
 10941      742000
 10942              	.LASF240:
 10943 8e6c 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 10943      43554D5F 
 10943      45505349 
 10943      4C4F4E5F 
 10943      5F203078 
 10944              	.LASF255:
 10945 8e87 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 10945      41434355 
 10945      4D5F4550 
 10945      53494C4F 
 10945      4E5F5F20 
 10946              	.LASF1098:
 10947 8ea6 78517565 		.ascii	"xQueueAltReceive(xQueue,pvBuffer,xTicksToWait) xQue"
 10947      7565416C 
 10947      74526563 
 10947      65697665 
 10947      28785175 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 315


 10948 8ed9 7565416C 		.ascii	"ueAltGenericReceive( ( xQueue ), ( pvBuffer ), ( xT"
 10948      7447656E 
 10948      65726963 
 10948      52656365 
 10948      69766528 
 10949 8f0c 69636B73 		.ascii	"icksToWait ), pdFALSE )\000"
 10949      546F5761 
 10949      69742029 
 10949      2C207064 
 10949      46414C53 
 10950              	.LASF152:
 10951 8f24 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 10951      424C5F44 
 10951      49475F5F 
 10951      20313500 
 10952              	.LASF704:
 10953 8f34 45584954 		.ascii	"EXIT_SUCCESS 0\000"
 10953      5F535543 
 10953      43455353 
 10953      203000
 10954              	.LASF638:
 10955 8f43 5F41746F 		.ascii	"_Atomic(T) struct { T volatile __val; }\000"
 10955      6D696328 
 10955      54292073 
 10955      74727563 
 10955      74207B20 
 10956              	.LASF75:
 10957 8f6b 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 10957      4E545F4D 
 10957      494E5F5F 
 10957      20305500 
 10958              	.LASF177:
 10959 8f7b 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 10959      4336345F 
 10959      45505349 
 10959      4C4F4E5F 
 10959      5F203145 
 10960              	.LASF74:
 10961 8f95 5F5F5749 		.ascii	"__WINT_MAX__ 0xffffffffU\000"
 10961      4E545F4D 
 10961      41585F5F 
 10961      20307866 
 10961      66666666 
 10962              	.LASF583:
 10963 8fae 5F5F6C6F 		.ascii	"__long_double_t long double\000"
 10963      6E675F64 
 10963      6F75626C 
 10963      655F7420 
 10963      6C6F6E67 
 10964              	.LASF47:
 10965 8fca 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 10965      545F4C45 
 10965      41535431 
 10965      365F5459 
 10965      50455F5F 
 10966              	.LASF942:
 10967 8fe9 74726163 		.ascii	"traceINCREASE_TICK_COUNT(x) \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 316


 10967      65494E43 
 10967      52454153 
 10967      455F5449 
 10967      434B5F43 
 10968              	.LASF747:
 10969 9006 5F494E54 		.ascii	"_INT16_T_DECLARED \000"
 10969      31365F54 
 10969      5F444543 
 10969      4C415245 
 10969      442000
 10970              	.LASF144:
 10971 9019 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 10971      4C5F4D41 
 10971      585F5F20 
 10971      2828646F 
 10971      75626C65 
 10972              	.LASF408:
 10973 9048 5F505452 		.ascii	"_PTR void *\000"
 10973      20766F69 
 10973      64202A00 
 10974              	.LASF216:
 10975 9054 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 10975      46524143 
 10975      545F4642 
 10975      49545F5F 
 10975      20363300 
 10976              	.LASF450:
 10977 9068 5F5F7763 		.ascii	"__wchar_t__ \000"
 10977      6861725F 
 10977      745F5F20 
 10977      00
 10978              	.LASF338:
 10979 9075 5F5F7468 		.ascii	"__thumb__ 1\000"
 10979      756D625F 
 10979      5F203100 
 10980              	.LASF1071:
 10981 9081 7461736B 		.ascii	"taskSCHEDULER_NOT_STARTED ( ( BaseT_t ) 1 )\000"
 10981      53434845 
 10981      44554C45 
 10981      525F4E4F 
 10981      545F5354 
 10982              	.LASF1103:
 10983 90ad 71756575 		.ascii	"queueLOCKED_UNMODIFIED ( ( BaseT_t ) 0 )\000"
 10983      654C4F43 
 10983      4B45445F 
 10983      554E4D4F 
 10983      44494649 
 10984              	.LASF341:
 10985 90d6 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 10985      4D454C5F 
 10985      5F203100 
 10986              	.LASF993:
 10987 90e2 74726163 		.ascii	"traceEVENT_GROUP_SYNC_END(xEventGroup,uxBitsToSet,u"
 10987      65455645 
 10987      4E545F47 
 10987      524F5550 
 10987      5F53594E 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 317


 10988 9115 78426974 		.ascii	"xBitsToWaitFor,xTimeoutOccurred) ( void ) xTimeoutO"
 10988      73546F57 
 10988      61697446 
 10988      6F722C78 
 10988      54696D65 
 10989 9148 63637572 		.ascii	"ccurred\000"
 10989      72656400 
 10990              	.LASF502:
 10991 9150 5F5F6C6F 		.ascii	"__lock_init_recursive(lock) (_CAST_VOID 0)\000"
 10991      636B5F69 
 10991      6E69745F 
 10991      72656375 
 10991      72736976 
 10992              	.LASF663:
 10993 917b 5F5F666F 		.ascii	"__format_arg(fmtarg) __attribute__((__format_arg__ "
 10993      726D6174 
 10993      5F617267 
 10993      28666D74 
 10993      61726729 
 10994 91ae 28666D74 		.ascii	"(fmtarg)))\000"
 10994      61726729 
 10994      292900
 10995              	.LASF637:
 10996 91b9 5F416C69 		.ascii	"_Alignof(x) __alignof(x)\000"
 10996      676E6F66 
 10996      28782920 
 10996      5F5F616C 
 10996      69676E6F 
 10997              	.LASF1017:
 10998 91d2 636F6E66 		.ascii	"configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTI"
 10998      6967494E 
 10998      434C5544 
 10998      455F4150 
 10998      504C4943 
 10999 9205 4F4E5320 		.ascii	"ONS 0\000"
 10999      3000
 11000              	.LASF268:
 11001 920b 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 11001      5F464249 
 11001      545F5F20 
 11001      313500
 11002              	.LASF1162:
 11003 921a 7854784C 		.ascii	"xTxLock\000"
 11003      6F636B00 
 11004              	.LASF1053:
 11005 9222 6C697374 		.ascii	"listLIST_IS_EMPTY(pxList) ( ( BaseT_t ) ( ( pxList "
 11005      4C495354 
 11005      5F49535F 
 11005      454D5054 
 11005      59287078 
 11006 9255 292D3E75 		.ascii	")->uxNumberOfItems == ( UBaseT_t ) 0 ) )\000"
 11006      784E756D 
 11006      6265724F 
 11006      66497465 
 11006      6D73203D 
 11007              	.LASF682:
 11008 927e 5F5F6461 		.ascii	"__datatype_type_tag(kind,type) \000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 318


 11008      74617479 
 11008      70655F74 
 11008      7970655F 
 11008      74616728 
 11009              	.LASF569:
 11010 929e 5F524545 		.ascii	"_REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_"
 11010      4E545F53 
 11010      49474E41 
 11010      4C5F4255 
 11010      46287074 
 11011 92d1 62756629 		.ascii	"buf)\000"
 11011      00
 11012              	.LASF77:
 11013 92d6 5F5F5349 		.ascii	"__SIZE_MAX__ 0xffffffffU\000"
 11013      5A455F4D 
 11013      41585F5F 
 11013      20307866 
 11013      66666666 
 11014              	.LASF734:
 11015 92ef 5F5F494E 		.ascii	"__INT64 \"ll\"\000"
 11015      54363420 
 11015      226C6C22 
 11015      00
 11016              	.LASF1199:
 11017 92fc 78517565 		.ascii	"xQueueGenericReceive\000"
 11017      75654765 
 11017      6E657269 
 11017      63526563 
 11017      65697665 
 11018              	.LASF646:
 11019 9311 5F5F6E6F 		.ascii	"__nonnull(x) __attribute__((__nonnull__(x)))\000"
 11019      6E6E756C 
 11019      6C287829 
 11019      205F5F61 
 11019      74747269 
 11020              	.LASF771:
 11021 933e 55494E54 		.ascii	"UINT8_MAX (__UINT8_MAX__)\000"
 11021      385F4D41 
 11021      5820285F 
 11021      5F55494E 
 11021      54385F4D 
 11022              	.LASF1178:
 11023 9358 70784E65 		.ascii	"pxNewQueue\000"
 11023      77517565 
 11023      756500
 11024              	.LASF577:
 11025 9363 5F535953 		.ascii	"_SYS_CDEFS_H_ \000"
 11025      5F434445 
 11025      46535F48 
 11025      5F2000
 11026              	.LASF758:
 11027 9372 5F5F696E 		.ascii	"__int_least8_t_defined 1\000"
 11027      745F6C65 
 11027      61737438 
 11027      5F745F64 
 11027      6566696E 
 11028              	.LASF728:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 319


 11029 938b 6C6F6E67 		.ascii	"long +4\000"
 11029      202B3400 
 11030              	.LASF966:
 11031 9393 74726163 		.ascii	"traceQUEUE_RECEIVE_FAILED(pxQueue) \000"
 11031      65515545 
 11031      55455F52 
 11031      45434549 
 11031      56455F46 
 11032              	.LASF533:
 11033 93b7 5F52414E 		.ascii	"_RAND48_ADD (0x000b)\000"
 11033      4434385F 
 11033      41444420 
 11033      28307830 
 11033      30306229 
 11034              	.LASF703:
 11035 93cc 45584954 		.ascii	"EXIT_FAILURE 1\000"
 11035      5F464149 
 11035      4C555245 
 11035      203100
 11036              	.LASF330:
 11037 93db 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 11037      4D5F4645 
 11037      41545552 
 11037      455F4C44 
 11037      52455820 
 11038              	.LASF712:
 11039 93f1 5F535444 		.ascii	"_STDINT_H \000"
 11039      494E545F 
 11039      482000
 11040              	.LASF998:
 11041 93fc 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS(xEventGroup,uxBitsToSet) "
 11041      65455645 
 11041      4E545F47 
 11041      524F5550 
 11041      5F534554 
 11042 942f 00       		.ascii	"\000"
 11043              	.LASF436:
 11044 9430 5F545F53 		.ascii	"_T_SIZE_ \000"
 11044      495A455F 
 11044      2000
 11045              	.LASF1084:
 11046 943a 71756575 		.ascii	"queueQUEUE_TYPE_RECURSIVE_MUTEX ( ( uint8_t ) 4U )\000"
 11046      65515545 
 11046      55455F54 
 11046      5950455F 
 11046      52454355 
 11047              	.LASF879:
 11048 946d 65727251 		.ascii	"errQUEUE_BLOCKED ( -4 )\000"
 11048      55455545 
 11048      5F424C4F 
 11048      434B4544 
 11048      2028202D 
 11049              	.LASF280:
 11050 9485 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 11050      515F4642 
 11050      49545F5F 
 11050      20333200 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 320


 11051              	.LASF875:
 11052 9495 70644641 		.ascii	"pdFAIL ( pdFALSE )\000"
 11052      494C2028 
 11052      20706446 
 11052      414C5345 
 11052      202900
 11053              	.LASF1040:
 11054 94a8 784C6973 		.ascii	"xListItem ListItem_t\000"
 11054      74497465 
 11054      6D204C69 
 11054      73744974 
 11054      656D5F74 
 11055              	.LASF189:
 11056 94bd 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 11056      52414354 
 11056      5F4D4158 
 11056      5F5F2030 
 11056      58374650 
 11057              	.LASF1165:
 11058 94d6 78515545 		.ascii	"xQUEUE\000"
 11058      554500
 11059              	.LASF867:
 11060 94dd 636F6E66 		.ascii	"configKERNEL_INTERRUPT_PRIORITY ( 31 << (8 - config"
 11060      69674B45 
 11060      524E454C 
 11060      5F494E54 
 11060      45525255 
 11061 9510 5052494F 		.ascii	"PRIO_BITS) )\000"
 11061      5F424954 
 11061      53292029 
 11061      00
 11062              	.LASF95:
 11063 951d 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 11063      5431365F 
 11063      43286329 
 11063      206300
 11064              	.LASF1188:
 11065 952c 75784D61 		.ascii	"uxMaxCount\000"
 11065      78436F75 
 11065      6E7400
 11066              	.LASF1032:
 11067 9537 78546173 		.ascii	"xTaskParameters TaskParameters_t\000"
 11067      6B506172 
 11067      616D6574 
 11067      65727320 
 11067      5461736B 
 11068              	.LASF409:
 11069 9558 5F414E44 		.ascii	"_AND ,\000"
 11069      202C00
 11070              	.LASF912:
 11071 955f 706F7274 		.ascii	"portASSERT_IF_INTERRUPT_PRIORITY_INVALID() vPortVal"
 11071      41535345 
 11071      52545F49 
 11071      465F494E 
 11071      54455252 
 11072 9592 69646174 		.ascii	"idateInterruptPriority()\000"
 11072      65496E74 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 321


 11072      65727275 
 11072      70745072 
 11072      696F7269 
 11073              	.LASF1174:
 11074 95ab 78517565 		.ascii	"xQueueGenericReset\000"
 11074      75654765 
 11074      6E657269 
 11074      63526573 
 11074      657400
 11075              	.LASF524:
 11076 95be 5F415445 		.ascii	"_ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL},"
 11076      5849545F 
 11076      494E4954 
 11076      207B5F4E 
 11076      554C4C2C 
 11077 95f1 20302C20 		.ascii	" 0, 0}}\000"
 11077      307D7D00 
 11078              	.LASF864:
 11079 95f9 636F6E66 		.ascii	"configNET_MASK2 255\000"
 11079      69674E45 
 11079      545F4D41 
 11079      534B3220 
 11079      32353500 
 11080              	.LASF391:
 11081 960d 5F5F4953 		.ascii	"__ISO_C_VISIBLE 1999\000"
 11081      4F5F435F 
 11081      56495349 
 11081      424C4520 
 11081      31393939 
 11082              	.LASF838:
 11083 9622 636F6E66 		.ascii	"configUSE_TRACE_FACILITY 1\000"
 11083      69675553 
 11083      455F5452 
 11083      4143455F 
 11083      46414349 
 11084              	.LASF10:
 11085 963d 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 11085      4F4D4943 
 11085      5F414351 
 11085      5F52454C 
 11085      203400
 11086              	.LASF269:
 11087 9650 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
 11087      5F494249 
 11087      545F5F20 
 11087      3000
 11088              	.LASF631:
 11089 965e 5F5F7061 		.ascii	"__packed __attribute__((__packed__))\000"
 11089      636B6564 
 11089      205F5F61 
 11089      74747269 
 11089      62757465 
 11090              	.LASF140:
 11091 9683 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 11091      4C5F4D49 
 11091      4E5F3130 
 11091      5F455850 
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 322


 11091      5F5F2028 
 11092              	.LASF364:
 11093 969d 5F57414E 		.ascii	"_WANT_IO_LONG_LONG 1\000"
 11093      545F494F 
 11093      5F4C4F4E 
 11093      475F4C4F 
 11093      4E472031 
 11094              	.LASF928:
 11095 96b2 706F7274 		.ascii	"portCRITICAL_NESTING_IN_TCB 0\000"
 11095      43524954 
 11095      4943414C 
 11095      5F4E4553 
 11095      54494E47 
 11096              	.LASF691:
 11097 96d0 5F5F6173 		.ascii	"__asserts_shared(...) __lock_annotate(assert_shared"
 11097      73657274 
 11097      735F7368 
 11097      61726564 
 11097      282E2E2E 
 11098 9703 5F6C6F63 		.ascii	"_lock(__VA_ARGS__))\000"
 11098      6B285F5F 
 11098      56415F41 
 11098      5247535F 
 11098      5F292900 
 11099              	.LASF498:
 11100 9717 5F5F5359 		.ascii	"__SYS_LOCK_H__ \000"
 11100      535F4C4F 
 11100      434B5F48 
 11100      5F5F2000 
 11101              	.LASF720:
 11102 9727 5F5F696E 		.ascii	"__int20\000"
 11102      74323000 
 11103              	.LASF800:
 11104 972f 494E545F 		.ascii	"INT_FAST32_MAX (__INT_FAST32_MAX__)\000"
 11104      46415354 
 11104      33325F4D 
 11104      41582028 
 11104      5F5F494E 
 11105              	.LASF968:
 11106 9753 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue) \000"
 11106      65515545 
 11106      55455F53 
 11106      454E445F 
 11106      46524F4D 
 11107              	.LASF535:
 11108 977d 5F524545 		.ascii	"_REENT_ASCTIME_SIZE 26\000"
 11108      4E545F41 
 11108      53435449 
 11108      4D455F53 
 11108      495A4520 
 11109              	.LASF1051:
 11110 9794 6C697374 		.ascii	"listGET_NEXT(pxListItem) ( ( pxListItem )->pxNext )"
 11110      4745545F 
 11110      4E455854 
 11110      2870784C 
 11110      69737449 
 11111 97c7 00       		.ascii	"\000"
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 323


 11112              	.LASF766:
 11113 97c8 494E5450 		.ascii	"INTPTR_MIN (-__INTPTR_MAX__ - 1)\000"
 11113      54525F4D 
 11113      494E2028 
 11113      2D5F5F49 
 11113      4E545054 
 11114              	.LASF812:
 11115 97e9 50545244 		.ascii	"PTRDIFF_MIN (-PTRDIFF_MAX - 1)\000"
 11115      4946465F 
 11115      4D494E20 
 11115      282D5054 
 11115      52444946 
 11116              	.LASF384:
 11117 9808 5F504F53 		.ascii	"_POSIX_C_SOURCE\000"
 11117      49585F43 
 11117      5F534F55 
 11117      52434500 
 11118              	.LASF80:
 11119 9818 5F5F5549 		.ascii	"__UINTMAX_MAX__ 0xffffffffffffffffULL\000"
 11119      4E544D41 
 11119      585F4D41 
 11119      585F5F20 
 11119      30786666 
 11120              	.LASF1131:
 11121 983e 78497465 		.ascii	"xItemValue\000"
 11121      6D56616C 
 11121      756500
 11122              	.LASF137:
 11123 9849 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 11123      4C5F4D41 
 11123      4E545F44 
 11123      49475F5F 
 11123      20353300 
 11124              	.LASF920:
 11125 985d 494E434C 		.ascii	"INCLUDE_xTaskGetIdleTaskHandle 0\000"
 11125      5544455F 
 11125      78546173 
 11125      6B476574 
 11125      49646C65 
 11126              	.LASF212:
 11127 987e 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 11127      46524143 
 11127      545F4942 
 11127      49545F5F 
 11127      203000
 11128              	.LASF730:
 11129 9891 5F494E54 		.ascii	"_INT32_EQ_LONG \000"
 11129      33325F45 
 11129      515F4C4F 
 11129      4E472000 
 11130              	.LASF69:
 11131 98a1 5F5F494E 		.ascii	"__INT_MAX__ 0x7fffffff\000"
 11131      545F4D41 
 11131      585F5F20 
 11131      30783766 
 11131      66666666 
 11132              	.LASF49:
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 324


 11133 98b8 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 11133      545F4C45 
 11133      41535436 
 11133      345F5459 
 11133      50455F5F 
 11134              	.LASF971:
 11135 98db 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR_FAILED(pxQueue) \000"
 11135      65515545 
 11135      55455F50 
 11135      45454B5F 
 11135      46524F4D 
 11136              	.LASF717:
 11137 9905 7369676E 		.ascii	"signed\000"
 11137      656400
 11138              	.LASF226:
 11139 990c 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 11139      4343554D 
 11139      5F464249 
 11139      545F5F20 
 11139      3700
 11140              	.LASF759:
 11141 991e 5F5F696E 		.ascii	"__int_least16_t_defined 1\000"
 11141      745F6C65 
 11141      61737431 
 11141      365F745F 
 11141      64656669 
 11142              	.LASF930:
 11143 9938 494E434C 		.ascii	"INCLUDE_xEventGroupSetBitFromISR 0\000"
 11143      5544455F 
 11143      78457665 
 11143      6E744772 
 11143      6F757053 
 11144              	.LASF1209:
 11145 995b 75785175 		.ascii	"uxQueueGetQueueNumber\000"
 11145      65756547 
 11145      65745175 
 11145      6575654E 
 11145      756D6265 
 11146              	.LASF950:
 11147 9971 74726163 		.ascii	"traceMOVED_TASK_TO_READY_STATE(pxTCB) \000"
 11147      654D4F56 
 11147      45445F54 
 11147      41534B5F 
 11147      544F5F52 
 11148              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 325


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
                            *COM*:00000050 xQueueRegistry
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:59     .text.xQueueGenericReset:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:64     .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:183    .text.xQueueGenericCreate:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:188    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:287    .text.xQueueCreateMutex:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:292    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:646    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:396    .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:401    .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:477    .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:482    .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1078   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:561    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:566    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:641    .text.xQueueGenericSend:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1925   .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2369   .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2142   .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:891    .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:896    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1073   .text.xQueueGenericReceive:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2075   .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2261   .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1341   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1346   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1482   .text.xQueuePeekFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1487   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1589   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1594   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1640   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1645   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1697   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1702   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1744   .text.vQueueDelete:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1749   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2558   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1805   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1810   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1843   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1848   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1883   .text.ucQueueGetQueueType:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1888   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:1921   .text.prvCopyDataToQueue:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2071   .text.prvCopyDataFromQueue:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2138   .text.prvUnlockQueue:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2257   .text.prvIsQueueEmpty:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2308   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2313   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2365   .text.prvIsQueueFull:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2418   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2423   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2477   .text.vQueueAddToRegistry:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2482   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2548   .text.vQueueAddToRegistry:0000004c $d
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 326


C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2553   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s:2619   .text.vQueueUnregisterQueue:00000040 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.c0d9c46791312c607b68c96c4ad07fb1
                           .group:00000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:00000000 wm4.newlib.h.21.0b9fc973bddc8b940a18de2b6ea6adc7
                           .group:00000000 wm4.features.h.22.692cd1f2e947ca7b8fea300222f5f1f2
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:00000000 wm4.stddef.h.39.d5a83c17f38162a5dd6f834eaf38f8ef
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.cdefs.h.47.d0af77d4010113800282e6476aca9724
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.56.f7bb76d8eb43fb7e79a949819dbf4bda
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4._intsup.h.10.b82bf99f69d6a5c085fc866de0d3eb9b
                           .group:00000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8
                           .group:00000000 wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066
                           .group:00000000 wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946
                           .group:00000000 wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5
                           .group:00000000 wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168
                           .group:00000000 wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e
                           .group:00000000 wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370
                           .group:00000000 wm4.task.h.84.e110bc08aaffa67ce542955b890201b4
                           .group:00000000 wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94

UNDEFINED SYMBOLS
ulPortSetInterruptMask
vPortEnterCritical
xTaskRemoveFromEventList
vPortYield
vListInitialise
vPortExitCritical
pvPortMalloc
vPortFree
xTaskGetCurrentTaskHandle
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
vPortClearInterruptMask
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
xTaskPriorityDisinherit
memcpy
ARM GAS  C:\Users\STUDENT\AppData\Local\Temp\ccPcr4vW.s 			page 327


vTaskMissedYield
