ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"queue.c"
  14              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.9.3 20150303 (release) [ARM/embedded-4_9-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I config -I system -I core -I drivers -I FreeRTOS
  18              	@ -I FreeRTOS/include -I FreeRTOS/portable/GCC/ARM_CM3 -I FreeRTOS/portable
  19              	@ -I tasks/rc_task_leds -I modules/rc_leds -I drivers/rc_system
  20              	@ -I drivers/rc_gpio -I drivers/rc_uart -I drivers/rc_pinsel
  21              	@ -I drivers/rc_timer -I drivers/rc_adc -imultilib armv7-m
  22              	@ -iprefix c:\gnu tools arm embedded\4.9 2015q1\bin\../lib/gcc/arm-none-eabi/4.9.3/
  23              	@ -isysroot c:\gnu tools arm embedded\4.9 2015q1\bin\../arm-none-eabi
  24              	@ -MD out/queue.d -MF out/queue.d -MP -MQ out/queue.o -D__USES_INITFINI__
  25              	@ FreeRTOS/queue.c -mcpu=cortex-m3 -mthumb -auxbase-strip out/queue.o -g
  26              	@ -ggdb3 -O0 -Wall -Wstrict-prototypes -Wextra -std=gnu90
  27              	@ -ffunction-sections -fdata-sections -fverbose-asm
  28              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec -fcommon
  29              	@ -fdata-sections -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  30              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse
  31              	@ -ffunction-sections -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  32              	@ -finline-atomics -fira-hoist-pressure -fira-share-save-slots
  33              	@ -fira-share-spill-slots -fivopts -fkeep-static-consts
  34              	@ -fleading-underscore -flifetime-dse -fmath-errno -fmerge-debug-strings
  35              	@ -fpeephole -fprefetch-loop-arrays -freg-struct-return
  36              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  37              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  38              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  39              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  40              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  41              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  42              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  43              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  44              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  45              	@ -fzero-initialized-in-bss -mfix-cortex-m3-ldrd -mlittle-endian -mlra
  46              	@ -mpic-data-is-text-relative -msched-prolog -mthumb -munaligned-access
  47              	@ -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.comm	xQueueRegistry,80,4
  53              		.section	.text.xQueueGenericReset,"ax",%progbits
  54              		.align	2
  55              		.global	xQueueGenericReset
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 2


  58              		.type	xQueueGenericReset, %function
  59              	xQueueGenericReset:
  60              	.LFB1:
  61              		.file 1 "FreeRTOS/queue.c"
   1:FreeRTOS/queue.c **** /*
   2:FreeRTOS/queue.c ****     FreeRTOS V8.1.2 - Copyright (C) 2014 Real Time Engineers Ltd.
   3:FreeRTOS/queue.c ****     All rights reserved
   4:FreeRTOS/queue.c **** 
   5:FreeRTOS/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:FreeRTOS/queue.c **** 
   7:FreeRTOS/queue.c ****     ***************************************************************************
   8:FreeRTOS/queue.c ****      *                                                                       *
   9:FreeRTOS/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  10:FreeRTOS/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  11:FreeRTOS/queue.c ****      *    platform software that has become a de facto standard.             *
  12:FreeRTOS/queue.c ****      *                                                                       *
  13:FreeRTOS/queue.c ****      *    Help yourself get started quickly and support the FreeRTOS         *
  14:FreeRTOS/queue.c ****      *    project by purchasing a FreeRTOS tutorial book, reference          *
  15:FreeRTOS/queue.c ****      *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
  16:FreeRTOS/queue.c ****      *                                                                       *
  17:FreeRTOS/queue.c ****      *    Thank you!                                                         *
  18:FreeRTOS/queue.c ****      *                                                                       *
  19:FreeRTOS/queue.c ****     ***************************************************************************
  20:FreeRTOS/queue.c **** 
  21:FreeRTOS/queue.c ****     This file is part of the FreeRTOS distribution.
  22:FreeRTOS/queue.c **** 
  23:FreeRTOS/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  24:FreeRTOS/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  25:FreeRTOS/queue.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  26:FreeRTOS/queue.c **** 
  27:FreeRTOS/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  28:FreeRTOS/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  29:FreeRTOS/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  30:FreeRTOS/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  31:FreeRTOS/queue.c **** 
  32:FreeRTOS/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  33:FreeRTOS/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  34:FreeRTOS/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available from the following
  35:FreeRTOS/queue.c ****     link: http://www.freertos.org/a00114.html
  36:FreeRTOS/queue.c **** 
  37:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  38:FreeRTOS/queue.c **** 
  39:FreeRTOS/queue.c ****     ***************************************************************************
  40:FreeRTOS/queue.c ****      *                                                                       *
  41:FreeRTOS/queue.c ****      *    Having a problem?  Start by reading the FAQ "My application does   *
  42:FreeRTOS/queue.c ****      *    not run, what could be wrong?"                                     *
  43:FreeRTOS/queue.c ****      *                                                                       *
  44:FreeRTOS/queue.c ****      *    http://www.FreeRTOS.org/FAQHelp.html                               *
  45:FreeRTOS/queue.c ****      *                                                                       *
  46:FreeRTOS/queue.c ****     ***************************************************************************
  47:FreeRTOS/queue.c **** 
  48:FreeRTOS/queue.c ****     http://www.FreeRTOS.org - Documentation, books, training, latest versions,
  49:FreeRTOS/queue.c ****     license and Real Time Engineers Ltd. contact details.
  50:FreeRTOS/queue.c **** 
  51:FreeRTOS/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  52:FreeRTOS/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  53:FreeRTOS/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 3


  54:FreeRTOS/queue.c **** 
  55:FreeRTOS/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
  56:FreeRTOS/queue.c ****     Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
  57:FreeRTOS/queue.c ****     licenses offer ticketed support, indemnification and middleware.
  58:FreeRTOS/queue.c **** 
  59:FreeRTOS/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  60:FreeRTOS/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  61:FreeRTOS/queue.c ****     mission critical applications that require provable dependability.
  62:FreeRTOS/queue.c **** 
  63:FreeRTOS/queue.c ****     1 tab == 4 spaces!
  64:FreeRTOS/queue.c **** */
  65:FreeRTOS/queue.c **** 
  66:FreeRTOS/queue.c **** #include <stdlib.h>
  67:FreeRTOS/queue.c **** #include <string.h>
  68:FreeRTOS/queue.c **** 
  69:FreeRTOS/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  70:FreeRTOS/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  71:FreeRTOS/queue.c **** task.h is included from an application file. */
  72:FreeRTOS/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  73:FreeRTOS/queue.c **** 
  74:FreeRTOS/queue.c **** #include "FreeRTOS.h"
  75:FreeRTOS/queue.c **** #include "task.h"
  76:FreeRTOS/queue.c **** #include "queue.h"
  77:FreeRTOS/queue.c **** 
  78:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  79:FreeRTOS/queue.c **** 	#include "croutine.h"
  80:FreeRTOS/queue.c **** #endif
  81:FreeRTOS/queue.c **** 
  82:FreeRTOS/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  83:FreeRTOS/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  84:FreeRTOS/queue.c **** header files above, but not in this file, in order to generate the correct
  85:FreeRTOS/queue.c **** privileged Vs unprivileged linkage and placement. */
  86:FreeRTOS/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  87:FreeRTOS/queue.c **** 
  88:FreeRTOS/queue.c **** 
  89:FreeRTOS/queue.c **** /* Constants used with the xRxLock and xTxLock structure members. */
  90:FreeRTOS/queue.c **** #define queueUNLOCKED					( ( BaseT_t ) -1 )
  91:FreeRTOS/queue.c **** #define queueLOCKED_UNMODIFIED			( ( BaseT_t ) 0 )
  92:FreeRTOS/queue.c **** 
  93:FreeRTOS/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  94:FreeRTOS/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  95:FreeRTOS/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  96:FreeRTOS/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  97:FreeRTOS/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  98:FreeRTOS/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  99:FreeRTOS/queue.c **** the code is maintained despite this dual use of two structure members.  An
 100:FreeRTOS/queue.c **** alternative implementation would be to use a union, but use of a union is
 101:FreeRTOS/queue.c **** against the coding standard (although an exception to the standard has been
 102:FreeRTOS/queue.c **** permitted where the dual use also significantly changes the type of the
 103:FreeRTOS/queue.c **** structure member). */
 104:FreeRTOS/queue.c **** #define pxMutexHolder					pcTail
 105:FreeRTOS/queue.c **** #define uxQueueType						pcHead
 106:FreeRTOS/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 107:FreeRTOS/queue.c **** 
 108:FreeRTOS/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 109:FreeRTOS/queue.c **** zero. */
 110:FreeRTOS/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 4


 111:FreeRTOS/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickT_t ) 0U )
 112:FreeRTOS/queue.c **** 
 113:FreeRTOS/queue.c **** #if( configUSE_PREEMPTION == 0 )
 114:FreeRTOS/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 115:FreeRTOS/queue.c **** 	performed just because a higher priority task has been woken. */
 116:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 117:FreeRTOS/queue.c **** #else
 118:FreeRTOS/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 119:FreeRTOS/queue.c **** #endif
 120:FreeRTOS/queue.c **** 
 121:FreeRTOS/queue.c **** /*
 122:FreeRTOS/queue.c ****  * Definition of the queue used by the scheduler.
 123:FreeRTOS/queue.c ****  * Items are queued by copy, not reference.
 124:FreeRTOS/queue.c ****  */
 125:FreeRTOS/queue.c **** typedef struct QueueDefinition
 126:FreeRTOS/queue.c **** {
 127:FreeRTOS/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 128:FreeRTOS/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 129:FreeRTOS/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 130:FreeRTOS/queue.c **** 
 131:FreeRTOS/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 132:FreeRTOS/queue.c **** 	{
 133:FreeRTOS/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 134:FreeRTOS/queue.c **** 		UBaseT_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex has 
 135:FreeRTOS/queue.c **** 	} u;
 136:FreeRTOS/queue.c **** 
 137:FreeRTOS/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 138:FreeRTOS/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 139:FreeRTOS/queue.c **** 
 140:FreeRTOS/queue.c **** 	volatile UBaseT_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 141:FreeRTOS/queue.c **** 	UBaseT_t uxLength;			/*< The length of the queue defined as the number of items it will hold, not 
 142:FreeRTOS/queue.c **** 	UBaseT_t uxItemSize;			/*< The size of each items that the queue will hold. */
 143:FreeRTOS/queue.c **** 
 144:FreeRTOS/queue.c **** 	volatile BaseT_t xRxLock;	/*< Stores the number of items received from the queue (removed from the
 145:FreeRTOS/queue.c **** 	volatile BaseT_t xTxLock;	/*< Stores the number of items transmitted to the queue (added to the qu
 146:FreeRTOS/queue.c **** 
 147:FreeRTOS/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 148:FreeRTOS/queue.c **** 		UBaseT_t uxQueueNumber;
 149:FreeRTOS/queue.c **** 		uint8_t ucQueueType;
 150:FreeRTOS/queue.c **** 	#endif
 151:FreeRTOS/queue.c **** 
 152:FreeRTOS/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 153:FreeRTOS/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 154:FreeRTOS/queue.c **** 	#endif
 155:FreeRTOS/queue.c **** 
 156:FreeRTOS/queue.c **** } xQUEUE;
 157:FreeRTOS/queue.c **** 
 158:FreeRTOS/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 159:FreeRTOS/queue.c **** name below to enable the use of older kernel aware debuggers. */
 160:FreeRTOS/queue.c **** typedef xQUEUE Queue_t;
 161:FreeRTOS/queue.c **** 
 162:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 163:FreeRTOS/queue.c **** 
 164:FreeRTOS/queue.c **** /*
 165:FreeRTOS/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 166:FreeRTOS/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 167:FreeRTOS/queue.c ****  */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 5


 168:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 169:FreeRTOS/queue.c **** 
 170:FreeRTOS/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 171:FreeRTOS/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 172:FreeRTOS/queue.c **** 	more user friendly. */
 173:FreeRTOS/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 174:FreeRTOS/queue.c **** 	{
 175:FreeRTOS/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 176:FreeRTOS/queue.c **** 		QueueHandle_t xHandle;
 177:FreeRTOS/queue.c **** 	} xQueueRegistryItem;
 178:FreeRTOS/queue.c **** 
 179:FreeRTOS/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 180:FreeRTOS/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 181:FreeRTOS/queue.c **** 	debuggers. */
 182:FreeRTOS/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 183:FreeRTOS/queue.c **** 
 184:FreeRTOS/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 185:FreeRTOS/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 186:FreeRTOS/queue.c **** 	array position being vacant. */
 187:FreeRTOS/queue.c **** 	QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 188:FreeRTOS/queue.c **** 
 189:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 190:FreeRTOS/queue.c **** 
 191:FreeRTOS/queue.c **** /*
 192:FreeRTOS/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 193:FreeRTOS/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 194:FreeRTOS/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 195:FreeRTOS/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 196:FreeRTOS/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 197:FreeRTOS/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 198:FreeRTOS/queue.c ****  */
 199:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 200:FreeRTOS/queue.c **** 
 201:FreeRTOS/queue.c **** /*
 202:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 203:FreeRTOS/queue.c ****  *
 204:FreeRTOS/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 205:FreeRTOS/queue.c ****  */
 206:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 207:FreeRTOS/queue.c **** 
 208:FreeRTOS/queue.c **** /*
 209:FreeRTOS/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 210:FreeRTOS/queue.c ****  *
 211:FreeRTOS/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 212:FreeRTOS/queue.c ****  */
 213:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 214:FreeRTOS/queue.c **** 
 215:FreeRTOS/queue.c **** /*
 216:FreeRTOS/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 217:FreeRTOS/queue.c ****  * back of the queue.
 218:FreeRTOS/queue.c ****  */
 219:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
 220:FreeRTOS/queue.c **** 
 221:FreeRTOS/queue.c **** /*
 222:FreeRTOS/queue.c ****  * Copies an item out of a queue.
 223:FreeRTOS/queue.c ****  */
 224:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 6


 225:FreeRTOS/queue.c **** 
 226:FreeRTOS/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 227:FreeRTOS/queue.c **** 	/*
 228:FreeRTOS/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 229:FreeRTOS/queue.c **** 	 * the queue set that the queue contains data.
 230:FreeRTOS/queue.c **** 	 */
 231:FreeRTOS/queue.c **** 	static BaseT_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseT_t xCopyPosit
 232:FreeRTOS/queue.c **** #endif
 233:FreeRTOS/queue.c **** 
 234:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 235:FreeRTOS/queue.c **** 
 236:FreeRTOS/queue.c **** /*
 237:FreeRTOS/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 238:FreeRTOS/queue.c ****  * accessing the queue event lists.
 239:FreeRTOS/queue.c ****  */
 240:FreeRTOS/queue.c **** #define prvLockQueue( pxQueue )								\
 241:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();									\
 242:FreeRTOS/queue.c **** 	{														\
 243:FreeRTOS/queue.c **** 		if( ( pxQueue )->xRxLock == queueUNLOCKED )			\
 244:FreeRTOS/queue.c **** 		{													\
 245:FreeRTOS/queue.c **** 			( pxQueue )->xRxLock = queueLOCKED_UNMODIFIED;	\
 246:FreeRTOS/queue.c **** 		}													\
 247:FreeRTOS/queue.c **** 		if( ( pxQueue )->xTxLock == queueUNLOCKED )			\
 248:FreeRTOS/queue.c **** 		{													\
 249:FreeRTOS/queue.c **** 			( pxQueue )->xTxLock = queueLOCKED_UNMODIFIED;	\
 250:FreeRTOS/queue.c **** 		}													\
 251:FreeRTOS/queue.c **** 	}														\
 252:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL()
 253:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 254:FreeRTOS/queue.c **** 
 255:FreeRTOS/queue.c **** BaseT_t xQueueGenericReset( QueueHandle_t xQueue, BaseT_t xNewQueue )
 256:FreeRTOS/queue.c **** {
  62              		.loc 1 256 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 16
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66 0000 80B5     		push	{r7, lr}	@
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 84B0     		sub	sp, sp, #16	@,,
  71              		.cfi_def_cfa_offset 24
  72 0004 00AF     		add	r7, sp, #0	@,,
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
  75 0008 3960     		str	r1, [r7]	@ xNewQueue, xNewQueue
 257:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  76              		.loc 1 257 0
  77 000a 7B68     		ldr	r3, [r7, #4]	@ tmp129, xQueue
  78 000c FB60     		str	r3, [r7, #12]	@ tmp129, pxQueue
 258:FreeRTOS/queue.c **** 
 259:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
  79              		.loc 1 259 0
  80 000e FB68     		ldr	r3, [r7, #12]	@ tmp130, pxQueue
  81 0010 002B     		cmp	r3, #0	@ tmp130,
  82 0012 02D1     		bne	.L2	@,
  83              		.loc 1 259 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 7


  84 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
  85              	.L3:
  86 0018 FEE7     		b	.L3	@
  87              	.L2:
 260:FreeRTOS/queue.c **** 
 261:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
  88              		.loc 1 261 0 is_stmt 1
  89 001a FFF7FEFF 		bl	vPortEnterCritical	@
 262:FreeRTOS/queue.c **** 	{
 263:FreeRTOS/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  90              		.loc 1 263 0
  91 001e FB68     		ldr	r3, [r7, #12]	@ tmp131, pxQueue
  92 0020 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
  93 0022 FB68     		ldr	r3, [r7, #12]	@ tmp132, pxQueue
  94 0024 DB6B     		ldr	r3, [r3, #60]	@ D.5941, pxQueue_2->uxLength
  95 0026 F968     		ldr	r1, [r7, #12]	@ tmp133, pxQueue
  96 0028 096C     		ldr	r1, [r1, #64]	@ D.5941, pxQueue_2->uxItemSize
  97 002a 01FB03F3 		mul	r3, r1, r3	@ D.5941, D.5941, D.5941
  98 002e 1A44     		add	r2, r2, r3	@ D.5940, D.5941
  99 0030 FB68     		ldr	r3, [r7, #12]	@ tmp134, pxQueue
 100 0032 5A60     		str	r2, [r3, #4]	@ D.5940, pxQueue_2->pcTail
 264:FreeRTOS/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 101              		.loc 1 264 0
 102 0034 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxQueue
 103 0036 0022     		movs	r2, #0	@ tmp136,
 104 0038 9A63     		str	r2, [r3, #56]	@ tmp136, pxQueue_2->uxMessagesWaiting
 265:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 105              		.loc 1 265 0
 106 003a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxQueue
 107 003c 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
 108 003e FB68     		ldr	r3, [r7, #12]	@ tmp138, pxQueue
 109 0040 9A60     		str	r2, [r3, #8]	@ D.5940, pxQueue_2->pcWriteTo
 266:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseT_t ) 1U ) * pxQueue->ux
 110              		.loc 1 266 0
 111 0042 FB68     		ldr	r3, [r7, #12]	@ tmp139, pxQueue
 112 0044 1A68     		ldr	r2, [r3]	@ D.5940, pxQueue_2->pcHead
 113 0046 FB68     		ldr	r3, [r7, #12]	@ tmp140, pxQueue
 114 0048 DB6B     		ldr	r3, [r3, #60]	@ D.5941, pxQueue_2->uxLength
 115 004a 013B     		subs	r3, r3, #1	@ D.5941, D.5941,
 116 004c F968     		ldr	r1, [r7, #12]	@ tmp141, pxQueue
 117 004e 096C     		ldr	r1, [r1, #64]	@ D.5941, pxQueue_2->uxItemSize
 118 0050 01FB03F3 		mul	r3, r1, r3	@ D.5941, D.5941, D.5941
 119 0054 1A44     		add	r2, r2, r3	@ D.5940, D.5941
 120 0056 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 121 0058 DA60     		str	r2, [r3, #12]	@ D.5940, pxQueue_2->u.pcReadFrom
 267:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 122              		.loc 1 267 0
 123 005a FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
 124 005c 4FF0FF32 		mov	r2, #-1	@ tmp144,
 125 0060 5A64     		str	r2, [r3, #68]	@ tmp144, pxQueue_2->xRxLock
 268:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 126              		.loc 1 268 0
 127 0062 FB68     		ldr	r3, [r7, #12]	@ tmp145, pxQueue
 128 0064 4FF0FF32 		mov	r2, #-1	@ tmp146,
 129 0068 9A64     		str	r2, [r3, #72]	@ tmp146, pxQueue_2->xTxLock
 269:FreeRTOS/queue.c **** 
 270:FreeRTOS/queue.c **** 		if( xNewQueue == pdFALSE )
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 8


 130              		.loc 1 270 0
 131 006a 3B68     		ldr	r3, [r7]	@ tmp147, xNewQueue
 132 006c 002B     		cmp	r3, #0	@ tmp147,
 133 006e 0ED1     		bne	.L4	@,
 271:FreeRTOS/queue.c **** 		{
 272:FreeRTOS/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 273:FreeRTOS/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 274:FreeRTOS/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 275:FreeRTOS/queue.c **** 			the queue, then one should be unblocked as after this function exits
 276:FreeRTOS/queue.c **** 			it will be possible to write to it. */
 277:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 134              		.loc 1 277 0
 135 0070 FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 136 0072 1B69     		ldr	r3, [r3, #16]	@ D.5941, pxQueue_2->xTasksWaitingToSend.uxNumberOfItems
 137 0074 002B     		cmp	r3, #0	@ D.5941,
 138 0076 14D0     		beq	.L5	@,
 278:FreeRTOS/queue.c **** 			{
 279:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 139              		.loc 1 279 0
 140 0078 FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 141 007a 1033     		adds	r3, r3, #16	@ D.5942, tmp149,
 142 007c 1846     		mov	r0, r3	@, D.5942
 143 007e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 144 0082 0346     		mov	r3, r0	@ D.5943,
 145 0084 012B     		cmp	r3, #1	@ D.5943,
 146 0086 0CD1     		bne	.L5	@,
 280:FreeRTOS/queue.c **** 				{
 281:FreeRTOS/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 147              		.loc 1 281 0
 148 0088 FFF7FEFF 		bl	vPortYield	@
 149 008c 09E0     		b	.L5	@
 150              	.L4:
 282:FreeRTOS/queue.c **** 				}
 283:FreeRTOS/queue.c **** 				else
 284:FreeRTOS/queue.c **** 				{
 285:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 286:FreeRTOS/queue.c **** 				}
 287:FreeRTOS/queue.c **** 			}
 288:FreeRTOS/queue.c **** 			else
 289:FreeRTOS/queue.c **** 			{
 290:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 291:FreeRTOS/queue.c **** 			}
 292:FreeRTOS/queue.c **** 		}
 293:FreeRTOS/queue.c **** 		else
 294:FreeRTOS/queue.c **** 		{
 295:FreeRTOS/queue.c **** 			/* Ensure the event queues start in the correct state. */
 296:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 151              		.loc 1 296 0
 152 008e FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 153 0090 1033     		adds	r3, r3, #16	@ D.5942, tmp150,
 154 0092 1846     		mov	r0, r3	@, D.5942
 155 0094 FFF7FEFF 		bl	vListInitialise	@
 297:FreeRTOS/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 156              		.loc 1 297 0
 157 0098 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 158 009a 2433     		adds	r3, r3, #36	@ D.5942, tmp151,
 159 009c 1846     		mov	r0, r3	@, D.5942
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 9


 160 009e FFF7FEFF 		bl	vListInitialise	@
 161              	.L5:
 298:FreeRTOS/queue.c **** 		}
 299:FreeRTOS/queue.c **** 	}
 300:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 162              		.loc 1 300 0
 163 00a2 FFF7FEFF 		bl	vPortExitCritical	@
 301:FreeRTOS/queue.c **** 
 302:FreeRTOS/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 303:FreeRTOS/queue.c **** 	versions. */
 304:FreeRTOS/queue.c **** 	return pdPASS;
 164              		.loc 1 304 0
 165 00a6 0123     		movs	r3, #1	@ D.5944,
 305:FreeRTOS/queue.c **** }
 166              		.loc 1 305 0
 167 00a8 1846     		mov	r0, r3	@, <retval>
 168 00aa 1037     		adds	r7, r7, #16	@,,
 169              		.cfi_def_cfa_offset 8
 170 00ac BD46     		mov	sp, r7	@,
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed	@
 173 00ae 80BD     		pop	{r7, pc}	@
 174              		.cfi_endproc
 175              	.LFE1:
 176              		.size	xQueueGenericReset, .-xQueueGenericReset
 177              		.section	.text.xQueueGenericCreate,"ax",%progbits
 178              		.align	2
 179              		.global	xQueueGenericCreate
 180              		.thumb
 181              		.thumb_func
 182              		.type	xQueueGenericCreate, %function
 183              	xQueueGenericCreate:
 184              	.LFB2:
 306:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 307:FreeRTOS/queue.c **** 
 308:FreeRTOS/queue.c **** QueueHandle_t xQueueGenericCreate( const UBaseT_t uxQueueLength, const UBaseT_t uxItemSize, const u
 309:FreeRTOS/queue.c **** {
 185              		.loc 1 309 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 32
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}	@
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 88B0     		sub	sp, sp, #32	@,,
 194              		.cfi_def_cfa_offset 40
 195 0004 00AF     		add	r7, sp, #0	@,,
 196              		.cfi_def_cfa_register 7
 197 0006 F860     		str	r0, [r7, #12]	@ uxQueueLength, uxQueueLength
 198 0008 B960     		str	r1, [r7, #8]	@ uxItemSize, uxItemSize
 199 000a 1346     		mov	r3, r2	@ tmp115, ucQueueType
 200 000c FB71     		strb	r3, [r7, #7]	@ tmp116, ucQueueType
 310:FreeRTOS/queue.c **** Queue_t *pxNewQueue;
 311:FreeRTOS/queue.c **** size_t xQueueSizeInBytes;
 312:FreeRTOS/queue.c **** QueueHandle_t xReturn = NULL;
 201              		.loc 1 312 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 10


 202 000e 0023     		movs	r3, #0	@ tmp117,
 203 0010 FB61     		str	r3, [r7, #28]	@ tmp117, xReturn
 313:FreeRTOS/queue.c **** 
 314:FreeRTOS/queue.c **** 	/* Remove compiler warnings about unused parameters should
 315:FreeRTOS/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 316:FreeRTOS/queue.c **** 	( void ) ucQueueType;
 317:FreeRTOS/queue.c **** 
 318:FreeRTOS/queue.c **** 	/* Allocate the new queue structure. */
 319:FreeRTOS/queue.c **** 	if( uxQueueLength > ( UBaseT_t ) 0 )
 204              		.loc 1 319 0
 205 0012 FB68     		ldr	r3, [r7, #12]	@ tmp118, uxQueueLength
 206 0014 002B     		cmp	r3, #0	@ tmp118,
 207 0016 2AD0     		beq	.L8	@,
 320:FreeRTOS/queue.c **** 	{
 321:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 208              		.loc 1 321 0
 209 0018 5420     		movs	r0, #84	@,
 210 001a FFF7FEFF 		bl	pvPortMalloc	@
 211 001e B861     		str	r0, [r7, #24]	@, pxNewQueue
 322:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 212              		.loc 1 322 0
 213 0020 BB69     		ldr	r3, [r7, #24]	@ tmp119, pxNewQueue
 214 0022 002B     		cmp	r3, #0	@ tmp119,
 215 0024 23D0     		beq	.L8	@,
 323:FreeRTOS/queue.c **** 		{
 324:FreeRTOS/queue.c **** 			/* Create the list of pointers to queue items.  The queue is one byte
 325:FreeRTOS/queue.c **** 			longer than asked for to make wrap checking easier/faster. */
 326:FreeRTOS/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1; /*lint !e961 MISRA
 216              		.loc 1 326 0
 217 0026 FB68     		ldr	r3, [r7, #12]	@ tmp120, uxQueueLength
 218 0028 BA68     		ldr	r2, [r7, #8]	@ tmp121, uxItemSize
 219 002a 02FB03F3 		mul	r3, r2, r3	@ D.5945, tmp121, tmp120
 220 002e 0133     		adds	r3, r3, #1	@ tmp122, D.5945,
 221 0030 7B61     		str	r3, [r7, #20]	@ tmp122, xQueueSizeInBytes
 327:FreeRTOS/queue.c **** 
 328:FreeRTOS/queue.c **** 			pxNewQueue->pcHead = ( int8_t * ) pvPortMalloc( xQueueSizeInBytes );
 222              		.loc 1 328 0
 223 0032 7869     		ldr	r0, [r7, #20]	@, xQueueSizeInBytes
 224 0034 FFF7FEFF 		bl	pvPortMalloc	@
 225 0038 0246     		mov	r2, r0	@ D.5946,
 226 003a BB69     		ldr	r3, [r7, #24]	@ tmp123, pxNewQueue
 227 003c 1A60     		str	r2, [r3]	@ D.5946, pxNewQueue_5->pcHead
 329:FreeRTOS/queue.c **** 			if( pxNewQueue->pcHead != NULL )
 228              		.loc 1 329 0
 229 003e BB69     		ldr	r3, [r7, #24]	@ tmp124, pxNewQueue
 230 0040 1B68     		ldr	r3, [r3]	@ D.5947, pxNewQueue_5->pcHead
 231 0042 002B     		cmp	r3, #0	@ D.5947,
 232 0044 10D0     		beq	.L9	@,
 330:FreeRTOS/queue.c **** 			{
 331:FreeRTOS/queue.c **** 				/* Initialise the queue members as described above where the
 332:FreeRTOS/queue.c **** 				queue type is defined. */
 333:FreeRTOS/queue.c **** 				pxNewQueue->uxLength = uxQueueLength;
 233              		.loc 1 333 0
 234 0046 BB69     		ldr	r3, [r7, #24]	@ tmp125, pxNewQueue
 235 0048 FA68     		ldr	r2, [r7, #12]	@ tmp126, uxQueueLength
 236 004a DA63     		str	r2, [r3, #60]	@ tmp126, pxNewQueue_5->uxLength
 334:FreeRTOS/queue.c **** 				pxNewQueue->uxItemSize = uxItemSize;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 11


 237              		.loc 1 334 0
 238 004c BB69     		ldr	r3, [r7, #24]	@ tmp127, pxNewQueue
 239 004e BA68     		ldr	r2, [r7, #8]	@ tmp128, uxItemSize
 240 0050 1A64     		str	r2, [r3, #64]	@ tmp128, pxNewQueue_5->uxItemSize
 335:FreeRTOS/queue.c **** 				( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 241              		.loc 1 335 0
 242 0052 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 243 0054 0121     		movs	r1, #1	@,
 244 0056 FFF7FEFF 		bl	xQueueGenericReset	@
 336:FreeRTOS/queue.c **** 
 337:FreeRTOS/queue.c **** 				#if ( configUSE_TRACE_FACILITY == 1 )
 338:FreeRTOS/queue.c **** 				{
 339:FreeRTOS/queue.c **** 					pxNewQueue->ucQueueType = ucQueueType;
 245              		.loc 1 339 0
 246 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxNewQueue
 247 005c FA79     		ldrb	r2, [r7, #7]	@ tmp130, ucQueueType
 248 005e 83F85020 		strb	r2, [r3, #80]	@ tmp130, pxNewQueue_5->ucQueueType
 340:FreeRTOS/queue.c **** 				}
 341:FreeRTOS/queue.c **** 				#endif /* configUSE_TRACE_FACILITY */
 342:FreeRTOS/queue.c **** 
 343:FreeRTOS/queue.c **** 				#if( configUSE_QUEUE_SETS == 1 )
 344:FreeRTOS/queue.c **** 				{
 345:FreeRTOS/queue.c **** 					pxNewQueue->pxQueueSetContainer = NULL;
 346:FreeRTOS/queue.c **** 				}
 347:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 348:FreeRTOS/queue.c **** 
 349:FreeRTOS/queue.c **** 				traceQUEUE_CREATE( pxNewQueue );
 350:FreeRTOS/queue.c **** 				xReturn = pxNewQueue;
 249              		.loc 1 350 0
 250 0062 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxNewQueue
 251 0064 FB61     		str	r3, [r7, #28]	@ tmp131, xReturn
 252 0066 02E0     		b	.L8	@
 253              	.L9:
 351:FreeRTOS/queue.c **** 			}
 352:FreeRTOS/queue.c **** 			else
 353:FreeRTOS/queue.c **** 			{
 354:FreeRTOS/queue.c **** 				traceQUEUE_CREATE_FAILED( ucQueueType );
 355:FreeRTOS/queue.c **** 				vPortFree( pxNewQueue );
 254              		.loc 1 355 0
 255 0068 B869     		ldr	r0, [r7, #24]	@, pxNewQueue
 256 006a FFF7FEFF 		bl	vPortFree	@
 257              	.L8:
 356:FreeRTOS/queue.c **** 			}
 357:FreeRTOS/queue.c **** 		}
 358:FreeRTOS/queue.c **** 		else
 359:FreeRTOS/queue.c **** 		{
 360:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
 361:FreeRTOS/queue.c **** 		}
 362:FreeRTOS/queue.c **** 	}
 363:FreeRTOS/queue.c **** 	else
 364:FreeRTOS/queue.c **** 	{
 365:FreeRTOS/queue.c **** 		mtCOVERAGE_TEST_MARKER();
 366:FreeRTOS/queue.c **** 	}
 367:FreeRTOS/queue.c **** 
 368:FreeRTOS/queue.c **** 	configASSERT( xReturn );
 258              		.loc 1 368 0
 259 006e FB69     		ldr	r3, [r7, #28]	@ tmp132, xReturn
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 12


 260 0070 002B     		cmp	r3, #0	@ tmp132,
 261 0072 02D1     		bne	.L11	@,
 262              		.loc 1 368 0 is_stmt 0 discriminator 1
 263 0074 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 264              	.L12:
 265              		.loc 1 368 0 discriminator 2
 266 0078 FEE7     		b	.L12	@
 267              	.L11:
 369:FreeRTOS/queue.c **** 
 370:FreeRTOS/queue.c **** 	return xReturn;
 268              		.loc 1 370 0 is_stmt 1
 269 007a FB69     		ldr	r3, [r7, #28]	@ D.5948, xReturn
 371:FreeRTOS/queue.c **** }
 270              		.loc 1 371 0
 271 007c 1846     		mov	r0, r3	@, <retval>
 272 007e 2037     		adds	r7, r7, #32	@,,
 273              		.cfi_def_cfa_offset 8
 274 0080 BD46     		mov	sp, r7	@,
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed	@
 277 0082 80BD     		pop	{r7, pc}	@
 278              		.cfi_endproc
 279              	.LFE2:
 280              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 281              		.section	.text.xQueueCreateMutex,"ax",%progbits
 282              		.align	2
 283              		.global	xQueueCreateMutex
 284              		.thumb
 285              		.thumb_func
 286              		.type	xQueueCreateMutex, %function
 287              	xQueueCreateMutex:
 288              	.LFB3:
 372:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 373:FreeRTOS/queue.c **** 
 374:FreeRTOS/queue.c **** #if ( configUSE_MUTEXES == 1 )
 375:FreeRTOS/queue.c **** 
 376:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 377:FreeRTOS/queue.c **** 	{
 289              		.loc 1 377 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 16
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293 0000 80B5     		push	{r7, lr}	@
 294              		.cfi_def_cfa_offset 8
 295              		.cfi_offset 7, -8
 296              		.cfi_offset 14, -4
 297 0002 84B0     		sub	sp, sp, #16	@,,
 298              		.cfi_def_cfa_offset 24
 299 0004 00AF     		add	r7, sp, #0	@,,
 300              		.cfi_def_cfa_register 7
 301 0006 0346     		mov	r3, r0	@ tmp114, ucQueueType
 302 0008 FB71     		strb	r3, [r7, #7]	@ tmp115, ucQueueType
 378:FreeRTOS/queue.c **** 	Queue_t *pxNewQueue;
 379:FreeRTOS/queue.c **** 
 380:FreeRTOS/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 381:FreeRTOS/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 382:FreeRTOS/queue.c **** 		( void ) ucQueueType;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 13


 383:FreeRTOS/queue.c **** 
 384:FreeRTOS/queue.c **** 		/* Allocate the new queue structure. */
 385:FreeRTOS/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) );
 303              		.loc 1 385 0
 304 000a 5420     		movs	r0, #84	@,
 305 000c FFF7FEFF 		bl	pvPortMalloc	@
 306 0010 F860     		str	r0, [r7, #12]	@, pxNewQueue
 386:FreeRTOS/queue.c **** 		if( pxNewQueue != NULL )
 307              		.loc 1 386 0
 308 0012 FB68     		ldr	r3, [r7, #12]	@ tmp116, pxNewQueue
 309 0014 002B     		cmp	r3, #0	@ tmp116,
 310 0016 30D0     		beq	.L15	@,
 387:FreeRTOS/queue.c **** 		{
 388:FreeRTOS/queue.c **** 			/* Information required for priority inheritance. */
 389:FreeRTOS/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 311              		.loc 1 389 0
 312 0018 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxNewQueue
 313 001a 0022     		movs	r2, #0	@ tmp118,
 314 001c 5A60     		str	r2, [r3, #4]	@ tmp118, pxNewQueue_1->pcTail
 390:FreeRTOS/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 315              		.loc 1 390 0
 316 001e FB68     		ldr	r3, [r7, #12]	@ tmp119, pxNewQueue
 317 0020 0022     		movs	r2, #0	@ tmp120,
 318 0022 1A60     		str	r2, [r3]	@ tmp120, pxNewQueue_1->pcHead
 391:FreeRTOS/queue.c **** 
 392:FreeRTOS/queue.c **** 			/* Queues used as a mutex no data is actually copied into or out
 393:FreeRTOS/queue.c **** 			of the queue. */
 394:FreeRTOS/queue.c **** 			pxNewQueue->pcWriteTo = NULL;
 319              		.loc 1 394 0
 320 0024 FB68     		ldr	r3, [r7, #12]	@ tmp121, pxNewQueue
 321 0026 0022     		movs	r2, #0	@ tmp122,
 322 0028 9A60     		str	r2, [r3, #8]	@ tmp122, pxNewQueue_1->pcWriteTo
 395:FreeRTOS/queue.c **** 			pxNewQueue->u.pcReadFrom = NULL;
 323              		.loc 1 395 0
 324 002a FB68     		ldr	r3, [r7, #12]	@ tmp123, pxNewQueue
 325 002c 0022     		movs	r2, #0	@ tmp124,
 326 002e DA60     		str	r2, [r3, #12]	@ tmp124, pxNewQueue_1->u.pcReadFrom
 396:FreeRTOS/queue.c **** 
 397:FreeRTOS/queue.c **** 			/* Each mutex has a length of 1 (like a binary semaphore) and
 398:FreeRTOS/queue.c **** 			an item size of 0 as nothing is actually copied into or out
 399:FreeRTOS/queue.c **** 			of the mutex. */
 400:FreeRTOS/queue.c **** 			pxNewQueue->uxMessagesWaiting = ( UBaseT_t ) 0U;
 327              		.loc 1 400 0
 328 0030 FB68     		ldr	r3, [r7, #12]	@ tmp125, pxNewQueue
 329 0032 0022     		movs	r2, #0	@ tmp126,
 330 0034 9A63     		str	r2, [r3, #56]	@ tmp126, pxNewQueue_1->uxMessagesWaiting
 401:FreeRTOS/queue.c **** 			pxNewQueue->uxLength = ( UBaseT_t ) 1U;
 331              		.loc 1 401 0
 332 0036 FB68     		ldr	r3, [r7, #12]	@ tmp127, pxNewQueue
 333 0038 0122     		movs	r2, #1	@ tmp128,
 334 003a DA63     		str	r2, [r3, #60]	@ tmp128, pxNewQueue_1->uxLength
 402:FreeRTOS/queue.c **** 			pxNewQueue->uxItemSize = ( UBaseT_t ) 0U;
 335              		.loc 1 402 0
 336 003c FB68     		ldr	r3, [r7, #12]	@ tmp129, pxNewQueue
 337 003e 0022     		movs	r2, #0	@ tmp130,
 338 0040 1A64     		str	r2, [r3, #64]	@ tmp130, pxNewQueue_1->uxItemSize
 403:FreeRTOS/queue.c **** 			pxNewQueue->xRxLock = queueUNLOCKED;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 14


 339              		.loc 1 403 0
 340 0042 FB68     		ldr	r3, [r7, #12]	@ tmp131, pxNewQueue
 341 0044 4FF0FF32 		mov	r2, #-1	@ tmp132,
 342 0048 5A64     		str	r2, [r3, #68]	@ tmp132, pxNewQueue_1->xRxLock
 404:FreeRTOS/queue.c **** 			pxNewQueue->xTxLock = queueUNLOCKED;
 343              		.loc 1 404 0
 344 004a FB68     		ldr	r3, [r7, #12]	@ tmp133, pxNewQueue
 345 004c 4FF0FF32 		mov	r2, #-1	@ tmp134,
 346 0050 9A64     		str	r2, [r3, #72]	@ tmp134, pxNewQueue_1->xTxLock
 405:FreeRTOS/queue.c **** 
 406:FreeRTOS/queue.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 407:FreeRTOS/queue.c **** 			{
 408:FreeRTOS/queue.c **** 				pxNewQueue->ucQueueType = ucQueueType;
 347              		.loc 1 408 0
 348 0052 FB68     		ldr	r3, [r7, #12]	@ tmp135, pxNewQueue
 349 0054 FA79     		ldrb	r2, [r7, #7]	@ tmp136, ucQueueType
 350 0056 83F85020 		strb	r2, [r3, #80]	@ tmp136, pxNewQueue_1->ucQueueType
 409:FreeRTOS/queue.c **** 			}
 410:FreeRTOS/queue.c **** 			#endif
 411:FreeRTOS/queue.c **** 
 412:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
 413:FreeRTOS/queue.c **** 			{
 414:FreeRTOS/queue.c **** 				pxNewQueue->pxQueueSetContainer = NULL;
 415:FreeRTOS/queue.c **** 			}
 416:FreeRTOS/queue.c **** 			#endif
 417:FreeRTOS/queue.c **** 
 418:FreeRTOS/queue.c **** 			/* Ensure the event queues start with the correct state. */
 419:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToSend ) );
 351              		.loc 1 419 0
 352 005a FB68     		ldr	r3, [r7, #12]	@ tmp137, pxNewQueue
 353 005c 1033     		adds	r3, r3, #16	@ D.5949, tmp137,
 354 005e 1846     		mov	r0, r3	@, D.5949
 355 0060 FFF7FEFF 		bl	vListInitialise	@
 420:FreeRTOS/queue.c **** 			vListInitialise( &( pxNewQueue->xTasksWaitingToReceive ) );
 356              		.loc 1 420 0
 357 0064 FB68     		ldr	r3, [r7, #12]	@ tmp138, pxNewQueue
 358 0066 2433     		adds	r3, r3, #36	@ D.5949, tmp138,
 359 0068 1846     		mov	r0, r3	@, D.5949
 360 006a FFF7FEFF 		bl	vListInitialise	@
 421:FreeRTOS/queue.c **** 
 422:FreeRTOS/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 423:FreeRTOS/queue.c **** 
 424:FreeRTOS/queue.c **** 			/* Start with the semaphore in the expected state. */
 425:FreeRTOS/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickT_t ) 0U, queueSEND_TO_BACK );
 361              		.loc 1 425 0
 362 006e F868     		ldr	r0, [r7, #12]	@, pxNewQueue
 363 0070 0021     		movs	r1, #0	@,
 364 0072 0022     		movs	r2, #0	@,
 365 0074 0023     		movs	r3, #0	@,
 366 0076 FFF7FEFF 		bl	xQueueGenericSend	@
 367              	.L15:
 426:FreeRTOS/queue.c **** 		}
 427:FreeRTOS/queue.c **** 		else
 428:FreeRTOS/queue.c **** 		{
 429:FreeRTOS/queue.c **** 			traceCREATE_MUTEX_FAILED();
 430:FreeRTOS/queue.c **** 		}
 431:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 15


 432:FreeRTOS/queue.c **** 		configASSERT( pxNewQueue );
 368              		.loc 1 432 0
 369 007a FB68     		ldr	r3, [r7, #12]	@ tmp139, pxNewQueue
 370 007c 002B     		cmp	r3, #0	@ tmp139,
 371 007e 02D1     		bne	.L16	@,
 372              		.loc 1 432 0 is_stmt 0 discriminator 1
 373 0080 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 374              	.L17:
 375 0084 FEE7     		b	.L17	@
 376              	.L16:
 433:FreeRTOS/queue.c **** 		return pxNewQueue;
 377              		.loc 1 433 0 is_stmt 1
 378 0086 FB68     		ldr	r3, [r7, #12]	@ D.5950, pxNewQueue
 434:FreeRTOS/queue.c **** 	}
 379              		.loc 1 434 0
 380 0088 1846     		mov	r0, r3	@, <retval>
 381 008a 1037     		adds	r7, r7, #16	@,,
 382              		.cfi_def_cfa_offset 8
 383 008c BD46     		mov	sp, r7	@,
 384              		.cfi_def_cfa_register 13
 385              		@ sp needed	@
 386 008e 80BD     		pop	{r7, pc}	@
 387              		.cfi_endproc
 388              	.LFE3:
 389              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 390              		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 391              		.align	2
 392              		.global	xQueueGiveMutexRecursive
 393              		.thumb
 394              		.thumb_func
 395              		.type	xQueueGiveMutexRecursive, %function
 396              	xQueueGiveMutexRecursive:
 397              	.LFB4:
 435:FreeRTOS/queue.c **** 
 436:FreeRTOS/queue.c **** #endif /* configUSE_MUTEXES */
 437:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 438:FreeRTOS/queue.c **** 
 439:FreeRTOS/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 440:FreeRTOS/queue.c **** 
 441:FreeRTOS/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 442:FreeRTOS/queue.c **** 	{
 443:FreeRTOS/queue.c **** 	void *pxReturn;
 444:FreeRTOS/queue.c **** 
 445:FreeRTOS/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 446:FreeRTOS/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 447:FreeRTOS/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 448:FreeRTOS/queue.c **** 		identity of the mutex holder, as the holder may change between the
 449:FreeRTOS/queue.c **** 		following critical section exiting and the function returning. */
 450:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 451:FreeRTOS/queue.c **** 		{
 452:FreeRTOS/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 453:FreeRTOS/queue.c **** 			{
 454:FreeRTOS/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 455:FreeRTOS/queue.c **** 			}
 456:FreeRTOS/queue.c **** 			else
 457:FreeRTOS/queue.c **** 			{
 458:FreeRTOS/queue.c **** 				pxReturn = NULL;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 16


 459:FreeRTOS/queue.c **** 			}
 460:FreeRTOS/queue.c **** 		}
 461:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 462:FreeRTOS/queue.c **** 
 463:FreeRTOS/queue.c **** 		return pxReturn;
 464:FreeRTOS/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 465:FreeRTOS/queue.c **** 
 466:FreeRTOS/queue.c **** #endif
 467:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 468:FreeRTOS/queue.c **** 
 469:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 470:FreeRTOS/queue.c **** 
 471:FreeRTOS/queue.c **** 	BaseT_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 472:FreeRTOS/queue.c **** 	{
 398              		.loc 1 472 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 16
 401              		@ frame_needed = 1, uses_anonymous_args = 0
 402 0000 90B5     		push	{r4, r7, lr}	@
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 85B0     		sub	sp, sp, #20	@,,
 408              		.cfi_def_cfa_offset 32
 409 0004 00AF     		add	r7, sp, #0	@,,
 410              		.cfi_def_cfa_register 7
 411 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 473:FreeRTOS/queue.c **** 	BaseT_t xReturn;
 474:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 412              		.loc 1 474 0
 413 0008 7B68     		ldr	r3, [r7, #4]	@ tmp117, xMutex
 414 000a BB60     		str	r3, [r7, #8]	@ tmp117, pxMutex
 475:FreeRTOS/queue.c **** 
 476:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 415              		.loc 1 476 0
 416 000c BB68     		ldr	r3, [r7, #8]	@ tmp118, pxMutex
 417 000e 002B     		cmp	r3, #0	@ tmp118,
 418 0010 02D1     		bne	.L20	@,
 419              		.loc 1 476 0 is_stmt 0 discriminator 1
 420 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 421              	.L21:
 422 0016 FEE7     		b	.L21	@
 423              	.L20:
 477:FreeRTOS/queue.c **** 
 478:FreeRTOS/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 479:FreeRTOS/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 480:FreeRTOS/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 481:FreeRTOS/queue.c **** 		this is the only condition we are interested in it does not matter if
 482:FreeRTOS/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 483:FreeRTOS/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 484:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 424              		.loc 1 484 0 is_stmt 1
 425 0018 BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 426 001a 5C68     		ldr	r4, [r3, #4]	@ D.5951, pxMutex_3->pcTail
 427 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
 428 0020 0346     		mov	r3, r0	@ D.5952,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 17


 429 0022 9C42     		cmp	r4, r3	@ D.5951, D.5952
 430 0024 11D1     		bne	.L22	@,
 485:FreeRTOS/queue.c **** 		{
 486:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 487:FreeRTOS/queue.c **** 
 488:FreeRTOS/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 489:FreeRTOS/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 490:FreeRTOS/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 491:FreeRTOS/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 492:FreeRTOS/queue.c **** 			uxRecursiveCallCount member. */
 493:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 431              		.loc 1 493 0
 432 0026 BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 433 0028 DB68     		ldr	r3, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 434 002a 5A1E     		subs	r2, r3, #1	@ D.5953, D.5953,
 435 002c BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 436 002e DA60     		str	r2, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 494:FreeRTOS/queue.c **** 
 495:FreeRTOS/queue.c **** 			/* Have we unwound the call count? */
 496:FreeRTOS/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseT_t ) 0 )
 437              		.loc 1 496 0
 438 0030 BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 439 0032 DB68     		ldr	r3, [r3, #12]	@ D.5953, pxMutex_3->u.uxRecursiveCallCount
 440 0034 002B     		cmp	r3, #0	@ D.5953,
 441 0036 05D1     		bne	.L23	@,
 497:FreeRTOS/queue.c **** 			{
 498:FreeRTOS/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 499:FreeRTOS/queue.c **** 				task that might be waiting to access the mutex. */
 500:FreeRTOS/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 442              		.loc 1 500 0
 443 0038 B868     		ldr	r0, [r7, #8]	@, pxMutex
 444 003a 0021     		movs	r1, #0	@,
 445 003c 0022     		movs	r2, #0	@,
 446 003e 0023     		movs	r3, #0	@,
 447 0040 FFF7FEFF 		bl	xQueueGenericSend	@
 448              	.L23:
 501:FreeRTOS/queue.c **** 			}
 502:FreeRTOS/queue.c **** 			else
 503:FreeRTOS/queue.c **** 			{
 504:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 505:FreeRTOS/queue.c **** 			}
 506:FreeRTOS/queue.c **** 
 507:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 449              		.loc 1 507 0
 450 0044 0123     		movs	r3, #1	@ tmp123,
 451 0046 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 452 0048 01E0     		b	.L24	@
 453              	.L22:
 508:FreeRTOS/queue.c **** 		}
 509:FreeRTOS/queue.c **** 		else
 510:FreeRTOS/queue.c **** 		{
 511:FreeRTOS/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 512:FreeRTOS/queue.c **** 			holder. */
 513:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 454              		.loc 1 513 0
 455 004a 0023     		movs	r3, #0	@ tmp124,
 456 004c FB60     		str	r3, [r7, #12]	@ tmp124, xReturn
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 18


 457              	.L24:
 514:FreeRTOS/queue.c **** 
 515:FreeRTOS/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 516:FreeRTOS/queue.c **** 		}
 517:FreeRTOS/queue.c **** 
 518:FreeRTOS/queue.c **** 		return xReturn;
 458              		.loc 1 518 0
 459 004e FB68     		ldr	r3, [r7, #12]	@ D.5954, xReturn
 519:FreeRTOS/queue.c **** 	}
 460              		.loc 1 519 0
 461 0050 1846     		mov	r0, r3	@, <retval>
 462 0052 1437     		adds	r7, r7, #20	@,,
 463              		.cfi_def_cfa_offset 12
 464 0054 BD46     		mov	sp, r7	@,
 465              		.cfi_def_cfa_register 13
 466              		@ sp needed	@
 467 0056 90BD     		pop	{r4, r7, pc}	@
 468              		.cfi_endproc
 469              	.LFE4:
 470              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 471              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 472              		.align	2
 473              		.global	xQueueTakeMutexRecursive
 474              		.thumb
 475              		.thumb_func
 476              		.type	xQueueTakeMutexRecursive, %function
 477              	xQueueTakeMutexRecursive:
 478              	.LFB5:
 520:FreeRTOS/queue.c **** 
 521:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 522:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 523:FreeRTOS/queue.c **** 
 524:FreeRTOS/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 525:FreeRTOS/queue.c **** 
 526:FreeRTOS/queue.c **** 	BaseT_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickT_t xTicksToWait )
 527:FreeRTOS/queue.c **** 	{
 479              		.loc 1 527 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 16
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 90B5     		push	{r4, r7, lr}	@
 484              		.cfi_def_cfa_offset 12
 485              		.cfi_offset 4, -12
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 85B0     		sub	sp, sp, #20	@,,
 489              		.cfi_def_cfa_offset 32
 490 0004 00AF     		add	r7, sp, #0	@,,
 491              		.cfi_def_cfa_register 7
 492 0006 7860     		str	r0, [r7, #4]	@ xMutex, xMutex
 493 0008 3960     		str	r1, [r7]	@ xTicksToWait, xTicksToWait
 528:FreeRTOS/queue.c **** 	BaseT_t xReturn;
 529:FreeRTOS/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 494              		.loc 1 529 0
 495 000a 7B68     		ldr	r3, [r7, #4]	@ tmp118, xMutex
 496 000c BB60     		str	r3, [r7, #8]	@ tmp118, pxMutex
 530:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 19


 531:FreeRTOS/queue.c **** 		configASSERT( pxMutex );
 497              		.loc 1 531 0
 498 000e BB68     		ldr	r3, [r7, #8]	@ tmp119, pxMutex
 499 0010 002B     		cmp	r3, #0	@ tmp119,
 500 0012 02D1     		bne	.L27	@,
 501              		.loc 1 531 0 is_stmt 0 discriminator 1
 502 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 503              	.L28:
 504 0018 FEE7     		b	.L28	@
 505              	.L27:
 532:FreeRTOS/queue.c **** 
 533:FreeRTOS/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 534:FreeRTOS/queue.c **** 		xQueueGiveMutexRecursive(). */
 535:FreeRTOS/queue.c **** 
 536:FreeRTOS/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 537:FreeRTOS/queue.c **** 
 538:FreeRTOS/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 506              		.loc 1 538 0 is_stmt 1
 507 001a BB68     		ldr	r3, [r7, #8]	@ tmp120, pxMutex
 508 001c 5C68     		ldr	r4, [r3, #4]	@ D.5955, pxMutex_3->pcTail
 509 001e FFF7FEFF 		bl	xTaskGetCurrentTaskHandle	@
 510 0022 0346     		mov	r3, r0	@ D.5956,
 511 0024 9C42     		cmp	r4, r3	@ D.5955, D.5956
 512 0026 07D1     		bne	.L29	@,
 539:FreeRTOS/queue.c **** 		{
 540:FreeRTOS/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 513              		.loc 1 540 0
 514 0028 BB68     		ldr	r3, [r7, #8]	@ tmp121, pxMutex
 515 002a DB68     		ldr	r3, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 516 002c 5A1C     		adds	r2, r3, #1	@ D.5957, D.5957,
 517 002e BB68     		ldr	r3, [r7, #8]	@ tmp122, pxMutex
 518 0030 DA60     		str	r2, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 541:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 519              		.loc 1 541 0
 520 0032 0123     		movs	r3, #1	@ tmp123,
 521 0034 FB60     		str	r3, [r7, #12]	@ tmp123, xReturn
 522 0036 0EE0     		b	.L30	@
 523              	.L29:
 542:FreeRTOS/queue.c **** 		}
 543:FreeRTOS/queue.c **** 		else
 544:FreeRTOS/queue.c **** 		{
 545:FreeRTOS/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 524              		.loc 1 545 0
 525 0038 B868     		ldr	r0, [r7, #8]	@, pxMutex
 526 003a 0021     		movs	r1, #0	@,
 527 003c 3A68     		ldr	r2, [r7]	@, xTicksToWait
 528 003e 0023     		movs	r3, #0	@,
 529 0040 FFF7FEFF 		bl	xQueueGenericReceive	@
 530 0044 F860     		str	r0, [r7, #12]	@, xReturn
 546:FreeRTOS/queue.c **** 
 547:FreeRTOS/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 548:FreeRTOS/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 549:FreeRTOS/queue.c **** 			before reaching here. */
 550:FreeRTOS/queue.c **** 			if( xReturn == pdPASS )
 531              		.loc 1 550 0
 532 0046 FB68     		ldr	r3, [r7, #12]	@ tmp124, xReturn
 533 0048 012B     		cmp	r3, #1	@ tmp124,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 20


 534 004a 04D1     		bne	.L30	@,
 551:FreeRTOS/queue.c **** 			{
 552:FreeRTOS/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 535              		.loc 1 552 0
 536 004c BB68     		ldr	r3, [r7, #8]	@ tmp125, pxMutex
 537 004e DB68     		ldr	r3, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 538 0050 5A1C     		adds	r2, r3, #1	@ D.5957, D.5957,
 539 0052 BB68     		ldr	r3, [r7, #8]	@ tmp126, pxMutex
 540 0054 DA60     		str	r2, [r3, #12]	@ D.5957, pxMutex_3->u.uxRecursiveCallCount
 541              	.L30:
 553:FreeRTOS/queue.c **** 			}
 554:FreeRTOS/queue.c **** 			else
 555:FreeRTOS/queue.c **** 			{
 556:FreeRTOS/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 557:FreeRTOS/queue.c **** 			}
 558:FreeRTOS/queue.c **** 		}
 559:FreeRTOS/queue.c **** 
 560:FreeRTOS/queue.c **** 		return xReturn;
 542              		.loc 1 560 0
 543 0056 FB68     		ldr	r3, [r7, #12]	@ D.5958, xReturn
 561:FreeRTOS/queue.c **** 	}
 544              		.loc 1 561 0
 545 0058 1846     		mov	r0, r3	@, <retval>
 546 005a 1437     		adds	r7, r7, #20	@,,
 547              		.cfi_def_cfa_offset 12
 548 005c BD46     		mov	sp, r7	@,
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed	@
 551 005e 90BD     		pop	{r4, r7, pc}	@
 552              		.cfi_endproc
 553              	.LFE5:
 554              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 555              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 556              		.align	2
 557              		.global	xQueueCreateCountingSemaphore
 558              		.thumb
 559              		.thumb_func
 560              		.type	xQueueCreateCountingSemaphore, %function
 561              	xQueueCreateCountingSemaphore:
 562              	.LFB6:
 562:FreeRTOS/queue.c **** 
 563:FreeRTOS/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 564:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 565:FreeRTOS/queue.c **** 
 566:FreeRTOS/queue.c **** #if ( configUSE_COUNTING_SEMAPHORES == 1 )
 567:FreeRTOS/queue.c **** 
 568:FreeRTOS/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseT_t uxMaxCount, const UBaseT_t uxInitialCo
 569:FreeRTOS/queue.c **** 	{
 563              		.loc 1 569 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 16
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}	@
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 84B0     		sub	sp, sp, #16	@,,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 21


 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0	@,,
 574              		.cfi_def_cfa_register 7
 575 0006 7860     		str	r0, [r7, #4]	@ uxMaxCount, uxMaxCount
 576 0008 3960     		str	r1, [r7]	@ uxInitialCount, uxInitialCount
 570:FreeRTOS/queue.c **** 	QueueHandle_t xHandle;
 571:FreeRTOS/queue.c **** 
 572:FreeRTOS/queue.c **** 		configASSERT( uxMaxCount != 0 );
 577              		.loc 1 572 0
 578 000a 7B68     		ldr	r3, [r7, #4]	@ tmp112, uxMaxCount
 579 000c 002B     		cmp	r3, #0	@ tmp112,
 580 000e 02D1     		bne	.L33	@,
 581              		.loc 1 572 0 is_stmt 0 discriminator 1
 582 0010 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 583              	.L34:
 584 0014 FEE7     		b	.L34	@
 585              	.L33:
 573:FreeRTOS/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 586              		.loc 1 573 0 is_stmt 1
 587 0016 3A68     		ldr	r2, [r7]	@ tmp113, uxInitialCount
 588 0018 7B68     		ldr	r3, [r7, #4]	@ tmp114, uxMaxCount
 589 001a 9A42     		cmp	r2, r3	@ tmp113, tmp114
 590 001c 02D9     		bls	.L35	@,
 591              		.loc 1 573 0 is_stmt 0 discriminator 1
 592 001e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 593              	.L36:
 594              		.loc 1 573 0 discriminator 2
 595 0022 FEE7     		b	.L36	@
 596              	.L35:
 574:FreeRTOS/queue.c **** 
 575:FreeRTOS/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 597              		.loc 1 575 0 is_stmt 1
 598 0024 7868     		ldr	r0, [r7, #4]	@, uxMaxCount
 599 0026 0021     		movs	r1, #0	@,
 600 0028 0222     		movs	r2, #2	@,
 601 002a FFF7FEFF 		bl	xQueueGenericCreate	@
 602 002e F860     		str	r0, [r7, #12]	@, xHandle
 576:FreeRTOS/queue.c **** 
 577:FreeRTOS/queue.c **** 		if( xHandle != NULL )
 603              		.loc 1 577 0
 604 0030 FB68     		ldr	r3, [r7, #12]	@ tmp115, xHandle
 605 0032 002B     		cmp	r3, #0	@ tmp115,
 606 0034 02D0     		beq	.L37	@,
 578:FreeRTOS/queue.c **** 		{
 579:FreeRTOS/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 607              		.loc 1 579 0
 608 0036 FB68     		ldr	r3, [r7, #12]	@ tmp116, xHandle
 609 0038 3A68     		ldr	r2, [r7]	@ tmp117, uxInitialCount
 610 003a 9A63     		str	r2, [r3, #56]	@ tmp117, MEM[(struct Queue_t *)xHandle_3].uxMessagesWaiting
 611              	.L37:
 580:FreeRTOS/queue.c **** 
 581:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 582:FreeRTOS/queue.c **** 		}
 583:FreeRTOS/queue.c **** 		else
 584:FreeRTOS/queue.c **** 		{
 585:FreeRTOS/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 586:FreeRTOS/queue.c **** 		}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 22


 587:FreeRTOS/queue.c **** 
 588:FreeRTOS/queue.c **** 		configASSERT( xHandle );
 612              		.loc 1 588 0
 613 003c FB68     		ldr	r3, [r7, #12]	@ tmp118, xHandle
 614 003e 002B     		cmp	r3, #0	@ tmp118,
 615 0040 02D1     		bne	.L38	@,
 616              		.loc 1 588 0 is_stmt 0 discriminator 1
 617 0042 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 618              	.L39:
 619              		.loc 1 588 0 discriminator 3
 620 0046 FEE7     		b	.L39	@
 621              	.L38:
 589:FreeRTOS/queue.c **** 		return xHandle;
 622              		.loc 1 589 0 is_stmt 1
 623 0048 FB68     		ldr	r3, [r7, #12]	@ D.5959, xHandle
 590:FreeRTOS/queue.c **** 	}
 624              		.loc 1 590 0
 625 004a 1846     		mov	r0, r3	@, <retval>
 626 004c 1037     		adds	r7, r7, #16	@,,
 627              		.cfi_def_cfa_offset 8
 628 004e BD46     		mov	sp, r7	@,
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed	@
 631 0050 80BD     		pop	{r7, pc}	@
 632              		.cfi_endproc
 633              	.LFE6:
 634              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 635 0052 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 636              		.align	2
 637              		.global	xQueueGenericSend
 638              		.thumb
 639              		.thumb_func
 640              		.type	xQueueGenericSend, %function
 641              	xQueueGenericSend:
 642              	.LFB7:
 591:FreeRTOS/queue.c **** 
 592:FreeRTOS/queue.c **** #endif /* configUSE_COUNTING_SEMAPHORES */
 593:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 594:FreeRTOS/queue.c **** 
 595:FreeRTOS/queue.c **** BaseT_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTicksTo
 596:FreeRTOS/queue.c **** {
 643              		.loc 1 596 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 40
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}	@
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 8AB0     		sub	sp, sp, #40	@,,
 652              		.cfi_def_cfa_offset 48
 653 0004 00AF     		add	r7, sp, #0	@,,
 654              		.cfi_def_cfa_register 7
 655 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 656 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 657 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
 658 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 23


 597:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE, xYieldRequired;
 659              		.loc 1 597 0
 660 000e 0023     		movs	r3, #0	@ tmp129,
 661 0010 7B62     		str	r3, [r7, #36]	@ tmp129, xEntryTimeSet
 598:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
 599:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 662              		.loc 1 599 0
 663 0012 FB68     		ldr	r3, [r7, #12]	@ tmp130, xQueue
 664 0014 3B62     		str	r3, [r7, #32]	@ tmp130, pxQueue
 600:FreeRTOS/queue.c **** 
 601:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 665              		.loc 1 601 0
 666 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp131, pxQueue
 667 0018 002B     		cmp	r3, #0	@ tmp131,
 668 001a 02D1     		bne	.L42	@,
 669              		.loc 1 601 0 is_stmt 0 discriminator 1
 670 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 671              	.L43:
 672 0020 FEE7     		b	.L43	@
 673              	.L42:
 602:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 674              		.loc 1 602 0 is_stmt 1
 675 0022 BB68     		ldr	r3, [r7, #8]	@ tmp132, pvItemToQueue
 676 0024 002B     		cmp	r3, #0	@ tmp132,
 677 0026 03D1     		bne	.L44	@,
 678              		.loc 1 602 0 is_stmt 0 discriminator 2
 679 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp133, pxQueue
 680 002a 1B6C     		ldr	r3, [r3, #64]	@ D.5962, pxQueue_8->uxItemSize
 681 002c 002B     		cmp	r3, #0	@ D.5962,
 682 002e 01D1     		bne	.L45	@,
 683              	.L44:
 684              		.loc 1 602 0 discriminator 3
 685 0030 0123     		movs	r3, #1	@ D.5960,
 686 0032 00E0     		b	.L46	@
 687              	.L45:
 688              		.loc 1 602 0 discriminator 4
 689 0034 0023     		movs	r3, #0	@ D.5960,
 690              	.L46:
 691              		.loc 1 602 0 discriminator 6
 692 0036 002B     		cmp	r3, #0	@ D.5960,
 693 0038 02D1     		bne	.L47	@,
 694              		.loc 1 602 0 discriminator 7
 695 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
 696              	.L48:
 697              		.loc 1 602 0 discriminator 2
 698 003e FEE7     		b	.L48	@
 699              	.L47:
 603:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 700              		.loc 1 603 0 is_stmt 1
 701 0040 3B68     		ldr	r3, [r7]	@ tmp134, xCopyPosition
 702 0042 022B     		cmp	r3, #2	@ tmp134,
 703 0044 03D1     		bne	.L49	@,
 704              		.loc 1 603 0 is_stmt 0 discriminator 2
 705 0046 3B6A     		ldr	r3, [r7, #32]	@ tmp135, pxQueue
 706 0048 DB6B     		ldr	r3, [r3, #60]	@ D.5962, pxQueue_8->uxLength
 707 004a 012B     		cmp	r3, #1	@ D.5962,
 708 004c 01D1     		bne	.L50	@,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 24


 709              	.L49:
 710              		.loc 1 603 0 discriminator 3
 711 004e 0123     		movs	r3, #1	@ D.5960,
 712 0050 00E0     		b	.L51	@
 713              	.L50:
 714              		.loc 1 603 0 discriminator 4
 715 0052 0023     		movs	r3, #0	@ D.5960,
 716              	.L51:
 717              		.loc 1 603 0 discriminator 6
 718 0054 002B     		cmp	r3, #0	@ D.5960,
 719 0056 02D1     		bne	.L52	@,
 720              		.loc 1 603 0 discriminator 7
 721 0058 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 722              	.L53:
 723              		.loc 1 603 0 discriminator 3
 724 005c FEE7     		b	.L53	@
 725              	.L52:
 604:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 605:FreeRTOS/queue.c **** 	{
 606:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 607:FreeRTOS/queue.c **** 	}
 608:FreeRTOS/queue.c **** 	#endif
 609:FreeRTOS/queue.c **** 
 610:FreeRTOS/queue.c **** 
 611:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 612:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
 613:FreeRTOS/queue.c **** 	of execution time efficiency. */
 614:FreeRTOS/queue.c **** 	for( ;; )
 615:FreeRTOS/queue.c **** 	{
 616:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 726              		.loc 1 616 0 is_stmt 1
 727 005e FFF7FEFF 		bl	vPortEnterCritical	@
 617:FreeRTOS/queue.c **** 		{
 618:FreeRTOS/queue.c **** 			/* Is there room on the queue now?  The running task must be
 619:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue.  If
 620:FreeRTOS/queue.c **** 			the head item in the queue is to be overwritten then it does
 621:FreeRTOS/queue.c **** 			not matter if the queue is full. */
 622:FreeRTOS/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 728              		.loc 1 622 0
 729 0062 3B6A     		ldr	r3, [r7, #32]	@ tmp136, pxQueue
 730 0064 9A6B     		ldr	r2, [r3, #56]	@ D.5962, pxQueue_8->uxMessagesWaiting
 731 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 732 0068 DB6B     		ldr	r3, [r3, #60]	@ D.5962, pxQueue_8->uxLength
 733 006a 9A42     		cmp	r2, r3	@ D.5962, D.5962
 734 006c 02D3     		bcc	.L54	@,
 735              		.loc 1 622 0 is_stmt 0 discriminator 1
 736 006e 3B68     		ldr	r3, [r7]	@ tmp138, xCopyPosition
 737 0070 022B     		cmp	r3, #2	@ tmp138,
 738 0072 1DD1     		bne	.L55	@,
 739              	.L54:
 623:FreeRTOS/queue.c **** 			{
 624:FreeRTOS/queue.c **** 				traceQUEUE_SEND( pxQueue );
 625:FreeRTOS/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 740              		.loc 1 625 0 is_stmt 1
 741 0074 386A     		ldr	r0, [r7, #32]	@, pxQueue
 742 0076 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 743 0078 3A68     		ldr	r2, [r7]	@, xCopyPosition
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 25


 744 007a FFF7FEFF 		bl	prvCopyDataToQueue	@
 745 007e F861     		str	r0, [r7, #28]	@, xYieldRequired
 626:FreeRTOS/queue.c **** 
 627:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 628:FreeRTOS/queue.c **** 				{
 629:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 630:FreeRTOS/queue.c **** 					{
 631:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
 632:FreeRTOS/queue.c **** 						{
 633:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
 634:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
 635:FreeRTOS/queue.c **** 							unblock. A context switch is required. */
 636:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 637:FreeRTOS/queue.c **** 						}
 638:FreeRTOS/queue.c **** 						else
 639:FreeRTOS/queue.c **** 						{
 640:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 641:FreeRTOS/queue.c **** 						}
 642:FreeRTOS/queue.c **** 					}
 643:FreeRTOS/queue.c **** 					else
 644:FreeRTOS/queue.c **** 					{
 645:FreeRTOS/queue.c **** 						/* If there was a task waiting for data to arrive on the
 646:FreeRTOS/queue.c **** 						queue then unblock it now. */
 647:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 648:FreeRTOS/queue.c **** 						{
 649:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 650:FreeRTOS/queue.c **** 							{
 651:FreeRTOS/queue.c **** 								/* The unblocked task has a priority higher than
 652:FreeRTOS/queue.c **** 								our own so yield immediately.  Yes it is ok to
 653:FreeRTOS/queue.c **** 								do this from within the critical section - the
 654:FreeRTOS/queue.c **** 								kernel takes care of that. */
 655:FreeRTOS/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 656:FreeRTOS/queue.c **** 							}
 657:FreeRTOS/queue.c **** 							else
 658:FreeRTOS/queue.c **** 							{
 659:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 660:FreeRTOS/queue.c **** 							}
 661:FreeRTOS/queue.c **** 						}
 662:FreeRTOS/queue.c **** 						else if( xYieldRequired != pdFALSE )
 663:FreeRTOS/queue.c **** 						{
 664:FreeRTOS/queue.c **** 							/* This path is a special case that will only get
 665:FreeRTOS/queue.c **** 							executed if the task was holding multiple mutexes
 666:FreeRTOS/queue.c **** 							and the mutexes were given back in an order that is
 667:FreeRTOS/queue.c **** 							different to that in which they were taken. */
 668:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 669:FreeRTOS/queue.c **** 						}
 670:FreeRTOS/queue.c **** 						else
 671:FreeRTOS/queue.c **** 						{
 672:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 673:FreeRTOS/queue.c **** 						}
 674:FreeRTOS/queue.c **** 					}
 675:FreeRTOS/queue.c **** 				}
 676:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 677:FreeRTOS/queue.c **** 				{
 678:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 679:FreeRTOS/queue.c **** 					queue then unblock it now. */
 680:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 26


 746              		.loc 1 680 0
 747 0080 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 748 0082 5B6A     		ldr	r3, [r3, #36]	@ D.5962, pxQueue_8->xTasksWaitingToReceive.uxNumberOfItems
 749 0084 002B     		cmp	r3, #0	@ D.5962,
 750 0086 0AD0     		beq	.L56	@,
 681:FreeRTOS/queue.c **** 					{
 682:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 751              		.loc 1 682 0
 752 0088 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 753 008a 2433     		adds	r3, r3, #36	@ D.5964, tmp140,
 754 008c 1846     		mov	r0, r3	@, D.5964
 755 008e FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 756 0092 0346     		mov	r3, r0	@ D.5963,
 757 0094 012B     		cmp	r3, #1	@ D.5963,
 758 0096 07D1     		bne	.L57	@,
 683:FreeRTOS/queue.c **** 						{
 684:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 685:FreeRTOS/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 686:FreeRTOS/queue.c **** 							this from within the critical section - the kernel
 687:FreeRTOS/queue.c **** 							takes care of that. */
 688:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 759              		.loc 1 688 0
 760 0098 FFF7FEFF 		bl	vPortYield	@
 761 009c 04E0     		b	.L57	@
 762              	.L56:
 689:FreeRTOS/queue.c **** 						}
 690:FreeRTOS/queue.c **** 						else
 691:FreeRTOS/queue.c **** 						{
 692:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 693:FreeRTOS/queue.c **** 						}
 694:FreeRTOS/queue.c **** 					}
 695:FreeRTOS/queue.c **** 					else if( xYieldRequired != pdFALSE )
 763              		.loc 1 695 0
 764 009e FB69     		ldr	r3, [r7, #28]	@ tmp141, xYieldRequired
 765 00a0 002B     		cmp	r3, #0	@ tmp141,
 766 00a2 01D0     		beq	.L57	@,
 696:FreeRTOS/queue.c **** 					{
 697:FreeRTOS/queue.c **** 						/* This path is a special case that will only get
 698:FreeRTOS/queue.c **** 						executed if the task was holding multiple mutexes and
 699:FreeRTOS/queue.c **** 						the mutexes were given back in an order that is
 700:FreeRTOS/queue.c **** 						different to that in which they were taken. */
 701:FreeRTOS/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 767              		.loc 1 701 0
 768 00a4 FFF7FEFF 		bl	vPortYield	@
 769              	.L57:
 702:FreeRTOS/queue.c **** 					}
 703:FreeRTOS/queue.c **** 					else
 704:FreeRTOS/queue.c **** 					{
 705:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 706:FreeRTOS/queue.c **** 					}
 707:FreeRTOS/queue.c **** 				}
 708:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 709:FreeRTOS/queue.c **** 
 710:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 770              		.loc 1 710 0
 771 00a8 FFF7FEFF 		bl	vPortExitCritical	@
 711:FreeRTOS/queue.c **** 				return pdPASS;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 27


 772              		.loc 1 711 0
 773 00ac 0123     		movs	r3, #1	@ D.5961,
 774 00ae 59E0     		b	.L68	@
 775              	.L55:
 712:FreeRTOS/queue.c **** 			}
 713:FreeRTOS/queue.c **** 			else
 714:FreeRTOS/queue.c **** 			{
 715:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 776              		.loc 1 715 0
 777 00b0 7B68     		ldr	r3, [r7, #4]	@ D.5962, xTicksToWait
 778 00b2 002B     		cmp	r3, #0	@ D.5962,
 779 00b4 03D1     		bne	.L59	@,
 716:FreeRTOS/queue.c **** 				{
 717:FreeRTOS/queue.c **** 					/* The queue was full and no block time is specified (or
 718:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
 719:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 780              		.loc 1 719 0
 781 00b6 FFF7FEFF 		bl	vPortExitCritical	@
 720:FreeRTOS/queue.c **** 
 721:FreeRTOS/queue.c **** 					/* Return to the original privilege level before exiting
 722:FreeRTOS/queue.c **** 					the function. */
 723:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 724:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 782              		.loc 1 724 0
 783 00ba 0023     		movs	r3, #0	@ D.5961,
 784 00bc 52E0     		b	.L68	@
 785              	.L59:
 725:FreeRTOS/queue.c **** 				}
 726:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 786              		.loc 1 726 0
 787 00be 7B6A     		ldr	r3, [r7, #36]	@ tmp142, xEntryTimeSet
 788 00c0 002B     		cmp	r3, #0	@ tmp142,
 789 00c2 06D1     		bne	.L60	@,
 727:FreeRTOS/queue.c **** 				{
 728:FreeRTOS/queue.c **** 					/* The queue was full and a block time was specified so
 729:FreeRTOS/queue.c **** 					configure the timeout structure. */
 730:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 790              		.loc 1 730 0
 791 00c4 07F11403 		add	r3, r7, #20	@ tmp143,,
 792 00c8 1846     		mov	r0, r3	@, tmp143
 793 00ca FFF7FEFF 		bl	vTaskSetTimeOutState	@
 731:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 794              		.loc 1 731 0
 795 00ce 0123     		movs	r3, #1	@ tmp144,
 796 00d0 7B62     		str	r3, [r7, #36]	@ tmp144, xEntryTimeSet
 797              	.L60:
 732:FreeRTOS/queue.c **** 				}
 733:FreeRTOS/queue.c **** 				else
 734:FreeRTOS/queue.c **** 				{
 735:FreeRTOS/queue.c **** 					/* Entry time was already set. */
 736:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 737:FreeRTOS/queue.c **** 				}
 738:FreeRTOS/queue.c **** 			}
 739:FreeRTOS/queue.c **** 		}
 740:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 798              		.loc 1 740 0
 799 00d2 FFF7FEFF 		bl	vPortExitCritical	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 28


 741:FreeRTOS/queue.c **** 
 742:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 743:FreeRTOS/queue.c **** 		now the critical section has been exited. */
 744:FreeRTOS/queue.c **** 
 745:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 800              		.loc 1 745 0
 801 00d6 FFF7FEFF 		bl	vTaskSuspendAll	@
 746:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 802              		.loc 1 746 0
 803 00da FFF7FEFF 		bl	vPortEnterCritical	@
 804 00de 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
 805 00e0 5B6C     		ldr	r3, [r3, #68]	@ D.5963, pxQueue_8->xRxLock
 806 00e2 B3F1FF3F 		cmp	r3, #-1	@ D.5963,
 807 00e6 02D1     		bne	.L61	@,
 808              		.loc 1 746 0 is_stmt 0 discriminator 1
 809 00e8 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 810 00ea 0022     		movs	r2, #0	@ tmp147,
 811 00ec 5A64     		str	r2, [r3, #68]	@ tmp147, pxQueue_8->xRxLock
 812              	.L61:
 813              		.loc 1 746 0 discriminator 3
 814 00ee 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 815 00f0 9B6C     		ldr	r3, [r3, #72]	@ D.5963, pxQueue_8->xTxLock
 816 00f2 B3F1FF3F 		cmp	r3, #-1	@ D.5963,
 817 00f6 02D1     		bne	.L62	@,
 818              		.loc 1 746 0 discriminator 4
 819 00f8 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 820 00fa 0022     		movs	r2, #0	@ tmp150,
 821 00fc 9A64     		str	r2, [r3, #72]	@ tmp150, pxQueue_8->xTxLock
 822              	.L62:
 823              		.loc 1 746 0 discriminator 6
 824 00fe FFF7FEFF 		bl	vPortExitCritical	@
 747:FreeRTOS/queue.c **** 
 748:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 749:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 825              		.loc 1 749 0 is_stmt 1 discriminator 6
 826 0102 07F11402 		add	r2, r7, #20	@ tmp151,,
 827 0106 3B1D     		adds	r3, r7, #4	@ tmp152,,
 828 0108 1046     		mov	r0, r2	@, tmp151
 829 010a 1946     		mov	r1, r3	@, tmp152
 830 010c FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 831 0110 0346     		mov	r3, r0	@ D.5963,
 832 0112 002B     		cmp	r3, #0	@ D.5963,
 833 0114 1ED1     		bne	.L63	@,
 750:FreeRTOS/queue.c **** 		{
 751:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 834              		.loc 1 751 0
 835 0116 386A     		ldr	r0, [r7, #32]	@, pxQueue
 836 0118 FFF7FEFF 		bl	prvIsQueueFull	@
 837 011c 0346     		mov	r3, r0	@ D.5963,
 838 011e 002B     		cmp	r3, #0	@ D.5963,
 839 0120 12D0     		beq	.L64	@,
 752:FreeRTOS/queue.c **** 			{
 753:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 754:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 840              		.loc 1 754 0
 841 0122 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
 842 0124 03F11002 		add	r2, r3, #16	@ D.5964, tmp153,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 29


 843 0128 7B68     		ldr	r3, [r7, #4]	@ D.5962, xTicksToWait
 844 012a 1046     		mov	r0, r2	@, D.5964
 845 012c 1946     		mov	r1, r3	@, D.5962
 846 012e FFF7FEFF 		bl	vTaskPlaceOnEventList	@
 755:FreeRTOS/queue.c **** 
 756:FreeRTOS/queue.c **** 				/* Unlocking the queue means queue events can effect the
 757:FreeRTOS/queue.c **** 				event list.  It is possible	that interrupts occurring now
 758:FreeRTOS/queue.c **** 				remove this task from the event	list again - but as the
 759:FreeRTOS/queue.c **** 				scheduler is suspended the task will go onto the pending
 760:FreeRTOS/queue.c **** 				ready last instead of the actual ready list. */
 761:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 847              		.loc 1 761 0
 848 0132 386A     		ldr	r0, [r7, #32]	@, pxQueue
 849 0134 FFF7FEFF 		bl	prvUnlockQueue	@
 762:FreeRTOS/queue.c **** 
 763:FreeRTOS/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 764:FreeRTOS/queue.c **** 				ready list into the ready list - so it is feasible that this
 765:FreeRTOS/queue.c **** 				task is already in a ready list before it yields - in which
 766:FreeRTOS/queue.c **** 				case the yield will not cause a context switch unless there
 767:FreeRTOS/queue.c **** 				is also a higher priority task in the pending ready list. */
 768:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 850              		.loc 1 768 0
 851 0138 FFF7FEFF 		bl	xTaskResumeAll	@
 852 013c 0346     		mov	r3, r0	@ D.5963,
 853 013e 002B     		cmp	r3, #0	@ D.5963,
 854 0140 0FD1     		bne	.L67	@,
 769:FreeRTOS/queue.c **** 				{
 770:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 855              		.loc 1 770 0
 856 0142 FFF7FEFF 		bl	vPortYield	@
 857 0146 0CE0     		b	.L67	@
 858              	.L64:
 771:FreeRTOS/queue.c **** 				}
 772:FreeRTOS/queue.c **** 			}
 773:FreeRTOS/queue.c **** 			else
 774:FreeRTOS/queue.c **** 			{
 775:FreeRTOS/queue.c **** 				/* Try again. */
 776:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 859              		.loc 1 776 0
 860 0148 386A     		ldr	r0, [r7, #32]	@, pxQueue
 861 014a FFF7FEFF 		bl	prvUnlockQueue	@
 777:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 862              		.loc 1 777 0
 863 014e FFF7FEFF 		bl	xTaskResumeAll	@
 864 0152 84E7     		b	.L52	@
 865              	.L63:
 778:FreeRTOS/queue.c **** 			}
 779:FreeRTOS/queue.c **** 		}
 780:FreeRTOS/queue.c **** 		else
 781:FreeRTOS/queue.c **** 		{
 782:FreeRTOS/queue.c **** 			/* The timeout has expired. */
 783:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 866              		.loc 1 783 0
 867 0154 386A     		ldr	r0, [r7, #32]	@, pxQueue
 868 0156 FFF7FEFF 		bl	prvUnlockQueue	@
 784:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 869              		.loc 1 784 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 30


 870 015a FFF7FEFF 		bl	xTaskResumeAll	@
 785:FreeRTOS/queue.c **** 
 786:FreeRTOS/queue.c **** 			/* Return to the original privilege level before exiting the
 787:FreeRTOS/queue.c **** 			function. */
 788:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 789:FreeRTOS/queue.c **** 			return errQUEUE_FULL;
 871              		.loc 1 789 0
 872 015e 0023     		movs	r3, #0	@ D.5961,
 873 0160 00E0     		b	.L68	@
 874              	.L67:
 790:FreeRTOS/queue.c **** 		}
 791:FreeRTOS/queue.c **** 	}
 875              		.loc 1 791 0 discriminator 5
 876 0162 7CE7     		b	.L52	@
 877              	.L68:
 792:FreeRTOS/queue.c **** }
 878              		.loc 1 792 0 discriminator 6
 879 0164 1846     		mov	r0, r3	@, <retval>
 880 0166 2837     		adds	r7, r7, #40	@,,
 881              		.cfi_def_cfa_offset 8
 882 0168 BD46     		mov	sp, r7	@,
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed	@
 885 016a 80BD     		pop	{r7, pc}	@
 886              		.cfi_endproc
 887              	.LFE7:
 888              		.size	xQueueGenericSend, .-xQueueGenericSend
 889              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 890              		.align	2
 891              		.global	xQueueGenericSendFromISR
 892              		.thumb
 893              		.thumb_func
 894              		.type	xQueueGenericSendFromISR, %function
 895              	xQueueGenericSendFromISR:
 896              	.LFB8:
 793:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 794:FreeRTOS/queue.c **** 
 795:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 796:FreeRTOS/queue.c **** 
 797:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickT_t xTic
 798:FreeRTOS/queue.c **** 	{
 799:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 800:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 801:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 802:FreeRTOS/queue.c **** 
 803:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 804:FreeRTOS/queue.c **** 		configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 805:FreeRTOS/queue.c **** 
 806:FreeRTOS/queue.c **** 		for( ;; )
 807:FreeRTOS/queue.c **** 		{
 808:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 809:FreeRTOS/queue.c **** 			{
 810:FreeRTOS/queue.c **** 				/* Is there room on the queue now?  To be running we must be
 811:FreeRTOS/queue.c **** 				the highest priority task wanting to access the queue. */
 812:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
 813:FreeRTOS/queue.c **** 				{
 814:FreeRTOS/queue.c **** 					traceQUEUE_SEND( pxQueue );
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 31


 815:FreeRTOS/queue.c **** 					prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 816:FreeRTOS/queue.c **** 
 817:FreeRTOS/queue.c **** 					/* If there was a task waiting for data to arrive on the
 818:FreeRTOS/queue.c **** 					queue then unblock it now. */
 819:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 820:FreeRTOS/queue.c **** 					{
 821:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
 822:FreeRTOS/queue.c **** 						{
 823:FreeRTOS/queue.c **** 							/* The unblocked task has a priority higher than
 824:FreeRTOS/queue.c **** 							our own so yield immediately. */
 825:FreeRTOS/queue.c **** 							portYIELD_WITHIN_API();
 826:FreeRTOS/queue.c **** 						}
 827:FreeRTOS/queue.c **** 						else
 828:FreeRTOS/queue.c **** 						{
 829:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 830:FreeRTOS/queue.c **** 						}
 831:FreeRTOS/queue.c **** 					}
 832:FreeRTOS/queue.c **** 					else
 833:FreeRTOS/queue.c **** 					{
 834:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 835:FreeRTOS/queue.c **** 					}
 836:FreeRTOS/queue.c **** 
 837:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 838:FreeRTOS/queue.c **** 					return pdPASS;
 839:FreeRTOS/queue.c **** 				}
 840:FreeRTOS/queue.c **** 				else
 841:FreeRTOS/queue.c **** 				{
 842:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 843:FreeRTOS/queue.c **** 					{
 844:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 845:FreeRTOS/queue.c **** 						return errQUEUE_FULL;
 846:FreeRTOS/queue.c **** 					}
 847:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 848:FreeRTOS/queue.c **** 					{
 849:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
 850:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 851:FreeRTOS/queue.c **** 					}
 852:FreeRTOS/queue.c **** 				}
 853:FreeRTOS/queue.c **** 			}
 854:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 855:FreeRTOS/queue.c **** 
 856:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 857:FreeRTOS/queue.c **** 			{
 858:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 859:FreeRTOS/queue.c **** 				{
 860:FreeRTOS/queue.c **** 					if( prvIsQueueFull( pxQueue ) != pdFALSE )
 861:FreeRTOS/queue.c **** 					{
 862:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 863:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 864:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
 865:FreeRTOS/queue.c **** 					}
 866:FreeRTOS/queue.c **** 					else
 867:FreeRTOS/queue.c **** 					{
 868:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 869:FreeRTOS/queue.c **** 					}
 870:FreeRTOS/queue.c **** 				}
 871:FreeRTOS/queue.c **** 				else
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 32


 872:FreeRTOS/queue.c **** 				{
 873:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 874:FreeRTOS/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 875:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
 876:FreeRTOS/queue.c **** 				}
 877:FreeRTOS/queue.c **** 			}
 878:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 879:FreeRTOS/queue.c **** 		}
 880:FreeRTOS/queue.c **** 	}
 881:FreeRTOS/queue.c **** 
 882:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
 883:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
 884:FreeRTOS/queue.c **** 
 885:FreeRTOS/queue.c **** #if ( configUSE_ALTERNATIVE_API == 1 )
 886:FreeRTOS/queue.c **** 
 887:FreeRTOS/queue.c **** 	BaseT_t xQueueAltGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait
 888:FreeRTOS/queue.c **** 	{
 889:FreeRTOS/queue.c **** 	BaseT_t xEntryTimeSet = pdFALSE;
 890:FreeRTOS/queue.c **** 	TimeOut_t xTimeOut;
 891:FreeRTOS/queue.c **** 	int8_t *pcOriginalReadPosition;
 892:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 893:FreeRTOS/queue.c **** 
 894:FreeRTOS/queue.c **** 		configASSERT( pxQueue );
 895:FreeRTOS/queue.c **** 		configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 896:FreeRTOS/queue.c **** 
 897:FreeRTOS/queue.c **** 		for( ;; )
 898:FreeRTOS/queue.c **** 		{
 899:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 900:FreeRTOS/queue.c **** 			{
 901:FreeRTOS/queue.c **** 				if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 902:FreeRTOS/queue.c **** 				{
 903:FreeRTOS/queue.c **** 					/* Remember our read position in case we are just peeking. */
 904:FreeRTOS/queue.c **** 					pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 905:FreeRTOS/queue.c **** 
 906:FreeRTOS/queue.c **** 					prvCopyDataFromQueue( pxQueue, pvBuffer );
 907:FreeRTOS/queue.c **** 
 908:FreeRTOS/queue.c **** 					if( xJustPeeking == pdFALSE )
 909:FreeRTOS/queue.c **** 					{
 910:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE( pxQueue );
 911:FreeRTOS/queue.c **** 
 912:FreeRTOS/queue.c **** 						/* Data is actually being removed (not just peeked). */
 913:FreeRTOS/queue.c **** 						--( pxQueue->uxMessagesWaiting );
 914:FreeRTOS/queue.c **** 
 915:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
 916:FreeRTOS/queue.c **** 						{
 917:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 918:FreeRTOS/queue.c **** 							{
 919:FreeRTOS/queue.c **** 								/* Record the information required to implement
 920:FreeRTOS/queue.c **** 								priority inheritance should it become necessary. */
 921:FreeRTOS/queue.c **** 								pxQueue->pxMutexHolder = ( int8_t * ) xTaskGetCurrentTaskHandle();
 922:FreeRTOS/queue.c **** 							}
 923:FreeRTOS/queue.c **** 							else
 924:FreeRTOS/queue.c **** 							{
 925:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 926:FreeRTOS/queue.c **** 							}
 927:FreeRTOS/queue.c **** 						}
 928:FreeRTOS/queue.c **** 						#endif
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 33


 929:FreeRTOS/queue.c **** 
 930:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 931:FreeRTOS/queue.c **** 						{
 932:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 933:FreeRTOS/queue.c **** 							{
 934:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 935:FreeRTOS/queue.c **** 							}
 936:FreeRTOS/queue.c **** 							else
 937:FreeRTOS/queue.c **** 							{
 938:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 939:FreeRTOS/queue.c **** 							}
 940:FreeRTOS/queue.c **** 						}
 941:FreeRTOS/queue.c **** 					}
 942:FreeRTOS/queue.c **** 					else
 943:FreeRTOS/queue.c **** 					{
 944:FreeRTOS/queue.c **** 						traceQUEUE_PEEK( pxQueue );
 945:FreeRTOS/queue.c **** 
 946:FreeRTOS/queue.c **** 						/* We are not removing the data, so reset our read
 947:FreeRTOS/queue.c **** 						pointer. */
 948:FreeRTOS/queue.c **** 						pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 949:FreeRTOS/queue.c **** 
 950:FreeRTOS/queue.c **** 						/* The data is being left in the queue, so see if there are
 951:FreeRTOS/queue.c **** 						any other tasks waiting for the data. */
 952:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 953:FreeRTOS/queue.c **** 						{
 954:FreeRTOS/queue.c **** 							/* Tasks that are removed from the event list will get added to
 955:FreeRTOS/queue.c **** 							the pending ready list as the scheduler is still suspended. */
 956:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 957:FreeRTOS/queue.c **** 							{
 958:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority than this task. */
 959:FreeRTOS/queue.c **** 								portYIELD_WITHIN_API();
 960:FreeRTOS/queue.c **** 							}
 961:FreeRTOS/queue.c **** 							else
 962:FreeRTOS/queue.c **** 							{
 963:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 964:FreeRTOS/queue.c **** 							}
 965:FreeRTOS/queue.c **** 						}
 966:FreeRTOS/queue.c **** 						else
 967:FreeRTOS/queue.c **** 						{
 968:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 969:FreeRTOS/queue.c **** 						}
 970:FreeRTOS/queue.c **** 					}
 971:FreeRTOS/queue.c **** 
 972:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 973:FreeRTOS/queue.c **** 					return pdPASS;
 974:FreeRTOS/queue.c **** 				}
 975:FreeRTOS/queue.c **** 				else
 976:FreeRTOS/queue.c **** 				{
 977:FreeRTOS/queue.c **** 					if( xTicksToWait == ( TickT_t ) 0 )
 978:FreeRTOS/queue.c **** 					{
 979:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 980:FreeRTOS/queue.c **** 						traceQUEUE_RECEIVE_FAILED( pxQueue );
 981:FreeRTOS/queue.c **** 						return errQUEUE_EMPTY;
 982:FreeRTOS/queue.c **** 					}
 983:FreeRTOS/queue.c **** 					else if( xEntryTimeSet == pdFALSE )
 984:FreeRTOS/queue.c **** 					{
 985:FreeRTOS/queue.c **** 						vTaskSetTimeOutState( &xTimeOut );
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 34


 986:FreeRTOS/queue.c **** 						xEntryTimeSet = pdTRUE;
 987:FreeRTOS/queue.c **** 					}
 988:FreeRTOS/queue.c **** 				}
 989:FreeRTOS/queue.c **** 			}
 990:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
 991:FreeRTOS/queue.c **** 
 992:FreeRTOS/queue.c **** 			taskENTER_CRITICAL();
 993:FreeRTOS/queue.c **** 			{
 994:FreeRTOS/queue.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 995:FreeRTOS/queue.c **** 				{
 996:FreeRTOS/queue.c **** 					if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 997:FreeRTOS/queue.c **** 					{
 998:FreeRTOS/queue.c **** 						traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
 999:FreeRTOS/queue.c **** 
1000:FreeRTOS/queue.c **** 						#if ( configUSE_MUTEXES == 1 )
1001:FreeRTOS/queue.c **** 						{
1002:FreeRTOS/queue.c **** 							if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1003:FreeRTOS/queue.c **** 							{
1004:FreeRTOS/queue.c **** 								taskENTER_CRITICAL();
1005:FreeRTOS/queue.c **** 								{
1006:FreeRTOS/queue.c **** 									vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1007:FreeRTOS/queue.c **** 								}
1008:FreeRTOS/queue.c **** 								taskEXIT_CRITICAL();
1009:FreeRTOS/queue.c **** 							}
1010:FreeRTOS/queue.c **** 							else
1011:FreeRTOS/queue.c **** 							{
1012:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1013:FreeRTOS/queue.c **** 							}
1014:FreeRTOS/queue.c **** 						}
1015:FreeRTOS/queue.c **** 						#endif
1016:FreeRTOS/queue.c **** 
1017:FreeRTOS/queue.c **** 						vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1018:FreeRTOS/queue.c **** 						portYIELD_WITHIN_API();
1019:FreeRTOS/queue.c **** 					}
1020:FreeRTOS/queue.c **** 					else
1021:FreeRTOS/queue.c **** 					{
1022:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1023:FreeRTOS/queue.c **** 					}
1024:FreeRTOS/queue.c **** 				}
1025:FreeRTOS/queue.c **** 				else
1026:FreeRTOS/queue.c **** 				{
1027:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
1028:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1029:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
1030:FreeRTOS/queue.c **** 				}
1031:FreeRTOS/queue.c **** 			}
1032:FreeRTOS/queue.c **** 			taskEXIT_CRITICAL();
1033:FreeRTOS/queue.c **** 		}
1034:FreeRTOS/queue.c **** 	}
1035:FreeRTOS/queue.c **** 
1036:FreeRTOS/queue.c **** 
1037:FreeRTOS/queue.c **** #endif /* configUSE_ALTERNATIVE_API */
1038:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1039:FreeRTOS/queue.c **** 
1040:FreeRTOS/queue.c **** BaseT_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseT_t *
1041:FreeRTOS/queue.c **** {
 897              		.loc 1 1041 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 35


 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 32
 900              		@ frame_needed = 1, uses_anonymous_args = 0
 901 0000 80B5     		push	{r7, lr}	@
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 7, -8
 904              		.cfi_offset 14, -4
 905 0002 88B0     		sub	sp, sp, #32	@,,
 906              		.cfi_def_cfa_offset 40
 907 0004 00AF     		add	r7, sp, #0	@,,
 908              		.cfi_def_cfa_register 7
 909 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 910 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 911 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
 912 000c 3B60     		str	r3, [r7]	@ xCopyPosition, xCopyPosition
1042:FreeRTOS/queue.c **** BaseT_t xReturn;
1043:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1044:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 913              		.loc 1 1044 0
 914 000e FB68     		ldr	r3, [r7, #12]	@ tmp125, xQueue
 915 0010 BB61     		str	r3, [r7, #24]	@ tmp125, pxQueue
1045:FreeRTOS/queue.c **** 
1046:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 916              		.loc 1 1046 0
 917 0012 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 918 0014 002B     		cmp	r3, #0	@ tmp126,
 919 0016 02D1     		bne	.L70	@,
 920              		.loc 1 1046 0 is_stmt 0 discriminator 1
 921 0018 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 922              	.L71:
 923 001c FEE7     		b	.L71	@
 924              	.L70:
1047:FreeRTOS/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 925              		.loc 1 1047 0 is_stmt 1
 926 001e BB68     		ldr	r3, [r7, #8]	@ tmp127, pvItemToQueue
 927 0020 002B     		cmp	r3, #0	@ tmp127,
 928 0022 03D1     		bne	.L72	@,
 929              		.loc 1 1047 0 is_stmt 0 discriminator 2
 930 0024 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 931 0026 1B6C     		ldr	r3, [r3, #64]	@ D.5966, pxQueue_5->uxItemSize
 932 0028 002B     		cmp	r3, #0	@ D.5966,
 933 002a 01D1     		bne	.L73	@,
 934              	.L72:
 935              		.loc 1 1047 0 discriminator 3
 936 002c 0123     		movs	r3, #1	@ D.5965,
 937 002e 00E0     		b	.L74	@
 938              	.L73:
 939              		.loc 1 1047 0 discriminator 4
 940 0030 0023     		movs	r3, #0	@ D.5965,
 941              	.L74:
 942              		.loc 1 1047 0 discriminator 6
 943 0032 002B     		cmp	r3, #0	@ D.5965,
 944 0034 02D1     		bne	.L75	@,
 945              		.loc 1 1047 0 discriminator 7
 946 0036 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 947              	.L76:
 948              		.loc 1 1047 0 discriminator 2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 36


 949 003a FEE7     		b	.L76	@
 950              	.L75:
1048:FreeRTOS/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 951              		.loc 1 1048 0 is_stmt 1
 952 003c 3B68     		ldr	r3, [r7]	@ tmp129, xCopyPosition
 953 003e 022B     		cmp	r3, #2	@ tmp129,
 954 0040 03D1     		bne	.L77	@,
 955              		.loc 1 1048 0 is_stmt 0 discriminator 2
 956 0042 BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
 957 0044 DB6B     		ldr	r3, [r3, #60]	@ D.5966, pxQueue_5->uxLength
 958 0046 012B     		cmp	r3, #1	@ D.5966,
 959 0048 01D1     		bne	.L78	@,
 960              	.L77:
 961              		.loc 1 1048 0 discriminator 3
 962 004a 0123     		movs	r3, #1	@ D.5965,
 963 004c 00E0     		b	.L79	@
 964              	.L78:
 965              		.loc 1 1048 0 discriminator 4
 966 004e 0023     		movs	r3, #0	@ D.5965,
 967              	.L79:
 968              		.loc 1 1048 0 discriminator 6
 969 0050 002B     		cmp	r3, #0	@ D.5965,
 970 0052 02D1     		bne	.L80	@,
 971              		.loc 1 1048 0 discriminator 7
 972 0054 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 973              	.L81:
 974              		.loc 1 1048 0 discriminator 3
 975 0058 FEE7     		b	.L81	@
 976              	.L80:
1049:FreeRTOS/queue.c **** 
1050:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1051:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1052:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1053:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1054:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1055:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1056:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1057:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1058:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1059:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1060:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1061:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1062:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1063:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1064:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 977              		.loc 1 1064 0 is_stmt 1
 978 005a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1065:FreeRTOS/queue.c **** 
1066:FreeRTOS/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
1067:FreeRTOS/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
1068:FreeRTOS/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1069:FreeRTOS/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1070:FreeRTOS/queue.c **** 	post). */
1071:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 979              		.loc 1 1071 0
 980 005e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 981 0062 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 37


1072:FreeRTOS/queue.c **** 	{
1073:FreeRTOS/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 982              		.loc 1 1073 0
 983 0064 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 984 0066 9A6B     		ldr	r2, [r3, #56]	@ D.5966, pxQueue_5->uxMessagesWaiting
 985 0068 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 986 006a DB6B     		ldr	r3, [r3, #60]	@ D.5966, pxQueue_5->uxLength
 987 006c 9A42     		cmp	r2, r3	@ D.5966, D.5966
 988 006e 02D3     		bcc	.L82	@,
 989              		.loc 1 1073 0 is_stmt 0 discriminator 1
 990 0070 3B68     		ldr	r3, [r7]	@ tmp133, xCopyPosition
 991 0072 022B     		cmp	r3, #2	@ tmp133,
 992 0074 2DD1     		bne	.L83	@,
 993              	.L82:
1074:FreeRTOS/queue.c **** 		{
1075:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1076:FreeRTOS/queue.c **** 
1077:FreeRTOS/queue.c **** 			if( prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition ) != pdFALSE )
 994              		.loc 1 1077 0 is_stmt 1
 995 0076 B869     		ldr	r0, [r7, #24]	@, pxQueue
 996 0078 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 997 007a 3A68     		ldr	r2, [r7]	@, xCopyPosition
 998 007c FFF7FEFF 		bl	prvCopyDataToQueue	@
 999 0080 0346     		mov	r3, r0	@ D.5967,
 1000 0082 002B     		cmp	r3, #0	@ D.5967,
 1001 0084 05D0     		beq	.L84	@,
1078:FreeRTOS/queue.c **** 			{
1079:FreeRTOS/queue.c **** 				/* This is a special case that can only be executed if a task
1080:FreeRTOS/queue.c **** 				holds multiple mutexes and then gives the mutexes back in an
1081:FreeRTOS/queue.c **** 				order that is different to that in which they were taken. */
1082:FreeRTOS/queue.c **** 				if( pxHigherPriorityTaskWoken != NULL )
 1002              		.loc 1 1082 0
 1003 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1004 0088 002B     		cmp	r3, #0	@ tmp134,
 1005 008a 02D0     		beq	.L84	@,
1083:FreeRTOS/queue.c **** 				{
1084:FreeRTOS/queue.c **** 					*pxHigherPriorityTaskWoken = pdTRUE;
 1006              		.loc 1 1084 0
 1007 008c 7B68     		ldr	r3, [r7, #4]	@ tmp135, pxHigherPriorityTaskWoken
 1008 008e 0122     		movs	r2, #1	@ tmp136,
 1009 0090 1A60     		str	r2, [r3]	@ tmp136, *pxHigherPriorityTaskWoken_19(D)
 1010              	.L84:
1085:FreeRTOS/queue.c **** 				}
1086:FreeRTOS/queue.c **** 				else
1087:FreeRTOS/queue.c **** 				{
1088:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1089:FreeRTOS/queue.c **** 				}
1090:FreeRTOS/queue.c **** 			}
1091:FreeRTOS/queue.c **** 
1092:FreeRTOS/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1093:FreeRTOS/queue.c **** 			be done when the queue is unlocked later. */
1094:FreeRTOS/queue.c **** 			if( pxQueue->xTxLock == queueUNLOCKED )
 1011              		.loc 1 1094 0
 1012 0092 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1013 0094 9B6C     		ldr	r3, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1014 0096 B3F1FF3F 		cmp	r3, #-1	@ D.5967,
 1015 009a 12D1     		bne	.L85	@,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 38


1095:FreeRTOS/queue.c **** 			{
1096:FreeRTOS/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1097:FreeRTOS/queue.c **** 				{
1098:FreeRTOS/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1099:FreeRTOS/queue.c **** 					{
1100:FreeRTOS/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) == pdTRUE )
1101:FreeRTOS/queue.c **** 						{
1102:FreeRTOS/queue.c **** 							/* The queue is a member of a queue set, and posting
1103:FreeRTOS/queue.c **** 							to the queue set caused a higher priority task to
1104:FreeRTOS/queue.c **** 							unblock.  A context switch is required. */
1105:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1106:FreeRTOS/queue.c **** 							{
1107:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1108:FreeRTOS/queue.c **** 							}
1109:FreeRTOS/queue.c **** 							else
1110:FreeRTOS/queue.c **** 							{
1111:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1112:FreeRTOS/queue.c **** 							}
1113:FreeRTOS/queue.c **** 						}
1114:FreeRTOS/queue.c **** 						else
1115:FreeRTOS/queue.c **** 						{
1116:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1117:FreeRTOS/queue.c **** 						}
1118:FreeRTOS/queue.c **** 					}
1119:FreeRTOS/queue.c **** 					else
1120:FreeRTOS/queue.c **** 					{
1121:FreeRTOS/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1122:FreeRTOS/queue.c **** 						{
1123:FreeRTOS/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1124:FreeRTOS/queue.c **** 							{
1125:FreeRTOS/queue.c **** 								/* The task waiting has a higher priority so
1126:FreeRTOS/queue.c **** 								record that a context switch is required. */
1127:FreeRTOS/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1128:FreeRTOS/queue.c **** 								{
1129:FreeRTOS/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1130:FreeRTOS/queue.c **** 								}
1131:FreeRTOS/queue.c **** 								else
1132:FreeRTOS/queue.c **** 								{
1133:FreeRTOS/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1134:FreeRTOS/queue.c **** 								}
1135:FreeRTOS/queue.c **** 							}
1136:FreeRTOS/queue.c **** 							else
1137:FreeRTOS/queue.c **** 							{
1138:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1139:FreeRTOS/queue.c **** 							}
1140:FreeRTOS/queue.c **** 						}
1141:FreeRTOS/queue.c **** 						else
1142:FreeRTOS/queue.c **** 						{
1143:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1144:FreeRTOS/queue.c **** 						}
1145:FreeRTOS/queue.c **** 					}
1146:FreeRTOS/queue.c **** 				}
1147:FreeRTOS/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1148:FreeRTOS/queue.c **** 				{
1149:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1016              		.loc 1 1149 0
 1017 009c BB69     		ldr	r3, [r7, #24]	@ tmp138, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 39


 1018 009e 5B6A     		ldr	r3, [r3, #36]	@ D.5966, pxQueue_5->xTasksWaitingToReceive.uxNumberOfItems
 1019 00a0 002B     		cmp	r3, #0	@ D.5966,
 1020 00a2 13D0     		beq	.L86	@,
1150:FreeRTOS/queue.c **** 					{
1151:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1021              		.loc 1 1151 0
 1022 00a4 BB69     		ldr	r3, [r7, #24]	@ tmp139, pxQueue
 1023 00a6 2433     		adds	r3, r3, #36	@ D.5968, tmp139,
 1024 00a8 1846     		mov	r0, r3	@, D.5968
 1025 00aa FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1026 00ae 0346     		mov	r3, r0	@ D.5967,
 1027 00b0 002B     		cmp	r3, #0	@ D.5967,
 1028 00b2 0BD0     		beq	.L86	@,
1152:FreeRTOS/queue.c **** 						{
1153:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1154:FreeRTOS/queue.c **** 							context	switch is required. */
1155:FreeRTOS/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1029              		.loc 1 1155 0
 1030 00b4 7B68     		ldr	r3, [r7, #4]	@ tmp140, pxHigherPriorityTaskWoken
 1031 00b6 002B     		cmp	r3, #0	@ tmp140,
 1032 00b8 08D0     		beq	.L86	@,
1156:FreeRTOS/queue.c **** 							{
1157:FreeRTOS/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1033              		.loc 1 1157 0
 1034 00ba 7B68     		ldr	r3, [r7, #4]	@ tmp141, pxHigherPriorityTaskWoken
 1035 00bc 0122     		movs	r2, #1	@ tmp142,
 1036 00be 1A60     		str	r2, [r3]	@ tmp142, *pxHigherPriorityTaskWoken_19(D)
 1037 00c0 04E0     		b	.L86	@
 1038              	.L85:
1158:FreeRTOS/queue.c **** 							}
1159:FreeRTOS/queue.c **** 							else
1160:FreeRTOS/queue.c **** 							{
1161:FreeRTOS/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1162:FreeRTOS/queue.c **** 							}
1163:FreeRTOS/queue.c **** 						}
1164:FreeRTOS/queue.c **** 						else
1165:FreeRTOS/queue.c **** 						{
1166:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1167:FreeRTOS/queue.c **** 						}
1168:FreeRTOS/queue.c **** 					}
1169:FreeRTOS/queue.c **** 					else
1170:FreeRTOS/queue.c **** 					{
1171:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1172:FreeRTOS/queue.c **** 					}
1173:FreeRTOS/queue.c **** 				}
1174:FreeRTOS/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1175:FreeRTOS/queue.c **** 			}
1176:FreeRTOS/queue.c **** 			else
1177:FreeRTOS/queue.c **** 			{
1178:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1179:FreeRTOS/queue.c **** 				knows that data was posted while it was locked. */
1180:FreeRTOS/queue.c **** 				++( pxQueue->xTxLock );
 1039              		.loc 1 1180 0
 1040 00c2 BB69     		ldr	r3, [r7, #24]	@ tmp143, pxQueue
 1041 00c4 9B6C     		ldr	r3, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1042 00c6 5A1C     		adds	r2, r3, #1	@ D.5967, D.5967,
 1043 00c8 BB69     		ldr	r3, [r7, #24]	@ tmp144, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 40


 1044 00ca 9A64     		str	r2, [r3, #72]	@ D.5967, pxQueue_5->xTxLock
 1045              	.L86:
1181:FreeRTOS/queue.c **** 			}
1182:FreeRTOS/queue.c **** 
1183:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1046              		.loc 1 1183 0
 1047 00cc 0123     		movs	r3, #1	@ tmp145,
 1048 00ce FB61     		str	r3, [r7, #28]	@ tmp145, xReturn
 1049 00d0 01E0     		b	.L87	@
 1050              	.L83:
1184:FreeRTOS/queue.c **** 		}
1185:FreeRTOS/queue.c **** 		else
1186:FreeRTOS/queue.c **** 		{
1187:FreeRTOS/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1188:FreeRTOS/queue.c **** 			xReturn = errQUEUE_FULL;
 1051              		.loc 1 1188 0
 1052 00d2 0023     		movs	r3, #0	@ tmp146,
 1053 00d4 FB61     		str	r3, [r7, #28]	@ tmp146, xReturn
 1054              	.L87:
1189:FreeRTOS/queue.c **** 		}
1190:FreeRTOS/queue.c **** 	}
1191:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1055              		.loc 1 1191 0
 1056 00d6 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1057 00d8 FFF7FEFF 		bl	vPortClearInterruptMask	@
1192:FreeRTOS/queue.c **** 
1193:FreeRTOS/queue.c **** 	return xReturn;
 1058              		.loc 1 1193 0
 1059 00dc FB69     		ldr	r3, [r7, #28]	@ D.5969, xReturn
1194:FreeRTOS/queue.c **** }
 1060              		.loc 1 1194 0
 1061 00de 1846     		mov	r0, r3	@, <retval>
 1062 00e0 2037     		adds	r7, r7, #32	@,,
 1063              		.cfi_def_cfa_offset 8
 1064 00e2 BD46     		mov	sp, r7	@,
 1065              		.cfi_def_cfa_register 13
 1066              		@ sp needed	@
 1067 00e4 80BD     		pop	{r7, pc}	@
 1068              		.cfi_endproc
 1069              	.LFE8:
 1070              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1071 00e6 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1072              		.align	2
 1073              		.global	xQueueGenericReceive
 1074              		.thumb
 1075              		.thumb_func
 1076              		.type	xQueueGenericReceive, %function
 1077              	xQueueGenericReceive:
 1078              	.LFB9:
1195:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1196:FreeRTOS/queue.c **** 
1197:FreeRTOS/queue.c **** BaseT_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickT_t xTicksToWait, co
1198:FreeRTOS/queue.c **** {
 1079              		.loc 1 1198 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 40
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 41


 1083 0000 80B5     		push	{r7, lr}	@
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 8AB0     		sub	sp, sp, #40	@,,
 1088              		.cfi_def_cfa_offset 48
 1089 0004 00AF     		add	r7, sp, #0	@,,
 1090              		.cfi_def_cfa_register 7
 1091 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1092 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1093 000a 7A60     		str	r2, [r7, #4]	@ xTicksToWait, xTicksToWait
 1094 000c 3B60     		str	r3, [r7]	@ xJustPeeking, xJustPeeking
1199:FreeRTOS/queue.c **** BaseT_t xEntryTimeSet = pdFALSE;
 1095              		.loc 1 1199 0
 1096 000e 0023     		movs	r3, #0	@ tmp135,
 1097 0010 7B62     		str	r3, [r7, #36]	@ tmp135, xEntryTimeSet
1200:FreeRTOS/queue.c **** TimeOut_t xTimeOut;
1201:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1202:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1098              		.loc 1 1202 0
 1099 0012 FB68     		ldr	r3, [r7, #12]	@ tmp136, xQueue
 1100 0014 3B62     		str	r3, [r7, #32]	@ tmp136, pxQueue
1203:FreeRTOS/queue.c **** 
1204:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1101              		.loc 1 1204 0
 1102 0016 3B6A     		ldr	r3, [r7, #32]	@ tmp137, pxQueue
 1103 0018 002B     		cmp	r3, #0	@ tmp137,
 1104 001a 02D1     		bne	.L90	@,
 1105              		.loc 1 1204 0 is_stmt 0 discriminator 1
 1106 001c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1107              	.L91:
 1108 0020 FEE7     		b	.L91	@
 1109              	.L90:
1205:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1110              		.loc 1 1205 0 is_stmt 1
 1111 0022 BB68     		ldr	r3, [r7, #8]	@ tmp138, pvBuffer
 1112 0024 002B     		cmp	r3, #0	@ tmp138,
 1113 0026 03D1     		bne	.L92	@,
 1114              		.loc 1 1205 0 is_stmt 0 discriminator 2
 1115 0028 3B6A     		ldr	r3, [r7, #32]	@ tmp139, pxQueue
 1116 002a 1B6C     		ldr	r3, [r3, #64]	@ D.5972, pxQueue_7->uxItemSize
 1117 002c 002B     		cmp	r3, #0	@ D.5972,
 1118 002e 01D1     		bne	.L93	@,
 1119              	.L92:
 1120              		.loc 1 1205 0 discriminator 3
 1121 0030 0123     		movs	r3, #1	@ D.5970,
 1122 0032 00E0     		b	.L94	@
 1123              	.L93:
 1124              		.loc 1 1205 0 discriminator 4
 1125 0034 0023     		movs	r3, #0	@ D.5970,
 1126              	.L94:
 1127              		.loc 1 1205 0 discriminator 6
 1128 0036 002B     		cmp	r3, #0	@ D.5970,
 1129 0038 02D1     		bne	.L95	@,
 1130              		.loc 1 1205 0 discriminator 7
 1131 003a FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1132              	.L96:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 42


 1133              		.loc 1 1205 0 discriminator 2
 1134 003e FEE7     		b	.L96	@
 1135              	.L95:
1206:FreeRTOS/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1207:FreeRTOS/queue.c **** 	{
1208:FreeRTOS/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1209:FreeRTOS/queue.c **** 	}
1210:FreeRTOS/queue.c **** 	#endif
1211:FreeRTOS/queue.c **** 
1212:FreeRTOS/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1213:FreeRTOS/queue.c **** 	statements within the function itself.  This is done in the interest
1214:FreeRTOS/queue.c **** 	of execution time efficiency. */
1215:FreeRTOS/queue.c **** 
1216:FreeRTOS/queue.c **** 	for( ;; )
1217:FreeRTOS/queue.c **** 	{
1218:FreeRTOS/queue.c **** 		taskENTER_CRITICAL();
 1136              		.loc 1 1218 0 is_stmt 1
 1137 0040 FFF7FEFF 		bl	vPortEnterCritical	@
1219:FreeRTOS/queue.c **** 		{
1220:FreeRTOS/queue.c **** 			/* Is there data in the queue now?  To be running we must be
1221:FreeRTOS/queue.c **** 			the highest priority task wanting to access the queue. */
1222:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1138              		.loc 1 1222 0
 1139 0044 3B6A     		ldr	r3, [r7, #32]	@ tmp140, pxQueue
 1140 0046 9B6B     		ldr	r3, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
 1141 0048 002B     		cmp	r3, #0	@ D.5972,
 1142 004a 3BD0     		beq	.L97	@,
1223:FreeRTOS/queue.c **** 			{
1224:FreeRTOS/queue.c **** 				/* Remember the read position in case the queue is only being
1225:FreeRTOS/queue.c **** 				peeked. */
1226:FreeRTOS/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1143              		.loc 1 1226 0
 1144 004c 3B6A     		ldr	r3, [r7, #32]	@ tmp141, pxQueue
 1145 004e DB68     		ldr	r3, [r3, #12]	@ tmp142, pxQueue_7->u.pcReadFrom
 1146 0050 FB61     		str	r3, [r7, #28]	@ tmp142, pcOriginalReadPosition
1227:FreeRTOS/queue.c **** 
1228:FreeRTOS/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1147              		.loc 1 1228 0
 1148 0052 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1149 0054 B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1150 0056 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1229:FreeRTOS/queue.c **** 
1230:FreeRTOS/queue.c **** 				if( xJustPeeking == pdFALSE )
 1151              		.loc 1 1230 0
 1152 005a 3B68     		ldr	r3, [r7]	@ tmp143, xJustPeeking
 1153 005c 002B     		cmp	r3, #0	@ tmp143,
 1154 005e 1CD1     		bne	.L98	@,
1231:FreeRTOS/queue.c **** 				{
1232:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1233:FreeRTOS/queue.c **** 
1234:FreeRTOS/queue.c **** 					/* Actually removing data, not just peeking. */
1235:FreeRTOS/queue.c **** 					--( pxQueue->uxMessagesWaiting );
 1155              		.loc 1 1235 0
 1156 0060 3B6A     		ldr	r3, [r7, #32]	@ tmp144, pxQueue
 1157 0062 9B6B     		ldr	r3, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
 1158 0064 5A1E     		subs	r2, r3, #1	@ D.5972, D.5972,
 1159 0066 3B6A     		ldr	r3, [r7, #32]	@ tmp145, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 43


 1160 0068 9A63     		str	r2, [r3, #56]	@ D.5972, pxQueue_7->uxMessagesWaiting
1236:FreeRTOS/queue.c **** 
1237:FreeRTOS/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1238:FreeRTOS/queue.c **** 					{
1239:FreeRTOS/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1161              		.loc 1 1239 0
 1162 006a 3B6A     		ldr	r3, [r7, #32]	@ tmp146, pxQueue
 1163 006c 1B68     		ldr	r3, [r3]	@ D.5974, pxQueue_7->pcHead
 1164 006e 002B     		cmp	r3, #0	@ D.5974,
 1165 0070 04D1     		bne	.L99	@,
1240:FreeRTOS/queue.c **** 						{
1241:FreeRTOS/queue.c **** 							/* Record the information required to implement
1242:FreeRTOS/queue.c **** 							priority inheritance should it become necessary. */
1243:FreeRTOS/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
 1166              		.loc 1 1243 0
 1167 0072 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount	@
 1168 0076 0246     		mov	r2, r0	@ D.5976,
 1169 0078 3B6A     		ldr	r3, [r7, #32]	@ tmp147, pxQueue
 1170 007a 5A60     		str	r2, [r3, #4]	@ D.5976, pxQueue_7->pcTail
 1171              	.L99:
1244:FreeRTOS/queue.c **** 						}
1245:FreeRTOS/queue.c **** 						else
1246:FreeRTOS/queue.c **** 						{
1247:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1248:FreeRTOS/queue.c **** 						}
1249:FreeRTOS/queue.c **** 					}
1250:FreeRTOS/queue.c **** 					#endif /* configUSE_MUTEXES */
1251:FreeRTOS/queue.c **** 
1252:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1172              		.loc 1 1252 0
 1173 007c 3B6A     		ldr	r3, [r7, #32]	@ tmp148, pxQueue
 1174 007e 1B69     		ldr	r3, [r3, #16]	@ D.5972, pxQueue_7->xTasksWaitingToSend.uxNumberOfItems
 1175 0080 002B     		cmp	r3, #0	@ D.5972,
 1176 0082 1BD0     		beq	.L100	@,
1253:FreeRTOS/queue.c **** 					{
1254:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
 1177              		.loc 1 1254 0
 1178 0084 3B6A     		ldr	r3, [r7, #32]	@ tmp149, pxQueue
 1179 0086 1033     		adds	r3, r3, #16	@ D.5975, tmp149,
 1180 0088 1846     		mov	r0, r3	@, D.5975
 1181 008a FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1182 008e 0346     		mov	r3, r0	@ D.5973,
 1183 0090 012B     		cmp	r3, #1	@ D.5973,
 1184 0092 13D1     		bne	.L100	@,
1255:FreeRTOS/queue.c **** 						{
1256:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1185              		.loc 1 1256 0
 1186 0094 FFF7FEFF 		bl	vPortYield	@
 1187 0098 10E0     		b	.L100	@
 1188              	.L98:
1257:FreeRTOS/queue.c **** 						}
1258:FreeRTOS/queue.c **** 						else
1259:FreeRTOS/queue.c **** 						{
1260:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1261:FreeRTOS/queue.c **** 						}
1262:FreeRTOS/queue.c **** 					}
1263:FreeRTOS/queue.c **** 					else
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 44


1264:FreeRTOS/queue.c **** 					{
1265:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1266:FreeRTOS/queue.c **** 					}
1267:FreeRTOS/queue.c **** 				}
1268:FreeRTOS/queue.c **** 				else
1269:FreeRTOS/queue.c **** 				{
1270:FreeRTOS/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1271:FreeRTOS/queue.c **** 
1272:FreeRTOS/queue.c **** 					/* The data is not being removed, so reset the read
1273:FreeRTOS/queue.c **** 					pointer. */
1274:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1189              		.loc 1 1274 0
 1190 009a 3B6A     		ldr	r3, [r7, #32]	@ tmp150, pxQueue
 1191 009c FA69     		ldr	r2, [r7, #28]	@ tmp151, pcOriginalReadPosition
 1192 009e DA60     		str	r2, [r3, #12]	@ tmp151, pxQueue_7->u.pcReadFrom
1275:FreeRTOS/queue.c **** 
1276:FreeRTOS/queue.c **** 					/* The data is being left in the queue, so see if there are
1277:FreeRTOS/queue.c **** 					any other tasks waiting for the data. */
1278:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1193              		.loc 1 1278 0
 1194 00a0 3B6A     		ldr	r3, [r7, #32]	@ tmp152, pxQueue
 1195 00a2 5B6A     		ldr	r3, [r3, #36]	@ D.5972, pxQueue_7->xTasksWaitingToReceive.uxNumberOfItems
 1196 00a4 002B     		cmp	r3, #0	@ D.5972,
 1197 00a6 09D0     		beq	.L100	@,
1279:FreeRTOS/queue.c **** 					{
1280:FreeRTOS/queue.c **** 						/* Tasks that are removed from the event list will get added to
1281:FreeRTOS/queue.c **** 						the pending ready list as the scheduler is still suspended. */
1282:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1198              		.loc 1 1282 0
 1199 00a8 3B6A     		ldr	r3, [r7, #32]	@ tmp153, pxQueue
 1200 00aa 2433     		adds	r3, r3, #36	@ D.5975, tmp153,
 1201 00ac 1846     		mov	r0, r3	@, D.5975
 1202 00ae FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1203 00b2 0346     		mov	r3, r0	@ D.5973,
 1204 00b4 002B     		cmp	r3, #0	@ D.5973,
 1205 00b6 01D0     		beq	.L100	@,
1283:FreeRTOS/queue.c **** 						{
1284:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority than this task. */
1285:FreeRTOS/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1206              		.loc 1 1285 0
 1207 00b8 FFF7FEFF 		bl	vPortYield	@
 1208              	.L100:
1286:FreeRTOS/queue.c **** 						}
1287:FreeRTOS/queue.c **** 						else
1288:FreeRTOS/queue.c **** 						{
1289:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:FreeRTOS/queue.c **** 						}
1291:FreeRTOS/queue.c **** 					}
1292:FreeRTOS/queue.c **** 					else
1293:FreeRTOS/queue.c **** 					{
1294:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1295:FreeRTOS/queue.c **** 					}
1296:FreeRTOS/queue.c **** 				}
1297:FreeRTOS/queue.c **** 
1298:FreeRTOS/queue.c **** 				taskEXIT_CRITICAL();
 1209              		.loc 1 1298 0
 1210 00bc FFF7FEFF 		bl	vPortExitCritical	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 45


1299:FreeRTOS/queue.c **** 				return pdPASS;
 1211              		.loc 1 1299 0
 1212 00c0 0123     		movs	r3, #1	@ D.5971,
 1213 00c2 66E0     		b	.L111	@
 1214              	.L97:
1300:FreeRTOS/queue.c **** 			}
1301:FreeRTOS/queue.c **** 			else
1302:FreeRTOS/queue.c **** 			{
1303:FreeRTOS/queue.c **** 				if( xTicksToWait == ( TickT_t ) 0 )
 1215              		.loc 1 1303 0
 1216 00c4 7B68     		ldr	r3, [r7, #4]	@ D.5972, xTicksToWait
 1217 00c6 002B     		cmp	r3, #0	@ D.5972,
 1218 00c8 03D1     		bne	.L102	@,
1304:FreeRTOS/queue.c **** 				{
1305:FreeRTOS/queue.c **** 					/* The queue was empty and no block time is specified (or
1306:FreeRTOS/queue.c **** 					the block time has expired) so leave now. */
1307:FreeRTOS/queue.c **** 					taskEXIT_CRITICAL();
 1219              		.loc 1 1307 0
 1220 00ca FFF7FEFF 		bl	vPortExitCritical	@
1308:FreeRTOS/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1309:FreeRTOS/queue.c **** 					return errQUEUE_EMPTY;
 1221              		.loc 1 1309 0
 1222 00ce 0023     		movs	r3, #0	@ D.5971,
 1223 00d0 5FE0     		b	.L111	@
 1224              	.L102:
1310:FreeRTOS/queue.c **** 				}
1311:FreeRTOS/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1225              		.loc 1 1311 0
 1226 00d2 7B6A     		ldr	r3, [r7, #36]	@ tmp154, xEntryTimeSet
 1227 00d4 002B     		cmp	r3, #0	@ tmp154,
 1228 00d6 06D1     		bne	.L103	@,
1312:FreeRTOS/queue.c **** 				{
1313:FreeRTOS/queue.c **** 					/* The queue was empty and a block time was specified so
1314:FreeRTOS/queue.c **** 					configure the timeout structure. */
1315:FreeRTOS/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1229              		.loc 1 1315 0
 1230 00d8 07F11403 		add	r3, r7, #20	@ tmp155,,
 1231 00dc 1846     		mov	r0, r3	@, tmp155
 1232 00de FFF7FEFF 		bl	vTaskSetTimeOutState	@
1316:FreeRTOS/queue.c **** 					xEntryTimeSet = pdTRUE;
 1233              		.loc 1 1316 0
 1234 00e2 0123     		movs	r3, #1	@ tmp156,
 1235 00e4 7B62     		str	r3, [r7, #36]	@ tmp156, xEntryTimeSet
 1236              	.L103:
1317:FreeRTOS/queue.c **** 				}
1318:FreeRTOS/queue.c **** 				else
1319:FreeRTOS/queue.c **** 				{
1320:FreeRTOS/queue.c **** 					/* Entry time was already set. */
1321:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1322:FreeRTOS/queue.c **** 				}
1323:FreeRTOS/queue.c **** 			}
1324:FreeRTOS/queue.c **** 		}
1325:FreeRTOS/queue.c **** 		taskEXIT_CRITICAL();
 1237              		.loc 1 1325 0
 1238 00e6 FFF7FEFF 		bl	vPortExitCritical	@
1326:FreeRTOS/queue.c **** 
1327:FreeRTOS/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 46


1328:FreeRTOS/queue.c **** 		now the critical section has been exited. */
1329:FreeRTOS/queue.c **** 
1330:FreeRTOS/queue.c **** 		vTaskSuspendAll();
 1239              		.loc 1 1330 0
 1240 00ea FFF7FEFF 		bl	vTaskSuspendAll	@
1331:FreeRTOS/queue.c **** 		prvLockQueue( pxQueue );
 1241              		.loc 1 1331 0
 1242 00ee FFF7FEFF 		bl	vPortEnterCritical	@
 1243 00f2 3B6A     		ldr	r3, [r7, #32]	@ tmp157, pxQueue
 1244 00f4 5B6C     		ldr	r3, [r3, #68]	@ D.5973, pxQueue_7->xRxLock
 1245 00f6 B3F1FF3F 		cmp	r3, #-1	@ D.5973,
 1246 00fa 02D1     		bne	.L104	@,
 1247              		.loc 1 1331 0 is_stmt 0 discriminator 1
 1248 00fc 3B6A     		ldr	r3, [r7, #32]	@ tmp158, pxQueue
 1249 00fe 0022     		movs	r2, #0	@ tmp159,
 1250 0100 5A64     		str	r2, [r3, #68]	@ tmp159, pxQueue_7->xRxLock
 1251              	.L104:
 1252              		.loc 1 1331 0 discriminator 3
 1253 0102 3B6A     		ldr	r3, [r7, #32]	@ tmp160, pxQueue
 1254 0104 9B6C     		ldr	r3, [r3, #72]	@ D.5973, pxQueue_7->xTxLock
 1255 0106 B3F1FF3F 		cmp	r3, #-1	@ D.5973,
 1256 010a 02D1     		bne	.L105	@,
 1257              		.loc 1 1331 0 discriminator 4
 1258 010c 3B6A     		ldr	r3, [r7, #32]	@ tmp161, pxQueue
 1259 010e 0022     		movs	r2, #0	@ tmp162,
 1260 0110 9A64     		str	r2, [r3, #72]	@ tmp162, pxQueue_7->xTxLock
 1261              	.L105:
 1262              		.loc 1 1331 0 discriminator 6
 1263 0112 FFF7FEFF 		bl	vPortExitCritical	@
1332:FreeRTOS/queue.c **** 
1333:FreeRTOS/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1334:FreeRTOS/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1264              		.loc 1 1334 0 is_stmt 1 discriminator 6
 1265 0116 07F11402 		add	r2, r7, #20	@ tmp163,,
 1266 011a 3B1D     		adds	r3, r7, #4	@ tmp164,,
 1267 011c 1046     		mov	r0, r2	@, tmp163
 1268 011e 1946     		mov	r1, r3	@, tmp164
 1269 0120 FFF7FEFF 		bl	xTaskCheckForTimeOut	@
 1270 0124 0346     		mov	r3, r0	@ D.5973,
 1271 0126 002B     		cmp	r3, #0	@ D.5973,
 1272 0128 2BD1     		bne	.L106	@,
1335:FreeRTOS/queue.c **** 		{
1336:FreeRTOS/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1273              		.loc 1 1336 0
 1274 012a 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1275 012c FFF7FEFF 		bl	prvIsQueueEmpty	@
 1276 0130 0346     		mov	r3, r0	@ D.5973,
 1277 0132 002B     		cmp	r3, #0	@ D.5973,
 1278 0134 1FD0     		beq	.L107	@,
1337:FreeRTOS/queue.c **** 			{
1338:FreeRTOS/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1339:FreeRTOS/queue.c **** 
1340:FreeRTOS/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1341:FreeRTOS/queue.c **** 				{
1342:FreeRTOS/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1279              		.loc 1 1342 0
 1280 0136 3B6A     		ldr	r3, [r7, #32]	@ tmp165, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 47


 1281 0138 1B68     		ldr	r3, [r3]	@ D.5974, pxQueue_7->pcHead
 1282 013a 002B     		cmp	r3, #0	@ D.5974,
 1283 013c 08D1     		bne	.L108	@,
1343:FreeRTOS/queue.c **** 					{
1344:FreeRTOS/queue.c **** 						taskENTER_CRITICAL();
 1284              		.loc 1 1344 0
 1285 013e FFF7FEFF 		bl	vPortEnterCritical	@
1345:FreeRTOS/queue.c **** 						{
1346:FreeRTOS/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
 1286              		.loc 1 1346 0
 1287 0142 3B6A     		ldr	r3, [r7, #32]	@ tmp166, pxQueue
 1288 0144 5B68     		ldr	r3, [r3, #4]	@ D.5974, pxQueue_7->pcTail
 1289 0146 1846     		mov	r0, r3	@, D.5974
 1290 0148 FFF7FEFF 		bl	vTaskPriorityInherit	@
1347:FreeRTOS/queue.c **** 						}
1348:FreeRTOS/queue.c **** 						taskEXIT_CRITICAL();
 1291              		.loc 1 1348 0
 1292 014c FFF7FEFF 		bl	vPortExitCritical	@
 1293              	.L108:
1349:FreeRTOS/queue.c **** 					}
1350:FreeRTOS/queue.c **** 					else
1351:FreeRTOS/queue.c **** 					{
1352:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1353:FreeRTOS/queue.c **** 					}
1354:FreeRTOS/queue.c **** 				}
1355:FreeRTOS/queue.c **** 				#endif
1356:FreeRTOS/queue.c **** 
1357:FreeRTOS/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1294              		.loc 1 1357 0
 1295 0150 3B6A     		ldr	r3, [r7, #32]	@ tmp167, pxQueue
 1296 0152 03F12402 		add	r2, r3, #36	@ D.5975, tmp167,
 1297 0156 7B68     		ldr	r3, [r7, #4]	@ D.5972, xTicksToWait
 1298 0158 1046     		mov	r0, r2	@, D.5975
 1299 015a 1946     		mov	r1, r3	@, D.5972
 1300 015c FFF7FEFF 		bl	vTaskPlaceOnEventList	@
1358:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1301              		.loc 1 1358 0
 1302 0160 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1303 0162 FFF7FEFF 		bl	prvUnlockQueue	@
1359:FreeRTOS/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1304              		.loc 1 1359 0
 1305 0166 FFF7FEFF 		bl	xTaskResumeAll	@
 1306 016a 0346     		mov	r3, r0	@ D.5973,
 1307 016c 002B     		cmp	r3, #0	@ D.5973,
 1308 016e 0FD1     		bne	.L110	@,
1360:FreeRTOS/queue.c **** 				{
1361:FreeRTOS/queue.c **** 					portYIELD_WITHIN_API();
 1309              		.loc 1 1361 0
 1310 0170 FFF7FEFF 		bl	vPortYield	@
 1311 0174 0CE0     		b	.L110	@
 1312              	.L107:
1362:FreeRTOS/queue.c **** 				}
1363:FreeRTOS/queue.c **** 				else
1364:FreeRTOS/queue.c **** 				{
1365:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1366:FreeRTOS/queue.c **** 				}
1367:FreeRTOS/queue.c **** 			}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 48


1368:FreeRTOS/queue.c **** 			else
1369:FreeRTOS/queue.c **** 			{
1370:FreeRTOS/queue.c **** 				/* Try again. */
1371:FreeRTOS/queue.c **** 				prvUnlockQueue( pxQueue );
 1313              		.loc 1 1371 0
 1314 0176 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1315 0178 FFF7FEFF 		bl	prvUnlockQueue	@
1372:FreeRTOS/queue.c **** 				( void ) xTaskResumeAll();
 1316              		.loc 1 1372 0
 1317 017c FFF7FEFF 		bl	xTaskResumeAll	@
 1318 0180 5EE7     		b	.L95	@
 1319              	.L106:
1373:FreeRTOS/queue.c **** 			}
1374:FreeRTOS/queue.c **** 		}
1375:FreeRTOS/queue.c **** 		else
1376:FreeRTOS/queue.c **** 		{
1377:FreeRTOS/queue.c **** 			prvUnlockQueue( pxQueue );
 1320              		.loc 1 1377 0
 1321 0182 386A     		ldr	r0, [r7, #32]	@, pxQueue
 1322 0184 FFF7FEFF 		bl	prvUnlockQueue	@
1378:FreeRTOS/queue.c **** 			( void ) xTaskResumeAll();
 1323              		.loc 1 1378 0
 1324 0188 FFF7FEFF 		bl	xTaskResumeAll	@
1379:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FAILED( pxQueue );
1380:FreeRTOS/queue.c **** 			return errQUEUE_EMPTY;
 1325              		.loc 1 1380 0
 1326 018c 0023     		movs	r3, #0	@ D.5971,
 1327 018e 00E0     		b	.L111	@
 1328              	.L110:
1381:FreeRTOS/queue.c **** 		}
1382:FreeRTOS/queue.c **** 	}
 1329              		.loc 1 1382 0 discriminator 5
 1330 0190 56E7     		b	.L95	@
 1331              	.L111:
1383:FreeRTOS/queue.c **** }
 1332              		.loc 1 1383 0 discriminator 6
 1333 0192 1846     		mov	r0, r3	@, <retval>
 1334 0194 2837     		adds	r7, r7, #40	@,,
 1335              		.cfi_def_cfa_offset 8
 1336 0196 BD46     		mov	sp, r7	@,
 1337              		.cfi_def_cfa_register 13
 1338              		@ sp needed	@
 1339 0198 80BD     		pop	{r7, pc}	@
 1340              		.cfi_endproc
 1341              	.LFE9:
 1342              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1343 019a 00BF     		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1344              		.align	2
 1345              		.global	xQueueReceiveFromISR
 1346              		.thumb
 1347              		.thumb_func
 1348              		.type	xQueueReceiveFromISR, %function
 1349              	xQueueReceiveFromISR:
 1350              	.LFB10:
1384:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1385:FreeRTOS/queue.c **** 
1386:FreeRTOS/queue.c **** BaseT_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseT_t * const pxHigher
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 49


1387:FreeRTOS/queue.c **** {
 1351              		.loc 1 1387 0
 1352              		.cfi_startproc
 1353              		@ args = 0, pretend = 0, frame = 32
 1354              		@ frame_needed = 1, uses_anonymous_args = 0
 1355 0000 80B5     		push	{r7, lr}	@
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 88B0     		sub	sp, sp, #32	@,,
 1360              		.cfi_def_cfa_offset 40
 1361 0004 00AF     		add	r7, sp, #0	@,,
 1362              		.cfi_def_cfa_register 7
 1363 0006 F860     		str	r0, [r7, #12]	@ xQueue, xQueue
 1364 0008 B960     		str	r1, [r7, #8]	@ pvBuffer, pvBuffer
 1365 000a 7A60     		str	r2, [r7, #4]	@ pxHigherPriorityTaskWoken, pxHigherPriorityTaskWoken
1388:FreeRTOS/queue.c **** BaseT_t xReturn;
1389:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1390:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1366              		.loc 1 1390 0
 1367 000c FB68     		ldr	r3, [r7, #12]	@ tmp123, xQueue
 1368 000e BB61     		str	r3, [r7, #24]	@ tmp123, pxQueue
1391:FreeRTOS/queue.c **** 
1392:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1369              		.loc 1 1392 0
 1370 0010 BB69     		ldr	r3, [r7, #24]	@ tmp124, pxQueue
 1371 0012 002B     		cmp	r3, #0	@ tmp124,
 1372 0014 02D1     		bne	.L113	@,
 1373              		.loc 1 1392 0 is_stmt 0 discriminator 1
 1374 0016 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1375              	.L114:
 1376 001a FEE7     		b	.L114	@
 1377              	.L113:
1393:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1378              		.loc 1 1393 0 is_stmt 1
 1379 001c BB68     		ldr	r3, [r7, #8]	@ tmp125, pvBuffer
 1380 001e 002B     		cmp	r3, #0	@ tmp125,
 1381 0020 03D1     		bne	.L115	@,
 1382              		.loc 1 1393 0 is_stmt 0 discriminator 2
 1383 0022 BB69     		ldr	r3, [r7, #24]	@ tmp126, pxQueue
 1384 0024 1B6C     		ldr	r3, [r3, #64]	@ D.5978, pxQueue_4->uxItemSize
 1385 0026 002B     		cmp	r3, #0	@ D.5978,
 1386 0028 01D1     		bne	.L116	@,
 1387              	.L115:
 1388              		.loc 1 1393 0 discriminator 3
 1389 002a 0123     		movs	r3, #1	@ D.5977,
 1390 002c 00E0     		b	.L117	@
 1391              	.L116:
 1392              		.loc 1 1393 0 discriminator 4
 1393 002e 0023     		movs	r3, #0	@ D.5977,
 1394              	.L117:
 1395              		.loc 1 1393 0 discriminator 6
 1396 0030 002B     		cmp	r3, #0	@ D.5977,
 1397 0032 02D1     		bne	.L118	@,
 1398              		.loc 1 1393 0 discriminator 7
 1399 0034 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1400              	.L119:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 50


 1401              		.loc 1 1393 0 discriminator 2
 1402 0038 FEE7     		b	.L119	@
 1403              	.L118:
1394:FreeRTOS/queue.c **** 
1395:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1396:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1397:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1398:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1399:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1400:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1401:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1402:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1403:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1404:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1405:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1406:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1407:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1408:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1409:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1404              		.loc 1 1409 0 is_stmt 1
 1405 003a FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1410:FreeRTOS/queue.c **** 
1411:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1406              		.loc 1 1411 0
 1407 003e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1408 0042 7861     		str	r0, [r7, #20]	@, uxSavedInterruptStatus
1412:FreeRTOS/queue.c **** 	{
1413:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1414:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1409              		.loc 1 1414 0
 1410 0044 BB69     		ldr	r3, [r7, #24]	@ tmp127, pxQueue
 1411 0046 9B6B     		ldr	r3, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
 1412 0048 002B     		cmp	r3, #0	@ D.5978,
 1413 004a 28D0     		beq	.L120	@,
1415:FreeRTOS/queue.c **** 		{
1416:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1417:FreeRTOS/queue.c **** 
1418:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1414              		.loc 1 1418 0
 1415 004c B869     		ldr	r0, [r7, #24]	@, pxQueue
 1416 004e B968     		ldr	r1, [r7, #8]	@, pvBuffer
 1417 0050 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1419:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
 1418              		.loc 1 1419 0
 1419 0054 BB69     		ldr	r3, [r7, #24]	@ tmp128, pxQueue
 1420 0056 9B6B     		ldr	r3, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
 1421 0058 5A1E     		subs	r2, r3, #1	@ D.5978, D.5978,
 1422 005a BB69     		ldr	r3, [r7, #24]	@ tmp129, pxQueue
 1423 005c 9A63     		str	r2, [r3, #56]	@ D.5978, pxQueue_4->uxMessagesWaiting
1420:FreeRTOS/queue.c **** 
1421:FreeRTOS/queue.c **** 			/* If the queue is locked the event list will not be modified.
1422:FreeRTOS/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1423:FreeRTOS/queue.c **** 			will know that an ISR has removed data while the queue was
1424:FreeRTOS/queue.c **** 			locked. */
1425:FreeRTOS/queue.c **** 			if( pxQueue->xRxLock == queueUNLOCKED )
 1424              		.loc 1 1425 0
 1425 005e BB69     		ldr	r3, [r7, #24]	@ tmp130, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 51


 1426 0060 5B6C     		ldr	r3, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1427 0062 B3F1FF3F 		cmp	r3, #-1	@ D.5979,
 1428 0066 12D1     		bne	.L121	@,
1426:FreeRTOS/queue.c **** 			{
1427:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1429              		.loc 1 1427 0
 1430 0068 BB69     		ldr	r3, [r7, #24]	@ tmp131, pxQueue
 1431 006a 1B69     		ldr	r3, [r3, #16]	@ D.5978, pxQueue_4->xTasksWaitingToSend.uxNumberOfItems
 1432 006c 002B     		cmp	r3, #0	@ D.5978,
 1433 006e 13D0     		beq	.L122	@,
1428:FreeRTOS/queue.c **** 				{
1429:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1434              		.loc 1 1429 0
 1435 0070 BB69     		ldr	r3, [r7, #24]	@ tmp132, pxQueue
 1436 0072 1033     		adds	r3, r3, #16	@ D.5980, tmp132,
 1437 0074 1846     		mov	r0, r3	@, D.5980
 1438 0076 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 1439 007a 0346     		mov	r3, r0	@ D.5979,
 1440 007c 002B     		cmp	r3, #0	@ D.5979,
 1441 007e 0BD0     		beq	.L122	@,
1430:FreeRTOS/queue.c **** 					{
1431:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority than us so
1432:FreeRTOS/queue.c **** 						force a context switch. */
1433:FreeRTOS/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 1442              		.loc 1 1433 0
 1443 0080 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxHigherPriorityTaskWoken
 1444 0082 002B     		cmp	r3, #0	@ tmp133,
 1445 0084 08D0     		beq	.L122	@,
1434:FreeRTOS/queue.c **** 						{
1435:FreeRTOS/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 1446              		.loc 1 1435 0
 1447 0086 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxHigherPriorityTaskWoken
 1448 0088 0122     		movs	r2, #1	@ tmp135,
 1449 008a 1A60     		str	r2, [r3]	@ tmp135, *pxHigherPriorityTaskWoken_17(D)
 1450 008c 04E0     		b	.L122	@
 1451              	.L121:
1436:FreeRTOS/queue.c **** 						}
1437:FreeRTOS/queue.c **** 						else
1438:FreeRTOS/queue.c **** 						{
1439:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1440:FreeRTOS/queue.c **** 						}
1441:FreeRTOS/queue.c **** 					}
1442:FreeRTOS/queue.c **** 					else
1443:FreeRTOS/queue.c **** 					{
1444:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1445:FreeRTOS/queue.c **** 					}
1446:FreeRTOS/queue.c **** 				}
1447:FreeRTOS/queue.c **** 				else
1448:FreeRTOS/queue.c **** 				{
1449:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1450:FreeRTOS/queue.c **** 				}
1451:FreeRTOS/queue.c **** 			}
1452:FreeRTOS/queue.c **** 			else
1453:FreeRTOS/queue.c **** 			{
1454:FreeRTOS/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1455:FreeRTOS/queue.c **** 				knows that data was removed while it was locked. */
1456:FreeRTOS/queue.c **** 				++( pxQueue->xRxLock );
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 52


 1452              		.loc 1 1456 0
 1453 008e BB69     		ldr	r3, [r7, #24]	@ tmp136, pxQueue
 1454 0090 5B6C     		ldr	r3, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1455 0092 5A1C     		adds	r2, r3, #1	@ D.5979, D.5979,
 1456 0094 BB69     		ldr	r3, [r7, #24]	@ tmp137, pxQueue
 1457 0096 5A64     		str	r2, [r3, #68]	@ D.5979, pxQueue_4->xRxLock
 1458              	.L122:
1457:FreeRTOS/queue.c **** 			}
1458:FreeRTOS/queue.c **** 
1459:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1459              		.loc 1 1459 0
 1460 0098 0123     		movs	r3, #1	@ tmp138,
 1461 009a FB61     		str	r3, [r7, #28]	@ tmp138, xReturn
 1462 009c 01E0     		b	.L123	@
 1463              	.L120:
1460:FreeRTOS/queue.c **** 		}
1461:FreeRTOS/queue.c **** 		else
1462:FreeRTOS/queue.c **** 		{
1463:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1464              		.loc 1 1463 0
 1465 009e 0023     		movs	r3, #0	@ tmp139,
 1466 00a0 FB61     		str	r3, [r7, #28]	@ tmp139, xReturn
 1467              	.L123:
1464:FreeRTOS/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1465:FreeRTOS/queue.c **** 		}
1466:FreeRTOS/queue.c **** 	}
1467:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1468              		.loc 1 1467 0
 1469 00a2 7869     		ldr	r0, [r7, #20]	@, uxSavedInterruptStatus
 1470 00a4 FFF7FEFF 		bl	vPortClearInterruptMask	@
1468:FreeRTOS/queue.c **** 
1469:FreeRTOS/queue.c **** 	return xReturn;
 1471              		.loc 1 1469 0
 1472 00a8 FB69     		ldr	r3, [r7, #28]	@ D.5981, xReturn
1470:FreeRTOS/queue.c **** }
 1473              		.loc 1 1470 0
 1474 00aa 1846     		mov	r0, r3	@, <retval>
 1475 00ac 2037     		adds	r7, r7, #32	@,,
 1476              		.cfi_def_cfa_offset 8
 1477 00ae BD46     		mov	sp, r7	@,
 1478              		.cfi_def_cfa_register 13
 1479              		@ sp needed	@
 1480 00b0 80BD     		pop	{r7, pc}	@
 1481              		.cfi_endproc
 1482              	.LFE10:
 1483              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1484 00b2 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1485              		.align	2
 1486              		.global	xQueuePeekFromISR
 1487              		.thumb
 1488              		.thumb_func
 1489              		.type	xQueuePeekFromISR, %function
 1490              	xQueuePeekFromISR:
 1491              	.LFB11:
1471:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1472:FreeRTOS/queue.c **** 
1473:FreeRTOS/queue.c **** BaseT_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 53


1474:FreeRTOS/queue.c **** {
 1492              		.loc 1 1474 0
 1493              		.cfi_startproc
 1494              		@ args = 0, pretend = 0, frame = 24
 1495              		@ frame_needed = 1, uses_anonymous_args = 0
 1496 0000 80B5     		push	{r7, lr}	@
 1497              		.cfi_def_cfa_offset 8
 1498              		.cfi_offset 7, -8
 1499              		.cfi_offset 14, -4
 1500 0002 86B0     		sub	sp, sp, #24	@,,
 1501              		.cfi_def_cfa_offset 32
 1502 0004 00AF     		add	r7, sp, #0	@,,
 1503              		.cfi_def_cfa_register 7
 1504 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1505 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1475:FreeRTOS/queue.c **** BaseT_t xReturn;
1476:FreeRTOS/queue.c **** UBaseT_t uxSavedInterruptStatus;
1477:FreeRTOS/queue.c **** int8_t *pcOriginalReadPosition;
1478:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1506              		.loc 1 1478 0
 1507 000a 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 1508 000c 3B61     		str	r3, [r7, #16]	@ tmp115, pxQueue
1479:FreeRTOS/queue.c **** 
1480:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1509              		.loc 1 1480 0
 1510 000e 3B69     		ldr	r3, [r7, #16]	@ tmp116, pxQueue
 1511 0010 002B     		cmp	r3, #0	@ tmp116,
 1512 0012 02D1     		bne	.L126	@,
 1513              		.loc 1 1480 0 is_stmt 0 discriminator 1
 1514 0014 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1515              	.L127:
 1516 0018 FEE7     		b	.L127	@
 1517              	.L126:
1481:FreeRTOS/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseT_t ) 0U ) ) );
 1518              		.loc 1 1481 0 is_stmt 1
 1519 001a 3B68     		ldr	r3, [r7]	@ tmp117, pvBuffer
 1520 001c 002B     		cmp	r3, #0	@ tmp117,
 1521 001e 03D1     		bne	.L128	@,
 1522              		.loc 1 1481 0 is_stmt 0 discriminator 2
 1523 0020 3B69     		ldr	r3, [r7, #16]	@ tmp118, pxQueue
 1524 0022 1B6C     		ldr	r3, [r3, #64]	@ D.5983, pxQueue_4->uxItemSize
 1525 0024 002B     		cmp	r3, #0	@ D.5983,
 1526 0026 01D1     		bne	.L129	@,
 1527              	.L128:
 1528              		.loc 1 1481 0 discriminator 3
 1529 0028 0123     		movs	r3, #1	@ D.5982,
 1530 002a 00E0     		b	.L130	@
 1531              	.L129:
 1532              		.loc 1 1481 0 discriminator 4
 1533 002c 0023     		movs	r3, #0	@ D.5982,
 1534              	.L130:
 1535              		.loc 1 1481 0 discriminator 6
 1536 002e 002B     		cmp	r3, #0	@ D.5982,
 1537 0030 02D1     		bne	.L131	@,
 1538              		.loc 1 1481 0 discriminator 7
 1539 0032 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1540              	.L132:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 54


 1541              		.loc 1 1481 0 discriminator 2
 1542 0036 FEE7     		b	.L132	@
 1543              	.L131:
1482:FreeRTOS/queue.c **** 
1483:FreeRTOS/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1484:FreeRTOS/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1485:FreeRTOS/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1486:FreeRTOS/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1487:FreeRTOS/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1488:FreeRTOS/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1489:FreeRTOS/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1490:FreeRTOS/queue.c **** 	assigned a priority above the configured maximum system call priority.
1491:FreeRTOS/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1492:FreeRTOS/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1493:FreeRTOS/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1494:FreeRTOS/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1495:FreeRTOS/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1496:FreeRTOS/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1497:FreeRTOS/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1544              		.loc 1 1497 0 is_stmt 1
 1545 0038 FFF7FEFF 		bl	vPortValidateInterruptPriority	@
1498:FreeRTOS/queue.c **** 
1499:FreeRTOS/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1546              		.loc 1 1499 0
 1547 003c FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1548 0040 F860     		str	r0, [r7, #12]	@, uxSavedInterruptStatus
1500:FreeRTOS/queue.c **** 	{
1501:FreeRTOS/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1502:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 1549              		.loc 1 1502 0
 1550 0042 3B69     		ldr	r3, [r7, #16]	@ tmp119, pxQueue
 1551 0044 9B6B     		ldr	r3, [r3, #56]	@ D.5983, pxQueue_4->uxMessagesWaiting
 1552 0046 002B     		cmp	r3, #0	@ D.5983,
 1553 0048 0CD0     		beq	.L133	@,
1503:FreeRTOS/queue.c **** 		{
1504:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1505:FreeRTOS/queue.c **** 
1506:FreeRTOS/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1507:FreeRTOS/queue.c **** 			actually being removed from the queue. */
1508:FreeRTOS/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1554              		.loc 1 1508 0
 1555 004a 3B69     		ldr	r3, [r7, #16]	@ tmp120, pxQueue
 1556 004c DB68     		ldr	r3, [r3, #12]	@ tmp121, pxQueue_4->u.pcReadFrom
 1557 004e BB60     		str	r3, [r7, #8]	@ tmp121, pcOriginalReadPosition
1509:FreeRTOS/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1558              		.loc 1 1509 0
 1559 0050 3869     		ldr	r0, [r7, #16]	@, pxQueue
 1560 0052 3968     		ldr	r1, [r7]	@, pvBuffer
 1561 0054 FFF7FEFF 		bl	prvCopyDataFromQueue	@
1510:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1562              		.loc 1 1510 0
 1563 0058 3B69     		ldr	r3, [r7, #16]	@ tmp122, pxQueue
 1564 005a BA68     		ldr	r2, [r7, #8]	@ tmp123, pcOriginalReadPosition
 1565 005c DA60     		str	r2, [r3, #12]	@ tmp123, pxQueue_4->u.pcReadFrom
1511:FreeRTOS/queue.c **** 
1512:FreeRTOS/queue.c **** 			xReturn = pdPASS;
 1566              		.loc 1 1512 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 55


 1567 005e 0123     		movs	r3, #1	@ tmp124,
 1568 0060 7B61     		str	r3, [r7, #20]	@ tmp124, xReturn
 1569 0062 01E0     		b	.L134	@
 1570              	.L133:
1513:FreeRTOS/queue.c **** 		}
1514:FreeRTOS/queue.c **** 		else
1515:FreeRTOS/queue.c **** 		{
1516:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
 1571              		.loc 1 1516 0
 1572 0064 0023     		movs	r3, #0	@ tmp125,
 1573 0066 7B61     		str	r3, [r7, #20]	@ tmp125, xReturn
 1574              	.L134:
1517:FreeRTOS/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1518:FreeRTOS/queue.c **** 		}
1519:FreeRTOS/queue.c **** 	}
1520:FreeRTOS/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 1575              		.loc 1 1520 0
 1576 0068 F868     		ldr	r0, [r7, #12]	@, uxSavedInterruptStatus
 1577 006a FFF7FEFF 		bl	vPortClearInterruptMask	@
1521:FreeRTOS/queue.c **** 
1522:FreeRTOS/queue.c **** 	return xReturn;
 1578              		.loc 1 1522 0
 1579 006e 7B69     		ldr	r3, [r7, #20]	@ D.5984, xReturn
1523:FreeRTOS/queue.c **** }
 1580              		.loc 1 1523 0
 1581 0070 1846     		mov	r0, r3	@, <retval>
 1582 0072 1837     		adds	r7, r7, #24	@,,
 1583              		.cfi_def_cfa_offset 8
 1584 0074 BD46     		mov	sp, r7	@,
 1585              		.cfi_def_cfa_register 13
 1586              		@ sp needed	@
 1587 0076 80BD     		pop	{r7, pc}	@
 1588              		.cfi_endproc
 1589              	.LFE11:
 1590              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1591              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1592              		.align	2
 1593              		.global	uxQueueMessagesWaiting
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	uxQueueMessagesWaiting, %function
 1597              	uxQueueMessagesWaiting:
 1598              	.LFB12:
1524:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1525:FreeRTOS/queue.c **** 
1526:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1527:FreeRTOS/queue.c **** {
 1599              		.loc 1 1527 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 16
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 80B5     		push	{r7, lr}	@
 1604              		.cfi_def_cfa_offset 8
 1605              		.cfi_offset 7, -8
 1606              		.cfi_offset 14, -4
 1607 0002 84B0     		sub	sp, sp, #16	@,,
 1608              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 56


 1609 0004 00AF     		add	r7, sp, #0	@,,
 1610              		.cfi_def_cfa_register 7
 1611 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1528:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1529:FreeRTOS/queue.c **** 
1530:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1612              		.loc 1 1530 0
 1613 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1614 000a 002B     		cmp	r3, #0	@ tmp112,
 1615 000c 02D1     		bne	.L137	@,
 1616              		.loc 1 1530 0 is_stmt 0 discriminator 1
 1617 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1618              	.L138:
 1619 0012 FEE7     		b	.L138	@
 1620              	.L137:
1531:FreeRTOS/queue.c **** 
1532:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1621              		.loc 1 1532 0 is_stmt 1
 1622 0014 FFF7FEFF 		bl	vPortEnterCritical	@
1533:FreeRTOS/queue.c **** 	{
1534:FreeRTOS/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1623              		.loc 1 1534 0
 1624 0018 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1625 001a 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1626 001c FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1535:FreeRTOS/queue.c **** 	}
1536:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1627              		.loc 1 1536 0
 1628 001e FFF7FEFF 		bl	vPortExitCritical	@
1537:FreeRTOS/queue.c **** 
1538:FreeRTOS/queue.c **** 	return uxReturn;
 1629              		.loc 1 1538 0
 1630 0022 FB68     		ldr	r3, [r7, #12]	@ D.5985, uxReturn
1539:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1631              		.loc 1 1539 0
 1632 0024 1846     		mov	r0, r3	@, <retval>
 1633 0026 1037     		adds	r7, r7, #16	@,,
 1634              		.cfi_def_cfa_offset 8
 1635 0028 BD46     		mov	sp, r7	@,
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed	@
 1638 002a 80BD     		pop	{r7, pc}	@
 1639              		.cfi_endproc
 1640              	.LFE12:
 1641              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1642              		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1643              		.align	2
 1644              		.global	uxQueueSpacesAvailable
 1645              		.thumb
 1646              		.thumb_func
 1647              		.type	uxQueueSpacesAvailable, %function
 1648              	uxQueueSpacesAvailable:
 1649              	.LFB13:
1540:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1541:FreeRTOS/queue.c **** 
1542:FreeRTOS/queue.c **** UBaseT_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1543:FreeRTOS/queue.c **** {
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 57


 1650              		.loc 1 1543 0
 1651              		.cfi_startproc
 1652              		@ args = 0, pretend = 0, frame = 16
 1653              		@ frame_needed = 1, uses_anonymous_args = 0
 1654 0000 80B5     		push	{r7, lr}	@
 1655              		.cfi_def_cfa_offset 8
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 84B0     		sub	sp, sp, #16	@,,
 1659              		.cfi_def_cfa_offset 24
 1660 0004 00AF     		add	r7, sp, #0	@,,
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1544:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1545:FreeRTOS/queue.c **** Queue_t *pxQueue;
1546:FreeRTOS/queue.c **** 
1547:FreeRTOS/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 1663              		.loc 1 1547 0
 1664 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 1665 000a FB60     		str	r3, [r7, #12]	@ tmp114, pxQueue
1548:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1666              		.loc 1 1548 0
 1667 000c FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1668 000e 002B     		cmp	r3, #0	@ tmp115,
 1669 0010 02D1     		bne	.L141	@,
 1670              		.loc 1 1548 0 is_stmt 0 discriminator 1
 1671 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1672              	.L142:
 1673 0016 FEE7     		b	.L142	@
 1674              	.L141:
1549:FreeRTOS/queue.c **** 
1550:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 1675              		.loc 1 1550 0 is_stmt 1
 1676 0018 FFF7FEFF 		bl	vPortEnterCritical	@
1551:FreeRTOS/queue.c **** 	{
1552:FreeRTOS/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
 1677              		.loc 1 1552 0
 1678 001c FB68     		ldr	r3, [r7, #12]	@ tmp116, pxQueue
 1679 001e DA6B     		ldr	r2, [r3, #60]	@ D.5986, pxQueue_2->uxLength
 1680 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, pxQueue
 1681 0022 9B6B     		ldr	r3, [r3, #56]	@ D.5986, pxQueue_2->uxMessagesWaiting
 1682 0024 D31A     		subs	r3, r2, r3	@ tmp118, D.5986, D.5986
 1683 0026 BB60     		str	r3, [r7, #8]	@ tmp118, uxReturn
1553:FreeRTOS/queue.c **** 	}
1554:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 1684              		.loc 1 1554 0
 1685 0028 FFF7FEFF 		bl	vPortExitCritical	@
1555:FreeRTOS/queue.c **** 
1556:FreeRTOS/queue.c **** 	return uxReturn;
 1686              		.loc 1 1556 0
 1687 002c BB68     		ldr	r3, [r7, #8]	@ D.5987, uxReturn
1557:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1688              		.loc 1 1557 0
 1689 002e 1846     		mov	r0, r3	@, <retval>
 1690 0030 1037     		adds	r7, r7, #16	@,,
 1691              		.cfi_def_cfa_offset 8
 1692 0032 BD46     		mov	sp, r7	@,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 58


 1693              		.cfi_def_cfa_register 13
 1694              		@ sp needed	@
 1695 0034 80BD     		pop	{r7, pc}	@
 1696              		.cfi_endproc
 1697              	.LFE13:
 1698              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1699 0036 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1700              		.align	2
 1701              		.global	uxQueueMessagesWaitingFromISR
 1702              		.thumb
 1703              		.thumb_func
 1704              		.type	uxQueueMessagesWaitingFromISR, %function
 1705              	uxQueueMessagesWaitingFromISR:
 1706              	.LFB14:
1558:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1559:FreeRTOS/queue.c **** 
1560:FreeRTOS/queue.c **** UBaseT_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1561:FreeRTOS/queue.c **** {
 1707              		.loc 1 1561 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 16
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711 0000 80B5     		push	{r7, lr}	@
 1712              		.cfi_def_cfa_offset 8
 1713              		.cfi_offset 7, -8
 1714              		.cfi_offset 14, -4
 1715 0002 84B0     		sub	sp, sp, #16	@,,
 1716              		.cfi_def_cfa_offset 24
 1717 0004 00AF     		add	r7, sp, #0	@,,
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1562:FreeRTOS/queue.c **** UBaseT_t uxReturn;
1563:FreeRTOS/queue.c **** 
1564:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 1720              		.loc 1 1564 0
 1721 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1722 000a 002B     		cmp	r3, #0	@ tmp112,
 1723 000c 02D1     		bne	.L145	@,
 1724              		.loc 1 1564 0 is_stmt 0 discriminator 1
 1725 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1726              	.L146:
 1727 0012 FEE7     		b	.L146	@
 1728              	.L145:
1565:FreeRTOS/queue.c **** 
1566:FreeRTOS/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1729              		.loc 1 1566 0 is_stmt 1
 1730 0014 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 1731 0016 9B6B     		ldr	r3, [r3, #56]	@ tmp114, MEM[(struct Queue_t *)xQueue_1(D)].uxMessagesWaiting
 1732 0018 FB60     		str	r3, [r7, #12]	@ tmp114, uxReturn
1567:FreeRTOS/queue.c **** 
1568:FreeRTOS/queue.c **** 	return uxReturn;
 1733              		.loc 1 1568 0
 1734 001a FB68     		ldr	r3, [r7, #12]	@ D.5988, uxReturn
1569:FreeRTOS/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1735              		.loc 1 1569 0
 1736 001c 1846     		mov	r0, r3	@, <retval>
 1737 001e 1037     		adds	r7, r7, #16	@,,
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 59


 1738              		.cfi_def_cfa_offset 8
 1739 0020 BD46     		mov	sp, r7	@,
 1740              		.cfi_def_cfa_register 13
 1741              		@ sp needed	@
 1742 0022 80BD     		pop	{r7, pc}	@
 1743              		.cfi_endproc
 1744              	.LFE14:
 1745              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1746              		.section	.text.vQueueDelete,"ax",%progbits
 1747              		.align	2
 1748              		.global	vQueueDelete
 1749              		.thumb
 1750              		.thumb_func
 1751              		.type	vQueueDelete, %function
 1752              	vQueueDelete:
 1753              	.LFB15:
1570:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1571:FreeRTOS/queue.c **** 
1572:FreeRTOS/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1573:FreeRTOS/queue.c **** {
 1754              		.loc 1 1573 0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 16
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758 0000 80B5     		push	{r7, lr}	@
 1759              		.cfi_def_cfa_offset 8
 1760              		.cfi_offset 7, -8
 1761              		.cfi_offset 14, -4
 1762 0002 84B0     		sub	sp, sp, #16	@,,
 1763              		.cfi_def_cfa_offset 24
 1764 0004 00AF     		add	r7, sp, #0	@,,
 1765              		.cfi_def_cfa_register 7
 1766 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1574:FreeRTOS/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1767              		.loc 1 1574 0
 1768 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1769 000a FB60     		str	r3, [r7, #12]	@ tmp112, pxQueue
1575:FreeRTOS/queue.c **** 
1576:FreeRTOS/queue.c **** 	configASSERT( pxQueue );
 1770              		.loc 1 1576 0
 1771 000c FB68     		ldr	r3, [r7, #12]	@ tmp113, pxQueue
 1772 000e 002B     		cmp	r3, #0	@ tmp113,
 1773 0010 02D1     		bne	.L149	@,
 1774              		.loc 1 1576 0 is_stmt 0 discriminator 1
 1775 0012 FFF7FEFF 		bl	ulPortSetInterruptMask	@
 1776              	.L150:
 1777 0016 FEE7     		b	.L150	@
 1778              	.L149:
1577:FreeRTOS/queue.c **** 
1578:FreeRTOS/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1579:FreeRTOS/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1580:FreeRTOS/queue.c **** 	{
1581:FreeRTOS/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 1779              		.loc 1 1581 0 is_stmt 1
 1780 0018 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1781 001a FFF7FEFF 		bl	vQueueUnregisterQueue	@
1582:FreeRTOS/queue.c **** 	}
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 60


1583:FreeRTOS/queue.c **** 	#endif
1584:FreeRTOS/queue.c **** 	if( pxQueue->pcHead != NULL )
 1782              		.loc 1 1584 0
 1783 001e FB68     		ldr	r3, [r7, #12]	@ tmp114, pxQueue
 1784 0020 1B68     		ldr	r3, [r3]	@ D.5989, pxQueue_2->pcHead
 1785 0022 002B     		cmp	r3, #0	@ D.5989,
 1786 0024 04D0     		beq	.L151	@,
1585:FreeRTOS/queue.c **** 	{
1586:FreeRTOS/queue.c **** 		vPortFree( pxQueue->pcHead );
 1787              		.loc 1 1586 0
 1788 0026 FB68     		ldr	r3, [r7, #12]	@ tmp115, pxQueue
 1789 0028 1B68     		ldr	r3, [r3]	@ D.5989, pxQueue_2->pcHead
 1790 002a 1846     		mov	r0, r3	@, D.5989
 1791 002c FFF7FEFF 		bl	vPortFree	@
 1792              	.L151:
1587:FreeRTOS/queue.c **** 	}
1588:FreeRTOS/queue.c **** 	vPortFree( pxQueue );
 1793              		.loc 1 1588 0
 1794 0030 F868     		ldr	r0, [r7, #12]	@, pxQueue
 1795 0032 FFF7FEFF 		bl	vPortFree	@
1589:FreeRTOS/queue.c **** }
 1796              		.loc 1 1589 0
 1797 0036 1037     		adds	r7, r7, #16	@,,
 1798              		.cfi_def_cfa_offset 8
 1799 0038 BD46     		mov	sp, r7	@,
 1800              		.cfi_def_cfa_register 13
 1801              		@ sp needed	@
 1802 003a 80BD     		pop	{r7, pc}	@
 1803              		.cfi_endproc
 1804              	.LFE15:
 1805              		.size	vQueueDelete, .-vQueueDelete
 1806              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 1807              		.align	2
 1808              		.global	uxQueueGetQueueNumber
 1809              		.thumb
 1810              		.thumb_func
 1811              		.type	uxQueueGetQueueNumber, %function
 1812              	uxQueueGetQueueNumber:
 1813              	.LFB16:
1590:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1591:FreeRTOS/queue.c **** 
1592:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1593:FreeRTOS/queue.c **** 
1594:FreeRTOS/queue.c **** 	UBaseT_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1595:FreeRTOS/queue.c **** 	{
 1814              		.loc 1 1595 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 8
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818              		@ link register save eliminated.
 1819 0000 80B4     		push	{r7}	@
 1820              		.cfi_def_cfa_offset 4
 1821              		.cfi_offset 7, -4
 1822 0002 83B0     		sub	sp, sp, #12	@,,
 1823              		.cfi_def_cfa_offset 16
 1824 0004 00AF     		add	r7, sp, #0	@,,
 1825              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 61


 1826 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1596:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 1827              		.loc 1 1596 0
 1828 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1829 000a DB6C     		ldr	r3, [r3, #76]	@ D.5990, MEM[(struct Queue_t *)xQueue_1(D)].uxQueueNumber
1597:FreeRTOS/queue.c **** 	}
 1830              		.loc 1 1597 0
 1831 000c 1846     		mov	r0, r3	@, <retval>
 1832 000e 0C37     		adds	r7, r7, #12	@,,
 1833              		.cfi_def_cfa_offset 4
 1834 0010 BD46     		mov	sp, r7	@,
 1835              		.cfi_def_cfa_register 13
 1836              		@ sp needed	@
 1837 0012 5DF8047B 		ldr	r7, [sp], #4	@,
 1838              		.cfi_restore 7
 1839              		.cfi_def_cfa_offset 0
 1840 0016 7047     		bx	lr	@
 1841              		.cfi_endproc
 1842              	.LFE16:
 1843              		.size	uxQueueGetQueueNumber, .-uxQueueGetQueueNumber
 1844              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 1845              		.align	2
 1846              		.global	vQueueSetQueueNumber
 1847              		.thumb
 1848              		.thumb_func
 1849              		.type	vQueueSetQueueNumber, %function
 1850              	vQueueSetQueueNumber:
 1851              	.LFB17:
1598:FreeRTOS/queue.c **** 
1599:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1600:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1601:FreeRTOS/queue.c **** 
1602:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1603:FreeRTOS/queue.c **** 
1604:FreeRTOS/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseT_t uxQueueNumber )
1605:FreeRTOS/queue.c **** 	{
 1852              		.loc 1 1605 0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 8
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856              		@ link register save eliminated.
 1857 0000 80B4     		push	{r7}	@
 1858              		.cfi_def_cfa_offset 4
 1859              		.cfi_offset 7, -4
 1860 0002 83B0     		sub	sp, sp, #12	@,,
 1861              		.cfi_def_cfa_offset 16
 1862 0004 00AF     		add	r7, sp, #0	@,,
 1863              		.cfi_def_cfa_register 7
 1864 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 1865 0008 3960     		str	r1, [r7]	@ uxQueueNumber, uxQueueNumber
1606:FreeRTOS/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 1866              		.loc 1 1606 0
 1867 000a 7B68     		ldr	r3, [r7, #4]	@ tmp110, xQueue
 1868 000c 3A68     		ldr	r2, [r7]	@ tmp111, uxQueueNumber
 1869 000e DA64     		str	r2, [r3, #76]	@ tmp111, MEM[(struct Queue_t *)xQueue_1(D)].uxQueueNumber
1607:FreeRTOS/queue.c **** 	}
 1870              		.loc 1 1607 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 62


 1871 0010 0C37     		adds	r7, r7, #12	@,,
 1872              		.cfi_def_cfa_offset 4
 1873 0012 BD46     		mov	sp, r7	@,
 1874              		.cfi_def_cfa_register 13
 1875              		@ sp needed	@
 1876 0014 5DF8047B 		ldr	r7, [sp], #4	@,
 1877              		.cfi_restore 7
 1878              		.cfi_def_cfa_offset 0
 1879 0018 7047     		bx	lr	@
 1880              		.cfi_endproc
 1881              	.LFE17:
 1882              		.size	vQueueSetQueueNumber, .-vQueueSetQueueNumber
 1883 001a 00BF     		.section	.text.ucQueueGetQueueType,"ax",%progbits
 1884              		.align	2
 1885              		.global	ucQueueGetQueueType
 1886              		.thumb
 1887              		.thumb_func
 1888              		.type	ucQueueGetQueueType, %function
 1889              	ucQueueGetQueueType:
 1890              	.LFB18:
1608:FreeRTOS/queue.c **** 
1609:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1610:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1611:FreeRTOS/queue.c **** 
1612:FreeRTOS/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1613:FreeRTOS/queue.c **** 
1614:FreeRTOS/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1615:FreeRTOS/queue.c **** 	{
 1891              		.loc 1 1615 0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 8
 1894              		@ frame_needed = 1, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
 1896 0000 80B4     		push	{r7}	@
 1897              		.cfi_def_cfa_offset 4
 1898              		.cfi_offset 7, -4
 1899 0002 83B0     		sub	sp, sp, #12	@,,
 1900              		.cfi_def_cfa_offset 16
 1901 0004 00AF     		add	r7, sp, #0	@,,
 1902              		.cfi_def_cfa_register 7
 1903 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1616:FreeRTOS/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
 1904              		.loc 1 1616 0
 1905 0008 7B68     		ldr	r3, [r7, #4]	@ tmp112, xQueue
 1906 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2	@ D.5991, MEM[(struct Queue_t *)xQueue_1(D)].ucQueueType
1617:FreeRTOS/queue.c **** 	}
 1907              		.loc 1 1617 0
 1908 000e 1846     		mov	r0, r3	@, <retval>
 1909 0010 0C37     		adds	r7, r7, #12	@,,
 1910              		.cfi_def_cfa_offset 4
 1911 0012 BD46     		mov	sp, r7	@,
 1912              		.cfi_def_cfa_register 13
 1913              		@ sp needed	@
 1914 0014 5DF8047B 		ldr	r7, [sp], #4	@,
 1915              		.cfi_restore 7
 1916              		.cfi_def_cfa_offset 0
 1917 0018 7047     		bx	lr	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 63


 1918              		.cfi_endproc
 1919              	.LFE18:
 1920              		.size	ucQueueGetQueueType, .-ucQueueGetQueueType
 1921 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 1922              		.align	2
 1923              		.thumb
 1924              		.thumb_func
 1925              		.type	prvCopyDataToQueue, %function
 1926              	prvCopyDataToQueue:
 1927              	.LFB19:
1618:FreeRTOS/queue.c **** 
1619:FreeRTOS/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1620:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1621:FreeRTOS/queue.c **** 
1622:FreeRTOS/queue.c **** static BaseT_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseT_
1623:FreeRTOS/queue.c **** {
 1928              		.loc 1 1623 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 24
 1931              		@ frame_needed = 1, uses_anonymous_args = 0
 1932 0000 80B5     		push	{r7, lr}	@
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 7, -8
 1935              		.cfi_offset 14, -4
 1936 0002 86B0     		sub	sp, sp, #24	@,,
 1937              		.cfi_def_cfa_offset 32
 1938 0004 00AF     		add	r7, sp, #0	@,,
 1939              		.cfi_def_cfa_register 7
 1940 0006 F860     		str	r0, [r7, #12]	@ pxQueue, pxQueue
 1941 0008 B960     		str	r1, [r7, #8]	@ pvItemToQueue, pvItemToQueue
 1942 000a 7A60     		str	r2, [r7, #4]	@ xPosition, xPosition
1624:FreeRTOS/queue.c **** BaseT_t xReturn = pdFALSE;
 1943              		.loc 1 1624 0
 1944 000c 0023     		movs	r3, #0	@ tmp140,
 1945 000e 7B61     		str	r3, [r7, #20]	@ tmp140, xReturn
1625:FreeRTOS/queue.c **** 
1626:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseT_t ) 0 )
 1946              		.loc 1 1626 0
 1947 0010 FB68     		ldr	r3, [r7, #12]	@ tmp141, pxQueue
 1948 0012 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1949 0014 002B     		cmp	r3, #0	@ D.5992,
 1950 0016 0DD1     		bne	.L158	@,
1627:FreeRTOS/queue.c **** 	{
1628:FreeRTOS/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1629:FreeRTOS/queue.c **** 		{
1630:FreeRTOS/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 1951              		.loc 1 1630 0
 1952 0018 FB68     		ldr	r3, [r7, #12]	@ tmp142, pxQueue
 1953 001a 1B68     		ldr	r3, [r3]	@ D.5993, pxQueue_3(D)->pcHead
 1954 001c 002B     		cmp	r3, #0	@ D.5993,
 1955 001e 52D1     		bne	.L159	@,
1631:FreeRTOS/queue.c **** 			{
1632:FreeRTOS/queue.c **** 				/* The mutex is no longer being held. */
1633:FreeRTOS/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
 1956              		.loc 1 1633 0
 1957 0020 FB68     		ldr	r3, [r7, #12]	@ tmp143, pxQueue
 1958 0022 5B68     		ldr	r3, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 64


 1959 0024 1846     		mov	r0, r3	@, D.5993
 1960 0026 FFF7FEFF 		bl	xTaskPriorityDisinherit	@
 1961 002a 7861     		str	r0, [r7, #20]	@, xReturn
1634:FreeRTOS/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 1962              		.loc 1 1634 0
 1963 002c FB68     		ldr	r3, [r7, #12]	@ tmp144, pxQueue
 1964 002e 0022     		movs	r2, #0	@ tmp145,
 1965 0030 5A60     		str	r2, [r3, #4]	@ tmp145, pxQueue_3(D)->pcTail
 1966 0032 48E0     		b	.L159	@
 1967              	.L158:
1635:FreeRTOS/queue.c **** 			}
1636:FreeRTOS/queue.c **** 			else
1637:FreeRTOS/queue.c **** 			{
1638:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1639:FreeRTOS/queue.c **** 			}
1640:FreeRTOS/queue.c **** 		}
1641:FreeRTOS/queue.c **** 		#endif /* configUSE_MUTEXES */
1642:FreeRTOS/queue.c **** 	}
1643:FreeRTOS/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 1968              		.loc 1 1643 0
 1969 0034 7B68     		ldr	r3, [r7, #4]	@ tmp146, xPosition
 1970 0036 002B     		cmp	r3, #0	@ tmp146,
 1971 0038 1AD1     		bne	.L160	@,
1644:FreeRTOS/queue.c **** 	{
1645:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 1972              		.loc 1 1645 0
 1973 003a FB68     		ldr	r3, [r7, #12]	@ tmp147, pxQueue
 1974 003c 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1975 003e FB68     		ldr	r3, [r7, #12]	@ tmp148, pxQueue
 1976 0040 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1977 0042 1046     		mov	r0, r2	@, D.5993
 1978 0044 B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 1979 0046 1A46     		mov	r2, r3	@, D.5992
 1980 0048 FFF7FEFF 		bl	memcpy	@
1646:FreeRTOS/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 1981              		.loc 1 1646 0
 1982 004c FB68     		ldr	r3, [r7, #12]	@ tmp149, pxQueue
 1983 004e 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1984 0050 FB68     		ldr	r3, [r7, #12]	@ tmp150, pxQueue
 1985 0052 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 1986 0054 1A44     		add	r2, r2, r3	@ D.5993, D.5992
 1987 0056 FB68     		ldr	r3, [r7, #12]	@ tmp151, pxQueue
 1988 0058 9A60     		str	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
1647:FreeRTOS/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 1989              		.loc 1 1647 0
 1990 005a FB68     		ldr	r3, [r7, #12]	@ tmp152, pxQueue
 1991 005c 9A68     		ldr	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 1992 005e FB68     		ldr	r3, [r7, #12]	@ tmp153, pxQueue
 1993 0060 5B68     		ldr	r3, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
 1994 0062 9A42     		cmp	r2, r3	@ D.5993, D.5993
 1995 0064 2FD3     		bcc	.L159	@,
1648:FreeRTOS/queue.c **** 		{
1649:FreeRTOS/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 1996              		.loc 1 1649 0
 1997 0066 FB68     		ldr	r3, [r7, #12]	@ tmp154, pxQueue
 1998 0068 1A68     		ldr	r2, [r3]	@ D.5993, pxQueue_3(D)->pcHead
 1999 006a FB68     		ldr	r3, [r7, #12]	@ tmp155, pxQueue
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 65


 2000 006c 9A60     		str	r2, [r3, #8]	@ D.5993, pxQueue_3(D)->pcWriteTo
 2001 006e 2AE0     		b	.L159	@
 2002              	.L160:
1650:FreeRTOS/queue.c **** 		}
1651:FreeRTOS/queue.c **** 		else
1652:FreeRTOS/queue.c **** 		{
1653:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1654:FreeRTOS/queue.c **** 		}
1655:FreeRTOS/queue.c **** 	}
1656:FreeRTOS/queue.c **** 	else
1657:FreeRTOS/queue.c **** 	{
1658:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 2003              		.loc 1 1658 0
 2004 0070 FB68     		ldr	r3, [r7, #12]	@ tmp156, pxQueue
 2005 0072 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2006 0074 FB68     		ldr	r3, [r7, #12]	@ tmp157, pxQueue
 2007 0076 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2008 0078 1046     		mov	r0, r2	@, D.5993
 2009 007a B968     		ldr	r1, [r7, #8]	@, pvItemToQueue
 2010 007c 1A46     		mov	r2, r3	@, D.5992
 2011 007e FFF7FEFF 		bl	memcpy	@
1659:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 2012              		.loc 1 1659 0
 2013 0082 FB68     		ldr	r3, [r7, #12]	@ tmp158, pxQueue
 2014 0084 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2015 0086 FB68     		ldr	r3, [r7, #12]	@ tmp159, pxQueue
 2016 0088 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2017 008a 5B42     		negs	r3, r3	@ D.5994, D.5992
 2018 008c 1A44     		add	r2, r2, r3	@ D.5993, D.5994
 2019 008e FB68     		ldr	r3, [r7, #12]	@ tmp160, pxQueue
 2020 0090 DA60     		str	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
1660:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 2021              		.loc 1 1660 0
 2022 0092 FB68     		ldr	r3, [r7, #12]	@ tmp161, pxQueue
 2023 0094 DA68     		ldr	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2024 0096 FB68     		ldr	r3, [r7, #12]	@ tmp162, pxQueue
 2025 0098 1B68     		ldr	r3, [r3]	@ D.5993, pxQueue_3(D)->pcHead
 2026 009a 9A42     		cmp	r2, r3	@ D.5993, D.5993
 2027 009c 07D2     		bcs	.L161	@,
1661:FreeRTOS/queue.c **** 		{
1662:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 2028              		.loc 1 1662 0
 2029 009e FB68     		ldr	r3, [r7, #12]	@ tmp163, pxQueue
 2030 00a0 5A68     		ldr	r2, [r3, #4]	@ D.5993, pxQueue_3(D)->pcTail
 2031 00a2 FB68     		ldr	r3, [r7, #12]	@ tmp164, pxQueue
 2032 00a4 1B6C     		ldr	r3, [r3, #64]	@ D.5992, pxQueue_3(D)->uxItemSize
 2033 00a6 5B42     		negs	r3, r3	@ D.5994, D.5992
 2034 00a8 1A44     		add	r2, r2, r3	@ D.5993, D.5994
 2035 00aa FB68     		ldr	r3, [r7, #12]	@ tmp165, pxQueue
 2036 00ac DA60     		str	r2, [r3, #12]	@ D.5993, pxQueue_3(D)->u.pcReadFrom
 2037              	.L161:
1663:FreeRTOS/queue.c **** 		}
1664:FreeRTOS/queue.c **** 		else
1665:FreeRTOS/queue.c **** 		{
1666:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1667:FreeRTOS/queue.c **** 		}
1668:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 66


1669:FreeRTOS/queue.c **** 		if( xPosition == queueOVERWRITE )
 2038              		.loc 1 1669 0
 2039 00ae 7B68     		ldr	r3, [r7, #4]	@ tmp166, xPosition
 2040 00b0 022B     		cmp	r3, #2	@ tmp166,
 2041 00b2 08D1     		bne	.L159	@,
1670:FreeRTOS/queue.c **** 		{
1671:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
 2042              		.loc 1 1671 0
 2043 00b4 FB68     		ldr	r3, [r7, #12]	@ tmp167, pxQueue
 2044 00b6 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2045 00b8 002B     		cmp	r3, #0	@ D.5992,
 2046 00ba 04D0     		beq	.L159	@,
1672:FreeRTOS/queue.c **** 			{
1673:FreeRTOS/queue.c **** 				/* An item is not being added but overwritten, so subtract
1674:FreeRTOS/queue.c **** 				one from the recorded number of items in the queue so when
1675:FreeRTOS/queue.c **** 				one is added again below the number of recorded items remains
1676:FreeRTOS/queue.c **** 				correct. */
1677:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
 2047              		.loc 1 1677 0
 2048 00bc FB68     		ldr	r3, [r7, #12]	@ tmp168, pxQueue
 2049 00be 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2050 00c0 5A1E     		subs	r2, r3, #1	@ D.5992, D.5992,
 2051 00c2 FB68     		ldr	r3, [r7, #12]	@ tmp169, pxQueue
 2052 00c4 9A63     		str	r2, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2053              	.L159:
1678:FreeRTOS/queue.c **** 			}
1679:FreeRTOS/queue.c **** 			else
1680:FreeRTOS/queue.c **** 			{
1681:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1682:FreeRTOS/queue.c **** 			}
1683:FreeRTOS/queue.c **** 		}
1684:FreeRTOS/queue.c **** 		else
1685:FreeRTOS/queue.c **** 		{
1686:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1687:FreeRTOS/queue.c **** 		}
1688:FreeRTOS/queue.c **** 	}
1689:FreeRTOS/queue.c **** 
1690:FreeRTOS/queue.c **** 	++( pxQueue->uxMessagesWaiting );
 2054              		.loc 1 1690 0
 2055 00c6 FB68     		ldr	r3, [r7, #12]	@ tmp170, pxQueue
 2056 00c8 9B6B     		ldr	r3, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
 2057 00ca 5A1C     		adds	r2, r3, #1	@ D.5992, D.5992,
 2058 00cc FB68     		ldr	r3, [r7, #12]	@ tmp171, pxQueue
 2059 00ce 9A63     		str	r2, [r3, #56]	@ D.5992, pxQueue_3(D)->uxMessagesWaiting
1691:FreeRTOS/queue.c **** 
1692:FreeRTOS/queue.c **** 	return xReturn;
 2060              		.loc 1 1692 0
 2061 00d0 7B69     		ldr	r3, [r7, #20]	@ D.5995, xReturn
1693:FreeRTOS/queue.c **** }
 2062              		.loc 1 1693 0
 2063 00d2 1846     		mov	r0, r3	@, <retval>
 2064 00d4 1837     		adds	r7, r7, #24	@,,
 2065              		.cfi_def_cfa_offset 8
 2066 00d6 BD46     		mov	sp, r7	@,
 2067              		.cfi_def_cfa_register 13
 2068              		@ sp needed	@
 2069 00d8 80BD     		pop	{r7, pc}	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 67


 2070              		.cfi_endproc
 2071              	.LFE19:
 2072              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 2073 00da 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 2074              		.align	2
 2075              		.thumb
 2076              		.thumb_func
 2077              		.type	prvCopyDataFromQueue, %function
 2078              	prvCopyDataFromQueue:
 2079              	.LFB20:
1694:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1695:FreeRTOS/queue.c **** 
1696:FreeRTOS/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1697:FreeRTOS/queue.c **** {
 2080              		.loc 1 1697 0
 2081              		.cfi_startproc
 2082              		@ args = 0, pretend = 0, frame = 8
 2083              		@ frame_needed = 1, uses_anonymous_args = 0
 2084 0000 80B5     		push	{r7, lr}	@
 2085              		.cfi_def_cfa_offset 8
 2086              		.cfi_offset 7, -8
 2087              		.cfi_offset 14, -4
 2088 0002 82B0     		sub	sp, sp, #8	@,,
 2089              		.cfi_def_cfa_offset 16
 2090 0004 00AF     		add	r7, sp, #0	@,,
 2091              		.cfi_def_cfa_register 7
 2092 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
 2093 0008 3960     		str	r1, [r7]	@ pvBuffer, pvBuffer
1698:FreeRTOS/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseT_t ) 0 )
 2094              		.loc 1 1698 0
 2095 000a 7B68     		ldr	r3, [r7, #4]	@ tmp119, pxQueue
 2096 000c 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2097 000e 002B     		cmp	r3, #0	@ D.5996,
 2098 0010 19D0     		beq	.L163	@,
1699:FreeRTOS/queue.c **** 	{
1700:FreeRTOS/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 2099              		.loc 1 1700 0
 2100 0012 7B68     		ldr	r3, [r7, #4]	@ tmp120, pxQueue
 2101 0014 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2102 0016 7B68     		ldr	r3, [r7, #4]	@ tmp121, pxQueue
 2103 0018 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2104 001a 1A44     		add	r2, r2, r3	@ D.5997, D.5996
 2105 001c 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2106 001e DA60     		str	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
1701:FreeRTOS/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2107              		.loc 1 1701 0
 2108 0020 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2109 0022 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2110 0024 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2111 0026 5B68     		ldr	r3, [r3, #4]	@ D.5997, pxQueue_1(D)->pcTail
 2112 0028 9A42     		cmp	r2, r3	@ D.5997, D.5997
 2113 002a 03D3     		bcc	.L165	@,
1702:FreeRTOS/queue.c **** 		{
1703:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 2114              		.loc 1 1703 0
 2115 002c 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
 2116 002e 1A68     		ldr	r2, [r3]	@ D.5997, pxQueue_1(D)->pcHead
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 68


 2117 0030 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2118 0032 DA60     		str	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2119              	.L165:
1704:FreeRTOS/queue.c **** 		}
1705:FreeRTOS/queue.c **** 		else
1706:FreeRTOS/queue.c **** 		{
1707:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1708:FreeRTOS/queue.c **** 		}
1709:FreeRTOS/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 2120              		.loc 1 1709 0
 2121 0034 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2122 0036 DA68     		ldr	r2, [r3, #12]	@ D.5997, pxQueue_1(D)->u.pcReadFrom
 2123 0038 7B68     		ldr	r3, [r7, #4]	@ tmp128, pxQueue
 2124 003a 1B6C     		ldr	r3, [r3, #64]	@ D.5996, pxQueue_1(D)->uxItemSize
 2125 003c 3868     		ldr	r0, [r7]	@, pvBuffer
 2126 003e 1146     		mov	r1, r2	@, D.5997
 2127 0040 1A46     		mov	r2, r3	@, D.5996
 2128 0042 FFF7FEFF 		bl	memcpy	@
 2129              	.L163:
1710:FreeRTOS/queue.c **** 	}
1711:FreeRTOS/queue.c **** }
 2130              		.loc 1 1711 0
 2131 0046 0837     		adds	r7, r7, #8	@,,
 2132              		.cfi_def_cfa_offset 8
 2133 0048 BD46     		mov	sp, r7	@,
 2134              		.cfi_def_cfa_register 13
 2135              		@ sp needed	@
 2136 004a 80BD     		pop	{r7, pc}	@
 2137              		.cfi_endproc
 2138              	.LFE20:
 2139              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 2140              		.section	.text.prvUnlockQueue,"ax",%progbits
 2141              		.align	2
 2142              		.thumb
 2143              		.thumb_func
 2144              		.type	prvUnlockQueue, %function
 2145              	prvUnlockQueue:
 2146              	.LFB21:
1712:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1713:FreeRTOS/queue.c **** 
1714:FreeRTOS/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1715:FreeRTOS/queue.c **** {
 2147              		.loc 1 1715 0
 2148              		.cfi_startproc
 2149              		@ args = 0, pretend = 0, frame = 8
 2150              		@ frame_needed = 1, uses_anonymous_args = 0
 2151 0000 80B5     		push	{r7, lr}	@
 2152              		.cfi_def_cfa_offset 8
 2153              		.cfi_offset 7, -8
 2154              		.cfi_offset 14, -4
 2155 0002 82B0     		sub	sp, sp, #8	@,,
 2156              		.cfi_def_cfa_offset 16
 2157 0004 00AF     		add	r7, sp, #0	@,,
 2158              		.cfi_def_cfa_register 7
 2159 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1716:FreeRTOS/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1717:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 69


1718:FreeRTOS/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1719:FreeRTOS/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1720:FreeRTOS/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1721:FreeRTOS/queue.c **** 	updated. */
1722:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2160              		.loc 1 1722 0
 2161 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1723:FreeRTOS/queue.c **** 	{
1724:FreeRTOS/queue.c **** 		/* See if data was added to the queue while it was locked. */
1725:FreeRTOS/queue.c **** 		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
 2162              		.loc 1 1725 0
 2163 000c 14E0     		b	.L167	@
 2164              	.L171:
1726:FreeRTOS/queue.c **** 		{
1727:FreeRTOS/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1728:FreeRTOS/queue.c **** 			blocked waiting for data to become available? */
1729:FreeRTOS/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1730:FreeRTOS/queue.c **** 			{
1731:FreeRTOS/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1732:FreeRTOS/queue.c **** 				{
1733:FreeRTOS/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) == pdTRUE )
1734:FreeRTOS/queue.c **** 					{
1735:FreeRTOS/queue.c **** 						/* The queue is a member of a queue set, and posting to
1736:FreeRTOS/queue.c **** 						the queue set caused a higher priority task to unblock.
1737:FreeRTOS/queue.c **** 						A context switch is required. */
1738:FreeRTOS/queue.c **** 						vTaskMissedYield();
1739:FreeRTOS/queue.c **** 					}
1740:FreeRTOS/queue.c **** 					else
1741:FreeRTOS/queue.c **** 					{
1742:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1743:FreeRTOS/queue.c **** 					}
1744:FreeRTOS/queue.c **** 				}
1745:FreeRTOS/queue.c **** 				else
1746:FreeRTOS/queue.c **** 				{
1747:FreeRTOS/queue.c **** 					/* Tasks that are removed from the event list will get added to
1748:FreeRTOS/queue.c **** 					the pending ready list as the scheduler is still suspended. */
1749:FreeRTOS/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1750:FreeRTOS/queue.c **** 					{
1751:FreeRTOS/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1752:FreeRTOS/queue.c **** 						{
1753:FreeRTOS/queue.c **** 							/* The task waiting has a higher priority so record that a
1754:FreeRTOS/queue.c **** 							context	switch is required. */
1755:FreeRTOS/queue.c **** 							vTaskMissedYield();
1756:FreeRTOS/queue.c **** 						}
1757:FreeRTOS/queue.c **** 						else
1758:FreeRTOS/queue.c **** 						{
1759:FreeRTOS/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1760:FreeRTOS/queue.c **** 						}
1761:FreeRTOS/queue.c **** 					}
1762:FreeRTOS/queue.c **** 					else
1763:FreeRTOS/queue.c **** 					{
1764:FreeRTOS/queue.c **** 						break;
1765:FreeRTOS/queue.c **** 					}
1766:FreeRTOS/queue.c **** 				}
1767:FreeRTOS/queue.c **** 			}
1768:FreeRTOS/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1769:FreeRTOS/queue.c **** 			{
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 70


1770:FreeRTOS/queue.c **** 				/* Tasks that are removed from the event list will get added to
1771:FreeRTOS/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1772:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2165              		.loc 1 1772 0
 2166 000e 7B68     		ldr	r3, [r7, #4]	@ tmp122, pxQueue
 2167 0010 5B6A     		ldr	r3, [r3, #36]	@ D.5999, pxQueue_1(D)->xTasksWaitingToReceive.uxNumberOfItems
 2168 0012 002B     		cmp	r3, #0	@ D.5999,
 2169 0014 0AD0     		beq	.L168	@,
1773:FreeRTOS/queue.c **** 				{
1774:FreeRTOS/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2170              		.loc 1 1774 0
 2171 0016 7B68     		ldr	r3, [r7, #4]	@ tmp123, pxQueue
 2172 0018 2433     		adds	r3, r3, #36	@ D.6000, tmp123,
 2173 001a 1846     		mov	r0, r3	@, D.6000
 2174 001c FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2175 0020 0346     		mov	r3, r0	@ D.5998,
 2176 0022 002B     		cmp	r3, #0	@ D.5998,
 2177 0024 03D0     		beq	.L169	@,
1775:FreeRTOS/queue.c **** 					{
1776:FreeRTOS/queue.c **** 						/* The task waiting has a higher priority so record that a
1777:FreeRTOS/queue.c **** 						context	switch is required. */
1778:FreeRTOS/queue.c **** 						vTaskMissedYield();
 2178              		.loc 1 1778 0
 2179 0026 FFF7FEFF 		bl	vTaskMissedYield	@
 2180 002a 00E0     		b	.L169	@
 2181              	.L168:
1779:FreeRTOS/queue.c **** 					}
1780:FreeRTOS/queue.c **** 					else
1781:FreeRTOS/queue.c **** 					{
1782:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1783:FreeRTOS/queue.c **** 					}
1784:FreeRTOS/queue.c **** 				}
1785:FreeRTOS/queue.c **** 				else
1786:FreeRTOS/queue.c **** 				{
1787:FreeRTOS/queue.c **** 					break;
 2182              		.loc 1 1787 0
 2183 002c 08E0     		b	.L170	@
 2184              	.L169:
1788:FreeRTOS/queue.c **** 				}
1789:FreeRTOS/queue.c **** 			}
1790:FreeRTOS/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1791:FreeRTOS/queue.c **** 
1792:FreeRTOS/queue.c **** 			--( pxQueue->xTxLock );
 2185              		.loc 1 1792 0
 2186 002e 7B68     		ldr	r3, [r7, #4]	@ tmp124, pxQueue
 2187 0030 9B6C     		ldr	r3, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2188 0032 5A1E     		subs	r2, r3, #1	@ D.5998, D.5998,
 2189 0034 7B68     		ldr	r3, [r7, #4]	@ tmp125, pxQueue
 2190 0036 9A64     		str	r2, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2191              	.L167:
1725:FreeRTOS/queue.c **** 		{
 2192              		.loc 1 1725 0
 2193 0038 7B68     		ldr	r3, [r7, #4]	@ tmp126, pxQueue
 2194 003a 9B6C     		ldr	r3, [r3, #72]	@ D.5998, pxQueue_1(D)->xTxLock
 2195 003c 002B     		cmp	r3, #0	@ D.5998,
 2196 003e E6DC     		bgt	.L171	@,
 2197              	.L170:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 71


1793:FreeRTOS/queue.c **** 		}
1794:FreeRTOS/queue.c **** 
1795:FreeRTOS/queue.c **** 		pxQueue->xTxLock = queueUNLOCKED;
 2198              		.loc 1 1795 0
 2199 0040 7B68     		ldr	r3, [r7, #4]	@ tmp127, pxQueue
 2200 0042 4FF0FF32 		mov	r2, #-1	@ tmp128,
 2201 0046 9A64     		str	r2, [r3, #72]	@ tmp128, pxQueue_1(D)->xTxLock
1796:FreeRTOS/queue.c **** 	}
1797:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2202              		.loc 1 1797 0
 2203 0048 FFF7FEFF 		bl	vPortExitCritical	@
1798:FreeRTOS/queue.c **** 
1799:FreeRTOS/queue.c **** 	/* Do the same for the Rx lock. */
1800:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2204              		.loc 1 1800 0
 2205 004c FFF7FEFF 		bl	vPortEnterCritical	@
1801:FreeRTOS/queue.c **** 	{
1802:FreeRTOS/queue.c **** 		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
 2206              		.loc 1 1802 0
 2207 0050 14E0     		b	.L172	@
 2208              	.L176:
1803:FreeRTOS/queue.c **** 		{
1804:FreeRTOS/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2209              		.loc 1 1804 0
 2210 0052 7B68     		ldr	r3, [r7, #4]	@ tmp129, pxQueue
 2211 0054 1B69     		ldr	r3, [r3, #16]	@ D.5999, pxQueue_1(D)->xTasksWaitingToSend.uxNumberOfItems
 2212 0056 002B     		cmp	r3, #0	@ D.5999,
 2213 0058 0FD0     		beq	.L173	@,
1805:FreeRTOS/queue.c **** 			{
1806:FreeRTOS/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2214              		.loc 1 1806 0
 2215 005a 7B68     		ldr	r3, [r7, #4]	@ tmp130, pxQueue
 2216 005c 1033     		adds	r3, r3, #16	@ D.6000, tmp130,
 2217 005e 1846     		mov	r0, r3	@, D.6000
 2218 0060 FFF7FEFF 		bl	xTaskRemoveFromEventList	@
 2219 0064 0346     		mov	r3, r0	@ D.5998,
 2220 0066 002B     		cmp	r3, #0	@ D.5998,
 2221 0068 01D0     		beq	.L174	@,
1807:FreeRTOS/queue.c **** 				{
1808:FreeRTOS/queue.c **** 					vTaskMissedYield();
 2222              		.loc 1 1808 0
 2223 006a FFF7FEFF 		bl	vTaskMissedYield	@
 2224              	.L174:
1809:FreeRTOS/queue.c **** 				}
1810:FreeRTOS/queue.c **** 				else
1811:FreeRTOS/queue.c **** 				{
1812:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1813:FreeRTOS/queue.c **** 				}
1814:FreeRTOS/queue.c **** 
1815:FreeRTOS/queue.c **** 				--( pxQueue->xRxLock );
 2225              		.loc 1 1815 0
 2226 006e 7B68     		ldr	r3, [r7, #4]	@ tmp131, pxQueue
 2227 0070 5B6C     		ldr	r3, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
 2228 0072 5A1E     		subs	r2, r3, #1	@ D.5998, D.5998,
 2229 0074 7B68     		ldr	r3, [r7, #4]	@ tmp132, pxQueue
 2230 0076 5A64     		str	r2, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
 2231 0078 00E0     		b	.L172	@
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 72


 2232              	.L173:
1816:FreeRTOS/queue.c **** 			}
1817:FreeRTOS/queue.c **** 			else
1818:FreeRTOS/queue.c **** 			{
1819:FreeRTOS/queue.c **** 				break;
 2233              		.loc 1 1819 0
 2234 007a 03E0     		b	.L175	@
 2235              	.L172:
1802:FreeRTOS/queue.c **** 		{
 2236              		.loc 1 1802 0
 2237 007c 7B68     		ldr	r3, [r7, #4]	@ tmp133, pxQueue
 2238 007e 5B6C     		ldr	r3, [r3, #68]	@ D.5998, pxQueue_1(D)->xRxLock
 2239 0080 002B     		cmp	r3, #0	@ D.5998,
 2240 0082 E6DC     		bgt	.L176	@,
 2241              	.L175:
1820:FreeRTOS/queue.c **** 			}
1821:FreeRTOS/queue.c **** 		}
1822:FreeRTOS/queue.c **** 
1823:FreeRTOS/queue.c **** 		pxQueue->xRxLock = queueUNLOCKED;
 2242              		.loc 1 1823 0
 2243 0084 7B68     		ldr	r3, [r7, #4]	@ tmp134, pxQueue
 2244 0086 4FF0FF32 		mov	r2, #-1	@ tmp135,
 2245 008a 5A64     		str	r2, [r3, #68]	@ tmp135, pxQueue_1(D)->xRxLock
1824:FreeRTOS/queue.c **** 	}
1825:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2246              		.loc 1 1825 0
 2247 008c FFF7FEFF 		bl	vPortExitCritical	@
1826:FreeRTOS/queue.c **** }
 2248              		.loc 1 1826 0
 2249 0090 0837     		adds	r7, r7, #8	@,,
 2250              		.cfi_def_cfa_offset 8
 2251 0092 BD46     		mov	sp, r7	@,
 2252              		.cfi_def_cfa_register 13
 2253              		@ sp needed	@
 2254 0094 80BD     		pop	{r7, pc}	@
 2255              		.cfi_endproc
 2256              	.LFE21:
 2257              		.size	prvUnlockQueue, .-prvUnlockQueue
 2258 0096 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 2259              		.align	2
 2260              		.thumb
 2261              		.thumb_func
 2262              		.type	prvIsQueueEmpty, %function
 2263              	prvIsQueueEmpty:
 2264              	.LFB22:
1827:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1828:FreeRTOS/queue.c **** 
1829:FreeRTOS/queue.c **** static BaseT_t prvIsQueueEmpty( const Queue_t *pxQueue )
1830:FreeRTOS/queue.c **** {
 2265              		.loc 1 1830 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 16
 2268              		@ frame_needed = 1, uses_anonymous_args = 0
 2269 0000 80B5     		push	{r7, lr}	@
 2270              		.cfi_def_cfa_offset 8
 2271              		.cfi_offset 7, -8
 2272              		.cfi_offset 14, -4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 73


 2273 0002 84B0     		sub	sp, sp, #16	@,,
 2274              		.cfi_def_cfa_offset 24
 2275 0004 00AF     		add	r7, sp, #0	@,,
 2276              		.cfi_def_cfa_register 7
 2277 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1831:FreeRTOS/queue.c **** BaseT_t xReturn;
1832:FreeRTOS/queue.c **** 
1833:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2278              		.loc 1 1833 0
 2279 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1834:FreeRTOS/queue.c **** 	{
1835:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseT_t )  0 )
 2280              		.loc 1 1835 0
 2281 000c 7B68     		ldr	r3, [r7, #4]	@ tmp113, pxQueue
 2282 000e 9B6B     		ldr	r3, [r3, #56]	@ D.6001, pxQueue_2(D)->uxMessagesWaiting
 2283 0010 002B     		cmp	r3, #0	@ D.6001,
 2284 0012 02D1     		bne	.L178	@,
1836:FreeRTOS/queue.c **** 		{
1837:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2285              		.loc 1 1837 0
 2286 0014 0123     		movs	r3, #1	@ tmp114,
 2287 0016 FB60     		str	r3, [r7, #12]	@ tmp114, xReturn
 2288 0018 01E0     		b	.L179	@
 2289              	.L178:
1838:FreeRTOS/queue.c **** 		}
1839:FreeRTOS/queue.c **** 		else
1840:FreeRTOS/queue.c **** 		{
1841:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2290              		.loc 1 1841 0
 2291 001a 0023     		movs	r3, #0	@ tmp115,
 2292 001c FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2293              	.L179:
1842:FreeRTOS/queue.c **** 		}
1843:FreeRTOS/queue.c **** 	}
1844:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2294              		.loc 1 1844 0
 2295 001e FFF7FEFF 		bl	vPortExitCritical	@
1845:FreeRTOS/queue.c **** 
1846:FreeRTOS/queue.c **** 	return xReturn;
 2296              		.loc 1 1846 0
 2297 0022 FB68     		ldr	r3, [r7, #12]	@ D.6002, xReturn
1847:FreeRTOS/queue.c **** }
 2298              		.loc 1 1847 0
 2299 0024 1846     		mov	r0, r3	@, <retval>
 2300 0026 1037     		adds	r7, r7, #16	@,,
 2301              		.cfi_def_cfa_offset 8
 2302 0028 BD46     		mov	sp, r7	@,
 2303              		.cfi_def_cfa_register 13
 2304              		@ sp needed	@
 2305 002a 80BD     		pop	{r7, pc}	@
 2306              		.cfi_endproc
 2307              	.LFE22:
 2308              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 2309              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2310              		.align	2
 2311              		.global	xQueueIsQueueEmptyFromISR
 2312              		.thumb
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 74


 2313              		.thumb_func
 2314              		.type	xQueueIsQueueEmptyFromISR, %function
 2315              	xQueueIsQueueEmptyFromISR:
 2316              	.LFB23:
1848:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1849:FreeRTOS/queue.c **** 
1850:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1851:FreeRTOS/queue.c **** {
 2317              		.loc 1 1851 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 16
 2320              		@ frame_needed = 1, uses_anonymous_args = 0
 2321 0000 80B5     		push	{r7, lr}	@
 2322              		.cfi_def_cfa_offset 8
 2323              		.cfi_offset 7, -8
 2324              		.cfi_offset 14, -4
 2325 0002 84B0     		sub	sp, sp, #16	@,,
 2326              		.cfi_def_cfa_offset 24
 2327 0004 00AF     		add	r7, sp, #0	@,,
 2328              		.cfi_def_cfa_register 7
 2329 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1852:FreeRTOS/queue.c **** BaseT_t xReturn;
1853:FreeRTOS/queue.c **** 
1854:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2330              		.loc 1 1854 0
 2331 0008 7B68     		ldr	r3, [r7, #4]	@ tmp113, xQueue
 2332 000a 002B     		cmp	r3, #0	@ tmp113,
 2333 000c 02D1     		bne	.L182	@,
 2334              		.loc 1 1854 0 is_stmt 0 discriminator 1
 2335 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2336              	.L183:
 2337 0012 FEE7     		b	.L183	@
 2338              	.L182:
1855:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseT_t ) 0 )
 2339              		.loc 1 1855 0 is_stmt 1
 2340 0014 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2341 0016 9B6B     		ldr	r3, [r3, #56]	@ D.6003, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2342 0018 002B     		cmp	r3, #0	@ D.6003,
 2343 001a 02D1     		bne	.L184	@,
1856:FreeRTOS/queue.c **** 	{
1857:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2344              		.loc 1 1857 0
 2345 001c 0123     		movs	r3, #1	@ tmp115,
 2346 001e FB60     		str	r3, [r7, #12]	@ tmp115, xReturn
 2347 0020 01E0     		b	.L185	@
 2348              	.L184:
1858:FreeRTOS/queue.c **** 	}
1859:FreeRTOS/queue.c **** 	else
1860:FreeRTOS/queue.c **** 	{
1861:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2349              		.loc 1 1861 0
 2350 0022 0023     		movs	r3, #0	@ tmp116,
 2351 0024 FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
 2352              	.L185:
1862:FreeRTOS/queue.c **** 	}
1863:FreeRTOS/queue.c **** 
1864:FreeRTOS/queue.c **** 	return xReturn;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 75


 2353              		.loc 1 1864 0
 2354 0026 FB68     		ldr	r3, [r7, #12]	@ D.6004, xReturn
1865:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2355              		.loc 1 1865 0
 2356 0028 1846     		mov	r0, r3	@, <retval>
 2357 002a 1037     		adds	r7, r7, #16	@,,
 2358              		.cfi_def_cfa_offset 8
 2359 002c BD46     		mov	sp, r7	@,
 2360              		.cfi_def_cfa_register 13
 2361              		@ sp needed	@
 2362 002e 80BD     		pop	{r7, pc}	@
 2363              		.cfi_endproc
 2364              	.LFE23:
 2365              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2366              		.section	.text.prvIsQueueFull,"ax",%progbits
 2367              		.align	2
 2368              		.thumb
 2369              		.thumb_func
 2370              		.type	prvIsQueueFull, %function
 2371              	prvIsQueueFull:
 2372              	.LFB24:
1866:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1867:FreeRTOS/queue.c **** 
1868:FreeRTOS/queue.c **** static BaseT_t prvIsQueueFull( const Queue_t *pxQueue )
1869:FreeRTOS/queue.c **** {
 2373              		.loc 1 1869 0
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 16
 2376              		@ frame_needed = 1, uses_anonymous_args = 0
 2377 0000 80B5     		push	{r7, lr}	@
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 7, -8
 2380              		.cfi_offset 14, -4
 2381 0002 84B0     		sub	sp, sp, #16	@,,
 2382              		.cfi_def_cfa_offset 24
 2383 0004 00AF     		add	r7, sp, #0	@,,
 2384              		.cfi_def_cfa_register 7
 2385 0006 7860     		str	r0, [r7, #4]	@ pxQueue, pxQueue
1870:FreeRTOS/queue.c **** BaseT_t xReturn;
1871:FreeRTOS/queue.c **** 
1872:FreeRTOS/queue.c **** 	taskENTER_CRITICAL();
 2386              		.loc 1 1872 0
 2387 0008 FFF7FEFF 		bl	vPortEnterCritical	@
1873:FreeRTOS/queue.c **** 	{
1874:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2388              		.loc 1 1874 0
 2389 000c 7B68     		ldr	r3, [r7, #4]	@ tmp114, pxQueue
 2390 000e 9A6B     		ldr	r2, [r3, #56]	@ D.6005, pxQueue_2(D)->uxMessagesWaiting
 2391 0010 7B68     		ldr	r3, [r7, #4]	@ tmp115, pxQueue
 2392 0012 DB6B     		ldr	r3, [r3, #60]	@ D.6005, pxQueue_2(D)->uxLength
 2393 0014 9A42     		cmp	r2, r3	@ D.6005, D.6005
 2394 0016 02D1     		bne	.L188	@,
1875:FreeRTOS/queue.c **** 		{
1876:FreeRTOS/queue.c **** 			xReturn = pdTRUE;
 2395              		.loc 1 1876 0
 2396 0018 0123     		movs	r3, #1	@ tmp116,
 2397 001a FB60     		str	r3, [r7, #12]	@ tmp116, xReturn
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 76


 2398 001c 01E0     		b	.L189	@
 2399              	.L188:
1877:FreeRTOS/queue.c **** 		}
1878:FreeRTOS/queue.c **** 		else
1879:FreeRTOS/queue.c **** 		{
1880:FreeRTOS/queue.c **** 			xReturn = pdFALSE;
 2400              		.loc 1 1880 0
 2401 001e 0023     		movs	r3, #0	@ tmp117,
 2402 0020 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2403              	.L189:
1881:FreeRTOS/queue.c **** 		}
1882:FreeRTOS/queue.c **** 	}
1883:FreeRTOS/queue.c **** 	taskEXIT_CRITICAL();
 2404              		.loc 1 1883 0
 2405 0022 FFF7FEFF 		bl	vPortExitCritical	@
1884:FreeRTOS/queue.c **** 
1885:FreeRTOS/queue.c **** 	return xReturn;
 2406              		.loc 1 1885 0
 2407 0026 FB68     		ldr	r3, [r7, #12]	@ D.6006, xReturn
1886:FreeRTOS/queue.c **** }
 2408              		.loc 1 1886 0
 2409 0028 1846     		mov	r0, r3	@, <retval>
 2410 002a 1037     		adds	r7, r7, #16	@,,
 2411              		.cfi_def_cfa_offset 8
 2412 002c BD46     		mov	sp, r7	@,
 2413              		.cfi_def_cfa_register 13
 2414              		@ sp needed	@
 2415 002e 80BD     		pop	{r7, pc}	@
 2416              		.cfi_endproc
 2417              	.LFE24:
 2418              		.size	prvIsQueueFull, .-prvIsQueueFull
 2419              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2420              		.align	2
 2421              		.global	xQueueIsQueueFullFromISR
 2422              		.thumb
 2423              		.thumb_func
 2424              		.type	xQueueIsQueueFullFromISR, %function
 2425              	xQueueIsQueueFullFromISR:
 2426              	.LFB25:
1887:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1888:FreeRTOS/queue.c **** 
1889:FreeRTOS/queue.c **** BaseT_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1890:FreeRTOS/queue.c **** {
 2427              		.loc 1 1890 0
 2428              		.cfi_startproc
 2429              		@ args = 0, pretend = 0, frame = 16
 2430              		@ frame_needed = 1, uses_anonymous_args = 0
 2431 0000 80B5     		push	{r7, lr}	@
 2432              		.cfi_def_cfa_offset 8
 2433              		.cfi_offset 7, -8
 2434              		.cfi_offset 14, -4
 2435 0002 84B0     		sub	sp, sp, #16	@,,
 2436              		.cfi_def_cfa_offset 24
 2437 0004 00AF     		add	r7, sp, #0	@,,
 2438              		.cfi_def_cfa_register 7
 2439 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
1891:FreeRTOS/queue.c **** BaseT_t xReturn;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 77


1892:FreeRTOS/queue.c **** 
1893:FreeRTOS/queue.c **** 	configASSERT( xQueue );
 2440              		.loc 1 1893 0
 2441 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, xQueue
 2442 000a 002B     		cmp	r3, #0	@ tmp114,
 2443 000c 02D1     		bne	.L192	@,
 2444              		.loc 1 1893 0 is_stmt 0 discriminator 1
 2445 000e FFF7FEFF 		bl	ulPortSetInterruptMask	@
 2446              	.L193:
 2447 0012 FEE7     		b	.L193	@
 2448              	.L192:
1894:FreeRTOS/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2449              		.loc 1 1894 0 is_stmt 1
 2450 0014 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2451 0016 9A6B     		ldr	r2, [r3, #56]	@ D.6007, MEM[(struct Queue_t *)xQueue_2(D)].uxMessagesWaiting
 2452 0018 7B68     		ldr	r3, [r7, #4]	@ tmp116, xQueue
 2453 001a DB6B     		ldr	r3, [r3, #60]	@ D.6007, MEM[(struct Queue_t *)xQueue_2(D)].uxLength
 2454 001c 9A42     		cmp	r2, r3	@ D.6007, D.6007
 2455 001e 02D1     		bne	.L194	@,
1895:FreeRTOS/queue.c **** 	{
1896:FreeRTOS/queue.c **** 		xReturn = pdTRUE;
 2456              		.loc 1 1896 0
 2457 0020 0123     		movs	r3, #1	@ tmp117,
 2458 0022 FB60     		str	r3, [r7, #12]	@ tmp117, xReturn
 2459 0024 01E0     		b	.L195	@
 2460              	.L194:
1897:FreeRTOS/queue.c **** 	}
1898:FreeRTOS/queue.c **** 	else
1899:FreeRTOS/queue.c **** 	{
1900:FreeRTOS/queue.c **** 		xReturn = pdFALSE;
 2461              		.loc 1 1900 0
 2462 0026 0023     		movs	r3, #0	@ tmp118,
 2463 0028 FB60     		str	r3, [r7, #12]	@ tmp118, xReturn
 2464              	.L195:
1901:FreeRTOS/queue.c **** 	}
1902:FreeRTOS/queue.c **** 
1903:FreeRTOS/queue.c **** 	return xReturn;
 2465              		.loc 1 1903 0
 2466 002a FB68     		ldr	r3, [r7, #12]	@ D.6008, xReturn
1904:FreeRTOS/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2467              		.loc 1 1904 0
 2468 002c 1846     		mov	r0, r3	@, <retval>
 2469 002e 1037     		adds	r7, r7, #16	@,,
 2470              		.cfi_def_cfa_offset 8
 2471 0030 BD46     		mov	sp, r7	@,
 2472              		.cfi_def_cfa_register 13
 2473              		@ sp needed	@
 2474 0032 80BD     		pop	{r7, pc}	@
 2475              		.cfi_endproc
 2476              	.LFE25:
 2477              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2478              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2479              		.align	2
 2480              		.global	vQueueAddToRegistry
 2481              		.thumb
 2482              		.thumb_func
 2483              		.type	vQueueAddToRegistry, %function
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 78


 2484              	vQueueAddToRegistry:
 2485              	.LFB26:
1905:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1906:FreeRTOS/queue.c **** 
1907:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1908:FreeRTOS/queue.c **** 
1909:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickT_t xTicksToWait )
1910:FreeRTOS/queue.c **** 	{
1911:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1912:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1913:FreeRTOS/queue.c **** 
1914:FreeRTOS/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
1915:FreeRTOS/queue.c **** 		is required to prevent an interrupt removing something from the queue
1916:FreeRTOS/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
1917:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1918:FreeRTOS/queue.c **** 		{
1919:FreeRTOS/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
1920:FreeRTOS/queue.c **** 			{
1921:FreeRTOS/queue.c **** 				/* The queue is full - do we want to block or just leave without
1922:FreeRTOS/queue.c **** 				posting? */
1923:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
1924:FreeRTOS/queue.c **** 				{
1925:FreeRTOS/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
1926:FreeRTOS/queue.c **** 					return indicating that we need to block. */
1927:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
1928:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1929:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
1930:FreeRTOS/queue.c **** 				}
1931:FreeRTOS/queue.c **** 				else
1932:FreeRTOS/queue.c **** 				{
1933:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
1934:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
1935:FreeRTOS/queue.c **** 				}
1936:FreeRTOS/queue.c **** 			}
1937:FreeRTOS/queue.c **** 		}
1938:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1939:FreeRTOS/queue.c **** 
1940:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1941:FreeRTOS/queue.c **** 		{
1942:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
1943:FreeRTOS/queue.c **** 			{
1944:FreeRTOS/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
1945:FreeRTOS/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
1946:FreeRTOS/queue.c **** 				xReturn = pdPASS;
1947:FreeRTOS/queue.c **** 
1948:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for data to become available? */
1949:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1950:FreeRTOS/queue.c **** 				{
1951:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
1952:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
1953:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
1954:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
1955:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1956:FreeRTOS/queue.c **** 					{
1957:FreeRTOS/queue.c **** 						/* The co-routine waiting has a higher priority so record
1958:FreeRTOS/queue.c **** 						that a yield might be appropriate. */
1959:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 79


1960:FreeRTOS/queue.c **** 					}
1961:FreeRTOS/queue.c **** 					else
1962:FreeRTOS/queue.c **** 					{
1963:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1964:FreeRTOS/queue.c **** 					}
1965:FreeRTOS/queue.c **** 				}
1966:FreeRTOS/queue.c **** 				else
1967:FreeRTOS/queue.c **** 				{
1968:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1969:FreeRTOS/queue.c **** 				}
1970:FreeRTOS/queue.c **** 			}
1971:FreeRTOS/queue.c **** 			else
1972:FreeRTOS/queue.c **** 			{
1973:FreeRTOS/queue.c **** 				xReturn = errQUEUE_FULL;
1974:FreeRTOS/queue.c **** 			}
1975:FreeRTOS/queue.c **** 		}
1976:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
1977:FreeRTOS/queue.c **** 
1978:FreeRTOS/queue.c **** 		return xReturn;
1979:FreeRTOS/queue.c **** 	}
1980:FreeRTOS/queue.c **** 
1981:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
1982:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
1983:FreeRTOS/queue.c **** 
1984:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1985:FreeRTOS/queue.c **** 
1986:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickT_t xTicksToWait )
1987:FreeRTOS/queue.c **** 	{
1988:FreeRTOS/queue.c **** 	BaseT_t xReturn;
1989:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1990:FreeRTOS/queue.c **** 
1991:FreeRTOS/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
1992:FreeRTOS/queue.c **** 		is required to prevent an interrupt adding something to the queue
1993:FreeRTOS/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
1994:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
1995:FreeRTOS/queue.c **** 		{
1996:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseT_t ) 0 )
1997:FreeRTOS/queue.c **** 			{
1998:FreeRTOS/queue.c **** 				/* There are no messages in the queue, do we want to block or just
1999:FreeRTOS/queue.c **** 				leave with nothing? */
2000:FreeRTOS/queue.c **** 				if( xTicksToWait > ( TickT_t ) 0 )
2001:FreeRTOS/queue.c **** 				{
2002:FreeRTOS/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2003:FreeRTOS/queue.c **** 					indicating that we need to block. */
2004:FreeRTOS/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2005:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2006:FreeRTOS/queue.c **** 					return errQUEUE_BLOCKED;
2007:FreeRTOS/queue.c **** 				}
2008:FreeRTOS/queue.c **** 				else
2009:FreeRTOS/queue.c **** 				{
2010:FreeRTOS/queue.c **** 					portENABLE_INTERRUPTS();
2011:FreeRTOS/queue.c **** 					return errQUEUE_FULL;
2012:FreeRTOS/queue.c **** 				}
2013:FreeRTOS/queue.c **** 			}
2014:FreeRTOS/queue.c **** 			else
2015:FreeRTOS/queue.c **** 			{
2016:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 80


2017:FreeRTOS/queue.c **** 			}
2018:FreeRTOS/queue.c **** 		}
2019:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2020:FreeRTOS/queue.c **** 
2021:FreeRTOS/queue.c **** 		portDISABLE_INTERRUPTS();
2022:FreeRTOS/queue.c **** 		{
2023:FreeRTOS/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
2024:FreeRTOS/queue.c **** 			{
2025:FreeRTOS/queue.c **** 				/* Data is available from the queue. */
2026:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2027:FreeRTOS/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2028:FreeRTOS/queue.c **** 				{
2029:FreeRTOS/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2030:FreeRTOS/queue.c **** 				}
2031:FreeRTOS/queue.c **** 				else
2032:FreeRTOS/queue.c **** 				{
2033:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2034:FreeRTOS/queue.c **** 				}
2035:FreeRTOS/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2036:FreeRTOS/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2037:FreeRTOS/queue.c **** 
2038:FreeRTOS/queue.c **** 				xReturn = pdPASS;
2039:FreeRTOS/queue.c **** 
2040:FreeRTOS/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2041:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2042:FreeRTOS/queue.c **** 				{
2043:FreeRTOS/queue.c **** 					/* In this instance the co-routine could be placed directly
2044:FreeRTOS/queue.c **** 					into the ready list as we are within a critical section.
2045:FreeRTOS/queue.c **** 					Instead the same pending ready list mechanism is used as if
2046:FreeRTOS/queue.c **** 					the event were caused from within an interrupt. */
2047:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2048:FreeRTOS/queue.c **** 					{
2049:FreeRTOS/queue.c **** 						xReturn = errQUEUE_YIELD;
2050:FreeRTOS/queue.c **** 					}
2051:FreeRTOS/queue.c **** 					else
2052:FreeRTOS/queue.c **** 					{
2053:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2054:FreeRTOS/queue.c **** 					}
2055:FreeRTOS/queue.c **** 				}
2056:FreeRTOS/queue.c **** 				else
2057:FreeRTOS/queue.c **** 				{
2058:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2059:FreeRTOS/queue.c **** 				}
2060:FreeRTOS/queue.c **** 			}
2061:FreeRTOS/queue.c **** 			else
2062:FreeRTOS/queue.c **** 			{
2063:FreeRTOS/queue.c **** 				xReturn = pdFAIL;
2064:FreeRTOS/queue.c **** 			}
2065:FreeRTOS/queue.c **** 		}
2066:FreeRTOS/queue.c **** 		portENABLE_INTERRUPTS();
2067:FreeRTOS/queue.c **** 
2068:FreeRTOS/queue.c **** 		return xReturn;
2069:FreeRTOS/queue.c **** 	}
2070:FreeRTOS/queue.c **** 
2071:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2072:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2073:FreeRTOS/queue.c **** 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 81


2074:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2075:FreeRTOS/queue.c **** 
2076:FreeRTOS/queue.c **** 	BaseT_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseT_t xCoRoutinePr
2077:FreeRTOS/queue.c **** 	{
2078:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2079:FreeRTOS/queue.c **** 
2080:FreeRTOS/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2081:FreeRTOS/queue.c **** 		exit without doing anything. */
2082:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2083:FreeRTOS/queue.c **** 		{
2084:FreeRTOS/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2085:FreeRTOS/queue.c **** 
2086:FreeRTOS/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2087:FreeRTOS/queue.c **** 			co-routine has not already been woken. */
2088:FreeRTOS/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2089:FreeRTOS/queue.c **** 			{
2090:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2091:FreeRTOS/queue.c **** 				{
2092:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2093:FreeRTOS/queue.c **** 					{
2094:FreeRTOS/queue.c **** 						return pdTRUE;
2095:FreeRTOS/queue.c **** 					}
2096:FreeRTOS/queue.c **** 					else
2097:FreeRTOS/queue.c **** 					{
2098:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2099:FreeRTOS/queue.c **** 					}
2100:FreeRTOS/queue.c **** 				}
2101:FreeRTOS/queue.c **** 				else
2102:FreeRTOS/queue.c **** 				{
2103:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2104:FreeRTOS/queue.c **** 				}
2105:FreeRTOS/queue.c **** 			}
2106:FreeRTOS/queue.c **** 			else
2107:FreeRTOS/queue.c **** 			{
2108:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2109:FreeRTOS/queue.c **** 			}
2110:FreeRTOS/queue.c **** 		}
2111:FreeRTOS/queue.c **** 		else
2112:FreeRTOS/queue.c **** 		{
2113:FreeRTOS/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2114:FreeRTOS/queue.c **** 		}
2115:FreeRTOS/queue.c **** 
2116:FreeRTOS/queue.c **** 		return xCoRoutinePreviouslyWoken;
2117:FreeRTOS/queue.c **** 	}
2118:FreeRTOS/queue.c **** 
2119:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2120:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2121:FreeRTOS/queue.c **** 
2122:FreeRTOS/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2123:FreeRTOS/queue.c **** 
2124:FreeRTOS/queue.c **** 	BaseT_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseT_t *pxCoRoutineWoken )
2125:FreeRTOS/queue.c **** 	{
2126:FreeRTOS/queue.c **** 	BaseT_t xReturn;
2127:FreeRTOS/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2128:FreeRTOS/queue.c **** 
2129:FreeRTOS/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2130:FreeRTOS/queue.c **** 		not then just leave without doing anything. */
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 82


2131:FreeRTOS/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseT_t ) 0 )
2132:FreeRTOS/queue.c **** 		{
2133:FreeRTOS/queue.c **** 			/* Copy the data from the queue. */
2134:FreeRTOS/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2135:FreeRTOS/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2136:FreeRTOS/queue.c **** 			{
2137:FreeRTOS/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2138:FreeRTOS/queue.c **** 			}
2139:FreeRTOS/queue.c **** 			else
2140:FreeRTOS/queue.c **** 			{
2141:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2142:FreeRTOS/queue.c **** 			}
2143:FreeRTOS/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2144:FreeRTOS/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2145:FreeRTOS/queue.c **** 
2146:FreeRTOS/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2147:FreeRTOS/queue.c **** 			{
2148:FreeRTOS/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2149:FreeRTOS/queue.c **** 				{
2150:FreeRTOS/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2151:FreeRTOS/queue.c **** 					{
2152:FreeRTOS/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2153:FreeRTOS/queue.c **** 					}
2154:FreeRTOS/queue.c **** 					else
2155:FreeRTOS/queue.c **** 					{
2156:FreeRTOS/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2157:FreeRTOS/queue.c **** 					}
2158:FreeRTOS/queue.c **** 				}
2159:FreeRTOS/queue.c **** 				else
2160:FreeRTOS/queue.c **** 				{
2161:FreeRTOS/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2162:FreeRTOS/queue.c **** 				}
2163:FreeRTOS/queue.c **** 			}
2164:FreeRTOS/queue.c **** 			else
2165:FreeRTOS/queue.c **** 			{
2166:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2167:FreeRTOS/queue.c **** 			}
2168:FreeRTOS/queue.c **** 
2169:FreeRTOS/queue.c **** 			xReturn = pdPASS;
2170:FreeRTOS/queue.c **** 		}
2171:FreeRTOS/queue.c **** 		else
2172:FreeRTOS/queue.c **** 		{
2173:FreeRTOS/queue.c **** 			xReturn = pdFAIL;
2174:FreeRTOS/queue.c **** 		}
2175:FreeRTOS/queue.c **** 
2176:FreeRTOS/queue.c **** 		return xReturn;
2177:FreeRTOS/queue.c **** 	}
2178:FreeRTOS/queue.c **** 
2179:FreeRTOS/queue.c **** #endif /* configUSE_CO_ROUTINES */
2180:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2181:FreeRTOS/queue.c **** 
2182:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2183:FreeRTOS/queue.c **** 
2184:FreeRTOS/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2185:FreeRTOS/queue.c **** 	{
 2486              		.loc 1 2185 0
 2487              		.cfi_startproc
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 83


 2488              		@ args = 0, pretend = 0, frame = 16
 2489              		@ frame_needed = 1, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491 0000 80B4     		push	{r7}	@
 2492              		.cfi_def_cfa_offset 4
 2493              		.cfi_offset 7, -4
 2494 0002 85B0     		sub	sp, sp, #20	@,,
 2495              		.cfi_def_cfa_offset 24
 2496 0004 00AF     		add	r7, sp, #0	@,,
 2497              		.cfi_def_cfa_register 7
 2498 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
 2499 0008 3960     		str	r1, [r7]	@ pcQueueName, pcQueueName
2186:FreeRTOS/queue.c **** 	UBaseT_t ux;
2187:FreeRTOS/queue.c **** 
2188:FreeRTOS/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2189:FreeRTOS/queue.c **** 		a free slot. */
2190:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2500              		.loc 1 2190 0
 2501 000a 0023     		movs	r3, #0	@ tmp111,
 2502 000c FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2503 000e 14E0     		b	.L198	@
 2504              	.L201:
2191:FreeRTOS/queue.c **** 		{
2192:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2505              		.loc 1 2192 0
 2506 0010 0E4A     		ldr	r2, .L202	@ tmp112,
 2507 0012 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2508 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]	@ D.6009, xQueueRegistry[ux_1].pcQueueName
 2509 0018 002B     		cmp	r3, #0	@ D.6009,
 2510 001a 0BD1     		bne	.L199	@,
2193:FreeRTOS/queue.c **** 			{
2194:FreeRTOS/queue.c **** 				/* Store the information on this queue. */
2195:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2511              		.loc 1 2195 0
 2512 001c 0B49     		ldr	r1, .L202	@ tmp114,
 2513 001e FB68     		ldr	r3, [r7, #12]	@ tmp115, ux
 2514 0020 3A68     		ldr	r2, [r7]	@ tmp116, pcQueueName
 2515 0022 41F83320 		str	r2, [r1, r3, lsl #3]	@ tmp116, xQueueRegistry[ux_1].pcQueueName
2196:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2516              		.loc 1 2196 0
 2517 0026 094A     		ldr	r2, .L202	@ tmp117,
 2518 0028 FB68     		ldr	r3, [r7, #12]	@ tmp118, ux
 2519 002a DB00     		lsls	r3, r3, #3	@ tmp119, tmp118,
 2520 002c 1344     		add	r3, r3, r2	@ tmp119, tmp117
 2521 002e 7A68     		ldr	r2, [r7, #4]	@ tmp120, xQueue
 2522 0030 5A60     		str	r2, [r3, #4]	@ tmp120, xQueueRegistry[ux_1].xHandle
2197:FreeRTOS/queue.c **** 
2198:FreeRTOS/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2199:FreeRTOS/queue.c **** 				break;
 2523              		.loc 1 2199 0
 2524 0032 05E0     		b	.L197	@
 2525              	.L199:
2190:FreeRTOS/queue.c **** 		{
 2526              		.loc 1 2190 0 discriminator 2
 2527 0034 FB68     		ldr	r3, [r7, #12]	@ tmp122, ux
 2528 0036 0133     		adds	r3, r3, #1	@ tmp121, tmp122,
 2529 0038 FB60     		str	r3, [r7, #12]	@ tmp121, ux
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 84


 2530              	.L198:
2190:FreeRTOS/queue.c **** 		{
 2531              		.loc 1 2190 0 is_stmt 0 discriminator 1
 2532 003a FB68     		ldr	r3, [r7, #12]	@ tmp123, ux
 2533 003c 092B     		cmp	r3, #9	@ tmp123,
 2534 003e E7D9     		bls	.L201	@,
 2535              	.L197:
2200:FreeRTOS/queue.c **** 			}
2201:FreeRTOS/queue.c **** 			else
2202:FreeRTOS/queue.c **** 			{
2203:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2204:FreeRTOS/queue.c **** 			}
2205:FreeRTOS/queue.c **** 		}
2206:FreeRTOS/queue.c **** 	}
 2536              		.loc 1 2206 0 is_stmt 1
 2537 0040 1437     		adds	r7, r7, #20	@,,
 2538              		.cfi_def_cfa_offset 4
 2539 0042 BD46     		mov	sp, r7	@,
 2540              		.cfi_def_cfa_register 13
 2541              		@ sp needed	@
 2542 0044 5DF8047B 		ldr	r7, [sp], #4	@,
 2543              		.cfi_restore 7
 2544              		.cfi_def_cfa_offset 0
 2545 0048 7047     		bx	lr	@
 2546              	.L203:
 2547 004a 00BF     		.align	2
 2548              	.L202:
 2549 004c 00000000 		.word	xQueueRegistry
 2550              		.cfi_endproc
 2551              	.LFE26:
 2552              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2553              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2554              		.align	2
 2555              		.global	vQueueUnregisterQueue
 2556              		.thumb
 2557              		.thumb_func
 2558              		.type	vQueueUnregisterQueue, %function
 2559              	vQueueUnregisterQueue:
 2560              	.LFB27:
2207:FreeRTOS/queue.c **** 
2208:FreeRTOS/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2209:FreeRTOS/queue.c **** /*-----------------------------------------------------------*/
2210:FreeRTOS/queue.c **** 
2211:FreeRTOS/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2212:FreeRTOS/queue.c **** 
2213:FreeRTOS/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2214:FreeRTOS/queue.c **** 	{
 2561              		.loc 1 2214 0
 2562              		.cfi_startproc
 2563              		@ args = 0, pretend = 0, frame = 16
 2564              		@ frame_needed = 1, uses_anonymous_args = 0
 2565              		@ link register save eliminated.
 2566 0000 80B4     		push	{r7}	@
 2567              		.cfi_def_cfa_offset 4
 2568              		.cfi_offset 7, -4
 2569 0002 85B0     		sub	sp, sp, #20	@,,
 2570              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 85


 2571 0004 00AF     		add	r7, sp, #0	@,,
 2572              		.cfi_def_cfa_register 7
 2573 0006 7860     		str	r0, [r7, #4]	@ xQueue, xQueue
2215:FreeRTOS/queue.c **** 	UBaseT_t ux;
2216:FreeRTOS/queue.c **** 
2217:FreeRTOS/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2218:FreeRTOS/queue.c **** 		registry. */
2219:FreeRTOS/queue.c **** 		for( ux = ( UBaseT_t ) 0U; ux < ( UBaseT_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2574              		.loc 1 2219 0
 2575 0008 0023     		movs	r3, #0	@ tmp111,
 2576 000a FB60     		str	r3, [r7, #12]	@ tmp111, ux
 2577 000c 10E0     		b	.L205	@
 2578              	.L208:
2220:FreeRTOS/queue.c **** 		{
2221:FreeRTOS/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2579              		.loc 1 2221 0
 2580 000e 0C4A     		ldr	r2, .L209	@ tmp112,
 2581 0010 FB68     		ldr	r3, [r7, #12]	@ tmp113, ux
 2582 0012 DB00     		lsls	r3, r3, #3	@ tmp114, tmp113,
 2583 0014 1344     		add	r3, r3, r2	@ tmp114, tmp112
 2584 0016 5A68     		ldr	r2, [r3, #4]	@ D.6010, xQueueRegistry[ux_1].xHandle
 2585 0018 7B68     		ldr	r3, [r7, #4]	@ tmp115, xQueue
 2586 001a 9A42     		cmp	r2, r3	@ D.6010, tmp115
 2587 001c 05D1     		bne	.L206	@,
2222:FreeRTOS/queue.c **** 			{
2223:FreeRTOS/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2224:FreeRTOS/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2588              		.loc 1 2224 0
 2589 001e 084A     		ldr	r2, .L209	@ tmp116,
 2590 0020 FB68     		ldr	r3, [r7, #12]	@ tmp117, ux
 2591 0022 0021     		movs	r1, #0	@ tmp118,
 2592 0024 42F83310 		str	r1, [r2, r3, lsl #3]	@ tmp118, xQueueRegistry[ux_1].pcQueueName
2225:FreeRTOS/queue.c **** 				break;
 2593              		.loc 1 2225 0
 2594 0028 05E0     		b	.L204	@
 2595              	.L206:
2219:FreeRTOS/queue.c **** 		{
 2596              		.loc 1 2219 0 discriminator 2
 2597 002a FB68     		ldr	r3, [r7, #12]	@ tmp120, ux
 2598 002c 0133     		adds	r3, r3, #1	@ tmp119, tmp120,
 2599 002e FB60     		str	r3, [r7, #12]	@ tmp119, ux
 2600              	.L205:
2219:FreeRTOS/queue.c **** 		{
 2601              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2602 0030 FB68     		ldr	r3, [r7, #12]	@ tmp121, ux
 2603 0032 092B     		cmp	r3, #9	@ tmp121,
 2604 0034 EBD9     		bls	.L208	@,
 2605              	.L204:
2226:FreeRTOS/queue.c **** 			}
2227:FreeRTOS/queue.c **** 			else
2228:FreeRTOS/queue.c **** 			{
2229:FreeRTOS/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2230:FreeRTOS/queue.c **** 			}
2231:FreeRTOS/queue.c **** 		}
2232:FreeRTOS/queue.c **** 
2233:FreeRTOS/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2606              		.loc 1 2233 0 is_stmt 1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 86


 2607 0036 1437     		adds	r7, r7, #20	@,,
 2608              		.cfi_def_cfa_offset 4
 2609 0038 BD46     		mov	sp, r7	@,
 2610              		.cfi_def_cfa_register 13
 2611              		@ sp needed	@
 2612 003a 5DF8047B 		ldr	r7, [sp], #4	@,
 2613              		.cfi_restore 7
 2614              		.cfi_def_cfa_offset 0
 2615 003e 7047     		bx	lr	@
 2616              	.L210:
 2617              		.align	2
 2618              	.L209:
 2619 0040 00000000 		.word	xQueueRegistry
 2620              		.cfi_endproc
 2621              	.LFE27:
 2622              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2623              		.text
 2624              	.Letext0:
 2625              		.file 2 "c:\\gnu tools arm embedded\\4.9 2015q1\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h
 2626              		.file 3 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\_default_types.h
 2627              		.file 4 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\stdint.h"
 2628              		.file 5 "FreeRTOS/portable/GCC/ARM_CM3/portmacro.h"
 2629              		.file 6 "FreeRTOS/include/list.h"
 2630              		.file 7 "FreeRTOS/include/task.h"
 2631              		.file 8 "FreeRTOS/include/queue.h"
 2632              		.section	.debug_info,"",%progbits
 2633              	.Ldebug_info0:
 2634 0000 890B0000 		.4byte	0xb89
 2635 0004 0400     		.2byte	0x4
 2636 0006 00000000 		.4byte	.Ldebug_abbrev0
 2637 000a 04       		.byte	0x4
 2638 000b 01       		.uleb128 0x1
 2639 000c C90A0000 		.4byte	.LASF1139
 2640 0010 01       		.byte	0x1
 2641 0011 28110000 		.4byte	.LASF1140
 2642 0015 538E0000 		.4byte	.LASF1141
 2643 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2644 001d 00000000 		.4byte	0
 2645 0021 00000000 		.4byte	.Ldebug_line0
 2646 0025 00000000 		.4byte	.Ldebug_macro0
 2647 0029 02       		.uleb128 0x2
 2648 002a 02010000 		.4byte	.LASF1027
 2649 002e 02       		.byte	0x2
 2650 002f D4       		.byte	0xd4
 2651 0030 34000000 		.4byte	0x34
 2652 0034 03       		.uleb128 0x3
 2653 0035 04       		.byte	0x4
 2654 0036 07       		.byte	0x7
 2655 0037 12520000 		.4byte	.LASF1026
 2656 003b 04       		.uleb128 0x4
 2657 003c 04       		.byte	0x4
 2658 003d 05       		.byte	0x5
 2659 003e 696E7400 		.ascii	"int\000"
 2660 0042 02       		.uleb128 0x2
 2661 0043 71620000 		.4byte	.LASF1028
 2662 0047 03       		.byte	0x3
 2663 0048 1B       		.byte	0x1b
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 87


 2664 0049 4D000000 		.4byte	0x4d
 2665 004d 03       		.uleb128 0x3
 2666 004e 01       		.byte	0x1
 2667 004f 06       		.byte	0x6
 2668 0050 7C1C0000 		.4byte	.LASF1029
 2669 0054 02       		.uleb128 0x2
 2670 0055 8A100000 		.4byte	.LASF1030
 2671 0059 03       		.byte	0x3
 2672 005a 1D       		.byte	0x1d
 2673 005b 5F000000 		.4byte	0x5f
 2674 005f 03       		.uleb128 0x3
 2675 0060 01       		.byte	0x1
 2676 0061 08       		.byte	0x8
 2677 0062 005A0000 		.4byte	.LASF1031
 2678 0066 03       		.uleb128 0x3
 2679 0067 02       		.byte	0x2
 2680 0068 05       		.byte	0x5
 2681 0069 BD750000 		.4byte	.LASF1032
 2682 006d 03       		.uleb128 0x3
 2683 006e 02       		.byte	0x2
 2684 006f 07       		.byte	0x7
 2685 0070 5A5A0000 		.4byte	.LASF1033
 2686 0074 03       		.uleb128 0x3
 2687 0075 04       		.byte	0x4
 2688 0076 05       		.byte	0x5
 2689 0077 DC130000 		.4byte	.LASF1034
 2690 007b 02       		.uleb128 0x2
 2691 007c 943C0000 		.4byte	.LASF1035
 2692 0080 03       		.byte	0x3
 2693 0081 41       		.byte	0x41
 2694 0082 86000000 		.4byte	0x86
 2695 0086 03       		.uleb128 0x3
 2696 0087 04       		.byte	0x4
 2697 0088 07       		.byte	0x7
 2698 0089 DD3B0000 		.4byte	.LASF1036
 2699 008d 03       		.uleb128 0x3
 2700 008e 08       		.byte	0x8
 2701 008f 05       		.byte	0x5
 2702 0090 CD470000 		.4byte	.LASF1037
 2703 0094 03       		.uleb128 0x3
 2704 0095 08       		.byte	0x8
 2705 0096 07       		.byte	0x7
 2706 0097 64630000 		.4byte	.LASF1038
 2707 009b 03       		.uleb128 0x3
 2708 009c 04       		.byte	0x4
 2709 009d 07       		.byte	0x7
 2710 009e 5C010000 		.4byte	.LASF1039
 2711 00a2 05       		.uleb128 0x5
 2712 00a3 04       		.byte	0x4
 2713 00a4 03       		.uleb128 0x3
 2714 00a5 01       		.byte	0x1
 2715 00a6 08       		.byte	0x8
 2716 00a7 13280000 		.4byte	.LASF1040
 2717 00ab 06       		.uleb128 0x6
 2718 00ac 04       		.byte	0x4
 2719 00ad B1000000 		.4byte	0xb1
 2720 00b1 07       		.uleb128 0x7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 88


 2721 00b2 A4000000 		.4byte	0xa4
 2722 00b6 06       		.uleb128 0x6
 2723 00b7 04       		.byte	0x4
 2724 00b8 BC000000 		.4byte	0xbc
 2725 00bc 08       		.uleb128 0x8
 2726 00bd 02       		.uleb128 0x2
 2727 00be 76000000 		.4byte	.LASF1041
 2728 00c2 04       		.byte	0x4
 2729 00c3 14       		.byte	0x14
 2730 00c4 42000000 		.4byte	0x42
 2731 00c8 02       		.uleb128 0x2
 2732 00c9 881C0000 		.4byte	.LASF1042
 2733 00cd 04       		.byte	0x4
 2734 00ce 15       		.byte	0x15
 2735 00cf 54000000 		.4byte	0x54
 2736 00d3 02       		.uleb128 0x2
 2737 00d4 95830000 		.4byte	.LASF1043
 2738 00d8 04       		.byte	0x4
 2739 00d9 2D       		.byte	0x2d
 2740 00da 7B000000 		.4byte	0x7b
 2741 00de 02       		.uleb128 0x2
 2742 00df BC3A0000 		.4byte	.LASF1044
 2743 00e3 05       		.byte	0x5
 2744 00e4 60       		.byte	0x60
 2745 00e5 74000000 		.4byte	0x74
 2746 00e9 02       		.uleb128 0x2
 2747 00ea EB2B0000 		.4byte	.LASF1045
 2748 00ee 05       		.byte	0x5
 2749 00ef 62       		.byte	0x62
 2750 00f0 86000000 		.4byte	0x86
 2751 00f4 02       		.uleb128 0x2
 2752 00f5 DB7D0000 		.4byte	.LASF1046
 2753 00f9 05       		.byte	0x5
 2754 00fa 69       		.byte	0x69
 2755 00fb D3000000 		.4byte	0xd3
 2756 00ff 09       		.uleb128 0x9
 2757 0100 1B4D0000 		.4byte	.LASF1053
 2758 0104 14       		.byte	0x14
 2759 0105 06       		.byte	0x6
 2760 0106 88       		.byte	0x88
 2761 0107 48010000 		.4byte	0x148
 2762 010b 0A       		.uleb128 0xa
 2763 010c 328F0000 		.4byte	.LASF1047
 2764 0110 06       		.byte	0x6
 2765 0111 8A       		.byte	0x8a
 2766 0112 F4000000 		.4byte	0xf4
 2767 0116 00       		.byte	0
 2768 0117 0A       		.uleb128 0xa
 2769 0118 370F0000 		.4byte	.LASF1048
 2770 011c 06       		.byte	0x6
 2771 011d 8B       		.byte	0x8b
 2772 011e 48010000 		.4byte	0x148
 2773 0122 04       		.byte	0x4
 2774 0123 0A       		.uleb128 0xa
 2775 0124 55670000 		.4byte	.LASF1049
 2776 0128 06       		.byte	0x6
 2777 0129 8C       		.byte	0x8c
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 89


 2778 012a 48010000 		.4byte	0x148
 2779 012e 08       		.byte	0x8
 2780 012f 0A       		.uleb128 0xa
 2781 0130 855E0000 		.4byte	.LASF1050
 2782 0134 06       		.byte	0x6
 2783 0135 8D       		.byte	0x8d
 2784 0136 A2000000 		.4byte	0xa2
 2785 013a 0C       		.byte	0xc
 2786 013b 0A       		.uleb128 0xa
 2787 013c 362C0000 		.4byte	.LASF1051
 2788 0140 06       		.byte	0x6
 2789 0141 8E       		.byte	0x8e
 2790 0142 A2000000 		.4byte	0xa2
 2791 0146 10       		.byte	0x10
 2792 0147 00       		.byte	0
 2793 0148 06       		.uleb128 0x6
 2794 0149 04       		.byte	0x4
 2795 014a FF000000 		.4byte	0xff
 2796 014e 02       		.uleb128 0x2
 2797 014f D07D0000 		.4byte	.LASF1052
 2798 0153 06       		.byte	0x6
 2799 0154 90       		.byte	0x90
 2800 0155 FF000000 		.4byte	0xff
 2801 0159 09       		.uleb128 0x9
 2802 015a 0D290000 		.4byte	.LASF1054
 2803 015e 0C       		.byte	0xc
 2804 015f 06       		.byte	0x6
 2805 0160 92       		.byte	0x92
 2806 0161 8A010000 		.4byte	0x18a
 2807 0165 0A       		.uleb128 0xa
 2808 0166 328F0000 		.4byte	.LASF1047
 2809 016a 06       		.byte	0x6
 2810 016b 94       		.byte	0x94
 2811 016c F4000000 		.4byte	0xf4
 2812 0170 00       		.byte	0
 2813 0171 0A       		.uleb128 0xa
 2814 0172 370F0000 		.4byte	.LASF1048
 2815 0176 06       		.byte	0x6
 2816 0177 95       		.byte	0x95
 2817 0178 48010000 		.4byte	0x148
 2818 017c 04       		.byte	0x4
 2819 017d 0A       		.uleb128 0xa
 2820 017e 55670000 		.4byte	.LASF1049
 2821 0182 06       		.byte	0x6
 2822 0183 96       		.byte	0x96
 2823 0184 48010000 		.4byte	0x148
 2824 0188 08       		.byte	0x8
 2825 0189 00       		.byte	0
 2826 018a 02       		.uleb128 0x2
 2827 018b A8720000 		.4byte	.LASF1055
 2828 018f 06       		.byte	0x6
 2829 0190 98       		.byte	0x98
 2830 0191 59010000 		.4byte	0x159
 2831 0195 09       		.uleb128 0x9
 2832 0196 62730000 		.4byte	.LASF1056
 2833 019a 14       		.byte	0x14
 2834 019b 06       		.byte	0x6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 90


 2835 019c 9D       		.byte	0x9d
 2836 019d C6010000 		.4byte	0x1c6
 2837 01a1 0A       		.uleb128 0xa
 2838 01a2 B8540000 		.4byte	.LASF1057
 2839 01a6 06       		.byte	0x6
 2840 01a7 9F       		.byte	0x9f
 2841 01a8 E9000000 		.4byte	0xe9
 2842 01ac 00       		.byte	0
 2843 01ad 0A       		.uleb128 0xa
 2844 01ae 59260000 		.4byte	.LASF1058
 2845 01b2 06       		.byte	0x6
 2846 01b3 A0       		.byte	0xa0
 2847 01b4 C6010000 		.4byte	0x1c6
 2848 01b8 04       		.byte	0x4
 2849 01b9 0A       		.uleb128 0xa
 2850 01ba 6D5A0000 		.4byte	.LASF1059
 2851 01be 06       		.byte	0x6
 2852 01bf A1       		.byte	0xa1
 2853 01c0 8A010000 		.4byte	0x18a
 2854 01c4 08       		.byte	0x8
 2855 01c5 00       		.byte	0
 2856 01c6 06       		.uleb128 0x6
 2857 01c7 04       		.byte	0x4
 2858 01c8 4E010000 		.4byte	0x14e
 2859 01cc 02       		.uleb128 0x2
 2860 01cd D0570000 		.4byte	.LASF1060
 2861 01d1 06       		.byte	0x6
 2862 01d2 A2       		.byte	0xa2
 2863 01d3 95010000 		.4byte	0x195
 2864 01d7 09       		.uleb128 0x9
 2865 01d8 9F060000 		.4byte	.LASF1061
 2866 01dc 08       		.byte	0x8
 2867 01dd 07       		.byte	0x7
 2868 01de 78       		.byte	0x78
 2869 01df FC010000 		.4byte	0x1fc
 2870 01e3 0A       		.uleb128 0xa
 2871 01e4 9E390000 		.4byte	.LASF1062
 2872 01e8 07       		.byte	0x7
 2873 01e9 7A       		.byte	0x7a
 2874 01ea DE000000 		.4byte	0xde
 2875 01ee 00       		.byte	0
 2876 01ef 0A       		.uleb128 0xa
 2877 01f0 AF230000 		.4byte	.LASF1063
 2878 01f4 07       		.byte	0x7
 2879 01f5 7B       		.byte	0x7b
 2880 01f6 F4000000 		.4byte	0xf4
 2881 01fa 04       		.byte	0x4
 2882 01fb 00       		.byte	0
 2883 01fc 02       		.uleb128 0x2
 2884 01fd D7280000 		.4byte	.LASF1064
 2885 0201 07       		.byte	0x7
 2886 0202 7C       		.byte	0x7c
 2887 0203 D7010000 		.4byte	0x1d7
 2888 0207 02       		.uleb128 0x2
 2889 0208 6E1C0000 		.4byte	.LASF1065
 2890 020c 08       		.byte	0x8
 2891 020d 54       		.byte	0x54
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 91


 2892 020e A2000000 		.4byte	0xa2
 2893 0212 0B       		.uleb128 0xb
 2894 0213 04       		.byte	0x4
 2895 0214 01       		.byte	0x1
 2896 0215 83       		.byte	0x83
 2897 0216 31020000 		.4byte	0x231
 2898 021a 0C       		.uleb128 0xc
 2899 021b 9E0D0000 		.4byte	.LASF1066
 2900 021f 01       		.byte	0x1
 2901 0220 85       		.byte	0x85
 2902 0221 31020000 		.4byte	0x231
 2903 0225 0C       		.uleb128 0xc
 2904 0226 F2270000 		.4byte	.LASF1067
 2905 022a 01       		.byte	0x1
 2906 022b 86       		.byte	0x86
 2907 022c E9000000 		.4byte	0xe9
 2908 0230 00       		.byte	0
 2909 0231 06       		.uleb128 0x6
 2910 0232 04       		.byte	0x4
 2911 0233 BD000000 		.4byte	0xbd
 2912 0237 09       		.uleb128 0x9
 2913 0238 C5140000 		.4byte	.LASF1068
 2914 023c 54       		.byte	0x54
 2915 023d 01       		.byte	0x1
 2916 023e 7D       		.byte	0x7d
 2917 023f DE020000 		.4byte	0x2de
 2918 0243 0A       		.uleb128 0xa
 2919 0244 D0310000 		.4byte	.LASF1069
 2920 0248 01       		.byte	0x1
 2921 0249 7F       		.byte	0x7f
 2922 024a 31020000 		.4byte	0x231
 2923 024e 00       		.byte	0
 2924 024f 0A       		.uleb128 0xa
 2925 0250 170D0000 		.4byte	.LASF1070
 2926 0254 01       		.byte	0x1
 2927 0255 80       		.byte	0x80
 2928 0256 31020000 		.4byte	0x231
 2929 025a 04       		.byte	0x4
 2930 025b 0A       		.uleb128 0xa
 2931 025c D7570000 		.4byte	.LASF1071
 2932 0260 01       		.byte	0x1
 2933 0261 81       		.byte	0x81
 2934 0262 31020000 		.4byte	0x231
 2935 0266 08       		.byte	0x8
 2936 0267 0D       		.uleb128 0xd
 2937 0268 7500     		.ascii	"u\000"
 2938 026a 01       		.byte	0x1
 2939 026b 87       		.byte	0x87
 2940 026c 12020000 		.4byte	0x212
 2941 0270 0C       		.byte	0xc
 2942 0271 0A       		.uleb128 0xa
 2943 0272 F01F0000 		.4byte	.LASF1072
 2944 0276 01       		.byte	0x1
 2945 0277 89       		.byte	0x89
 2946 0278 CC010000 		.4byte	0x1cc
 2947 027c 10       		.byte	0x10
 2948 027d 0A       		.uleb128 0xa
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 92


 2949 027e A8630000 		.4byte	.LASF1073
 2950 0282 01       		.byte	0x1
 2951 0283 8A       		.byte	0x8a
 2952 0284 CC010000 		.4byte	0x1cc
 2953 0288 24       		.byte	0x24
 2954 0289 0A       		.uleb128 0xa
 2955 028a F5500000 		.4byte	.LASF1074
 2956 028e 01       		.byte	0x1
 2957 028f 8C       		.byte	0x8c
 2958 0290 DE020000 		.4byte	0x2de
 2959 0294 38       		.byte	0x38
 2960 0295 0A       		.uleb128 0xa
 2961 0296 17630000 		.4byte	.LASF1075
 2962 029a 01       		.byte	0x1
 2963 029b 8D       		.byte	0x8d
 2964 029c E9000000 		.4byte	0xe9
 2965 02a0 3C       		.byte	0x3c
 2966 02a1 0A       		.uleb128 0xa
 2967 02a2 79330000 		.4byte	.LASF1076
 2968 02a6 01       		.byte	0x1
 2969 02a7 8E       		.byte	0x8e
 2970 02a8 E9000000 		.4byte	0xe9
 2971 02ac 40       		.byte	0x40
 2972 02ad 0A       		.uleb128 0xa
 2973 02ae 64360000 		.4byte	.LASF1077
 2974 02b2 01       		.byte	0x1
 2975 02b3 90       		.byte	0x90
 2976 02b4 E3020000 		.4byte	0x2e3
 2977 02b8 44       		.byte	0x44
 2978 02b9 0A       		.uleb128 0xa
 2979 02ba E4880000 		.4byte	.LASF1078
 2980 02be 01       		.byte	0x1
 2981 02bf 91       		.byte	0x91
 2982 02c0 E3020000 		.4byte	0x2e3
 2983 02c4 48       		.byte	0x48
 2984 02c5 0A       		.uleb128 0xa
 2985 02c6 221B0000 		.4byte	.LASF1079
 2986 02ca 01       		.byte	0x1
 2987 02cb 94       		.byte	0x94
 2988 02cc E9000000 		.4byte	0xe9
 2989 02d0 4C       		.byte	0x4c
 2990 02d1 0A       		.uleb128 0xa
 2991 02d2 F04D0000 		.4byte	.LASF1080
 2992 02d6 01       		.byte	0x1
 2993 02d7 95       		.byte	0x95
 2994 02d8 C8000000 		.4byte	0xc8
 2995 02dc 50       		.byte	0x50
 2996 02dd 00       		.byte	0
 2997 02de 0E       		.uleb128 0xe
 2998 02df E9000000 		.4byte	0xe9
 2999 02e3 0E       		.uleb128 0xe
 3000 02e4 DE000000 		.4byte	0xde
 3001 02e8 02       		.uleb128 0x2
 3002 02e9 7B8B0000 		.4byte	.LASF1081
 3003 02ed 01       		.byte	0x1
 3004 02ee 9C       		.byte	0x9c
 3005 02ef 37020000 		.4byte	0x237
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 93


 3006 02f3 02       		.uleb128 0x2
 3007 02f4 FE3B0000 		.4byte	.LASF1082
 3008 02f8 01       		.byte	0x1
 3009 02f9 A0       		.byte	0xa0
 3010 02fa E8020000 		.4byte	0x2e8
 3011 02fe 09       		.uleb128 0x9
 3012 02ff 22300000 		.4byte	.LASF1083
 3013 0303 08       		.byte	0x8
 3014 0304 01       		.byte	0x1
 3015 0305 AD       		.byte	0xad
 3016 0306 23030000 		.4byte	0x323
 3017 030a 0A       		.uleb128 0xa
 3018 030b 0A020000 		.4byte	.LASF1084
 3019 030f 01       		.byte	0x1
 3020 0310 AF       		.byte	0xaf
 3021 0311 AB000000 		.4byte	0xab
 3022 0315 00       		.byte	0
 3023 0316 0A       		.uleb128 0xa
 3024 0317 0B090000 		.4byte	.LASF1085
 3025 031b 01       		.byte	0x1
 3026 031c B0       		.byte	0xb0
 3027 031d 07020000 		.4byte	0x207
 3028 0321 04       		.byte	0x4
 3029 0322 00       		.byte	0
 3030 0323 02       		.uleb128 0x2
 3031 0324 212F0000 		.4byte	.LASF1086
 3032 0328 01       		.byte	0x1
 3033 0329 B1       		.byte	0xb1
 3034 032a FE020000 		.4byte	0x2fe
 3035 032e 02       		.uleb128 0x2
 3036 032f CA830000 		.4byte	.LASF1087
 3037 0333 01       		.byte	0x1
 3038 0334 B6       		.byte	0xb6
 3039 0335 23030000 		.4byte	0x323
 3040 0339 0F       		.uleb128 0xf
 3041 033a 1A610000 		.4byte	.LASF1090
 3042 033e 01       		.byte	0x1
 3043 033f FF       		.byte	0xff
 3044 0340 DE000000 		.4byte	0xde
 3045 0344 00000000 		.4byte	.LFB1
 3046 0348 B0000000 		.4byte	.LFE1-.LFB1
 3047 034c 01       		.uleb128 0x1
 3048 034d 9C       		.byte	0x9c
 3049 034e 7E030000 		.4byte	0x37e
 3050 0352 10       		.uleb128 0x10
 3051 0353 B3830000 		.4byte	.LASF1088
 3052 0357 01       		.byte	0x1
 3053 0358 FF       		.byte	0xff
 3054 0359 07020000 		.4byte	0x207
 3055 035d 02       		.uleb128 0x2
 3056 035e 91       		.byte	0x91
 3057 035f 6C       		.sleb128 -20
 3058 0360 10       		.uleb128 0x10
 3059 0361 366D0000 		.4byte	.LASF1089
 3060 0365 01       		.byte	0x1
 3061 0366 FF       		.byte	0xff
 3062 0367 DE000000 		.4byte	0xde
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 94


 3063 036b 02       		.uleb128 0x2
 3064 036c 91       		.byte	0x91
 3065 036d 68       		.sleb128 -24
 3066 036e 11       		.uleb128 0x11
 3067 036f 27140000 		.4byte	.LASF1093
 3068 0373 01       		.byte	0x1
 3069 0374 0101     		.2byte	0x101
 3070 0376 7E030000 		.4byte	0x37e
 3071 037a 02       		.uleb128 0x2
 3072 037b 91       		.byte	0x91
 3073 037c 74       		.sleb128 -12
 3074 037d 00       		.byte	0
 3075 037e 07       		.uleb128 0x7
 3076 037f 83030000 		.4byte	0x383
 3077 0383 06       		.uleb128 0x6
 3078 0384 04       		.byte	0x4
 3079 0385 F3020000 		.4byte	0x2f3
 3080 0389 12       		.uleb128 0x12
 3081 038a 7D220000 		.4byte	.LASF1091
 3082 038e 01       		.byte	0x1
 3083 038f 3401     		.2byte	0x134
 3084 0391 07020000 		.4byte	0x207
 3085 0395 00000000 		.4byte	.LFB2
 3086 0399 84000000 		.4byte	.LFE2-.LFB2
 3087 039d 01       		.uleb128 0x1
 3088 039e 9C       		.byte	0x9c
 3089 039f FE030000 		.4byte	0x3fe
 3090 03a3 13       		.uleb128 0x13
 3091 03a4 FE0F0000 		.4byte	.LASF1092
 3092 03a8 01       		.byte	0x1
 3093 03a9 3401     		.2byte	0x134
 3094 03ab FE030000 		.4byte	0x3fe
 3095 03af 02       		.uleb128 0x2
 3096 03b0 91       		.byte	0x91
 3097 03b1 64       		.sleb128 -28
 3098 03b2 13       		.uleb128 0x13
 3099 03b3 79330000 		.4byte	.LASF1076
 3100 03b7 01       		.byte	0x1
 3101 03b8 3401     		.2byte	0x134
 3102 03ba FE030000 		.4byte	0x3fe
 3103 03be 02       		.uleb128 0x2
 3104 03bf 91       		.byte	0x91
 3105 03c0 60       		.sleb128 -32
 3106 03c1 13       		.uleb128 0x13
 3107 03c2 F04D0000 		.4byte	.LASF1080
 3108 03c6 01       		.byte	0x1
 3109 03c7 3401     		.2byte	0x134
 3110 03c9 03040000 		.4byte	0x403
 3111 03cd 02       		.uleb128 0x2
 3112 03ce 91       		.byte	0x91
 3113 03cf 5F       		.sleb128 -33
 3114 03d0 11       		.uleb128 0x11
 3115 03d1 5D8A0000 		.4byte	.LASF1094
 3116 03d5 01       		.byte	0x1
 3117 03d6 3601     		.2byte	0x136
 3118 03d8 83030000 		.4byte	0x383
 3119 03dc 02       		.uleb128 0x2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 95


 3120 03dd 91       		.byte	0x91
 3121 03de 70       		.sleb128 -16
 3122 03df 11       		.uleb128 0x11
 3123 03e0 4A750000 		.4byte	.LASF1095
 3124 03e4 01       		.byte	0x1
 3125 03e5 3701     		.2byte	0x137
 3126 03e7 29000000 		.4byte	0x29
 3127 03eb 02       		.uleb128 0x2
 3128 03ec 91       		.byte	0x91
 3129 03ed 6C       		.sleb128 -20
 3130 03ee 11       		.uleb128 0x11
 3131 03ef AF210000 		.4byte	.LASF1096
 3132 03f3 01       		.byte	0x1
 3133 03f4 3801     		.2byte	0x138
 3134 03f6 07020000 		.4byte	0x207
 3135 03fa 02       		.uleb128 0x2
 3136 03fb 91       		.byte	0x91
 3137 03fc 74       		.sleb128 -12
 3138 03fd 00       		.byte	0
 3139 03fe 07       		.uleb128 0x7
 3140 03ff E9000000 		.4byte	0xe9
 3141 0403 07       		.uleb128 0x7
 3142 0404 C8000000 		.4byte	0xc8
 3143 0408 12       		.uleb128 0x12
 3144 0409 92270000 		.4byte	.LASF1097
 3145 040d 01       		.byte	0x1
 3146 040e 7801     		.2byte	0x178
 3147 0410 07020000 		.4byte	0x207
 3148 0414 00000000 		.4byte	.LFB3
 3149 0418 90000000 		.4byte	.LFE3-.LFB3
 3150 041c 01       		.uleb128 0x1
 3151 041d 9C       		.byte	0x9c
 3152 041e 41040000 		.4byte	0x441
 3153 0422 13       		.uleb128 0x13
 3154 0423 F04D0000 		.4byte	.LASF1080
 3155 0427 01       		.byte	0x1
 3156 0428 7801     		.2byte	0x178
 3157 042a 03040000 		.4byte	0x403
 3158 042e 02       		.uleb128 0x2
 3159 042f 91       		.byte	0x91
 3160 0430 6F       		.sleb128 -17
 3161 0431 11       		.uleb128 0x11
 3162 0432 5D8A0000 		.4byte	.LASF1094
 3163 0436 01       		.byte	0x1
 3164 0437 7A01     		.2byte	0x17a
 3165 0439 83030000 		.4byte	0x383
 3166 043d 02       		.uleb128 0x2
 3167 043e 91       		.byte	0x91
 3168 043f 74       		.sleb128 -12
 3169 0440 00       		.byte	0
 3170 0441 12       		.uleb128 0x12
 3171 0442 71100000 		.4byte	.LASF1098
 3172 0446 01       		.byte	0x1
 3173 0447 D701     		.2byte	0x1d7
 3174 0449 DE000000 		.4byte	0xde
 3175 044d 00000000 		.4byte	.LFB4
 3176 0451 58000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 96


 3177 0455 01       		.uleb128 0x1
 3178 0456 9C       		.byte	0x9c
 3179 0457 89040000 		.4byte	0x489
 3180 045b 13       		.uleb128 0x13
 3181 045c F66D0000 		.4byte	.LASF1099
 3182 0460 01       		.byte	0x1
 3183 0461 D701     		.2byte	0x1d7
 3184 0463 07020000 		.4byte	0x207
 3185 0467 02       		.uleb128 0x2
 3186 0468 91       		.byte	0x91
 3187 0469 64       		.sleb128 -28
 3188 046a 11       		.uleb128 0x11
 3189 046b AF210000 		.4byte	.LASF1096
 3190 046f 01       		.byte	0x1
 3191 0470 D901     		.2byte	0x1d9
 3192 0472 DE000000 		.4byte	0xde
 3193 0476 02       		.uleb128 0x2
 3194 0477 91       		.byte	0x91
 3195 0478 6C       		.sleb128 -20
 3196 0479 11       		.uleb128 0x11
 3197 047a 6E390000 		.4byte	.LASF1100
 3198 047e 01       		.byte	0x1
 3199 047f DA01     		.2byte	0x1da
 3200 0481 7E030000 		.4byte	0x37e
 3201 0485 02       		.uleb128 0x2
 3202 0486 91       		.byte	0x91
 3203 0487 68       		.sleb128 -24
 3204 0488 00       		.byte	0
 3205 0489 12       		.uleb128 0x12
 3206 048a D8660000 		.4byte	.LASF1101
 3207 048e 01       		.byte	0x1
 3208 048f 0E02     		.2byte	0x20e
 3209 0491 DE000000 		.4byte	0xde
 3210 0495 00000000 		.4byte	.LFB5
 3211 0499 60000000 		.4byte	.LFE5-.LFB5
 3212 049d 01       		.uleb128 0x1
 3213 049e 9C       		.byte	0x9c
 3214 049f E0040000 		.4byte	0x4e0
 3215 04a3 13       		.uleb128 0x13
 3216 04a4 F66D0000 		.4byte	.LASF1099
 3217 04a8 01       		.byte	0x1
 3218 04a9 0E02     		.2byte	0x20e
 3219 04ab 07020000 		.4byte	0x207
 3220 04af 02       		.uleb128 0x2
 3221 04b0 91       		.byte	0x91
 3222 04b1 64       		.sleb128 -28
 3223 04b2 13       		.uleb128 0x13
 3224 04b3 8B3E0000 		.4byte	.LASF1102
 3225 04b7 01       		.byte	0x1
 3226 04b8 0E02     		.2byte	0x20e
 3227 04ba F4000000 		.4byte	0xf4
 3228 04be 02       		.uleb128 0x2
 3229 04bf 91       		.byte	0x91
 3230 04c0 60       		.sleb128 -32
 3231 04c1 11       		.uleb128 0x11
 3232 04c2 AF210000 		.4byte	.LASF1096
 3233 04c6 01       		.byte	0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 97


 3234 04c7 1002     		.2byte	0x210
 3235 04c9 DE000000 		.4byte	0xde
 3236 04cd 02       		.uleb128 0x2
 3237 04ce 91       		.byte	0x91
 3238 04cf 6C       		.sleb128 -20
 3239 04d0 11       		.uleb128 0x11
 3240 04d1 6E390000 		.4byte	.LASF1100
 3241 04d5 01       		.byte	0x1
 3242 04d6 1102     		.2byte	0x211
 3243 04d8 7E030000 		.4byte	0x37e
 3244 04dc 02       		.uleb128 0x2
 3245 04dd 91       		.byte	0x91
 3246 04de 68       		.sleb128 -24
 3247 04df 00       		.byte	0
 3248 04e0 12       		.uleb128 0x12
 3249 04e1 25000000 		.4byte	.LASF1103
 3250 04e5 01       		.byte	0x1
 3251 04e6 3802     		.2byte	0x238
 3252 04e8 07020000 		.4byte	0x207
 3253 04ec 00000000 		.4byte	.LFB6
 3254 04f0 52000000 		.4byte	.LFE6-.LFB6
 3255 04f4 01       		.uleb128 0x1
 3256 04f5 9C       		.byte	0x9c
 3257 04f6 28050000 		.4byte	0x528
 3258 04fa 13       		.uleb128 0x13
 3259 04fb F98B0000 		.4byte	.LASF1104
 3260 04ff 01       		.byte	0x1
 3261 0500 3802     		.2byte	0x238
 3262 0502 FE030000 		.4byte	0x3fe
 3263 0506 02       		.uleb128 0x2
 3264 0507 91       		.byte	0x91
 3265 0508 6C       		.sleb128 -20
 3266 0509 13       		.uleb128 0x13
 3267 050a 8A350000 		.4byte	.LASF1105
 3268 050e 01       		.byte	0x1
 3269 050f 3802     		.2byte	0x238
 3270 0511 FE030000 		.4byte	0x3fe
 3271 0515 02       		.uleb128 0x2
 3272 0516 91       		.byte	0x91
 3273 0517 68       		.sleb128 -24
 3274 0518 11       		.uleb128 0x11
 3275 0519 0B090000 		.4byte	.LASF1085
 3276 051d 01       		.byte	0x1
 3277 051e 3A02     		.2byte	0x23a
 3278 0520 07020000 		.4byte	0x207
 3279 0524 02       		.uleb128 0x2
 3280 0525 91       		.byte	0x91
 3281 0526 74       		.sleb128 -12
 3282 0527 00       		.byte	0
 3283 0528 12       		.uleb128 0x12
 3284 0529 39690000 		.4byte	.LASF1106
 3285 052d 01       		.byte	0x1
 3286 052e 5302     		.2byte	0x253
 3287 0530 DE000000 		.4byte	0xde
 3288 0534 00000000 		.4byte	.LFB7
 3289 0538 6C010000 		.4byte	.LFE7-.LFB7
 3290 053c 01       		.uleb128 0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 98


 3291 053d 9C       		.byte	0x9c
 3292 053e BB050000 		.4byte	0x5bb
 3293 0542 13       		.uleb128 0x13
 3294 0543 B3830000 		.4byte	.LASF1088
 3295 0547 01       		.byte	0x1
 3296 0548 5302     		.2byte	0x253
 3297 054a 07020000 		.4byte	0x207
 3298 054e 02       		.uleb128 0x2
 3299 054f 91       		.byte	0x91
 3300 0550 5C       		.sleb128 -36
 3301 0551 13       		.uleb128 0x13
 3302 0552 17000000 		.4byte	.LASF1107
 3303 0556 01       		.byte	0x1
 3304 0557 5302     		.2byte	0x253
 3305 0559 BB050000 		.4byte	0x5bb
 3306 055d 02       		.uleb128 0x2
 3307 055e 91       		.byte	0x91
 3308 055f 58       		.sleb128 -40
 3309 0560 13       		.uleb128 0x13
 3310 0561 8B3E0000 		.4byte	.LASF1102
 3311 0565 01       		.byte	0x1
 3312 0566 5302     		.2byte	0x253
 3313 0568 F4000000 		.4byte	0xf4
 3314 056c 02       		.uleb128 0x2
 3315 056d 91       		.byte	0x91
 3316 056e 54       		.sleb128 -44
 3317 056f 13       		.uleb128 0x13
 3318 0570 534C0000 		.4byte	.LASF1108
 3319 0574 01       		.byte	0x1
 3320 0575 5302     		.2byte	0x253
 3321 0577 C0050000 		.4byte	0x5c0
 3322 057b 02       		.uleb128 0x2
 3323 057c 91       		.byte	0x91
 3324 057d 50       		.sleb128 -48
 3325 057e 11       		.uleb128 0x11
 3326 057f 183E0000 		.4byte	.LASF1109
 3327 0583 01       		.byte	0x1
 3328 0584 5502     		.2byte	0x255
 3329 0586 DE000000 		.4byte	0xde
 3330 058a 02       		.uleb128 0x2
 3331 058b 91       		.byte	0x91
 3332 058c 74       		.sleb128 -12
 3333 058d 11       		.uleb128 0x11
 3334 058e 63480000 		.4byte	.LASF1110
 3335 0592 01       		.byte	0x1
 3336 0593 5502     		.2byte	0x255
 3337 0595 DE000000 		.4byte	0xde
 3338 0599 02       		.uleb128 0x2
 3339 059a 91       		.byte	0x91
 3340 059b 6C       		.sleb128 -20
 3341 059c 11       		.uleb128 0x11
 3342 059d 325B0000 		.4byte	.LASF1111
 3343 05a1 01       		.byte	0x1
 3344 05a2 5602     		.2byte	0x256
 3345 05a4 FC010000 		.4byte	0x1fc
 3346 05a8 02       		.uleb128 0x2
 3347 05a9 91       		.byte	0x91
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 99


 3348 05aa 64       		.sleb128 -28
 3349 05ab 11       		.uleb128 0x11
 3350 05ac 27140000 		.4byte	.LASF1093
 3351 05b0 01       		.byte	0x1
 3352 05b1 5702     		.2byte	0x257
 3353 05b3 7E030000 		.4byte	0x37e
 3354 05b7 02       		.uleb128 0x2
 3355 05b8 91       		.byte	0x91
 3356 05b9 70       		.sleb128 -16
 3357 05ba 00       		.byte	0
 3358 05bb 07       		.uleb128 0x7
 3359 05bc B6000000 		.4byte	0xb6
 3360 05c0 07       		.uleb128 0x7
 3361 05c1 DE000000 		.4byte	0xde
 3362 05c5 12       		.uleb128 0x12
 3363 05c6 091B0000 		.4byte	.LASF1112
 3364 05ca 01       		.byte	0x1
 3365 05cb 1004     		.2byte	0x410
 3366 05cd DE000000 		.4byte	0xde
 3367 05d1 00000000 		.4byte	.LFB8
 3368 05d5 E6000000 		.4byte	.LFE8-.LFB8
 3369 05d9 01       		.uleb128 0x1
 3370 05da 9C       		.byte	0x9c
 3371 05db 49060000 		.4byte	0x649
 3372 05df 13       		.uleb128 0x13
 3373 05e0 B3830000 		.4byte	.LASF1088
 3374 05e4 01       		.byte	0x1
 3375 05e5 1004     		.2byte	0x410
 3376 05e7 07020000 		.4byte	0x207
 3377 05eb 02       		.uleb128 0x2
 3378 05ec 91       		.byte	0x91
 3379 05ed 64       		.sleb128 -28
 3380 05ee 13       		.uleb128 0x13
 3381 05ef 17000000 		.4byte	.LASF1107
 3382 05f3 01       		.byte	0x1
 3383 05f4 1004     		.2byte	0x410
 3384 05f6 BB050000 		.4byte	0x5bb
 3385 05fa 02       		.uleb128 0x2
 3386 05fb 91       		.byte	0x91
 3387 05fc 60       		.sleb128 -32
 3388 05fd 13       		.uleb128 0x13
 3389 05fe AE730000 		.4byte	.LASF1113
 3390 0602 01       		.byte	0x1
 3391 0603 1004     		.2byte	0x410
 3392 0605 49060000 		.4byte	0x649
 3393 0609 02       		.uleb128 0x2
 3394 060a 91       		.byte	0x91
 3395 060b 5C       		.sleb128 -36
 3396 060c 13       		.uleb128 0x13
 3397 060d 534C0000 		.4byte	.LASF1108
 3398 0611 01       		.byte	0x1
 3399 0612 1004     		.2byte	0x410
 3400 0614 C0050000 		.4byte	0x5c0
 3401 0618 02       		.uleb128 0x2
 3402 0619 91       		.byte	0x91
 3403 061a 58       		.sleb128 -40
 3404 061b 11       		.uleb128 0x11
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 100


 3405 061c AF210000 		.4byte	.LASF1096
 3406 0620 01       		.byte	0x1
 3407 0621 1204     		.2byte	0x412
 3408 0623 DE000000 		.4byte	0xde
 3409 0627 02       		.uleb128 0x2
 3410 0628 91       		.byte	0x91
 3411 0629 74       		.sleb128 -12
 3412 062a 11       		.uleb128 0x11
 3413 062b 6B470000 		.4byte	.LASF1114
 3414 062f 01       		.byte	0x1
 3415 0630 1304     		.2byte	0x413
 3416 0632 E9000000 		.4byte	0xe9
 3417 0636 02       		.uleb128 0x2
 3418 0637 91       		.byte	0x91
 3419 0638 6C       		.sleb128 -20
 3420 0639 11       		.uleb128 0x11
 3421 063a 27140000 		.4byte	.LASF1093
 3422 063e 01       		.byte	0x1
 3423 063f 1404     		.2byte	0x414
 3424 0641 7E030000 		.4byte	0x37e
 3425 0645 02       		.uleb128 0x2
 3426 0646 91       		.byte	0x91
 3427 0647 70       		.sleb128 -16
 3428 0648 00       		.byte	0
 3429 0649 07       		.uleb128 0x7
 3430 064a 4E060000 		.4byte	0x64e
 3431 064e 06       		.uleb128 0x6
 3432 064f 04       		.byte	0x4
 3433 0650 DE000000 		.4byte	0xde
 3434 0654 12       		.uleb128 0x12
 3435 0655 488A0000 		.4byte	.LASF1115
 3436 0659 01       		.byte	0x1
 3437 065a AD04     		.2byte	0x4ad
 3438 065c DE000000 		.4byte	0xde
 3439 0660 00000000 		.4byte	.LFB9
 3440 0664 9A010000 		.4byte	.LFE9-.LFB9
 3441 0668 01       		.uleb128 0x1
 3442 0669 9C       		.byte	0x9c
 3443 066a E7060000 		.4byte	0x6e7
 3444 066e 13       		.uleb128 0x13
 3445 066f B3830000 		.4byte	.LASF1088
 3446 0673 01       		.byte	0x1
 3447 0674 AD04     		.2byte	0x4ad
 3448 0676 07020000 		.4byte	0x207
 3449 067a 02       		.uleb128 0x2
 3450 067b 91       		.byte	0x91
 3451 067c 5C       		.sleb128 -36
 3452 067d 13       		.uleb128 0x13
 3453 067e 16040000 		.4byte	.LASF1116
 3454 0682 01       		.byte	0x1
 3455 0683 AD04     		.2byte	0x4ad
 3456 0685 E7060000 		.4byte	0x6e7
 3457 0689 02       		.uleb128 0x2
 3458 068a 91       		.byte	0x91
 3459 068b 58       		.sleb128 -40
 3460 068c 13       		.uleb128 0x13
 3461 068d 8B3E0000 		.4byte	.LASF1102
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 101


 3462 0691 01       		.byte	0x1
 3463 0692 AD04     		.2byte	0x4ad
 3464 0694 F4000000 		.4byte	0xf4
 3465 0698 02       		.uleb128 0x2
 3466 0699 91       		.byte	0x91
 3467 069a 54       		.sleb128 -44
 3468 069b 13       		.uleb128 0x13
 3469 069c 74070000 		.4byte	.LASF1117
 3470 06a0 01       		.byte	0x1
 3471 06a1 AD04     		.2byte	0x4ad
 3472 06a3 C0050000 		.4byte	0x5c0
 3473 06a7 02       		.uleb128 0x2
 3474 06a8 91       		.byte	0x91
 3475 06a9 50       		.sleb128 -48
 3476 06aa 11       		.uleb128 0x11
 3477 06ab 183E0000 		.4byte	.LASF1109
 3478 06af 01       		.byte	0x1
 3479 06b0 AF04     		.2byte	0x4af
 3480 06b2 DE000000 		.4byte	0xde
 3481 06b6 02       		.uleb128 0x2
 3482 06b7 91       		.byte	0x91
 3483 06b8 74       		.sleb128 -12
 3484 06b9 11       		.uleb128 0x11
 3485 06ba 325B0000 		.4byte	.LASF1111
 3486 06be 01       		.byte	0x1
 3487 06bf B004     		.2byte	0x4b0
 3488 06c1 FC010000 		.4byte	0x1fc
 3489 06c5 02       		.uleb128 0x2
 3490 06c6 91       		.byte	0x91
 3491 06c7 64       		.sleb128 -28
 3492 06c8 11       		.uleb128 0x11
 3493 06c9 6C750000 		.4byte	.LASF1118
 3494 06cd 01       		.byte	0x1
 3495 06ce B104     		.2byte	0x4b1
 3496 06d0 31020000 		.4byte	0x231
 3497 06d4 02       		.uleb128 0x2
 3498 06d5 91       		.byte	0x91
 3499 06d6 6C       		.sleb128 -20
 3500 06d7 11       		.uleb128 0x11
 3501 06d8 27140000 		.4byte	.LASF1093
 3502 06dc 01       		.byte	0x1
 3503 06dd B204     		.2byte	0x4b2
 3504 06df 7E030000 		.4byte	0x37e
 3505 06e3 02       		.uleb128 0x2
 3506 06e4 91       		.byte	0x91
 3507 06e5 70       		.sleb128 -16
 3508 06e6 00       		.byte	0
 3509 06e7 07       		.uleb128 0x7
 3510 06e8 A2000000 		.4byte	0xa2
 3511 06ec 12       		.uleb128 0x12
 3512 06ed 8A060000 		.4byte	.LASF1119
 3513 06f1 01       		.byte	0x1
 3514 06f2 6A05     		.2byte	0x56a
 3515 06f4 DE000000 		.4byte	0xde
 3516 06f8 00000000 		.4byte	.LFB10
 3517 06fc B2000000 		.4byte	.LFE10-.LFB10
 3518 0700 01       		.uleb128 0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 102


 3519 0701 9C       		.byte	0x9c
 3520 0702 61070000 		.4byte	0x761
 3521 0706 13       		.uleb128 0x13
 3522 0707 B3830000 		.4byte	.LASF1088
 3523 070b 01       		.byte	0x1
 3524 070c 6A05     		.2byte	0x56a
 3525 070e 07020000 		.4byte	0x207
 3526 0712 02       		.uleb128 0x2
 3527 0713 91       		.byte	0x91
 3528 0714 64       		.sleb128 -28
 3529 0715 13       		.uleb128 0x13
 3530 0716 16040000 		.4byte	.LASF1116
 3531 071a 01       		.byte	0x1
 3532 071b 6A05     		.2byte	0x56a
 3533 071d E7060000 		.4byte	0x6e7
 3534 0721 02       		.uleb128 0x2
 3535 0722 91       		.byte	0x91
 3536 0723 60       		.sleb128 -32
 3537 0724 13       		.uleb128 0x13
 3538 0725 AE730000 		.4byte	.LASF1113
 3539 0729 01       		.byte	0x1
 3540 072a 6A05     		.2byte	0x56a
 3541 072c 49060000 		.4byte	0x649
 3542 0730 02       		.uleb128 0x2
 3543 0731 91       		.byte	0x91
 3544 0732 5C       		.sleb128 -36
 3545 0733 11       		.uleb128 0x11
 3546 0734 AF210000 		.4byte	.LASF1096
 3547 0738 01       		.byte	0x1
 3548 0739 6C05     		.2byte	0x56c
 3549 073b DE000000 		.4byte	0xde
 3550 073f 02       		.uleb128 0x2
 3551 0740 91       		.byte	0x91
 3552 0741 74       		.sleb128 -12
 3553 0742 11       		.uleb128 0x11
 3554 0743 6B470000 		.4byte	.LASF1114
 3555 0747 01       		.byte	0x1
 3556 0748 6D05     		.2byte	0x56d
 3557 074a E9000000 		.4byte	0xe9
 3558 074e 02       		.uleb128 0x2
 3559 074f 91       		.byte	0x91
 3560 0750 6C       		.sleb128 -20
 3561 0751 11       		.uleb128 0x11
 3562 0752 27140000 		.4byte	.LASF1093
 3563 0756 01       		.byte	0x1
 3564 0757 6E05     		.2byte	0x56e
 3565 0759 7E030000 		.4byte	0x37e
 3566 075d 02       		.uleb128 0x2
 3567 075e 91       		.byte	0x91
 3568 075f 70       		.sleb128 -16
 3569 0760 00       		.byte	0
 3570 0761 12       		.uleb128 0x12
 3571 0762 063C0000 		.4byte	.LASF1120
 3572 0766 01       		.byte	0x1
 3573 0767 C105     		.2byte	0x5c1
 3574 0769 DE000000 		.4byte	0xde
 3575 076d 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 103


 3576 0771 78000000 		.4byte	.LFE11-.LFB11
 3577 0775 01       		.uleb128 0x1
 3578 0776 9C       		.byte	0x9c
 3579 0777 D6070000 		.4byte	0x7d6
 3580 077b 13       		.uleb128 0x13
 3581 077c B3830000 		.4byte	.LASF1088
 3582 0780 01       		.byte	0x1
 3583 0781 C105     		.2byte	0x5c1
 3584 0783 07020000 		.4byte	0x207
 3585 0787 02       		.uleb128 0x2
 3586 0788 91       		.byte	0x91
 3587 0789 64       		.sleb128 -28
 3588 078a 13       		.uleb128 0x13
 3589 078b 16040000 		.4byte	.LASF1116
 3590 078f 01       		.byte	0x1
 3591 0790 C105     		.2byte	0x5c1
 3592 0792 E7060000 		.4byte	0x6e7
 3593 0796 02       		.uleb128 0x2
 3594 0797 91       		.byte	0x91
 3595 0798 60       		.sleb128 -32
 3596 0799 11       		.uleb128 0x11
 3597 079a AF210000 		.4byte	.LASF1096
 3598 079e 01       		.byte	0x1
 3599 079f C305     		.2byte	0x5c3
 3600 07a1 DE000000 		.4byte	0xde
 3601 07a5 02       		.uleb128 0x2
 3602 07a6 91       		.byte	0x91
 3603 07a7 74       		.sleb128 -12
 3604 07a8 11       		.uleb128 0x11
 3605 07a9 6B470000 		.4byte	.LASF1114
 3606 07ad 01       		.byte	0x1
 3607 07ae C405     		.2byte	0x5c4
 3608 07b0 E9000000 		.4byte	0xe9
 3609 07b4 02       		.uleb128 0x2
 3610 07b5 91       		.byte	0x91
 3611 07b6 6C       		.sleb128 -20
 3612 07b7 11       		.uleb128 0x11
 3613 07b8 6C750000 		.4byte	.LASF1118
 3614 07bc 01       		.byte	0x1
 3615 07bd C505     		.2byte	0x5c5
 3616 07bf 31020000 		.4byte	0x231
 3617 07c3 02       		.uleb128 0x2
 3618 07c4 91       		.byte	0x91
 3619 07c5 68       		.sleb128 -24
 3620 07c6 11       		.uleb128 0x11
 3621 07c7 27140000 		.4byte	.LASF1093
 3622 07cb 01       		.byte	0x1
 3623 07cc C605     		.2byte	0x5c6
 3624 07ce 7E030000 		.4byte	0x37e
 3625 07d2 02       		.uleb128 0x2
 3626 07d3 91       		.byte	0x91
 3627 07d4 70       		.sleb128 -16
 3628 07d5 00       		.byte	0
 3629 07d6 12       		.uleb128 0x12
 3630 07d7 97690000 		.4byte	.LASF1121
 3631 07db 01       		.byte	0x1
 3632 07dc F605     		.2byte	0x5f6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 104


 3633 07de E9000000 		.4byte	0xe9
 3634 07e2 00000000 		.4byte	.LFB12
 3635 07e6 2C000000 		.4byte	.LFE12-.LFB12
 3636 07ea 01       		.uleb128 0x1
 3637 07eb 9C       		.byte	0x9c
 3638 07ec 0F080000 		.4byte	0x80f
 3639 07f0 13       		.uleb128 0x13
 3640 07f1 B3830000 		.4byte	.LASF1088
 3641 07f5 01       		.byte	0x1
 3642 07f6 F605     		.2byte	0x5f6
 3643 07f8 0F080000 		.4byte	0x80f
 3644 07fc 02       		.uleb128 0x2
 3645 07fd 91       		.byte	0x91
 3646 07fe 6C       		.sleb128 -20
 3647 07ff 11       		.uleb128 0x11
 3648 0800 5B0E0000 		.4byte	.LASF1122
 3649 0804 01       		.byte	0x1
 3650 0805 F805     		.2byte	0x5f8
 3651 0807 E9000000 		.4byte	0xe9
 3652 080b 02       		.uleb128 0x2
 3653 080c 91       		.byte	0x91
 3654 080d 74       		.sleb128 -12
 3655 080e 00       		.byte	0
 3656 080f 07       		.uleb128 0x7
 3657 0810 07020000 		.4byte	0x207
 3658 0814 12       		.uleb128 0x12
 3659 0815 BB790000 		.4byte	.LASF1123
 3660 0819 01       		.byte	0x1
 3661 081a 0606     		.2byte	0x606
 3662 081c E9000000 		.4byte	0xe9
 3663 0820 00000000 		.4byte	.LFB13
 3664 0824 36000000 		.4byte	.LFE13-.LFB13
 3665 0828 01       		.uleb128 0x1
 3666 0829 9C       		.byte	0x9c
 3667 082a 5C080000 		.4byte	0x85c
 3668 082e 13       		.uleb128 0x13
 3669 082f B3830000 		.4byte	.LASF1088
 3670 0833 01       		.byte	0x1
 3671 0834 0606     		.2byte	0x606
 3672 0836 0F080000 		.4byte	0x80f
 3673 083a 02       		.uleb128 0x2
 3674 083b 91       		.byte	0x91
 3675 083c 6C       		.sleb128 -20
 3676 083d 11       		.uleb128 0x11
 3677 083e 5B0E0000 		.4byte	.LASF1122
 3678 0842 01       		.byte	0x1
 3679 0843 0806     		.2byte	0x608
 3680 0845 E9000000 		.4byte	0xe9
 3681 0849 02       		.uleb128 0x2
 3682 084a 91       		.byte	0x91
 3683 084b 70       		.sleb128 -16
 3684 084c 11       		.uleb128 0x11
 3685 084d 27140000 		.4byte	.LASF1093
 3686 0851 01       		.byte	0x1
 3687 0852 0906     		.2byte	0x609
 3688 0854 83030000 		.4byte	0x383
 3689 0858 02       		.uleb128 0x2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 105


 3690 0859 91       		.byte	0x91
 3691 085a 74       		.sleb128 -12
 3692 085b 00       		.byte	0
 3693 085c 12       		.uleb128 0x12
 3694 085d 8D6E0000 		.4byte	.LASF1124
 3695 0861 01       		.byte	0x1
 3696 0862 1806     		.2byte	0x618
 3697 0864 E9000000 		.4byte	0xe9
 3698 0868 00000000 		.4byte	.LFB14
 3699 086c 24000000 		.4byte	.LFE14-.LFB14
 3700 0870 01       		.uleb128 0x1
 3701 0871 9C       		.byte	0x9c
 3702 0872 95080000 		.4byte	0x895
 3703 0876 13       		.uleb128 0x13
 3704 0877 B3830000 		.4byte	.LASF1088
 3705 087b 01       		.byte	0x1
 3706 087c 1806     		.2byte	0x618
 3707 087e 0F080000 		.4byte	0x80f
 3708 0882 02       		.uleb128 0x2
 3709 0883 91       		.byte	0x91
 3710 0884 6C       		.sleb128 -20
 3711 0885 11       		.uleb128 0x11
 3712 0886 5B0E0000 		.4byte	.LASF1122
 3713 088a 01       		.byte	0x1
 3714 088b 1A06     		.2byte	0x61a
 3715 088d E9000000 		.4byte	0xe9
 3716 0891 02       		.uleb128 0x2
 3717 0892 91       		.byte	0x91
 3718 0893 74       		.sleb128 -12
 3719 0894 00       		.byte	0
 3720 0895 14       		.uleb128 0x14
 3721 0896 67280000 		.4byte	.LASF1126
 3722 089a 01       		.byte	0x1
 3723 089b 2406     		.2byte	0x624
 3724 089d 00000000 		.4byte	.LFB15
 3725 08a1 3C000000 		.4byte	.LFE15-.LFB15
 3726 08a5 01       		.uleb128 0x1
 3727 08a6 9C       		.byte	0x9c
 3728 08a7 CA080000 		.4byte	0x8ca
 3729 08ab 13       		.uleb128 0x13
 3730 08ac B3830000 		.4byte	.LASF1088
 3731 08b0 01       		.byte	0x1
 3732 08b1 2406     		.2byte	0x624
 3733 08b3 07020000 		.4byte	0x207
 3734 08b7 02       		.uleb128 0x2
 3735 08b8 91       		.byte	0x91
 3736 08b9 6C       		.sleb128 -20
 3737 08ba 11       		.uleb128 0x11
 3738 08bb 27140000 		.4byte	.LASF1093
 3739 08bf 01       		.byte	0x1
 3740 08c0 2606     		.2byte	0x626
 3741 08c2 7E030000 		.4byte	0x37e
 3742 08c6 02       		.uleb128 0x2
 3743 08c7 91       		.byte	0x91
 3744 08c8 74       		.sleb128 -12
 3745 08c9 00       		.byte	0
 3746 08ca 15       		.uleb128 0x15
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 106


 3747 08cb E58F0000 		.4byte	.LASF1125
 3748 08cf 01       		.byte	0x1
 3749 08d0 3A06     		.2byte	0x63a
 3750 08d2 E9000000 		.4byte	0xe9
 3751 08d6 00000000 		.4byte	.LFB16
 3752 08da 18000000 		.4byte	.LFE16-.LFB16
 3753 08de 01       		.uleb128 0x1
 3754 08df 9C       		.byte	0x9c
 3755 08e0 F4080000 		.4byte	0x8f4
 3756 08e4 13       		.uleb128 0x13
 3757 08e5 B3830000 		.4byte	.LASF1088
 3758 08e9 01       		.byte	0x1
 3759 08ea 3A06     		.2byte	0x63a
 3760 08ec 07020000 		.4byte	0x207
 3761 08f0 02       		.uleb128 0x2
 3762 08f1 91       		.byte	0x91
 3763 08f2 74       		.sleb128 -12
 3764 08f3 00       		.byte	0
 3765 08f4 16       		.uleb128 0x16
 3766 08f5 FA830000 		.4byte	.LASF1127
 3767 08f9 01       		.byte	0x1
 3768 08fa 4406     		.2byte	0x644
 3769 08fc 00000000 		.4byte	.LFB17
 3770 0900 1A000000 		.4byte	.LFE17-.LFB17
 3771 0904 01       		.uleb128 0x1
 3772 0905 9C       		.byte	0x9c
 3773 0906 29090000 		.4byte	0x929
 3774 090a 13       		.uleb128 0x13
 3775 090b B3830000 		.4byte	.LASF1088
 3776 090f 01       		.byte	0x1
 3777 0910 4406     		.2byte	0x644
 3778 0912 07020000 		.4byte	0x207
 3779 0916 02       		.uleb128 0x2
 3780 0917 91       		.byte	0x91
 3781 0918 74       		.sleb128 -12
 3782 0919 13       		.uleb128 0x13
 3783 091a 221B0000 		.4byte	.LASF1079
 3784 091e 01       		.byte	0x1
 3785 091f 4406     		.2byte	0x644
 3786 0921 E9000000 		.4byte	0xe9
 3787 0925 02       		.uleb128 0x2
 3788 0926 91       		.byte	0x91
 3789 0927 70       		.sleb128 -16
 3790 0928 00       		.byte	0
 3791 0929 15       		.uleb128 0x15
 3792 092a AE690000 		.4byte	.LASF1128
 3793 092e 01       		.byte	0x1
 3794 092f 4E06     		.2byte	0x64e
 3795 0931 C8000000 		.4byte	0xc8
 3796 0935 00000000 		.4byte	.LFB18
 3797 0939 1A000000 		.4byte	.LFE18-.LFB18
 3798 093d 01       		.uleb128 0x1
 3799 093e 9C       		.byte	0x9c
 3800 093f 53090000 		.4byte	0x953
 3801 0943 13       		.uleb128 0x13
 3802 0944 B3830000 		.4byte	.LASF1088
 3803 0948 01       		.byte	0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 107


 3804 0949 4E06     		.2byte	0x64e
 3805 094b 07020000 		.4byte	0x207
 3806 094f 02       		.uleb128 0x2
 3807 0950 91       		.byte	0x91
 3808 0951 74       		.sleb128 -12
 3809 0952 00       		.byte	0
 3810 0953 17       		.uleb128 0x17
 3811 0954 28820000 		.4byte	.LASF1132
 3812 0958 01       		.byte	0x1
 3813 0959 5606     		.2byte	0x656
 3814 095b DE000000 		.4byte	0xde
 3815 095f 00000000 		.4byte	.LFB19
 3816 0963 DA000000 		.4byte	.LFE19-.LFB19
 3817 0967 01       		.uleb128 0x1
 3818 0968 9C       		.byte	0x9c
 3819 0969 AA090000 		.4byte	0x9aa
 3820 096d 13       		.uleb128 0x13
 3821 096e 27140000 		.4byte	.LASF1093
 3822 0972 01       		.byte	0x1
 3823 0973 5606     		.2byte	0x656
 3824 0975 7E030000 		.4byte	0x37e
 3825 0979 02       		.uleb128 0x2
 3826 097a 91       		.byte	0x91
 3827 097b 6C       		.sleb128 -20
 3828 097c 13       		.uleb128 0x13
 3829 097d 17000000 		.4byte	.LASF1107
 3830 0981 01       		.byte	0x1
 3831 0982 5606     		.2byte	0x656
 3832 0984 B6000000 		.4byte	0xb6
 3833 0988 02       		.uleb128 0x2
 3834 0989 91       		.byte	0x91
 3835 098a 68       		.sleb128 -24
 3836 098b 13       		.uleb128 0x13
 3837 098c EB420000 		.4byte	.LASF1129
 3838 0990 01       		.byte	0x1
 3839 0991 5606     		.2byte	0x656
 3840 0993 C0050000 		.4byte	0x5c0
 3841 0997 02       		.uleb128 0x2
 3842 0998 91       		.byte	0x91
 3843 0999 64       		.sleb128 -28
 3844 099a 11       		.uleb128 0x11
 3845 099b AF210000 		.4byte	.LASF1096
 3846 099f 01       		.byte	0x1
 3847 09a0 5806     		.2byte	0x658
 3848 09a2 DE000000 		.4byte	0xde
 3849 09a6 02       		.uleb128 0x2
 3850 09a7 91       		.byte	0x91
 3851 09a8 74       		.sleb128 -12
 3852 09a9 00       		.byte	0
 3853 09aa 18       		.uleb128 0x18
 3854 09ab EA480000 		.4byte	.LASF1130
 3855 09af 01       		.byte	0x1
 3856 09b0 A006     		.2byte	0x6a0
 3857 09b2 00000000 		.4byte	.LFB20
 3858 09b6 4C000000 		.4byte	.LFE20-.LFB20
 3859 09ba 01       		.uleb128 0x1
 3860 09bb 9C       		.byte	0x9c
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 108


 3861 09bc DF090000 		.4byte	0x9df
 3862 09c0 13       		.uleb128 0x13
 3863 09c1 27140000 		.4byte	.LASF1093
 3864 09c5 01       		.byte	0x1
 3865 09c6 A006     		.2byte	0x6a0
 3866 09c8 7E030000 		.4byte	0x37e
 3867 09cc 02       		.uleb128 0x2
 3868 09cd 91       		.byte	0x91
 3869 09ce 74       		.sleb128 -12
 3870 09cf 13       		.uleb128 0x13
 3871 09d0 16040000 		.4byte	.LASF1116
 3872 09d4 01       		.byte	0x1
 3873 09d5 A006     		.2byte	0x6a0
 3874 09d7 E7060000 		.4byte	0x6e7
 3875 09db 02       		.uleb128 0x2
 3876 09dc 91       		.byte	0x91
 3877 09dd 70       		.sleb128 -16
 3878 09de 00       		.byte	0
 3879 09df 18       		.uleb128 0x18
 3880 09e0 6A5B0000 		.4byte	.LASF1131
 3881 09e4 01       		.byte	0x1
 3882 09e5 B206     		.2byte	0x6b2
 3883 09e7 00000000 		.4byte	.LFB21
 3884 09eb 96000000 		.4byte	.LFE21-.LFB21
 3885 09ef 01       		.uleb128 0x1
 3886 09f0 9C       		.byte	0x9c
 3887 09f1 050A0000 		.4byte	0xa05
 3888 09f5 13       		.uleb128 0x13
 3889 09f6 27140000 		.4byte	.LASF1093
 3890 09fa 01       		.byte	0x1
 3891 09fb B206     		.2byte	0x6b2
 3892 09fd 7E030000 		.4byte	0x37e
 3893 0a01 02       		.uleb128 0x2
 3894 0a02 91       		.byte	0x91
 3895 0a03 74       		.sleb128 -12
 3896 0a04 00       		.byte	0
 3897 0a05 17       		.uleb128 0x17
 3898 0a06 99130000 		.4byte	.LASF1133
 3899 0a0a 01       		.byte	0x1
 3900 0a0b 2507     		.2byte	0x725
 3901 0a0d DE000000 		.4byte	0xde
 3902 0a11 00000000 		.4byte	.LFB22
 3903 0a15 2C000000 		.4byte	.LFE22-.LFB22
 3904 0a19 01       		.uleb128 0x1
 3905 0a1a 9C       		.byte	0x9c
 3906 0a1b 3E0A0000 		.4byte	0xa3e
 3907 0a1f 13       		.uleb128 0x13
 3908 0a20 27140000 		.4byte	.LASF1093
 3909 0a24 01       		.byte	0x1
 3910 0a25 2507     		.2byte	0x725
 3911 0a27 3E0A0000 		.4byte	0xa3e
 3912 0a2b 02       		.uleb128 0x2
 3913 0a2c 91       		.byte	0x91
 3914 0a2d 6C       		.sleb128 -20
 3915 0a2e 11       		.uleb128 0x11
 3916 0a2f AF210000 		.4byte	.LASF1096
 3917 0a33 01       		.byte	0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 109


 3918 0a34 2707     		.2byte	0x727
 3919 0a36 DE000000 		.4byte	0xde
 3920 0a3a 02       		.uleb128 0x2
 3921 0a3b 91       		.byte	0x91
 3922 0a3c 74       		.sleb128 -12
 3923 0a3d 00       		.byte	0
 3924 0a3e 06       		.uleb128 0x6
 3925 0a3f 04       		.byte	0x4
 3926 0a40 440A0000 		.4byte	0xa44
 3927 0a44 07       		.uleb128 0x7
 3928 0a45 F3020000 		.4byte	0x2f3
 3929 0a49 12       		.uleb128 0x12
 3930 0a4a 263B0000 		.4byte	.LASF1134
 3931 0a4e 01       		.byte	0x1
 3932 0a4f 3A07     		.2byte	0x73a
 3933 0a51 DE000000 		.4byte	0xde
 3934 0a55 00000000 		.4byte	.LFB23
 3935 0a59 30000000 		.4byte	.LFE23-.LFB23
 3936 0a5d 01       		.uleb128 0x1
 3937 0a5e 9C       		.byte	0x9c
 3938 0a5f 820A0000 		.4byte	0xa82
 3939 0a63 13       		.uleb128 0x13
 3940 0a64 B3830000 		.4byte	.LASF1088
 3941 0a68 01       		.byte	0x1
 3942 0a69 3A07     		.2byte	0x73a
 3943 0a6b 0F080000 		.4byte	0x80f
 3944 0a6f 02       		.uleb128 0x2
 3945 0a70 91       		.byte	0x91
 3946 0a71 6C       		.sleb128 -20
 3947 0a72 11       		.uleb128 0x11
 3948 0a73 AF210000 		.4byte	.LASF1096
 3949 0a77 01       		.byte	0x1
 3950 0a78 3C07     		.2byte	0x73c
 3951 0a7a DE000000 		.4byte	0xde
 3952 0a7e 02       		.uleb128 0x2
 3953 0a7f 91       		.byte	0x91
 3954 0a80 74       		.sleb128 -12
 3955 0a81 00       		.byte	0
 3956 0a82 17       		.uleb128 0x17
 3957 0a83 92160000 		.4byte	.LASF1135
 3958 0a87 01       		.byte	0x1
 3959 0a88 4C07     		.2byte	0x74c
 3960 0a8a DE000000 		.4byte	0xde
 3961 0a8e 00000000 		.4byte	.LFB24
 3962 0a92 30000000 		.4byte	.LFE24-.LFB24
 3963 0a96 01       		.uleb128 0x1
 3964 0a97 9C       		.byte	0x9c
 3965 0a98 BB0A0000 		.4byte	0xabb
 3966 0a9c 13       		.uleb128 0x13
 3967 0a9d 27140000 		.4byte	.LASF1093
 3968 0aa1 01       		.byte	0x1
 3969 0aa2 4C07     		.2byte	0x74c
 3970 0aa4 3E0A0000 		.4byte	0xa3e
 3971 0aa8 02       		.uleb128 0x2
 3972 0aa9 91       		.byte	0x91
 3973 0aaa 6C       		.sleb128 -20
 3974 0aab 11       		.uleb128 0x11
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 110


 3975 0aac AF210000 		.4byte	.LASF1096
 3976 0ab0 01       		.byte	0x1
 3977 0ab1 4E07     		.2byte	0x74e
 3978 0ab3 DE000000 		.4byte	0xde
 3979 0ab7 02       		.uleb128 0x2
 3980 0ab8 91       		.byte	0x91
 3981 0ab9 74       		.sleb128 -12
 3982 0aba 00       		.byte	0
 3983 0abb 12       		.uleb128 0x12
 3984 0abc ED120000 		.4byte	.LASF1136
 3985 0ac0 01       		.byte	0x1
 3986 0ac1 6107     		.2byte	0x761
 3987 0ac3 DE000000 		.4byte	0xde
 3988 0ac7 00000000 		.4byte	.LFB25
 3989 0acb 34000000 		.4byte	.LFE25-.LFB25
 3990 0acf 01       		.uleb128 0x1
 3991 0ad0 9C       		.byte	0x9c
 3992 0ad1 F40A0000 		.4byte	0xaf4
 3993 0ad5 13       		.uleb128 0x13
 3994 0ad6 B3830000 		.4byte	.LASF1088
 3995 0ada 01       		.byte	0x1
 3996 0adb 6107     		.2byte	0x761
 3997 0add 0F080000 		.4byte	0x80f
 3998 0ae1 02       		.uleb128 0x2
 3999 0ae2 91       		.byte	0x91
 4000 0ae3 6C       		.sleb128 -20
 4001 0ae4 11       		.uleb128 0x11
 4002 0ae5 AF210000 		.4byte	.LASF1096
 4003 0ae9 01       		.byte	0x1
 4004 0aea 6307     		.2byte	0x763
 4005 0aec DE000000 		.4byte	0xde
 4006 0af0 02       		.uleb128 0x2
 4007 0af1 91       		.byte	0x91
 4008 0af2 74       		.sleb128 -12
 4009 0af3 00       		.byte	0
 4010 0af4 16       		.uleb128 0x16
 4011 0af5 B9460000 		.4byte	.LASF1137
 4012 0af9 01       		.byte	0x1
 4013 0afa 8808     		.2byte	0x888
 4014 0afc 00000000 		.4byte	.LFB26
 4015 0b00 50000000 		.4byte	.LFE26-.LFB26
 4016 0b04 01       		.uleb128 0x1
 4017 0b05 9C       		.byte	0x9c
 4018 0b06 370B0000 		.4byte	0xb37
 4019 0b0a 13       		.uleb128 0x13
 4020 0b0b B3830000 		.4byte	.LASF1088
 4021 0b0f 01       		.byte	0x1
 4022 0b10 8808     		.2byte	0x888
 4023 0b12 07020000 		.4byte	0x207
 4024 0b16 02       		.uleb128 0x2
 4025 0b17 91       		.byte	0x91
 4026 0b18 6C       		.sleb128 -20
 4027 0b19 13       		.uleb128 0x13
 4028 0b1a 0A020000 		.4byte	.LASF1084
 4029 0b1e 01       		.byte	0x1
 4030 0b1f 8808     		.2byte	0x888
 4031 0b21 AB000000 		.4byte	0xab
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 111


 4032 0b25 02       		.uleb128 0x2
 4033 0b26 91       		.byte	0x91
 4034 0b27 68       		.sleb128 -24
 4035 0b28 19       		.uleb128 0x19
 4036 0b29 757800   		.ascii	"ux\000"
 4037 0b2c 01       		.byte	0x1
 4038 0b2d 8A08     		.2byte	0x88a
 4039 0b2f E9000000 		.4byte	0xe9
 4040 0b33 02       		.uleb128 0x2
 4041 0b34 91       		.byte	0x91
 4042 0b35 74       		.sleb128 -12
 4043 0b36 00       		.byte	0
 4044 0b37 16       		.uleb128 0x16
 4045 0b38 FB460000 		.4byte	.LASF1138
 4046 0b3c 01       		.byte	0x1
 4047 0b3d A508     		.2byte	0x8a5
 4048 0b3f 00000000 		.4byte	.LFB27
 4049 0b43 44000000 		.4byte	.LFE27-.LFB27
 4050 0b47 01       		.uleb128 0x1
 4051 0b48 9C       		.byte	0x9c
 4052 0b49 6B0B0000 		.4byte	0xb6b
 4053 0b4d 13       		.uleb128 0x13
 4054 0b4e B3830000 		.4byte	.LASF1088
 4055 0b52 01       		.byte	0x1
 4056 0b53 A508     		.2byte	0x8a5
 4057 0b55 07020000 		.4byte	0x207
 4058 0b59 02       		.uleb128 0x2
 4059 0b5a 91       		.byte	0x91
 4060 0b5b 6C       		.sleb128 -20
 4061 0b5c 19       		.uleb128 0x19
 4062 0b5d 757800   		.ascii	"ux\000"
 4063 0b60 01       		.byte	0x1
 4064 0b61 A708     		.2byte	0x8a7
 4065 0b63 E9000000 		.4byte	0xe9
 4066 0b67 02       		.uleb128 0x2
 4067 0b68 91       		.byte	0x91
 4068 0b69 74       		.sleb128 -12
 4069 0b6a 00       		.byte	0
 4070 0b6b 1A       		.uleb128 0x1a
 4071 0b6c 2E030000 		.4byte	0x32e
 4072 0b70 7B0B0000 		.4byte	0xb7b
 4073 0b74 1B       		.uleb128 0x1b
 4074 0b75 9B000000 		.4byte	0x9b
 4075 0b79 09       		.byte	0x9
 4076 0b7a 00       		.byte	0
 4077 0b7b 1C       		.uleb128 0x1c
 4078 0b7c F45A0000 		.4byte	.LASF1142
 4079 0b80 01       		.byte	0x1
 4080 0b81 BB       		.byte	0xbb
 4081 0b82 6B0B0000 		.4byte	0xb6b
 4082 0b86 05       		.uleb128 0x5
 4083 0b87 03       		.byte	0x3
 4084 0b88 00000000 		.4byte	xQueueRegistry
 4085 0b8c 00       		.byte	0
 4086              		.section	.debug_abbrev,"",%progbits
 4087              	.Ldebug_abbrev0:
 4088 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 112


 4089 0001 11       		.uleb128 0x11
 4090 0002 01       		.byte	0x1
 4091 0003 25       		.uleb128 0x25
 4092 0004 0E       		.uleb128 0xe
 4093 0005 13       		.uleb128 0x13
 4094 0006 0B       		.uleb128 0xb
 4095 0007 03       		.uleb128 0x3
 4096 0008 0E       		.uleb128 0xe
 4097 0009 1B       		.uleb128 0x1b
 4098 000a 0E       		.uleb128 0xe
 4099 000b 55       		.uleb128 0x55
 4100 000c 17       		.uleb128 0x17
 4101 000d 11       		.uleb128 0x11
 4102 000e 01       		.uleb128 0x1
 4103 000f 10       		.uleb128 0x10
 4104 0010 17       		.uleb128 0x17
 4105 0011 9942     		.uleb128 0x2119
 4106 0013 17       		.uleb128 0x17
 4107 0014 00       		.byte	0
 4108 0015 00       		.byte	0
 4109 0016 02       		.uleb128 0x2
 4110 0017 16       		.uleb128 0x16
 4111 0018 00       		.byte	0
 4112 0019 03       		.uleb128 0x3
 4113 001a 0E       		.uleb128 0xe
 4114 001b 3A       		.uleb128 0x3a
 4115 001c 0B       		.uleb128 0xb
 4116 001d 3B       		.uleb128 0x3b
 4117 001e 0B       		.uleb128 0xb
 4118 001f 49       		.uleb128 0x49
 4119 0020 13       		.uleb128 0x13
 4120 0021 00       		.byte	0
 4121 0022 00       		.byte	0
 4122 0023 03       		.uleb128 0x3
 4123 0024 24       		.uleb128 0x24
 4124 0025 00       		.byte	0
 4125 0026 0B       		.uleb128 0xb
 4126 0027 0B       		.uleb128 0xb
 4127 0028 3E       		.uleb128 0x3e
 4128 0029 0B       		.uleb128 0xb
 4129 002a 03       		.uleb128 0x3
 4130 002b 0E       		.uleb128 0xe
 4131 002c 00       		.byte	0
 4132 002d 00       		.byte	0
 4133 002e 04       		.uleb128 0x4
 4134 002f 24       		.uleb128 0x24
 4135 0030 00       		.byte	0
 4136 0031 0B       		.uleb128 0xb
 4137 0032 0B       		.uleb128 0xb
 4138 0033 3E       		.uleb128 0x3e
 4139 0034 0B       		.uleb128 0xb
 4140 0035 03       		.uleb128 0x3
 4141 0036 08       		.uleb128 0x8
 4142 0037 00       		.byte	0
 4143 0038 00       		.byte	0
 4144 0039 05       		.uleb128 0x5
 4145 003a 0F       		.uleb128 0xf
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 113


 4146 003b 00       		.byte	0
 4147 003c 0B       		.uleb128 0xb
 4148 003d 0B       		.uleb128 0xb
 4149 003e 00       		.byte	0
 4150 003f 00       		.byte	0
 4151 0040 06       		.uleb128 0x6
 4152 0041 0F       		.uleb128 0xf
 4153 0042 00       		.byte	0
 4154 0043 0B       		.uleb128 0xb
 4155 0044 0B       		.uleb128 0xb
 4156 0045 49       		.uleb128 0x49
 4157 0046 13       		.uleb128 0x13
 4158 0047 00       		.byte	0
 4159 0048 00       		.byte	0
 4160 0049 07       		.uleb128 0x7
 4161 004a 26       		.uleb128 0x26
 4162 004b 00       		.byte	0
 4163 004c 49       		.uleb128 0x49
 4164 004d 13       		.uleb128 0x13
 4165 004e 00       		.byte	0
 4166 004f 00       		.byte	0
 4167 0050 08       		.uleb128 0x8
 4168 0051 26       		.uleb128 0x26
 4169 0052 00       		.byte	0
 4170 0053 00       		.byte	0
 4171 0054 00       		.byte	0
 4172 0055 09       		.uleb128 0x9
 4173 0056 13       		.uleb128 0x13
 4174 0057 01       		.byte	0x1
 4175 0058 03       		.uleb128 0x3
 4176 0059 0E       		.uleb128 0xe
 4177 005a 0B       		.uleb128 0xb
 4178 005b 0B       		.uleb128 0xb
 4179 005c 3A       		.uleb128 0x3a
 4180 005d 0B       		.uleb128 0xb
 4181 005e 3B       		.uleb128 0x3b
 4182 005f 0B       		.uleb128 0xb
 4183 0060 01       		.uleb128 0x1
 4184 0061 13       		.uleb128 0x13
 4185 0062 00       		.byte	0
 4186 0063 00       		.byte	0
 4187 0064 0A       		.uleb128 0xa
 4188 0065 0D       		.uleb128 0xd
 4189 0066 00       		.byte	0
 4190 0067 03       		.uleb128 0x3
 4191 0068 0E       		.uleb128 0xe
 4192 0069 3A       		.uleb128 0x3a
 4193 006a 0B       		.uleb128 0xb
 4194 006b 3B       		.uleb128 0x3b
 4195 006c 0B       		.uleb128 0xb
 4196 006d 49       		.uleb128 0x49
 4197 006e 13       		.uleb128 0x13
 4198 006f 38       		.uleb128 0x38
 4199 0070 0B       		.uleb128 0xb
 4200 0071 00       		.byte	0
 4201 0072 00       		.byte	0
 4202 0073 0B       		.uleb128 0xb
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 114


 4203 0074 17       		.uleb128 0x17
 4204 0075 01       		.byte	0x1
 4205 0076 0B       		.uleb128 0xb
 4206 0077 0B       		.uleb128 0xb
 4207 0078 3A       		.uleb128 0x3a
 4208 0079 0B       		.uleb128 0xb
 4209 007a 3B       		.uleb128 0x3b
 4210 007b 0B       		.uleb128 0xb
 4211 007c 01       		.uleb128 0x1
 4212 007d 13       		.uleb128 0x13
 4213 007e 00       		.byte	0
 4214 007f 00       		.byte	0
 4215 0080 0C       		.uleb128 0xc
 4216 0081 0D       		.uleb128 0xd
 4217 0082 00       		.byte	0
 4218 0083 03       		.uleb128 0x3
 4219 0084 0E       		.uleb128 0xe
 4220 0085 3A       		.uleb128 0x3a
 4221 0086 0B       		.uleb128 0xb
 4222 0087 3B       		.uleb128 0x3b
 4223 0088 0B       		.uleb128 0xb
 4224 0089 49       		.uleb128 0x49
 4225 008a 13       		.uleb128 0x13
 4226 008b 00       		.byte	0
 4227 008c 00       		.byte	0
 4228 008d 0D       		.uleb128 0xd
 4229 008e 0D       		.uleb128 0xd
 4230 008f 00       		.byte	0
 4231 0090 03       		.uleb128 0x3
 4232 0091 08       		.uleb128 0x8
 4233 0092 3A       		.uleb128 0x3a
 4234 0093 0B       		.uleb128 0xb
 4235 0094 3B       		.uleb128 0x3b
 4236 0095 0B       		.uleb128 0xb
 4237 0096 49       		.uleb128 0x49
 4238 0097 13       		.uleb128 0x13
 4239 0098 38       		.uleb128 0x38
 4240 0099 0B       		.uleb128 0xb
 4241 009a 00       		.byte	0
 4242 009b 00       		.byte	0
 4243 009c 0E       		.uleb128 0xe
 4244 009d 35       		.uleb128 0x35
 4245 009e 00       		.byte	0
 4246 009f 49       		.uleb128 0x49
 4247 00a0 13       		.uleb128 0x13
 4248 00a1 00       		.byte	0
 4249 00a2 00       		.byte	0
 4250 00a3 0F       		.uleb128 0xf
 4251 00a4 2E       		.uleb128 0x2e
 4252 00a5 01       		.byte	0x1
 4253 00a6 3F       		.uleb128 0x3f
 4254 00a7 19       		.uleb128 0x19
 4255 00a8 03       		.uleb128 0x3
 4256 00a9 0E       		.uleb128 0xe
 4257 00aa 3A       		.uleb128 0x3a
 4258 00ab 0B       		.uleb128 0xb
 4259 00ac 3B       		.uleb128 0x3b
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 115


 4260 00ad 0B       		.uleb128 0xb
 4261 00ae 27       		.uleb128 0x27
 4262 00af 19       		.uleb128 0x19
 4263 00b0 49       		.uleb128 0x49
 4264 00b1 13       		.uleb128 0x13
 4265 00b2 11       		.uleb128 0x11
 4266 00b3 01       		.uleb128 0x1
 4267 00b4 12       		.uleb128 0x12
 4268 00b5 06       		.uleb128 0x6
 4269 00b6 40       		.uleb128 0x40
 4270 00b7 18       		.uleb128 0x18
 4271 00b8 9642     		.uleb128 0x2116
 4272 00ba 19       		.uleb128 0x19
 4273 00bb 01       		.uleb128 0x1
 4274 00bc 13       		.uleb128 0x13
 4275 00bd 00       		.byte	0
 4276 00be 00       		.byte	0
 4277 00bf 10       		.uleb128 0x10
 4278 00c0 05       		.uleb128 0x5
 4279 00c1 00       		.byte	0
 4280 00c2 03       		.uleb128 0x3
 4281 00c3 0E       		.uleb128 0xe
 4282 00c4 3A       		.uleb128 0x3a
 4283 00c5 0B       		.uleb128 0xb
 4284 00c6 3B       		.uleb128 0x3b
 4285 00c7 0B       		.uleb128 0xb
 4286 00c8 49       		.uleb128 0x49
 4287 00c9 13       		.uleb128 0x13
 4288 00ca 02       		.uleb128 0x2
 4289 00cb 18       		.uleb128 0x18
 4290 00cc 00       		.byte	0
 4291 00cd 00       		.byte	0
 4292 00ce 11       		.uleb128 0x11
 4293 00cf 34       		.uleb128 0x34
 4294 00d0 00       		.byte	0
 4295 00d1 03       		.uleb128 0x3
 4296 00d2 0E       		.uleb128 0xe
 4297 00d3 3A       		.uleb128 0x3a
 4298 00d4 0B       		.uleb128 0xb
 4299 00d5 3B       		.uleb128 0x3b
 4300 00d6 05       		.uleb128 0x5
 4301 00d7 49       		.uleb128 0x49
 4302 00d8 13       		.uleb128 0x13
 4303 00d9 02       		.uleb128 0x2
 4304 00da 18       		.uleb128 0x18
 4305 00db 00       		.byte	0
 4306 00dc 00       		.byte	0
 4307 00dd 12       		.uleb128 0x12
 4308 00de 2E       		.uleb128 0x2e
 4309 00df 01       		.byte	0x1
 4310 00e0 3F       		.uleb128 0x3f
 4311 00e1 19       		.uleb128 0x19
 4312 00e2 03       		.uleb128 0x3
 4313 00e3 0E       		.uleb128 0xe
 4314 00e4 3A       		.uleb128 0x3a
 4315 00e5 0B       		.uleb128 0xb
 4316 00e6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 116


 4317 00e7 05       		.uleb128 0x5
 4318 00e8 27       		.uleb128 0x27
 4319 00e9 19       		.uleb128 0x19
 4320 00ea 49       		.uleb128 0x49
 4321 00eb 13       		.uleb128 0x13
 4322 00ec 11       		.uleb128 0x11
 4323 00ed 01       		.uleb128 0x1
 4324 00ee 12       		.uleb128 0x12
 4325 00ef 06       		.uleb128 0x6
 4326 00f0 40       		.uleb128 0x40
 4327 00f1 18       		.uleb128 0x18
 4328 00f2 9642     		.uleb128 0x2116
 4329 00f4 19       		.uleb128 0x19
 4330 00f5 01       		.uleb128 0x1
 4331 00f6 13       		.uleb128 0x13
 4332 00f7 00       		.byte	0
 4333 00f8 00       		.byte	0
 4334 00f9 13       		.uleb128 0x13
 4335 00fa 05       		.uleb128 0x5
 4336 00fb 00       		.byte	0
 4337 00fc 03       		.uleb128 0x3
 4338 00fd 0E       		.uleb128 0xe
 4339 00fe 3A       		.uleb128 0x3a
 4340 00ff 0B       		.uleb128 0xb
 4341 0100 3B       		.uleb128 0x3b
 4342 0101 05       		.uleb128 0x5
 4343 0102 49       		.uleb128 0x49
 4344 0103 13       		.uleb128 0x13
 4345 0104 02       		.uleb128 0x2
 4346 0105 18       		.uleb128 0x18
 4347 0106 00       		.byte	0
 4348 0107 00       		.byte	0
 4349 0108 14       		.uleb128 0x14
 4350 0109 2E       		.uleb128 0x2e
 4351 010a 01       		.byte	0x1
 4352 010b 3F       		.uleb128 0x3f
 4353 010c 19       		.uleb128 0x19
 4354 010d 03       		.uleb128 0x3
 4355 010e 0E       		.uleb128 0xe
 4356 010f 3A       		.uleb128 0x3a
 4357 0110 0B       		.uleb128 0xb
 4358 0111 3B       		.uleb128 0x3b
 4359 0112 05       		.uleb128 0x5
 4360 0113 27       		.uleb128 0x27
 4361 0114 19       		.uleb128 0x19
 4362 0115 11       		.uleb128 0x11
 4363 0116 01       		.uleb128 0x1
 4364 0117 12       		.uleb128 0x12
 4365 0118 06       		.uleb128 0x6
 4366 0119 40       		.uleb128 0x40
 4367 011a 18       		.uleb128 0x18
 4368 011b 9642     		.uleb128 0x2116
 4369 011d 19       		.uleb128 0x19
 4370 011e 01       		.uleb128 0x1
 4371 011f 13       		.uleb128 0x13
 4372 0120 00       		.byte	0
 4373 0121 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 117


 4374 0122 15       		.uleb128 0x15
 4375 0123 2E       		.uleb128 0x2e
 4376 0124 01       		.byte	0x1
 4377 0125 3F       		.uleb128 0x3f
 4378 0126 19       		.uleb128 0x19
 4379 0127 03       		.uleb128 0x3
 4380 0128 0E       		.uleb128 0xe
 4381 0129 3A       		.uleb128 0x3a
 4382 012a 0B       		.uleb128 0xb
 4383 012b 3B       		.uleb128 0x3b
 4384 012c 05       		.uleb128 0x5
 4385 012d 27       		.uleb128 0x27
 4386 012e 19       		.uleb128 0x19
 4387 012f 49       		.uleb128 0x49
 4388 0130 13       		.uleb128 0x13
 4389 0131 11       		.uleb128 0x11
 4390 0132 01       		.uleb128 0x1
 4391 0133 12       		.uleb128 0x12
 4392 0134 06       		.uleb128 0x6
 4393 0135 40       		.uleb128 0x40
 4394 0136 18       		.uleb128 0x18
 4395 0137 9742     		.uleb128 0x2117
 4396 0139 19       		.uleb128 0x19
 4397 013a 01       		.uleb128 0x1
 4398 013b 13       		.uleb128 0x13
 4399 013c 00       		.byte	0
 4400 013d 00       		.byte	0
 4401 013e 16       		.uleb128 0x16
 4402 013f 2E       		.uleb128 0x2e
 4403 0140 01       		.byte	0x1
 4404 0141 3F       		.uleb128 0x3f
 4405 0142 19       		.uleb128 0x19
 4406 0143 03       		.uleb128 0x3
 4407 0144 0E       		.uleb128 0xe
 4408 0145 3A       		.uleb128 0x3a
 4409 0146 0B       		.uleb128 0xb
 4410 0147 3B       		.uleb128 0x3b
 4411 0148 05       		.uleb128 0x5
 4412 0149 27       		.uleb128 0x27
 4413 014a 19       		.uleb128 0x19
 4414 014b 11       		.uleb128 0x11
 4415 014c 01       		.uleb128 0x1
 4416 014d 12       		.uleb128 0x12
 4417 014e 06       		.uleb128 0x6
 4418 014f 40       		.uleb128 0x40
 4419 0150 18       		.uleb128 0x18
 4420 0151 9742     		.uleb128 0x2117
 4421 0153 19       		.uleb128 0x19
 4422 0154 01       		.uleb128 0x1
 4423 0155 13       		.uleb128 0x13
 4424 0156 00       		.byte	0
 4425 0157 00       		.byte	0
 4426 0158 17       		.uleb128 0x17
 4427 0159 2E       		.uleb128 0x2e
 4428 015a 01       		.byte	0x1
 4429 015b 03       		.uleb128 0x3
 4430 015c 0E       		.uleb128 0xe
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 118


 4431 015d 3A       		.uleb128 0x3a
 4432 015e 0B       		.uleb128 0xb
 4433 015f 3B       		.uleb128 0x3b
 4434 0160 05       		.uleb128 0x5
 4435 0161 27       		.uleb128 0x27
 4436 0162 19       		.uleb128 0x19
 4437 0163 49       		.uleb128 0x49
 4438 0164 13       		.uleb128 0x13
 4439 0165 11       		.uleb128 0x11
 4440 0166 01       		.uleb128 0x1
 4441 0167 12       		.uleb128 0x12
 4442 0168 06       		.uleb128 0x6
 4443 0169 40       		.uleb128 0x40
 4444 016a 18       		.uleb128 0x18
 4445 016b 9642     		.uleb128 0x2116
 4446 016d 19       		.uleb128 0x19
 4447 016e 01       		.uleb128 0x1
 4448 016f 13       		.uleb128 0x13
 4449 0170 00       		.byte	0
 4450 0171 00       		.byte	0
 4451 0172 18       		.uleb128 0x18
 4452 0173 2E       		.uleb128 0x2e
 4453 0174 01       		.byte	0x1
 4454 0175 03       		.uleb128 0x3
 4455 0176 0E       		.uleb128 0xe
 4456 0177 3A       		.uleb128 0x3a
 4457 0178 0B       		.uleb128 0xb
 4458 0179 3B       		.uleb128 0x3b
 4459 017a 05       		.uleb128 0x5
 4460 017b 27       		.uleb128 0x27
 4461 017c 19       		.uleb128 0x19
 4462 017d 11       		.uleb128 0x11
 4463 017e 01       		.uleb128 0x1
 4464 017f 12       		.uleb128 0x12
 4465 0180 06       		.uleb128 0x6
 4466 0181 40       		.uleb128 0x40
 4467 0182 18       		.uleb128 0x18
 4468 0183 9642     		.uleb128 0x2116
 4469 0185 19       		.uleb128 0x19
 4470 0186 01       		.uleb128 0x1
 4471 0187 13       		.uleb128 0x13
 4472 0188 00       		.byte	0
 4473 0189 00       		.byte	0
 4474 018a 19       		.uleb128 0x19
 4475 018b 34       		.uleb128 0x34
 4476 018c 00       		.byte	0
 4477 018d 03       		.uleb128 0x3
 4478 018e 08       		.uleb128 0x8
 4479 018f 3A       		.uleb128 0x3a
 4480 0190 0B       		.uleb128 0xb
 4481 0191 3B       		.uleb128 0x3b
 4482 0192 05       		.uleb128 0x5
 4483 0193 49       		.uleb128 0x49
 4484 0194 13       		.uleb128 0x13
 4485 0195 02       		.uleb128 0x2
 4486 0196 18       		.uleb128 0x18
 4487 0197 00       		.byte	0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 119


 4488 0198 00       		.byte	0
 4489 0199 1A       		.uleb128 0x1a
 4490 019a 01       		.uleb128 0x1
 4491 019b 01       		.byte	0x1
 4492 019c 49       		.uleb128 0x49
 4493 019d 13       		.uleb128 0x13
 4494 019e 01       		.uleb128 0x1
 4495 019f 13       		.uleb128 0x13
 4496 01a0 00       		.byte	0
 4497 01a1 00       		.byte	0
 4498 01a2 1B       		.uleb128 0x1b
 4499 01a3 21       		.uleb128 0x21
 4500 01a4 00       		.byte	0
 4501 01a5 49       		.uleb128 0x49
 4502 01a6 13       		.uleb128 0x13
 4503 01a7 2F       		.uleb128 0x2f
 4504 01a8 0B       		.uleb128 0xb
 4505 01a9 00       		.byte	0
 4506 01aa 00       		.byte	0
 4507 01ab 1C       		.uleb128 0x1c
 4508 01ac 34       		.uleb128 0x34
 4509 01ad 00       		.byte	0
 4510 01ae 03       		.uleb128 0x3
 4511 01af 0E       		.uleb128 0xe
 4512 01b0 3A       		.uleb128 0x3a
 4513 01b1 0B       		.uleb128 0xb
 4514 01b2 3B       		.uleb128 0x3b
 4515 01b3 0B       		.uleb128 0xb
 4516 01b4 49       		.uleb128 0x49
 4517 01b5 13       		.uleb128 0x13
 4518 01b6 3F       		.uleb128 0x3f
 4519 01b7 19       		.uleb128 0x19
 4520 01b8 02       		.uleb128 0x2
 4521 01b9 18       		.uleb128 0x18
 4522 01ba 00       		.byte	0
 4523 01bb 00       		.byte	0
 4524 01bc 00       		.byte	0
 4525              		.section	.debug_aranges,"",%progbits
 4526 0000 EC000000 		.4byte	0xec
 4527 0004 0200     		.2byte	0x2
 4528 0006 00000000 		.4byte	.Ldebug_info0
 4529 000a 04       		.byte	0x4
 4530 000b 00       		.byte	0
 4531 000c 0000     		.2byte	0
 4532 000e 0000     		.2byte	0
 4533 0010 00000000 		.4byte	.LFB1
 4534 0014 B0000000 		.4byte	.LFE1-.LFB1
 4535 0018 00000000 		.4byte	.LFB2
 4536 001c 84000000 		.4byte	.LFE2-.LFB2
 4537 0020 00000000 		.4byte	.LFB3
 4538 0024 90000000 		.4byte	.LFE3-.LFB3
 4539 0028 00000000 		.4byte	.LFB4
 4540 002c 58000000 		.4byte	.LFE4-.LFB4
 4541 0030 00000000 		.4byte	.LFB5
 4542 0034 60000000 		.4byte	.LFE5-.LFB5
 4543 0038 00000000 		.4byte	.LFB6
 4544 003c 52000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 120


 4545 0040 00000000 		.4byte	.LFB7
 4546 0044 6C010000 		.4byte	.LFE7-.LFB7
 4547 0048 00000000 		.4byte	.LFB8
 4548 004c E6000000 		.4byte	.LFE8-.LFB8
 4549 0050 00000000 		.4byte	.LFB9
 4550 0054 9A010000 		.4byte	.LFE9-.LFB9
 4551 0058 00000000 		.4byte	.LFB10
 4552 005c B2000000 		.4byte	.LFE10-.LFB10
 4553 0060 00000000 		.4byte	.LFB11
 4554 0064 78000000 		.4byte	.LFE11-.LFB11
 4555 0068 00000000 		.4byte	.LFB12
 4556 006c 2C000000 		.4byte	.LFE12-.LFB12
 4557 0070 00000000 		.4byte	.LFB13
 4558 0074 36000000 		.4byte	.LFE13-.LFB13
 4559 0078 00000000 		.4byte	.LFB14
 4560 007c 24000000 		.4byte	.LFE14-.LFB14
 4561 0080 00000000 		.4byte	.LFB15
 4562 0084 3C000000 		.4byte	.LFE15-.LFB15
 4563 0088 00000000 		.4byte	.LFB16
 4564 008c 18000000 		.4byte	.LFE16-.LFB16
 4565 0090 00000000 		.4byte	.LFB17
 4566 0094 1A000000 		.4byte	.LFE17-.LFB17
 4567 0098 00000000 		.4byte	.LFB18
 4568 009c 1A000000 		.4byte	.LFE18-.LFB18
 4569 00a0 00000000 		.4byte	.LFB19
 4570 00a4 DA000000 		.4byte	.LFE19-.LFB19
 4571 00a8 00000000 		.4byte	.LFB20
 4572 00ac 4C000000 		.4byte	.LFE20-.LFB20
 4573 00b0 00000000 		.4byte	.LFB21
 4574 00b4 96000000 		.4byte	.LFE21-.LFB21
 4575 00b8 00000000 		.4byte	.LFB22
 4576 00bc 2C000000 		.4byte	.LFE22-.LFB22
 4577 00c0 00000000 		.4byte	.LFB23
 4578 00c4 30000000 		.4byte	.LFE23-.LFB23
 4579 00c8 00000000 		.4byte	.LFB24
 4580 00cc 30000000 		.4byte	.LFE24-.LFB24
 4581 00d0 00000000 		.4byte	.LFB25
 4582 00d4 34000000 		.4byte	.LFE25-.LFB25
 4583 00d8 00000000 		.4byte	.LFB26
 4584 00dc 50000000 		.4byte	.LFE26-.LFB26
 4585 00e0 00000000 		.4byte	.LFB27
 4586 00e4 44000000 		.4byte	.LFE27-.LFB27
 4587 00e8 00000000 		.4byte	0
 4588 00ec 00000000 		.4byte	0
 4589              		.section	.debug_ranges,"",%progbits
 4590              	.Ldebug_ranges0:
 4591 0000 00000000 		.4byte	.LFB1
 4592 0004 B0000000 		.4byte	.LFE1
 4593 0008 00000000 		.4byte	.LFB2
 4594 000c 84000000 		.4byte	.LFE2
 4595 0010 00000000 		.4byte	.LFB3
 4596 0014 90000000 		.4byte	.LFE3
 4597 0018 00000000 		.4byte	.LFB4
 4598 001c 58000000 		.4byte	.LFE4
 4599 0020 00000000 		.4byte	.LFB5
 4600 0024 60000000 		.4byte	.LFE5
 4601 0028 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 121


 4602 002c 52000000 		.4byte	.LFE6
 4603 0030 00000000 		.4byte	.LFB7
 4604 0034 6C010000 		.4byte	.LFE7
 4605 0038 00000000 		.4byte	.LFB8
 4606 003c E6000000 		.4byte	.LFE8
 4607 0040 00000000 		.4byte	.LFB9
 4608 0044 9A010000 		.4byte	.LFE9
 4609 0048 00000000 		.4byte	.LFB10
 4610 004c B2000000 		.4byte	.LFE10
 4611 0050 00000000 		.4byte	.LFB11
 4612 0054 78000000 		.4byte	.LFE11
 4613 0058 00000000 		.4byte	.LFB12
 4614 005c 2C000000 		.4byte	.LFE12
 4615 0060 00000000 		.4byte	.LFB13
 4616 0064 36000000 		.4byte	.LFE13
 4617 0068 00000000 		.4byte	.LFB14
 4618 006c 24000000 		.4byte	.LFE14
 4619 0070 00000000 		.4byte	.LFB15
 4620 0074 3C000000 		.4byte	.LFE15
 4621 0078 00000000 		.4byte	.LFB16
 4622 007c 18000000 		.4byte	.LFE16
 4623 0080 00000000 		.4byte	.LFB17
 4624 0084 1A000000 		.4byte	.LFE17
 4625 0088 00000000 		.4byte	.LFB18
 4626 008c 1A000000 		.4byte	.LFE18
 4627 0090 00000000 		.4byte	.LFB19
 4628 0094 DA000000 		.4byte	.LFE19
 4629 0098 00000000 		.4byte	.LFB20
 4630 009c 4C000000 		.4byte	.LFE20
 4631 00a0 00000000 		.4byte	.LFB21
 4632 00a4 96000000 		.4byte	.LFE21
 4633 00a8 00000000 		.4byte	.LFB22
 4634 00ac 2C000000 		.4byte	.LFE22
 4635 00b0 00000000 		.4byte	.LFB23
 4636 00b4 30000000 		.4byte	.LFE23
 4637 00b8 00000000 		.4byte	.LFB24
 4638 00bc 30000000 		.4byte	.LFE24
 4639 00c0 00000000 		.4byte	.LFB25
 4640 00c4 34000000 		.4byte	.LFE25
 4641 00c8 00000000 		.4byte	.LFB26
 4642 00cc 50000000 		.4byte	.LFE26
 4643 00d0 00000000 		.4byte	.LFB27
 4644 00d4 44000000 		.4byte	.LFE27
 4645 00d8 00000000 		.4byte	0
 4646 00dc 00000000 		.4byte	0
 4647              		.section	.debug_macro,"",%progbits
 4648              	.Ldebug_macro0:
 4649 0000 0400     		.2byte	0x4
 4650 0002 02       		.byte	0x2
 4651 0003 00000000 		.4byte	.Ldebug_line0
 4652 0007 07       		.byte	0x7
 4653 0008 00000000 		.4byte	.Ldebug_macro1
 4654 000c 03       		.byte	0x3
 4655 000d 00       		.uleb128 0
 4656 000e 01       		.uleb128 0x1
 4657              		.file 9 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\stdlib.h"
 4658 000f 03       		.byte	0x3
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 122


 4659 0010 42       		.uleb128 0x42
 4660 0011 09       		.uleb128 0x9
 4661 0012 05       		.byte	0x5
 4662 0013 08       		.uleb128 0x8
 4663 0014 A56F0000 		.4byte	.LASF355
 4664              		.file 10 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\ieeefp.h"
 4665 0018 03       		.byte	0x3
 4666 0019 0A       		.uleb128 0xa
 4667 001a 0A       		.uleb128 0xa
 4668 001b 05       		.byte	0x5
 4669 001c 3C       		.uleb128 0x3c
 4670 001d 7E580000 		.4byte	.LASF356
 4671 0021 04       		.byte	0x4
 4672              		.file 11 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\_ansi.h"
 4673 0022 03       		.byte	0x3
 4674 0023 0B       		.uleb128 0xb
 4675 0024 0B       		.uleb128 0xb
 4676 0025 05       		.byte	0x5
 4677 0026 0D       		.uleb128 0xd
 4678 0027 20500000 		.4byte	.LASF357
 4679              		.file 12 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\newlib.h"
 4680 002b 03       		.byte	0x3
 4681 002c 0F       		.uleb128 0xf
 4682 002d 0C       		.uleb128 0xc
 4683 002e 07       		.byte	0x7
 4684 002f 00000000 		.4byte	.Ldebug_macro2
 4685 0033 04       		.byte	0x4
 4686              		.file 13 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\config.h"
 4687 0034 03       		.byte	0x3
 4688 0035 10       		.uleb128 0x10
 4689 0036 0D       		.uleb128 0xd
 4690 0037 05       		.byte	0x5
 4691 0038 02       		.uleb128 0x2
 4692 0039 204C0000 		.4byte	.LASF372
 4693 003d 03       		.byte	0x3
 4694 003e 04       		.uleb128 0x4
 4695 003f 0A       		.uleb128 0xa
 4696 0040 04       		.byte	0x4
 4697              		.file 14 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\features.h"
 4698 0041 03       		.byte	0x3
 4699 0042 05       		.uleb128 0x5
 4700 0043 0E       		.uleb128 0xe
 4701 0044 07       		.byte	0x7
 4702 0045 00000000 		.4byte	.Ldebug_macro3
 4703 0049 04       		.byte	0x4
 4704 004a 07       		.byte	0x7
 4705 004b 00000000 		.4byte	.Ldebug_macro4
 4706 004f 04       		.byte	0x4
 4707 0050 07       		.byte	0x7
 4708 0051 00000000 		.4byte	.Ldebug_macro5
 4709 0055 04       		.byte	0x4
 4710 0056 07       		.byte	0x7
 4711 0057 00000000 		.4byte	.Ldebug_macro6
 4712 005b 03       		.byte	0x3
 4713 005c 10       		.uleb128 0x10
 4714 005d 02       		.uleb128 0x2
 4715 005e 07       		.byte	0x7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 123


 4716 005f 00000000 		.4byte	.Ldebug_macro7
 4717 0063 04       		.byte	0x4
 4718              		.file 15 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\reent.h"
 4719 0064 03       		.byte	0x3
 4720 0065 12       		.uleb128 0x12
 4721 0066 0F       		.uleb128 0xf
 4722 0067 05       		.byte	0x5
 4723 0068 0B       		.uleb128 0xb
 4724 0069 52540000 		.4byte	.LASF451
 4725 006d 03       		.byte	0x3
 4726 006e 0D       		.uleb128 0xd
 4727 006f 0B       		.uleb128 0xb
 4728 0070 04       		.byte	0x4
 4729 0071 03       		.byte	0x3
 4730 0072 0E       		.uleb128 0xe
 4731 0073 02       		.uleb128 0x2
 4732 0074 07       		.byte	0x7
 4733 0075 00000000 		.4byte	.Ldebug_macro8
 4734 0079 04       		.byte	0x4
 4735              		.file 16 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\_types.h"
 4736 007a 03       		.byte	0x3
 4737 007b 0F       		.uleb128 0xf
 4738 007c 10       		.uleb128 0x10
 4739 007d 05       		.byte	0x5
 4740 007e 0A       		.uleb128 0xa
 4741 007f 7B300000 		.4byte	.LASF465
 4742              		.file 17 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\_types.h"
 4743 0083 03       		.byte	0x3
 4744 0084 0C       		.uleb128 0xc
 4745 0085 11       		.uleb128 0x11
 4746 0086 05       		.byte	0x5
 4747 0087 06       		.uleb128 0x6
 4748 0088 4A580000 		.4byte	.LASF466
 4749 008c 03       		.byte	0x3
 4750 008d 07       		.uleb128 0x7
 4751 008e 03       		.uleb128 0x3
 4752 008f 07       		.byte	0x7
 4753 0090 00000000 		.4byte	.Ldebug_macro9
 4754 0094 04       		.byte	0x4
 4755 0095 04       		.byte	0x4
 4756              		.file 18 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\lock.h"
 4757 0096 03       		.byte	0x3
 4758 0097 0D       		.uleb128 0xd
 4759 0098 12       		.uleb128 0x12
 4760 0099 07       		.byte	0x7
 4761 009a 00000000 		.4byte	.Ldebug_macro10
 4762 009e 04       		.byte	0x4
 4763 009f 07       		.byte	0x7
 4764 00a0 00000000 		.4byte	.Ldebug_macro11
 4765 00a4 03       		.byte	0x3
 4766 00a5 43       		.uleb128 0x43
 4767 00a6 02       		.uleb128 0x2
 4768 00a7 07       		.byte	0x7
 4769 00a8 00000000 		.4byte	.Ldebug_macro12
 4770 00ac 04       		.byte	0x4
 4771 00ad 04       		.byte	0x4
 4772 00ae 07       		.byte	0x7
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 124


 4773 00af 00000000 		.4byte	.Ldebug_macro13
 4774 00b3 04       		.byte	0x4
 4775              		.file 19 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\cdefs.h"
 4776 00b4 03       		.byte	0x3
 4777 00b5 13       		.uleb128 0x13
 4778 00b6 13       		.uleb128 0x13
 4779 00b7 05       		.byte	0x5
 4780 00b8 29       		.uleb128 0x29
 4781 00b9 5B800000 		.4byte	.LASF551
 4782 00bd 03       		.byte	0x3
 4783 00be 2D       		.uleb128 0x2d
 4784 00bf 02       		.uleb128 0x2
 4785 00c0 04       		.byte	0x4
 4786 00c1 07       		.byte	0x7
 4787 00c2 00000000 		.4byte	.Ldebug_macro14
 4788 00c6 04       		.byte	0x4
 4789              		.file 20 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\machine\\stdlib.h"
 4790 00c7 03       		.byte	0x3
 4791 00c8 14       		.uleb128 0x14
 4792 00c9 14       		.uleb128 0x14
 4793 00ca 05       		.byte	0x5
 4794 00cb 02       		.uleb128 0x2
 4795 00cc 8B260000 		.4byte	.LASF651
 4796 00d0 04       		.byte	0x4
 4797              		.file 21 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\alloca.h"
 4798 00d1 03       		.byte	0x3
 4799 00d2 16       		.uleb128 0x16
 4800 00d3 15       		.uleb128 0x15
 4801 00d4 07       		.byte	0x7
 4802 00d5 00000000 		.4byte	.Ldebug_macro15
 4803 00d9 04       		.byte	0x4
 4804 00da 07       		.byte	0x7
 4805 00db 00000000 		.4byte	.Ldebug_macro16
 4806 00df 04       		.byte	0x4
 4807              		.file 22 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\string.h"
 4808 00e0 03       		.byte	0x3
 4809 00e1 43       		.uleb128 0x43
 4810 00e2 16       		.uleb128 0x16
 4811 00e3 07       		.byte	0x7
 4812 00e4 00000000 		.4byte	.Ldebug_macro17
 4813 00e8 03       		.byte	0x3
 4814 00e9 11       		.uleb128 0x11
 4815 00ea 02       		.uleb128 0x2
 4816 00eb 07       		.byte	0x7
 4817 00ec 00000000 		.4byte	.Ldebug_macro18
 4818 00f0 04       		.byte	0x4
 4819              		.file 23 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\string.h"
 4820 00f1 03       		.byte	0x3
 4821 00f2 A601     		.uleb128 0xa6
 4822 00f4 17       		.uleb128 0x17
 4823 00f5 04       		.byte	0x4
 4824 00f6 04       		.byte	0x4
 4825 00f7 05       		.byte	0x5
 4826 00f8 48       		.uleb128 0x48
 4827 00f9 4A6C0000 		.4byte	.LASF662
 4828              		.file 24 "FreeRTOS/include/FreeRTOS.h"
 4829 00fd 03       		.byte	0x3
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 125


 4830 00fe 4A       		.uleb128 0x4a
 4831 00ff 18       		.uleb128 0x18
 4832 0100 05       		.byte	0x5
 4833 0101 43       		.uleb128 0x43
 4834 0102 CC5E0000 		.4byte	.LASF663
 4835 0106 03       		.byte	0x3
 4836 0107 48       		.uleb128 0x48
 4837 0108 02       		.uleb128 0x2
 4838 0109 04       		.byte	0x4
 4839              		.file 25 "c:\\gnu tools arm embedded\\4.9 2015q1\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stdint.
 4840 010a 03       		.byte	0x3
 4841 010b 57       		.uleb128 0x57
 4842 010c 19       		.uleb128 0x19
 4843 010d 03       		.byte	0x3
 4844 010e 09       		.uleb128 0x9
 4845 010f 04       		.uleb128 0x4
 4846 0110 05       		.byte	0x5
 4847 0111 0A       		.uleb128 0xa
 4848 0112 BB8A0000 		.4byte	.LASF664
 4849              		.file 26 "c:\\gnu tools arm embedded\\4.9 2015q1\\arm-none-eabi\\include\\sys\\_intsup.h"
 4850 0116 03       		.byte	0x3
 4851 0117 0D       		.uleb128 0xd
 4852 0118 1A       		.uleb128 0x1a
 4853 0119 07       		.byte	0x7
 4854 011a 00000000 		.4byte	.Ldebug_macro19
 4855 011e 04       		.byte	0x4
 4856 011f 07       		.byte	0x7
 4857 0120 00000000 		.4byte	.Ldebug_macro20
 4858 0124 04       		.byte	0x4
 4859 0125 05       		.byte	0x5
 4860 0126 0D       		.uleb128 0xd
 4861 0127 4D740000 		.4byte	.LASF742
 4862 012b 04       		.byte	0x4
 4863              		.file 27 "config/FreeRTOSConfig.h"
 4864 012c 03       		.byte	0x3
 4865 012d 5E       		.uleb128 0x5e
 4866 012e 1B       		.uleb128 0x1b
 4867 012f 07       		.byte	0x7
 4868 0130 00000000 		.4byte	.Ldebug_macro21
 4869 0134 04       		.byte	0x4
 4870              		.file 28 "FreeRTOS/include/projdefs.h"
 4871 0135 03       		.byte	0x3
 4872 0136 61       		.uleb128 0x61
 4873 0137 1C       		.uleb128 0x1c
 4874 0138 07       		.byte	0x7
 4875 0139 00000000 		.4byte	.Ldebug_macro22
 4876 013d 04       		.byte	0x4
 4877              		.file 29 "FreeRTOS/include/portable.h"
 4878 013e 03       		.byte	0x3
 4879 013f 64       		.uleb128 0x64
 4880 0140 1D       		.uleb128 0x1d
 4881 0141 05       		.byte	0x5
 4882 0142 47       		.uleb128 0x47
 4883 0143 07280000 		.4byte	.LASF796
 4884 0147 03       		.byte	0x3
 4885 0148 C401     		.uleb128 0xc4
 4886 014a 05       		.uleb128 0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 126


 4887 014b 07       		.byte	0x7
 4888 014c 00000000 		.4byte	.Ldebug_macro23
 4889 0150 04       		.byte	0x4
 4890 0151 07       		.byte	0x7
 4891 0152 00000000 		.4byte	.Ldebug_macro24
 4892              		.file 30 "FreeRTOS/include/mpu_wrappers.h"
 4893 0156 03       		.byte	0x3
 4894 0157 E002     		.uleb128 0x160
 4895 0159 1E       		.uleb128 0x1e
 4896 015a 07       		.byte	0x7
 4897 015b 00000000 		.4byte	.Ldebug_macro25
 4898 015f 04       		.byte	0x4
 4899 0160 04       		.byte	0x4
 4900 0161 07       		.byte	0x7
 4901 0162 00000000 		.4byte	.Ldebug_macro26
 4902 0166 04       		.byte	0x4
 4903 0167 03       		.byte	0x3
 4904 0168 4B       		.uleb128 0x4b
 4905 0169 07       		.uleb128 0x7
 4906 016a 05       		.byte	0x5
 4907 016b 44       		.uleb128 0x44
 4908 016c D9500000 		.4byte	.LASF957
 4909 0170 03       		.byte	0x3
 4910 0171 4A       		.uleb128 0x4a
 4911 0172 06       		.uleb128 0x6
 4912 0173 07       		.byte	0x7
 4913 0174 00000000 		.4byte	.Ldebug_macro27
 4914 0178 04       		.byte	0x4
 4915 0179 07       		.byte	0x7
 4916 017a 00000000 		.4byte	.Ldebug_macro28
 4917 017e 04       		.byte	0x4
 4918 017f 03       		.byte	0x3
 4919 0180 4C       		.uleb128 0x4c
 4920 0181 08       		.uleb128 0x8
 4921 0182 07       		.byte	0x7
 4922 0183 00000000 		.4byte	.Ldebug_macro29
 4923 0187 04       		.byte	0x4
 4924 0188 06       		.byte	0x6
 4925 0189 56       		.uleb128 0x56
 4926 018a D86A0000 		.4byte	.LASF1016
 4927 018e 05       		.byte	0x5
 4928 018f 5A       		.uleb128 0x5a
 4929 0190 334E0000 		.4byte	.LASF1017
 4930 0194 05       		.byte	0x5
 4931 0195 5B       		.uleb128 0x5b
 4932 0196 C3870000 		.4byte	.LASF1018
 4933 019a 05       		.byte	0x5
 4934 019b 68       		.uleb128 0x68
 4935 019c 24720000 		.4byte	.LASF1019
 4936 01a0 05       		.byte	0x5
 4937 01a1 69       		.uleb128 0x69
 4938 01a2 C53D0000 		.4byte	.LASF1020
 4939 01a6 05       		.byte	0x5
 4940 01a7 6A       		.uleb128 0x6a
 4941 01a8 2B860000 		.4byte	.LASF1021
 4942 01ac 05       		.byte	0x5
 4943 01ad 6E       		.uleb128 0x6e
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 127


 4944 01ae 61320000 		.4byte	.LASF1022
 4945 01b2 05       		.byte	0x5
 4946 01b3 6F       		.uleb128 0x6f
 4947 01b4 35480000 		.4byte	.LASF1023
 4948 01b8 05       		.byte	0x5
 4949 01b9 76       		.uleb128 0x76
 4950 01ba 0E0C0000 		.4byte	.LASF1024
 4951 01be 05       		.byte	0x5
 4952 01bf F001     		.uleb128 0xf0
 4953 01c1 A1160000 		.4byte	.LASF1025
 4954 01c5 04       		.byte	0x4
 4955 01c6 00       		.byte	0
 4956              		.section	.debug_macro,"G",%progbits,wm4.0.1834ce015d70b8127b1e5f7bc96e3d8e,comdat
 4957              	.Ldebug_macro1:
 4958 0000 0400     		.2byte	0x4
 4959 0002 00       		.byte	0
 4960 0003 05       		.byte	0x5
 4961 0004 00       		.uleb128 0
 4962 0005 A7560000 		.4byte	.LASF0
 4963 0009 05       		.byte	0x5
 4964 000a 00       		.uleb128 0
 4965 000b E4080000 		.4byte	.LASF1
 4966 000f 05       		.byte	0x5
 4967 0010 00       		.uleb128 0
 4968 0011 183C0000 		.4byte	.LASF2
 4969 0015 05       		.byte	0x5
 4970 0016 00       		.uleb128 0
 4971 0017 FD6D0000 		.4byte	.LASF3
 4972 001b 05       		.byte	0x5
 4973 001c 00       		.uleb128 0
 4974 001d 1B1E0000 		.4byte	.LASF4
 4975 0021 05       		.byte	0x5
 4976 0022 00       		.uleb128 0
 4977 0023 A08D0000 		.4byte	.LASF5
 4978 0027 05       		.byte	0x5
 4979 0028 00       		.uleb128 0
 4980 0029 70770000 		.4byte	.LASF6
 4981 002d 05       		.byte	0x5
 4982 002e 00       		.uleb128 0
 4983 002f B7210000 		.4byte	.LASF7
 4984 0033 05       		.byte	0x5
 4985 0034 00       		.uleb128 0
 4986 0035 29380000 		.4byte	.LASF8
 4987 0039 05       		.byte	0x5
 4988 003a 00       		.uleb128 0
 4989 003b 05410000 		.4byte	.LASF9
 4990 003f 05       		.byte	0x5
 4991 0040 00       		.uleb128 0
 4992 0041 8D8D0000 		.4byte	.LASF10
 4993 0045 05       		.byte	0x5
 4994 0046 00       		.uleb128 0
 4995 0047 AD030000 		.4byte	.LASF11
 4996 004b 05       		.byte	0x5
 4997 004c 00       		.uleb128 0
 4998 004d 3E670000 		.4byte	.LASF12
 4999 0051 05       		.byte	0x5
 5000 0052 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 128


 5001 0053 47830000 		.4byte	.LASF13
 5002 0057 05       		.byte	0x5
 5003 0058 00       		.uleb128 0
 5004 0059 46190000 		.4byte	.LASF14
 5005 005d 05       		.byte	0x5
 5006 005e 00       		.uleb128 0
 5007 005f CD040000 		.4byte	.LASF15
 5008 0063 05       		.byte	0x5
 5009 0064 00       		.uleb128 0
 5010 0065 40680000 		.4byte	.LASF16
 5011 0069 05       		.byte	0x5
 5012 006a 00       		.uleb128 0
 5013 006b 85200000 		.4byte	.LASF17
 5014 006f 05       		.byte	0x5
 5015 0070 00       		.uleb128 0
 5016 0071 CD1A0000 		.4byte	.LASF18
 5017 0075 05       		.byte	0x5
 5018 0076 00       		.uleb128 0
 5019 0077 79270000 		.4byte	.LASF19
 5020 007b 05       		.byte	0x5
 5021 007c 00       		.uleb128 0
 5022 007d 35730000 		.4byte	.LASF20
 5023 0081 05       		.byte	0x5
 5024 0082 00       		.uleb128 0
 5025 0083 B44C0000 		.4byte	.LASF21
 5026 0087 05       		.byte	0x5
 5027 0088 00       		.uleb128 0
 5028 0089 D65B0000 		.4byte	.LASF22
 5029 008d 05       		.byte	0x5
 5030 008e 00       		.uleb128 0
 5031 008f FA620000 		.4byte	.LASF23
 5032 0093 05       		.byte	0x5
 5033 0094 00       		.uleb128 0
 5034 0095 320E0000 		.4byte	.LASF24
 5035 0099 05       		.byte	0x5
 5036 009a 00       		.uleb128 0
 5037 009b CF050000 		.4byte	.LASF25
 5038 009f 05       		.byte	0x5
 5039 00a0 00       		.uleb128 0
 5040 00a1 8A4F0000 		.4byte	.LASF26
 5041 00a5 05       		.byte	0x5
 5042 00a6 00       		.uleb128 0
 5043 00a7 CC560000 		.4byte	.LASF27
 5044 00ab 05       		.byte	0x5
 5045 00ac 00       		.uleb128 0
 5046 00ad FB150000 		.4byte	.LASF28
 5047 00b1 05       		.byte	0x5
 5048 00b2 00       		.uleb128 0
 5049 00b3 E9050000 		.4byte	.LASF29
 5050 00b7 05       		.byte	0x5
 5051 00b8 00       		.uleb128 0
 5052 00b9 06640000 		.4byte	.LASF30
 5053 00bd 05       		.byte	0x5
 5054 00be 00       		.uleb128 0
 5055 00bf C0270000 		.4byte	.LASF31
 5056 00c3 05       		.byte	0x5
 5057 00c4 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 129


 5058 00c5 5C090000 		.4byte	.LASF32
 5059 00c9 05       		.byte	0x5
 5060 00ca 00       		.uleb128 0
 5061 00cb 0E6E0000 		.4byte	.LASF33
 5062 00cf 05       		.byte	0x5
 5063 00d0 00       		.uleb128 0
 5064 00d1 828B0000 		.4byte	.LASF34
 5065 00d5 05       		.byte	0x5
 5066 00d6 00       		.uleb128 0
 5067 00d7 3D660000 		.4byte	.LASF35
 5068 00db 05       		.byte	0x5
 5069 00dc 00       		.uleb128 0
 5070 00dd CC180000 		.4byte	.LASF36
 5071 00e1 05       		.byte	0x5
 5072 00e2 00       		.uleb128 0
 5073 00e3 62570000 		.4byte	.LASF37
 5074 00e7 05       		.byte	0x5
 5075 00e8 00       		.uleb128 0
 5076 00e9 5A060000 		.4byte	.LASF38
 5077 00ed 05       		.byte	0x5
 5078 00ee 00       		.uleb128 0
 5079 00ef 90070000 		.4byte	.LASF39
 5080 00f3 05       		.byte	0x5
 5081 00f4 00       		.uleb128 0
 5082 00f5 8F470000 		.4byte	.LASF40
 5083 00f9 05       		.byte	0x5
 5084 00fa 00       		.uleb128 0
 5085 00fb 844C0000 		.4byte	.LASF41
 5086 00ff 05       		.byte	0x5
 5087 0100 00       		.uleb128 0
 5088 0101 2D570000 		.4byte	.LASF42
 5089 0105 05       		.byte	0x5
 5090 0106 00       		.uleb128 0
 5091 0107 3D3C0000 		.4byte	.LASF43
 5092 010b 05       		.byte	0x5
 5093 010c 00       		.uleb128 0
 5094 010d E84E0000 		.4byte	.LASF44
 5095 0111 05       		.byte	0x5
 5096 0112 00       		.uleb128 0
 5097 0113 F0380000 		.4byte	.LASF45
 5098 0117 05       		.byte	0x5
 5099 0118 00       		.uleb128 0
 5100 0119 10160000 		.4byte	.LASF46
 5101 011d 05       		.byte	0x5
 5102 011e 00       		.uleb128 0
 5103 011f BF860000 		.4byte	.LASF47
 5104 0123 05       		.byte	0x5
 5105 0124 00       		.uleb128 0
 5106 0125 F7610000 		.4byte	.LASF48
 5107 0129 05       		.byte	0x5
 5108 012a 00       		.uleb128 0
 5109 012b 738F0000 		.4byte	.LASF49
 5110 012f 05       		.byte	0x5
 5111 0130 00       		.uleb128 0
 5112 0131 76130000 		.4byte	.LASF50
 5113 0135 05       		.byte	0x5
 5114 0136 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 130


 5115 0137 6D650000 		.4byte	.LASF51
 5116 013b 05       		.byte	0x5
 5117 013c 00       		.uleb128 0
 5118 013d CE6D0000 		.4byte	.LASF52
 5119 0141 05       		.byte	0x5
 5120 0142 00       		.uleb128 0
 5121 0143 8A3F0000 		.4byte	.LASF53
 5122 0147 05       		.byte	0x5
 5123 0148 00       		.uleb128 0
 5124 0149 59080000 		.4byte	.LASF54
 5125 014d 05       		.byte	0x5
 5126 014e 00       		.uleb128 0
 5127 014f 93640000 		.4byte	.LASF55
 5128 0153 05       		.byte	0x5
 5129 0154 00       		.uleb128 0
 5130 0155 0B490000 		.4byte	.LASF56
 5131 0159 05       		.byte	0x5
 5132 015a 00       		.uleb128 0
 5133 015b 3A090000 		.4byte	.LASF57
 5134 015f 05       		.byte	0x5
 5135 0160 00       		.uleb128 0
 5136 0161 753D0000 		.4byte	.LASF58
 5137 0165 05       		.byte	0x5
 5138 0166 00       		.uleb128 0
 5139 0167 C4840000 		.4byte	.LASF59
 5140 016b 05       		.byte	0x5
 5141 016c 00       		.uleb128 0
 5142 016d 52200000 		.4byte	.LASF60
 5143 0171 05       		.byte	0x5
 5144 0172 00       		.uleb128 0
 5145 0173 E1280000 		.4byte	.LASF61
 5146 0177 05       		.byte	0x5
 5147 0178 00       		.uleb128 0
 5148 0179 AE110000 		.4byte	.LASF62
 5149 017d 05       		.byte	0x5
 5150 017e 00       		.uleb128 0
 5151 017f 75720000 		.4byte	.LASF63
 5152 0183 05       		.byte	0x5
 5153 0184 00       		.uleb128 0
 5154 0185 76390000 		.4byte	.LASF64
 5155 0189 05       		.byte	0x5
 5156 018a 00       		.uleb128 0
 5157 018b 612D0000 		.4byte	.LASF65
 5158 018f 05       		.byte	0x5
 5159 0190 00       		.uleb128 0
 5160 0191 C0280000 		.4byte	.LASF66
 5161 0195 05       		.byte	0x5
 5162 0196 00       		.uleb128 0
 5163 0197 D1300000 		.4byte	.LASF67
 5164 019b 05       		.byte	0x5
 5165 019c 00       		.uleb128 0
 5166 019d 4C7B0000 		.4byte	.LASF68
 5167 01a1 05       		.byte	0x5
 5168 01a2 00       		.uleb128 0
 5169 01a3 243F0000 		.4byte	.LASF69
 5170 01a7 05       		.byte	0x5
 5171 01a8 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 131


 5172 01a9 117D0000 		.4byte	.LASF70
 5173 01ad 05       		.byte	0x5
 5174 01ae 00       		.uleb128 0
 5175 01af 65010000 		.4byte	.LASF71
 5176 01b3 05       		.byte	0x5
 5177 01b4 00       		.uleb128 0
 5178 01b5 AB140000 		.4byte	.LASF72
 5179 01b9 05       		.byte	0x5
 5180 01ba 00       		.uleb128 0
 5181 01bb 8C460000 		.4byte	.LASF73
 5182 01bf 05       		.byte	0x5
 5183 01c0 00       		.uleb128 0
 5184 01c1 4C6A0000 		.4byte	.LASF74
 5185 01c5 05       		.byte	0x5
 5186 01c6 00       		.uleb128 0
 5187 01c7 1B860000 		.4byte	.LASF75
 5188 01cb 05       		.byte	0x5
 5189 01cc 00       		.uleb128 0
 5190 01cd 09720000 		.4byte	.LASF76
 5191 01d1 05       		.byte	0x5
 5192 01d2 00       		.uleb128 0
 5193 01d3 1C6B0000 		.4byte	.LASF77
 5194 01d7 05       		.byte	0x5
 5195 01d8 00       		.uleb128 0
 5196 01d9 39110000 		.4byte	.LASF78
 5197 01dd 05       		.byte	0x5
 5198 01de 00       		.uleb128 0
 5199 01df 69020000 		.4byte	.LASF79
 5200 01e3 05       		.byte	0x5
 5201 01e4 00       		.uleb128 0
 5202 01e5 66380000 		.4byte	.LASF80
 5203 01e9 05       		.byte	0x5
 5204 01ea 00       		.uleb128 0
 5205 01eb 6F150000 		.4byte	.LASF81
 5206 01ef 05       		.byte	0x5
 5207 01f0 00       		.uleb128 0
 5208 01f1 45840000 		.4byte	.LASF82
 5209 01f5 05       		.byte	0x5
 5210 01f6 00       		.uleb128 0
 5211 01f7 1F320000 		.4byte	.LASF83
 5212 01fb 05       		.byte	0x5
 5213 01fc 00       		.uleb128 0
 5214 01fd 45180000 		.4byte	.LASF84
 5215 0201 05       		.byte	0x5
 5216 0202 00       		.uleb128 0
 5217 0203 B1100000 		.4byte	.LASF85
 5218 0207 05       		.byte	0x5
 5219 0208 00       		.uleb128 0
 5220 0209 135F0000 		.4byte	.LASF86
 5221 020d 05       		.byte	0x5
 5222 020e 00       		.uleb128 0
 5223 020f 072E0000 		.4byte	.LASF87
 5224 0213 05       		.byte	0x5
 5225 0214 00       		.uleb128 0
 5226 0215 5E3E0000 		.4byte	.LASF88
 5227 0219 05       		.byte	0x5
 5228 021a 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 132


 5229 021b 54230000 		.4byte	.LASF89
 5230 021f 05       		.byte	0x5
 5231 0220 00       		.uleb128 0
 5232 0221 9D460000 		.4byte	.LASF90
 5233 0225 05       		.byte	0x5
 5234 0226 00       		.uleb128 0
 5235 0227 A20A0000 		.4byte	.LASF91
 5236 022b 05       		.byte	0x5
 5237 022c 00       		.uleb128 0
 5238 022d 39340000 		.4byte	.LASF92
 5239 0231 05       		.byte	0x5
 5240 0232 00       		.uleb128 0
 5241 0233 595E0000 		.4byte	.LASF93
 5242 0237 05       		.byte	0x5
 5243 0238 00       		.uleb128 0
 5244 0239 CE2C0000 		.4byte	.LASF94
 5245 023d 05       		.byte	0x5
 5246 023e 00       		.uleb128 0
 5247 023f EA8B0000 		.4byte	.LASF95
 5248 0243 05       		.byte	0x5
 5249 0244 00       		.uleb128 0
 5250 0245 5D790000 		.4byte	.LASF96
 5251 0249 05       		.byte	0x5
 5252 024a 00       		.uleb128 0
 5253 024b 0E0E0000 		.4byte	.LASF97
 5254 024f 05       		.byte	0x5
 5255 0250 00       		.uleb128 0
 5256 0251 7E6A0000 		.4byte	.LASF98
 5257 0255 05       		.byte	0x5
 5258 0256 00       		.uleb128 0
 5259 0257 99730000 		.4byte	.LASF99
 5260 025b 05       		.byte	0x5
 5261 025c 00       		.uleb128 0
 5262 025d DA8E0000 		.4byte	.LASF100
 5263 0261 05       		.byte	0x5
 5264 0262 00       		.uleb128 0
 5265 0263 81070000 		.4byte	.LASF101
 5266 0267 05       		.byte	0x5
 5267 0268 00       		.uleb128 0
 5268 0269 AC660000 		.4byte	.LASF102
 5269 026d 05       		.byte	0x5
 5270 026e 00       		.uleb128 0
 5271 026f 62760000 		.4byte	.LASF103
 5272 0273 05       		.byte	0x5
 5273 0274 00       		.uleb128 0
 5274 0275 13480000 		.4byte	.LASF104
 5275 0279 05       		.byte	0x5
 5276 027a 00       		.uleb128 0
 5277 027b D72D0000 		.4byte	.LASF105
 5278 027f 05       		.byte	0x5
 5279 0280 00       		.uleb128 0
 5280 0281 5F5D0000 		.4byte	.LASF106
 5281 0285 05       		.byte	0x5
 5282 0286 00       		.uleb128 0
 5283 0287 733F0000 		.4byte	.LASF107
 5284 028b 05       		.byte	0x5
 5285 028c 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 133


 5286 028d BA5D0000 		.4byte	.LASF108
 5287 0291 05       		.byte	0x5
 5288 0292 00       		.uleb128 0
 5289 0293 B2170000 		.4byte	.LASF109
 5290 0297 05       		.byte	0x5
 5291 0298 00       		.uleb128 0
 5292 0299 A8500000 		.4byte	.LASF110
 5293 029d 05       		.byte	0x5
 5294 029e 00       		.uleb128 0
 5295 029f 61350000 		.4byte	.LASF111
 5296 02a3 05       		.byte	0x5
 5297 02a4 00       		.uleb128 0
 5298 02a5 91220000 		.4byte	.LASF112
 5299 02a9 05       		.byte	0x5
 5300 02aa 00       		.uleb128 0
 5301 02ab 965C0000 		.4byte	.LASF113
 5302 02af 05       		.byte	0x5
 5303 02b0 00       		.uleb128 0
 5304 02b1 BA8E0000 		.4byte	.LASF114
 5305 02b5 05       		.byte	0x5
 5306 02b6 00       		.uleb128 0
 5307 02b7 E5130000 		.4byte	.LASF115
 5308 02bb 05       		.byte	0x5
 5309 02bc 00       		.uleb128 0
 5310 02bd 7D6C0000 		.4byte	.LASF116
 5311 02c1 05       		.byte	0x5
 5312 02c2 00       		.uleb128 0
 5313 02c3 A8530000 		.4byte	.LASF117
 5314 02c7 05       		.byte	0x5
 5315 02c8 00       		.uleb128 0
 5316 02c9 35210000 		.4byte	.LASF118
 5317 02cd 05       		.byte	0x5
 5318 02ce 00       		.uleb128 0
 5319 02cf 12120000 		.4byte	.LASF119
 5320 02d3 05       		.byte	0x5
 5321 02d4 00       		.uleb128 0
 5322 02d5 61540000 		.4byte	.LASF120
 5323 02d9 05       		.byte	0x5
 5324 02da 00       		.uleb128 0
 5325 02db 00530000 		.4byte	.LASF121
 5326 02df 05       		.byte	0x5
 5327 02e0 00       		.uleb128 0
 5328 02e1 BD470000 		.4byte	.LASF122
 5329 02e5 05       		.byte	0x5
 5330 02e6 00       		.uleb128 0
 5331 02e7 34410000 		.4byte	.LASF123
 5332 02eb 05       		.byte	0x5
 5333 02ec 00       		.uleb128 0
 5334 02ed C4530000 		.4byte	.LASF124
 5335 02f1 05       		.byte	0x5
 5336 02f2 00       		.uleb128 0
 5337 02f3 E9520000 		.4byte	.LASF125
 5338 02f7 05       		.byte	0x5
 5339 02f8 00       		.uleb128 0
 5340 02f9 7B630000 		.4byte	.LASF126
 5341 02fd 05       		.byte	0x5
 5342 02fe 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 134


 5343 02ff 32190000 		.4byte	.LASF127
 5344 0303 05       		.byte	0x5
 5345 0304 00       		.uleb128 0
 5346 0305 CA200000 		.4byte	.LASF128
 5347 0309 05       		.byte	0x5
 5348 030a 00       		.uleb128 0
 5349 030b 0D1C0000 		.4byte	.LASF129
 5350 030f 05       		.byte	0x5
 5351 0310 00       		.uleb128 0
 5352 0311 A9450000 		.4byte	.LASF130
 5353 0315 05       		.byte	0x5
 5354 0316 00       		.uleb128 0
 5355 0317 9E290000 		.4byte	.LASF131
 5356 031b 05       		.byte	0x5
 5357 031c 00       		.uleb128 0
 5358 031d 3B2E0000 		.4byte	.LASF132
 5359 0321 05       		.byte	0x5
 5360 0322 00       		.uleb128 0
 5361 0323 6C2C0000 		.4byte	.LASF133
 5362 0327 05       		.byte	0x5
 5363 0328 00       		.uleb128 0
 5364 0329 45060000 		.4byte	.LASF134
 5365 032d 05       		.byte	0x5
 5366 032e 00       		.uleb128 0
 5367 032f 0A220000 		.4byte	.LASF135
 5368 0333 05       		.byte	0x5
 5369 0334 00       		.uleb128 0
 5370 0335 94580000 		.4byte	.LASF136
 5371 0339 05       		.byte	0x5
 5372 033a 00       		.uleb128 0
 5373 033b 3D8F0000 		.4byte	.LASF137
 5374 033f 05       		.byte	0x5
 5375 0340 00       		.uleb128 0
 5376 0341 B7720000 		.4byte	.LASF138
 5377 0345 05       		.byte	0x5
 5378 0346 00       		.uleb128 0
 5379 0347 8D5E0000 		.4byte	.LASF139
 5380 034b 05       		.byte	0x5
 5381 034c 00       		.uleb128 0
 5382 034d 248E0000 		.4byte	.LASF140
 5383 0351 05       		.byte	0x5
 5384 0352 00       		.uleb128 0
 5385 0353 F0400000 		.4byte	.LASF141
 5386 0357 05       		.byte	0x5
 5387 0358 00       		.uleb128 0
 5388 0359 E4040000 		.4byte	.LASF142
 5389 035d 05       		.byte	0x5
 5390 035e 00       		.uleb128 0
 5391 035f 707B0000 		.4byte	.LASF143
 5392 0363 05       		.byte	0x5
 5393 0364 00       		.uleb128 0
 5394 0365 2F870000 		.4byte	.LASF144
 5395 0369 05       		.byte	0x5
 5396 036a 00       		.uleb128 0
 5397 036b 2F140000 		.4byte	.LASF145
 5398 036f 05       		.byte	0x5
 5399 0370 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 135


 5400 0371 F3390000 		.4byte	.LASF146
 5401 0375 05       		.byte	0x5
 5402 0376 00       		.uleb128 0
 5403 0377 0C800000 		.4byte	.LASF147
 5404 037b 05       		.byte	0x5
 5405 037c 00       		.uleb128 0
 5406 037d 84330000 		.4byte	.LASF148
 5407 0381 05       		.byte	0x5
 5408 0382 00       		.uleb128 0
 5409 0383 20790000 		.4byte	.LASF149
 5410 0387 05       		.byte	0x5
 5411 0388 00       		.uleb128 0
 5412 0389 B16F0000 		.4byte	.LASF150
 5413 038d 05       		.byte	0x5
 5414 038e 00       		.uleb128 0
 5415 038f 5F070000 		.4byte	.LASF151
 5416 0393 05       		.byte	0x5
 5417 0394 00       		.uleb128 0
 5418 0395 BC850000 		.4byte	.LASF152
 5419 0399 05       		.byte	0x5
 5420 039a 00       		.uleb128 0
 5421 039b 46070000 		.4byte	.LASF153
 5422 039f 05       		.byte	0x5
 5423 03a0 00       		.uleb128 0
 5424 03a1 0B3B0000 		.4byte	.LASF154
 5425 03a5 05       		.byte	0x5
 5426 03a6 00       		.uleb128 0
 5427 03a7 F9220000 		.4byte	.LASF155
 5428 03ab 05       		.byte	0x5
 5429 03ac 00       		.uleb128 0
 5430 03ad 07510000 		.4byte	.LASF156
 5431 03b1 05       		.byte	0x5
 5432 03b2 00       		.uleb128 0
 5433 03b3 33070000 		.4byte	.LASF157
 5434 03b7 05       		.byte	0x5
 5435 03b8 00       		.uleb128 0
 5436 03b9 972C0000 		.4byte	.LASF158
 5437 03bd 05       		.byte	0x5
 5438 03be 00       		.uleb128 0
 5439 03bf CB740000 		.4byte	.LASF159
 5440 03c3 05       		.byte	0x5
 5441 03c4 00       		.uleb128 0
 5442 03c5 E23F0000 		.4byte	.LASF160
 5443 03c9 05       		.byte	0x5
 5444 03ca 00       		.uleb128 0
 5445 03cb 88430000 		.4byte	.LASF161
 5446 03cf 05       		.byte	0x5
 5447 03d0 00       		.uleb128 0
 5448 03d1 92600000 		.4byte	.LASF162
 5449 03d5 05       		.byte	0x5
 5450 03d6 00       		.uleb128 0
 5451 03d7 F5300000 		.4byte	.LASF163
 5452 03db 05       		.byte	0x5
 5453 03dc 00       		.uleb128 0
 5454 03dd AD120000 		.4byte	.LASF164
 5455 03e1 05       		.byte	0x5
 5456 03e2 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 136


 5457 03e3 555B0000 		.4byte	.LASF165
 5458 03e7 05       		.byte	0x5
 5459 03e8 00       		.uleb128 0
 5460 03e9 652A0000 		.4byte	.LASF166
 5461 03ed 05       		.byte	0x5
 5462 03ee 00       		.uleb128 0
 5463 03ef D53C0000 		.4byte	.LASF167
 5464 03f3 05       		.byte	0x5
 5465 03f4 00       		.uleb128 0
 5466 03f5 7F050000 		.4byte	.LASF168
 5467 03f9 05       		.byte	0x5
 5468 03fa 00       		.uleb128 0
 5469 03fb 20310000 		.4byte	.LASF169
 5470 03ff 05       		.byte	0x5
 5471 0400 00       		.uleb128 0
 5472 0401 0C100000 		.4byte	.LASF170
 5473 0405 05       		.byte	0x5
 5474 0406 00       		.uleb128 0
 5475 0407 13030000 		.4byte	.LASF171
 5476 040b 05       		.byte	0x5
 5477 040c 00       		.uleb128 0
 5478 040d 4E630000 		.4byte	.LASF172
 5479 0411 05       		.byte	0x5
 5480 0412 00       		.uleb128 0
 5481 0413 56550000 		.4byte	.LASF173
 5482 0417 05       		.byte	0x5
 5483 0418 00       		.uleb128 0
 5484 0419 04060000 		.4byte	.LASF174
 5485 041d 05       		.byte	0x5
 5486 041e 00       		.uleb128 0
 5487 041f E4460000 		.4byte	.LASF175
 5488 0423 05       		.byte	0x5
 5489 0424 00       		.uleb128 0
 5490 0425 8A1B0000 		.4byte	.LASF176
 5491 0429 05       		.byte	0x5
 5492 042a 00       		.uleb128 0
 5493 042b 44860000 		.4byte	.LASF177
 5494 042f 05       		.byte	0x5
 5495 0430 00       		.uleb128 0
 5496 0431 A6340000 		.4byte	.LASF178
 5497 0435 05       		.byte	0x5
 5498 0436 00       		.uleb128 0
 5499 0437 E1570000 		.4byte	.LASF179
 5500 043b 05       		.byte	0x5
 5501 043c 00       		.uleb128 0
 5502 043d F21B0000 		.4byte	.LASF180
 5503 0441 05       		.byte	0x5
 5504 0442 00       		.uleb128 0
 5505 0443 2F710000 		.4byte	.LASF181
 5506 0447 05       		.byte	0x5
 5507 0448 00       		.uleb128 0
 5508 0449 80730000 		.4byte	.LASF182
 5509 044d 05       		.byte	0x5
 5510 044e 00       		.uleb128 0
 5511 044f 16020000 		.4byte	.LASF183
 5512 0453 05       		.byte	0x5
 5513 0454 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 137


 5514 0455 7D000000 		.4byte	.LASF184
 5515 0459 05       		.byte	0x5
 5516 045a 00       		.uleb128 0
 5517 045b 0F230000 		.4byte	.LASF185
 5518 045f 05       		.byte	0x5
 5519 0460 00       		.uleb128 0
 5520 0461 4A010000 		.4byte	.LASF186
 5521 0465 05       		.byte	0x5
 5522 0466 00       		.uleb128 0
 5523 0467 134F0000 		.4byte	.LASF187
 5524 046b 05       		.byte	0x5
 5525 046c 00       		.uleb128 0
 5526 046d BF3B0000 		.4byte	.LASF188
 5527 0471 05       		.byte	0x5
 5528 0472 00       		.uleb128 0
 5529 0473 628B0000 		.4byte	.LASF189
 5530 0477 05       		.byte	0x5
 5531 0478 00       		.uleb128 0
 5532 0479 D30D0000 		.4byte	.LASF190
 5533 047d 05       		.byte	0x5
 5534 047e 00       		.uleb128 0
 5535 047f CF3F0000 		.4byte	.LASF191
 5536 0483 05       		.byte	0x5
 5537 0484 00       		.uleb128 0
 5538 0485 7D2A0000 		.4byte	.LASF192
 5539 0489 05       		.byte	0x5
 5540 048a 00       		.uleb128 0
 5541 048b A82A0000 		.4byte	.LASF193
 5542 048f 05       		.byte	0x5
 5543 0490 00       		.uleb128 0
 5544 0491 AB0B0000 		.4byte	.LASF194
 5545 0495 05       		.byte	0x5
 5546 0496 00       		.uleb128 0
 5547 0497 D7340000 		.4byte	.LASF195
 5548 049b 05       		.byte	0x5
 5549 049c 00       		.uleb128 0
 5550 049d B11D0000 		.4byte	.LASF196
 5551 04a1 05       		.byte	0x5
 5552 04a2 00       		.uleb128 0
 5553 04a3 7A620000 		.4byte	.LASF197
 5554 04a7 05       		.byte	0x5
 5555 04a8 00       		.uleb128 0
 5556 04a9 1B050000 		.4byte	.LASF198
 5557 04ad 05       		.byte	0x5
 5558 04ae 00       		.uleb128 0
 5559 04af 1B210000 		.4byte	.LASF199
 5560 04b3 05       		.byte	0x5
 5561 04b4 00       		.uleb128 0
 5562 04b5 AA3D0000 		.4byte	.LASF200
 5563 04b9 05       		.byte	0x5
 5564 04ba 00       		.uleb128 0
 5565 04bb C6500000 		.4byte	.LASF201
 5566 04bf 05       		.byte	0x5
 5567 04c0 00       		.uleb128 0
 5568 04c1 1B5E0000 		.4byte	.LASF202
 5569 04c5 05       		.byte	0x5
 5570 04c6 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 138


 5571 04c7 7E120000 		.4byte	.LASF203
 5572 04cb 05       		.byte	0x5
 5573 04cc 00       		.uleb128 0
 5574 04cd FC4D0000 		.4byte	.LASF204
 5575 04d1 05       		.byte	0x5
 5576 04d2 00       		.uleb128 0
 5577 04d3 6F460000 		.4byte	.LASF205
 5578 04d7 05       		.byte	0x5
 5579 04d8 00       		.uleb128 0
 5580 04d9 A14C0000 		.4byte	.LASF206
 5581 04dd 05       		.byte	0x5
 5582 04de 00       		.uleb128 0
 5583 04df 675E0000 		.4byte	.LASF207
 5584 04e3 05       		.byte	0x5
 5585 04e4 00       		.uleb128 0
 5586 04e5 C0030000 		.4byte	.LASF208
 5587 04e9 05       		.byte	0x5
 5588 04ea 00       		.uleb128 0
 5589 04eb 04560000 		.4byte	.LASF209
 5590 04ef 05       		.byte	0x5
 5591 04f0 00       		.uleb128 0
 5592 04f1 28590000 		.4byte	.LASF210
 5593 04f5 05       		.byte	0x5
 5594 04f6 00       		.uleb128 0
 5595 04f7 2D0D0000 		.4byte	.LASF211
 5596 04fb 05       		.byte	0x5
 5597 04fc 00       		.uleb128 0
 5598 04fd 518F0000 		.4byte	.LASF212
 5599 0501 05       		.byte	0x5
 5600 0502 00       		.uleb128 0
 5601 0503 22690000 		.4byte	.LASF213
 5602 0507 05       		.byte	0x5
 5603 0508 00       		.uleb128 0
 5604 0509 39650000 		.4byte	.LASF214
 5605 050d 05       		.byte	0x5
 5606 050e 00       		.uleb128 0
 5607 050f C6720000 		.4byte	.LASF215
 5608 0513 05       		.byte	0x5
 5609 0514 00       		.uleb128 0
 5610 0515 6A870000 		.4byte	.LASF216
 5611 0519 05       		.byte	0x5
 5612 051a 00       		.uleb128 0
 5613 051b 66830000 		.4byte	.LASF217
 5614 051f 05       		.byte	0x5
 5615 0520 00       		.uleb128 0
 5616 0521 07110000 		.4byte	.LASF218
 5617 0525 05       		.byte	0x5
 5618 0526 00       		.uleb128 0
 5619 0527 05710000 		.4byte	.LASF219
 5620 052b 05       		.byte	0x5
 5621 052c 00       		.uleb128 0
 5622 052d 1B8B0000 		.4byte	.LASF220
 5623 0531 05       		.byte	0x5
 5624 0532 00       		.uleb128 0
 5625 0533 F6080000 		.4byte	.LASF221
 5626 0537 05       		.byte	0x5
 5627 0538 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 139


 5628 0539 E7430000 		.4byte	.LASF222
 5629 053d 05       		.byte	0x5
 5630 053e 00       		.uleb128 0
 5631 053f 93820000 		.4byte	.LASF223
 5632 0543 05       		.byte	0x5
 5633 0544 00       		.uleb128 0
 5634 0545 19180000 		.4byte	.LASF224
 5635 0549 05       		.byte	0x5
 5636 054a 00       		.uleb128 0
 5637 054b CA7E0000 		.4byte	.LASF225
 5638 054f 05       		.byte	0x5
 5639 0550 00       		.uleb128 0
 5640 0551 968F0000 		.4byte	.LASF226
 5641 0555 05       		.byte	0x5
 5642 0556 00       		.uleb128 0
 5643 0557 98200000 		.4byte	.LASF227
 5644 055b 05       		.byte	0x5
 5645 055c 00       		.uleb128 0
 5646 055d 17650000 		.4byte	.LASF228
 5647 0561 05       		.byte	0x5
 5648 0562 00       		.uleb128 0
 5649 0563 39720000 		.4byte	.LASF229
 5650 0567 05       		.byte	0x5
 5651 0568 00       		.uleb128 0
 5652 0569 DE830000 		.4byte	.LASF230
 5653 056d 05       		.byte	0x5
 5654 056e 00       		.uleb128 0
 5655 056f 36300000 		.4byte	.LASF231
 5656 0573 05       		.byte	0x5
 5657 0574 00       		.uleb128 0
 5658 0575 30530000 		.4byte	.LASF232
 5659 0579 05       		.byte	0x5
 5660 057a 00       		.uleb128 0
 5661 057b EE5B0000 		.4byte	.LASF233
 5662 057f 05       		.byte	0x5
 5663 0580 00       		.uleb128 0
 5664 0581 62050000 		.4byte	.LASF234
 5665 0585 05       		.byte	0x5
 5666 0586 00       		.uleb128 0
 5667 0587 51150000 		.4byte	.LASF235
 5668 058b 05       		.byte	0x5
 5669 058c 00       		.uleb128 0
 5670 058d A9130000 		.4byte	.LASF236
 5671 0591 05       		.byte	0x5
 5672 0592 00       		.uleb128 0
 5673 0593 12750000 		.4byte	.LASF237
 5674 0597 05       		.byte	0x5
 5675 0598 00       		.uleb128 0
 5676 0599 6E610000 		.4byte	.LASF238
 5677 059d 05       		.byte	0x5
 5678 059e 00       		.uleb128 0
 5679 059f C43A0000 		.4byte	.LASF239
 5680 05a3 05       		.byte	0x5
 5681 05a4 00       		.uleb128 0
 5682 05a5 04850000 		.4byte	.LASF240
 5683 05a9 05       		.byte	0x5
 5684 05aa 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 140


 5685 05ab E5450000 		.4byte	.LASF241
 5686 05af 05       		.byte	0x5
 5687 05b0 00       		.uleb128 0
 5688 05b1 C9130000 		.4byte	.LASF242
 5689 05b5 05       		.byte	0x5
 5690 05b6 00       		.uleb128 0
 5691 05b7 4C320000 		.4byte	.LASF243
 5692 05bb 05       		.byte	0x5
 5693 05bc 00       		.uleb128 0
 5694 05bd 6F550000 		.4byte	.LASF244
 5695 05c1 05       		.byte	0x5
 5696 05c2 00       		.uleb128 0
 5697 05c3 D2530000 		.4byte	.LASF245
 5698 05c7 05       		.byte	0x5
 5699 05c8 00       		.uleb128 0
 5700 05c9 60410000 		.4byte	.LASF246
 5701 05cd 05       		.byte	0x5
 5702 05ce 00       		.uleb128 0
 5703 05cf 5E100000 		.4byte	.LASF247
 5704 05d3 05       		.byte	0x5
 5705 05d4 00       		.uleb128 0
 5706 05d5 6A7F0000 		.4byte	.LASF248
 5707 05d9 05       		.byte	0x5
 5708 05da 00       		.uleb128 0
 5709 05db 15660000 		.4byte	.LASF249
 5710 05df 05       		.byte	0x5
 5711 05e0 00       		.uleb128 0
 5712 05e1 ED010000 		.4byte	.LASF250
 5713 05e5 05       		.byte	0x5
 5714 05e6 00       		.uleb128 0
 5715 05e7 DC5E0000 		.4byte	.LASF251
 5716 05eb 05       		.byte	0x5
 5717 05ec 00       		.uleb128 0
 5718 05ed 94630000 		.4byte	.LASF252
 5719 05f1 05       		.byte	0x5
 5720 05f2 00       		.uleb128 0
 5721 05f3 2F470000 		.4byte	.LASF253
 5722 05f7 05       		.byte	0x5
 5723 05f8 00       		.uleb128 0
 5724 05f9 F8680000 		.4byte	.LASF254
 5725 05fd 05       		.byte	0x5
 5726 05fe 00       		.uleb128 0
 5727 05ff 1F850000 		.4byte	.LASF255
 5728 0603 05       		.byte	0x5
 5729 0604 00       		.uleb128 0
 5730 0605 E96C0000 		.4byte	.LASF256
 5731 0609 05       		.byte	0x5
 5732 060a 00       		.uleb128 0
 5733 060b 963D0000 		.4byte	.LASF257
 5734 060f 05       		.byte	0x5
 5735 0610 00       		.uleb128 0
 5736 0611 C6010000 		.4byte	.LASF258
 5737 0615 05       		.byte	0x5
 5738 0616 00       		.uleb128 0
 5739 0617 B4350000 		.4byte	.LASF259
 5740 061b 05       		.byte	0x5
 5741 061c 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 141


 5742 061d DA1D0000 		.4byte	.LASF260
 5743 0621 05       		.byte	0x5
 5744 0622 00       		.uleb128 0
 5745 0623 DF230000 		.4byte	.LASF261
 5746 0627 05       		.byte	0x5
 5747 0628 00       		.uleb128 0
 5748 0629 207E0000 		.4byte	.LASF262
 5749 062d 05       		.byte	0x5
 5750 062e 00       		.uleb128 0
 5751 062f 42800000 		.4byte	.LASF263
 5752 0633 05       		.byte	0x5
 5753 0634 00       		.uleb128 0
 5754 0635 36050000 		.4byte	.LASF264
 5755 0639 05       		.byte	0x5
 5756 063a 00       		.uleb128 0
 5757 063b E82C0000 		.4byte	.LASF265
 5758 063f 05       		.byte	0x5
 5759 0640 00       		.uleb128 0
 5760 0641 D1370000 		.4byte	.LASF266
 5761 0645 05       		.byte	0x5
 5762 0646 00       		.uleb128 0
 5763 0647 6F6C0000 		.4byte	.LASF267
 5764 064b 05       		.byte	0x5
 5765 064c 00       		.uleb128 0
 5766 064d D5880000 		.4byte	.LASF268
 5767 0651 05       		.byte	0x5
 5768 0652 00       		.uleb128 0
 5769 0653 F18D0000 		.4byte	.LASF269
 5770 0657 05       		.byte	0x5
 5771 0658 00       		.uleb128 0
 5772 0659 4C0E0000 		.4byte	.LASF270
 5773 065d 05       		.byte	0x5
 5774 065e 00       		.uleb128 0
 5775 065f C1050000 		.4byte	.LASF271
 5776 0663 05       		.byte	0x5
 5777 0664 00       		.uleb128 0
 5778 0665 2C640000 		.4byte	.LASF272
 5779 0669 05       		.byte	0x5
 5780 066a 00       		.uleb128 0
 5781 066b 4B690000 		.4byte	.LASF273
 5782 066f 05       		.byte	0x5
 5783 0670 00       		.uleb128 0
 5784 0671 B0220000 		.4byte	.LASF274
 5785 0675 05       		.byte	0x5
 5786 0676 00       		.uleb128 0
 5787 0677 3A030000 		.4byte	.LASF275
 5788 067b 05       		.byte	0x5
 5789 067c 00       		.uleb128 0
 5790 067d 47550000 		.4byte	.LASF276
 5791 0681 05       		.byte	0x5
 5792 0682 00       		.uleb128 0
 5793 0683 CD460000 		.4byte	.LASF277
 5794 0687 05       		.byte	0x5
 5795 0688 00       		.uleb128 0
 5796 0689 5D0F0000 		.4byte	.LASF278
 5797 068d 05       		.byte	0x5
 5798 068e 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 142


 5799 068f 48640000 		.4byte	.LASF279
 5800 0693 05       		.byte	0x5
 5801 0694 00       		.uleb128 0
 5802 0695 220E0000 		.4byte	.LASF280
 5803 0699 05       		.byte	0x5
 5804 069a 00       		.uleb128 0
 5805 069b 6F6D0000 		.4byte	.LASF281
 5806 069f 05       		.byte	0x5
 5807 06a0 00       		.uleb128 0
 5808 06a1 E5500000 		.4byte	.LASF282
 5809 06a5 05       		.byte	0x5
 5810 06a6 00       		.uleb128 0
 5811 06a7 38830000 		.4byte	.LASF283
 5812 06ab 05       		.byte	0x5
 5813 06ac 00       		.uleb128 0
 5814 06ad C7660000 		.4byte	.LASF284
 5815 06b1 05       		.byte	0x5
 5816 06b2 00       		.uleb128 0
 5817 06b3 816B0000 		.4byte	.LASF285
 5818 06b7 05       		.byte	0x5
 5819 06b8 00       		.uleb128 0
 5820 06b9 D1290000 		.4byte	.LASF286
 5821 06bd 05       		.byte	0x5
 5822 06be 00       		.uleb128 0
 5823 06bf 94100000 		.4byte	.LASF287
 5824 06c3 05       		.byte	0x5
 5825 06c4 00       		.uleb128 0
 5826 06c5 A3170000 		.4byte	.LASF288
 5827 06c9 05       		.byte	0x5
 5828 06ca 00       		.uleb128 0
 5829 06cb EF3B0000 		.4byte	.LASF289
 5830 06cf 05       		.byte	0x5
 5831 06d0 00       		.uleb128 0
 5832 06d1 272C0000 		.4byte	.LASF290
 5833 06d5 05       		.byte	0x5
 5834 06d6 00       		.uleb128 0
 5835 06d7 1E0D0000 		.4byte	.LASF291
 5836 06db 05       		.byte	0x5
 5837 06dc 00       		.uleb128 0
 5838 06dd F4170000 		.4byte	.LASF292
 5839 06e1 05       		.byte	0x5
 5840 06e2 00       		.uleb128 0
 5841 06e3 4E5C0000 		.4byte	.LASF293
 5842 06e7 05       		.byte	0x5
 5843 06e8 00       		.uleb128 0
 5844 06e9 43000000 		.4byte	.LASF294
 5845 06ed 05       		.byte	0x5
 5846 06ee 00       		.uleb128 0
 5847 06ef E6840000 		.4byte	.LASF295
 5848 06f3 05       		.byte	0x5
 5849 06f4 00       		.uleb128 0
 5850 06f5 26580000 		.4byte	.LASF296
 5851 06f9 05       		.byte	0x5
 5852 06fa 00       		.uleb128 0
 5853 06fb 18280000 		.4byte	.LASF297
 5854 06ff 05       		.byte	0x5
 5855 0700 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 143


 5856 0701 0D150000 		.4byte	.LASF298
 5857 0705 05       		.byte	0x5
 5858 0706 00       		.uleb128 0
 5859 0707 B5760000 		.4byte	.LASF299
 5860 070b 05       		.byte	0x5
 5861 070c 00       		.uleb128 0
 5862 070d E21B0000 		.4byte	.LASF300
 5863 0711 05       		.byte	0x5
 5864 0712 00       		.uleb128 0
 5865 0713 107E0000 		.4byte	.LASF301
 5866 0717 05       		.byte	0x5
 5867 0718 00       		.uleb128 0
 5868 0719 93720000 		.4byte	.LASF302
 5869 071d 05       		.byte	0x5
 5870 071e 00       		.uleb128 0
 5871 071f 6E500000 		.4byte	.LASF303
 5872 0723 05       		.byte	0x5
 5873 0724 00       		.uleb128 0
 5874 0725 8E890000 		.4byte	.LASF304
 5875 0729 05       		.byte	0x5
 5876 072a 00       		.uleb128 0
 5877 072b 24770000 		.4byte	.LASF305
 5878 072f 05       		.byte	0x5
 5879 0730 00       		.uleb128 0
 5880 0731 EE000000 		.4byte	.LASF306
 5881 0735 05       		.byte	0x5
 5882 0736 00       		.uleb128 0
 5883 0737 34080000 		.4byte	.LASF307
 5884 073b 05       		.byte	0x5
 5885 073c 00       		.uleb128 0
 5886 073d 28280000 		.4byte	.LASF308
 5887 0741 05       		.byte	0x5
 5888 0742 00       		.uleb128 0
 5889 0743 F5600000 		.4byte	.LASF309
 5890 0747 05       		.byte	0x5
 5891 0748 00       		.uleb128 0
 5892 0749 30160000 		.4byte	.LASF310
 5893 074d 05       		.byte	0x5
 5894 074e 00       		.uleb128 0
 5895 074f E7580000 		.4byte	.LASF311
 5896 0753 05       		.byte	0x5
 5897 0754 00       		.uleb128 0
 5898 0755 CE400000 		.4byte	.LASF312
 5899 0759 05       		.byte	0x5
 5900 075a 00       		.uleb128 0
 5901 075b F91D0000 		.4byte	.LASF313
 5902 075f 05       		.byte	0x5
 5903 0760 00       		.uleb128 0
 5904 0761 6A800000 		.4byte	.LASF314
 5905 0765 05       		.byte	0x5
 5906 0766 00       		.uleb128 0
 5907 0767 03300000 		.4byte	.LASF315
 5908 076b 05       		.byte	0x5
 5909 076c 00       		.uleb128 0
 5910 076d 706E0000 		.4byte	.LASF316
 5911 0771 05       		.byte	0x5
 5912 0772 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 144


 5913 0773 11470000 		.4byte	.LASF317
 5914 0777 05       		.byte	0x5
 5915 0778 00       		.uleb128 0
 5916 0779 DF290000 		.4byte	.LASF318
 5917 077d 05       		.byte	0x5
 5918 077e 00       		.uleb128 0
 5919 077f 57300000 		.4byte	.LASF319
 5920 0783 05       		.byte	0x5
 5921 0784 00       		.uleb128 0
 5922 0785 DF370000 		.4byte	.LASF320
 5923 0789 05       		.byte	0x5
 5924 078a 00       		.uleb128 0
 5925 078b 8F3B0000 		.4byte	.LASF321
 5926 078f 05       		.byte	0x5
 5927 0790 00       		.uleb128 0
 5928 0791 A4270000 		.4byte	.LASF322
 5929 0795 05       		.byte	0x5
 5930 0796 00       		.uleb128 0
 5931 0797 064D0000 		.4byte	.LASF323
 5932 079b 05       		.byte	0x5
 5933 079c 00       		.uleb128 0
 5934 079d EB7E0000 		.4byte	.LASF324
 5935 07a1 05       		.byte	0x5
 5936 07a2 00       		.uleb128 0
 5937 07a3 24560000 		.4byte	.LASF325
 5938 07a7 05       		.byte	0x5
 5939 07a8 00       		.uleb128 0
 5940 07a9 00380000 		.4byte	.LASF326
 5941 07ad 05       		.byte	0x5
 5942 07ae 00       		.uleb128 0
 5943 07af BF430000 		.4byte	.LASF327
 5944 07b3 05       		.byte	0x5
 5945 07b4 00       		.uleb128 0
 5946 07b5 FF7E0000 		.4byte	.LASF328
 5947 07b9 05       		.byte	0x5
 5948 07ba 00       		.uleb128 0
 5949 07bb 2D5E0000 		.4byte	.LASF329
 5950 07bf 05       		.byte	0x5
 5951 07c0 00       		.uleb128 0
 5952 07c1 A58A0000 		.4byte	.LASF330
 5953 07c5 05       		.byte	0x5
 5954 07c6 00       		.uleb128 0
 5955 07c7 15380000 		.4byte	.LASF331
 5956 07cb 05       		.byte	0x5
 5957 07cc 00       		.uleb128 0
 5958 07cd E4590000 		.4byte	.LASF332
 5959 07d1 05       		.byte	0x5
 5960 07d2 00       		.uleb128 0
 5961 07d3 57390000 		.4byte	.LASF333
 5962 07d7 05       		.byte	0x5
 5963 07d8 00       		.uleb128 0
 5964 07d9 74060000 		.4byte	.LASF334
 5965 07dd 05       		.byte	0x5
 5966 07de 00       		.uleb128 0
 5967 07df 345A0000 		.4byte	.LASF335
 5968 07e3 05       		.byte	0x5
 5969 07e4 00       		.uleb128 0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 145


 5970 07e5 82470000 		.4byte	.LASF336
 5971 07e9 05       		.byte	0x5
 5972 07ea 00       		.uleb128 0
 5973 07eb 703E0000 		.4byte	.LASF337
 5974 07ef 05       		.byte	0x5
 5975 07f0 00       		.uleb128 0
 5976 07f1 8B870000 		.4byte	.LASF338
 5977 07f5 05       		.byte	0x5
 5978 07f6 00       		.uleb128 0
 5979 07f7 D2230000 		.4byte	.LASF339
 5980 07fb 05       		.byte	0x5
 5981 07fc 00       		.uleb128 0
 5982 07fd 485D0000 		.4byte	.LASF340
 5983 0801 05       		.byte	0x5
 5984 0802 00       		.uleb128 0
 5985 0803 0E880000 		.4byte	.LASF341
 5986 0807 05       		.byte	0x5
 5987 0808 00       		.uleb128 0
 5988 0809 2E6C0000 		.4byte	.LASF342
 5989 080d 05       		.byte	0x5
 5990 080e 00       		.uleb128 0
 5991 080f 9F3C0000 		.4byte	.LASF343
 5992 0813 05       		.byte	0x5
 5993 0814 00       		.uleb128 0
 5994 0815 D9100000 		.4byte	.LASF344
 5995 0819 05       		.byte	0x5
 5996 081a 00       		.uleb128 0
 5997 081b 106B0000 		.4byte	.LASF345
 5998 081f 05       		.byte	0x5
 5999 0820 00       		.uleb128 0
 6000 0821 95050000 		.4byte	.LASF346
 6001 0825 05       		.byte	0x5
 6002 0826 00       		.uleb128 0
 6003 0827 03180000 		.4byte	.LASF347
 6004 082b 05       		.byte	0x5
 6005 082c 00       		.uleb128 0
 6006 082d C8540000 		.4byte	.LASF348
 6007 0831 05       		.byte	0x5
 6008 0832 00       		.uleb128 0
 6009 0833 97310000 		.4byte	.LASF349
 6010 0837 05       		.byte	0x5
 6011 0838 00       		.uleb128 0
 6012 0839 648F0000 		.4byte	.LASF350
 6013 083d 05       		.byte	0x5
 6014 083e 00       		.uleb128 0
 6015 083f 1C7B0000 		.4byte	.LASF351
 6016 0843 05       		.byte	0x5
 6017 0844 00       		.uleb128 0
 6018 0845 197F0000 		.4byte	.LASF352
 6019 0849 05       		.byte	0x5
 6020 084a 00       		.uleb128 0
 6021 084b 056C0000 		.4byte	.LASF353
 6022 084f 05       		.byte	0x5
 6023 0850 00       		.uleb128 0
 6024 0851 575F0000 		.4byte	.LASF354
 6025 0855 00       		.byte	0
 6026              		.section	.debug_macro,"G",%progbits,wm4.newlib.h.8.f2807fe490bc07755df529420a1a6ce0,comdat
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 146


 6027              	.Ldebug_macro2:
 6028 0000 0400     		.2byte	0x4
 6029 0002 00       		.byte	0
 6030 0003 05       		.byte	0x5
 6031 0004 08       		.uleb128 0x8
 6032 0005 A2100000 		.4byte	.LASF358
 6033 0009 05       		.byte	0x5
 6034 000a 0E       		.uleb128 0xe
 6035 000b B73F0000 		.4byte	.LASF359
 6036 000f 05       		.byte	0x5
 6037 0010 15       		.uleb128 0x15
 6038 0011 3E8E0000 		.4byte	.LASF360
 6039 0015 05       		.byte	0x5
 6040 0016 18       		.uleb128 0x18
 6041 0017 387C0000 		.4byte	.LASF361
 6042 001b 05       		.byte	0x5
 6043 001c 28       		.uleb128 0x28
 6044 001d 192C0000 		.4byte	.LASF362
 6045 0021 05       		.byte	0x5
 6046 0022 32       		.uleb128 0x32
 6047 0023 C8730000 		.4byte	.LASF363
 6048 0027 05       		.byte	0x5
 6049 0028 36       		.uleb128 0x36
 6050 0029 46470000 		.4byte	.LASF364
 6051 002d 05       		.byte	0x5
 6052 002e 39       		.uleb128 0x39
 6053 002f 69230000 		.4byte	.LASF365
 6054 0033 05       		.byte	0x5
 6055 0034 3C       		.uleb128 0x3c
 6056 0035 614C0000 		.4byte	.LASF366
 6057 0039 05       		.byte	0x5
 6058 003a 3F       		.uleb128 0x3f
 6059 003b D5140000 		.4byte	.LASF367
 6060 003f 05       		.byte	0x5
 6061 0040 48       		.uleb128 0x48
 6062 0041 EF530000 		.4byte	.LASF368
 6063 0045 05       		.byte	0x5
 6064 0046 4B       		.uleb128 0x4b
 6065 0047 A45D0000 		.4byte	.LASF369
 6066 004b 05       		.byte	0x5
 6067 004c 4E       		.uleb128 0x4e
 6068 004d 8F2E0000 		.4byte	.LASF370
 6069 0051 05       		.byte	0x5
 6070 0052 51       		.uleb128 0x51
 6071 0053 F8570000 		.4byte	.LASF371
 6072 0057 00       		.byte	0
 6073              		.section	.debug_macro,"G",%progbits,wm4.features.h.22.2e382148a0560adabf236cddd4e880f4,comdat
 6074              	.Ldebug_macro3:
 6075 0000 0400     		.2byte	0x4
 6076 0002 00       		.byte	0
 6077 0003 05       		.byte	0x5
 6078 0004 16       		.uleb128 0x16
 6079 0005 48260000 		.4byte	.LASF373
 6080 0009 05       		.byte	0x5
 6081 000a 1F       		.uleb128 0x1f
 6082 000b B01B0000 		.4byte	.LASF374
 6083 000f 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 147


 6084 0010 20       		.uleb128 0x20
 6085 0011 48520000 		.4byte	.LASF375
 6086 0015 05       		.byte	0x5
 6087 0016 25       		.uleb128 0x25
 6088 0017 2A120000 		.4byte	.LASF376
 6089 001b 05       		.byte	0x5
 6090 001c 2C       		.uleb128 0x2c
 6091 001d E37D0000 		.4byte	.LASF377
 6092 0021 00       		.byte	0
 6093              		.section	.debug_macro,"G",%progbits,wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff,comdat
 6094              	.Ldebug_macro4:
 6095 0000 0400     		.2byte	0x4
 6096 0002 00       		.byte	0
 6097 0003 05       		.byte	0x5
 6098 0004 DC01     		.uleb128 0xdc
 6099 0006 C10D0000 		.4byte	.LASF378
 6100 000a 06       		.byte	0x6
 6101 000b E201     		.uleb128 0xe2
 6102 000d 5E110000 		.4byte	.LASF379
 6103 0011 05       		.byte	0x5
 6104 0012 E601     		.uleb128 0xe6
 6105 0014 DE5A0000 		.4byte	.LASF380
 6106 0018 05       		.byte	0x5
 6107 0019 F801     		.uleb128 0xf8
 6108 001b B5430000 		.4byte	.LASF381
 6109 001f 05       		.byte	0x5
 6110 0020 FC01     		.uleb128 0xfc
 6111 0022 0C580000 		.4byte	.LASF382
 6112 0026 05       		.byte	0x5
 6113 0027 8302     		.uleb128 0x103
 6114 0029 CA210000 		.4byte	.LASF383
 6115 002d 05       		.byte	0x5
 6116 002e 8902     		.uleb128 0x109
 6117 0030 911A0000 		.4byte	.LASF384
 6118 0034 00       		.byte	0
 6119              		.section	.debug_macro,"G",%progbits,wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51,comdat
 6120              	.Ldebug_macro5:
 6121 0000 0400     		.2byte	0x4
 6122 0002 00       		.byte	0
 6123 0003 05       		.byte	0x5
 6124 0004 17       		.uleb128 0x17
 6125 0005 ED730000 		.4byte	.LASF385
 6126 0009 05       		.byte	0x5
 6127 000a 2C       		.uleb128 0x2c
 6128 000b 45590000 		.4byte	.LASF386
 6129 000f 05       		.byte	0x5
 6130 0010 2D       		.uleb128 0x2d
 6131 0011 332D0000 		.4byte	.LASF387
 6132 0015 05       		.byte	0x5
 6133 0016 2E       		.uleb128 0x2e
 6134 0017 06500000 		.4byte	.LASF388
 6135 001b 05       		.byte	0x5
 6136 001c 32       		.uleb128 0x32
 6137 001d 5E870000 		.4byte	.LASF389
 6138 0021 05       		.byte	0x5
 6139 0022 33       		.uleb128 0x33
 6140 0023 258C0000 		.4byte	.LASF390
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 148


 6141 0027 05       		.byte	0x5
 6142 0028 34       		.uleb128 0x34
 6143 0029 406D0000 		.4byte	.LASF391
 6144 002d 05       		.byte	0x5
 6145 002e 35       		.uleb128 0x35
 6146 002f C6120000 		.4byte	.LASF392
 6147 0033 05       		.byte	0x5
 6148 0034 36       		.uleb128 0x36
 6149 0035 BF230000 		.4byte	.LASF393
 6150 0039 05       		.byte	0x5
 6151 003a 37       		.uleb128 0x37
 6152 003b 5D2C0000 		.4byte	.LASF394
 6153 003f 05       		.byte	0x5
 6154 0040 38       		.uleb128 0x38
 6155 0041 B1470000 		.4byte	.LASF395
 6156 0045 05       		.byte	0x5
 6157 0046 39       		.uleb128 0x39
 6158 0047 3A7F0000 		.4byte	.LASF396
 6159 004b 05       		.byte	0x5
 6160 004c 40       		.uleb128 0x40
 6161 004d 0C550000 		.4byte	.LASF397
 6162 0051 05       		.byte	0x5
 6163 0052 41       		.uleb128 0x41
 6164 0053 A9060000 		.4byte	.LASF398
 6165 0057 05       		.byte	0x5
 6166 0058 42       		.uleb128 0x42
 6167 0059 05590000 		.4byte	.LASF399
 6168 005d 05       		.byte	0x5
 6169 005e 43       		.uleb128 0x43
 6170 005f 11240000 		.4byte	.LASF400
 6171 0063 05       		.byte	0x5
 6172 0064 45       		.uleb128 0x45
 6173 0065 F31E0000 		.4byte	.LASF401
 6174 0069 05       		.byte	0x5
 6175 006a 46       		.uleb128 0x46
 6176 006b 2C6A0000 		.4byte	.LASF402
 6177 006f 05       		.byte	0x5
 6178 0070 47       		.uleb128 0x47
 6179 0071 D66B0000 		.4byte	.LASF403
 6180 0075 05       		.byte	0x5
 6181 0076 49       		.uleb128 0x49
 6182 0077 50020000 		.4byte	.LASF404
 6183 007b 05       		.byte	0x5
 6184 007c 4C       		.uleb128 0x4c
 6185 007d C0190000 		.4byte	.LASF405
 6186 0081 05       		.byte	0x5
 6187 0082 65       		.uleb128 0x65
 6188 0083 83770000 		.4byte	.LASF406
 6189 0087 05       		.byte	0x5
 6190 0088 7B       		.uleb128 0x7b
 6191 0089 4E160000 		.4byte	.LASF407
 6192 008d 05       		.byte	0x5
 6193 008e 8301     		.uleb128 0x83
 6194 0090 E4140000 		.4byte	.LASF408
 6195 0094 05       		.byte	0x5
 6196 0095 8401     		.uleb128 0x84
 6197 0097 0F700000 		.4byte	.LASF409
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 149


 6198 009b 00       		.byte	0
 6199              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2,comdat
 6200              	.Ldebug_macro6:
 6201 0000 0400     		.2byte	0x4
 6202 0002 00       		.byte	0
 6203 0003 05       		.byte	0x5
 6204 0004 0D       		.uleb128 0xd
 6205 0005 C2290000 		.4byte	.LASF410
 6206 0009 05       		.byte	0x5
 6207 000a 0E       		.uleb128 0xe
 6208 000b 9D810000 		.4byte	.LASF411
 6209 000f 05       		.byte	0x5
 6210 0010 0F       		.uleb128 0xf
 6211 0011 7E3E0000 		.4byte	.LASF412
 6212 0015 00       		.byte	0
 6213              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635,comdat
 6214              	.Ldebug_macro7:
 6215 0000 0400     		.2byte	0x4
 6216 0002 00       		.byte	0
 6217 0003 05       		.byte	0x5
 6218 0004 B801     		.uleb128 0xb8
 6219 0006 F42B0000 		.4byte	.LASF413
 6220 000a 05       		.byte	0x5
 6221 000b B901     		.uleb128 0xb9
 6222 000d 570A0000 		.4byte	.LASF414
 6223 0011 05       		.byte	0x5
 6224 0012 BA01     		.uleb128 0xba
 6225 0014 DA5C0000 		.4byte	.LASF415
 6226 0018 05       		.byte	0x5
 6227 0019 BB01     		.uleb128 0xbb
 6228 001b 2F130000 		.4byte	.LASF416
 6229 001f 05       		.byte	0x5
 6230 0020 BC01     		.uleb128 0xbc
 6231 0022 C68A0000 		.4byte	.LASF417
 6232 0026 05       		.byte	0x5
 6233 0027 BD01     		.uleb128 0xbd
 6234 0029 050E0000 		.4byte	.LASF418
 6235 002d 05       		.byte	0x5
 6236 002e BE01     		.uleb128 0xbe
 6237 0030 A55E0000 		.4byte	.LASF419
 6238 0034 05       		.byte	0x5
 6239 0035 BF01     		.uleb128 0xbf
 6240 0037 A7470000 		.4byte	.LASF420
 6241 003b 05       		.byte	0x5
 6242 003c C001     		.uleb128 0xc0
 6243 003e 656A0000 		.4byte	.LASF421
 6244 0042 05       		.byte	0x5
 6245 0043 C101     		.uleb128 0xc1
 6246 0045 1F520000 		.4byte	.LASF422
 6247 0049 05       		.byte	0x5
 6248 004a C201     		.uleb128 0xc2
 6249 004c 1B640000 		.4byte	.LASF423
 6250 0050 05       		.byte	0x5
 6251 0051 C301     		.uleb128 0xc3
 6252 0053 27200000 		.4byte	.LASF424
 6253 0057 05       		.byte	0x5
 6254 0058 C401     		.uleb128 0xc4
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 150


 6255 005a A2180000 		.4byte	.LASF425
 6256 005e 05       		.byte	0x5
 6257 005f C501     		.uleb128 0xc5
 6258 0061 74200000 		.4byte	.LASF426
 6259 0065 05       		.byte	0x5
 6260 0066 C601     		.uleb128 0xc6
 6261 0068 3B820000 		.4byte	.LASF427
 6262 006c 05       		.byte	0x5
 6263 006d C701     		.uleb128 0xc7
 6264 006f 8E6F0000 		.4byte	.LASF428
 6265 0073 05       		.byte	0x5
 6266 0074 CE01     		.uleb128 0xce
 6267 0076 410D0000 		.4byte	.LASF429
 6268 007a 06       		.byte	0x6
 6269 007b EA01     		.uleb128 0xea
 6270 007d 49300000 		.4byte	.LASF430
 6271 0081 05       		.byte	0x5
 6272 0082 8702     		.uleb128 0x107
 6273 0084 7E870000 		.4byte	.LASF431
 6274 0088 05       		.byte	0x5
 6275 0089 8802     		.uleb128 0x108
 6276 008b 6D0F0000 		.4byte	.LASF432
 6277 008f 05       		.byte	0x5
 6278 0090 8902     		.uleb128 0x109
 6279 0092 125B0000 		.4byte	.LASF433
 6280 0096 05       		.byte	0x5
 6281 0097 8A02     		.uleb128 0x10a
 6282 0099 AC820000 		.4byte	.LASF434
 6283 009d 05       		.byte	0x5
 6284 009e 8B02     		.uleb128 0x10b
 6285 00a0 CE6A0000 		.4byte	.LASF435
 6286 00a4 05       		.byte	0x5
 6287 00a5 8C02     		.uleb128 0x10c
 6288 00a7 154C0000 		.4byte	.LASF436
 6289 00ab 05       		.byte	0x5
 6290 00ac 8D02     		.uleb128 0x10d
 6291 00ae 736A0000 		.4byte	.LASF437
 6292 00b2 05       		.byte	0x5
 6293 00b3 8E02     		.uleb128 0x10e
 6294 00b5 95320000 		.4byte	.LASF438
 6295 00b9 05       		.byte	0x5
 6296 00ba 8F02     		.uleb128 0x10f
 6297 00bc 0A3D0000 		.4byte	.LASF439
 6298 00c0 05       		.byte	0x5
 6299 00c1 9002     		.uleb128 0x110
 6300 00c3 99680000 		.4byte	.LASF440
 6301 00c7 05       		.byte	0x5
 6302 00c8 9102     		.uleb128 0x111
 6303 00ca E35C0000 		.4byte	.LASF441
 6304 00ce 05       		.byte	0x5
 6305 00cf 9202     		.uleb128 0x112
 6306 00d1 6F0D0000 		.4byte	.LASF442
 6307 00d5 05       		.byte	0x5
 6308 00d6 9302     		.uleb128 0x113
 6309 00d8 C56B0000 		.4byte	.LASF443
 6310 00dc 05       		.byte	0x5
 6311 00dd 9402     		.uleb128 0x114
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 151


 6312 00df 3C6C0000 		.4byte	.LASF444
 6313 00e3 05       		.byte	0x5
 6314 00e4 9502     		.uleb128 0x115
 6315 00e6 06540000 		.4byte	.LASF445
 6316 00ea 06       		.byte	0x6
 6317 00eb A202     		.uleb128 0x122
 6318 00ed 58830000 		.4byte	.LASF446
 6319 00f1 06       		.byte	0x6
 6320 00f2 D702     		.uleb128 0x157
 6321 00f4 FF0B0000 		.4byte	.LASF447
 6322 00f8 06       		.byte	0x6
 6323 00f9 8D03     		.uleb128 0x18d
 6324 00fb 43100000 		.4byte	.LASF448
 6325 00ff 05       		.byte	0x5
 6326 0100 9203     		.uleb128 0x192
 6327 0102 F5340000 		.4byte	.LASF449
 6328 0106 06       		.byte	0x6
 6329 0107 9803     		.uleb128 0x198
 6330 0109 DE350000 		.4byte	.LASF450
 6331 010d 00       		.byte	0
 6332              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734,comdat
 6333              	.Ldebug_macro8:
 6334 0000 0400     		.2byte	0x4
 6335 0002 00       		.byte	0
 6336 0003 05       		.byte	0x5
 6337 0004 27       		.uleb128 0x27
 6338 0005 29440000 		.4byte	.LASF452
 6339 0009 05       		.byte	0x5
 6340 000a 28       		.uleb128 0x28
 6341 000b 795E0000 		.4byte	.LASF453
 6342 000f 05       		.byte	0x5
 6343 0010 2A       		.uleb128 0x2a
 6344 0011 FB430000 		.4byte	.LASF454
 6345 0015 05       		.byte	0x5
 6346 0016 8801     		.uleb128 0x88
 6347 0018 FF480000 		.4byte	.LASF455
 6348 001c 05       		.byte	0x5
 6349 001d 8901     		.uleb128 0x89
 6350 001f F5420000 		.4byte	.LASF456
 6351 0023 05       		.byte	0x5
 6352 0024 8A01     		.uleb128 0x8a
 6353 0026 3B550000 		.4byte	.LASF457
 6354 002a 05       		.byte	0x5
 6355 002b 8B01     		.uleb128 0x8b
 6356 002d 3B640000 		.4byte	.LASF458
 6357 0031 05       		.byte	0x5
 6358 0032 8C01     		.uleb128 0x8c
 6359 0034 877B0000 		.4byte	.LASF459
 6360 0038 05       		.byte	0x5
 6361 0039 8D01     		.uleb128 0x8d
 6362 003b EF0C0000 		.4byte	.LASF460
 6363 003f 05       		.byte	0x5
 6364 0040 8E01     		.uleb128 0x8e
 6365 0042 FC6A0000 		.4byte	.LASF461
 6366 0046 05       		.byte	0x5
 6367 0047 8F01     		.uleb128 0x8f
 6368 0049 055C0000 		.4byte	.LASF462
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 152


 6369 004d 06       		.byte	0x6
 6370 004e 9E01     		.uleb128 0x9e
 6371 0050 5F7B0000 		.4byte	.LASF463
 6372 0054 06       		.byte	0x6
 6373 0055 EA01     		.uleb128 0xea
 6374 0057 49300000 		.4byte	.LASF430
 6375 005b 06       		.byte	0x6
 6376 005c D702     		.uleb128 0x157
 6377 005e FF0B0000 		.4byte	.LASF447
 6378 0062 06       		.byte	0x6
 6379 0063 8D03     		.uleb128 0x18d
 6380 0065 43100000 		.4byte	.LASF448
 6381 0069 05       		.byte	0x5
 6382 006a 9203     		.uleb128 0x192
 6383 006c F5340000 		.4byte	.LASF449
 6384 0070 06       		.byte	0x6
 6385 0071 9803     		.uleb128 0x198
 6386 0073 DE350000 		.4byte	.LASF450
 6387 0077 05       		.byte	0x5
 6388 0078 9D03     		.uleb128 0x19d
 6389 007a 3B3F0000 		.4byte	.LASF464
 6390 007e 00       		.byte	0
 6391              		.section	.debug_macro,"G",%progbits,wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382,comdat
 6392              	.Ldebug_macro9:
 6393 0000 0400     		.2byte	0x4
 6394 0002 00       		.byte	0
 6395 0003 05       		.byte	0x5
 6396 0004 06       		.uleb128 0x6
 6397 0005 BB5B0000 		.4byte	.LASF467
 6398 0009 05       		.byte	0x5
 6399 000a 0F       		.uleb128 0xf
 6400 000b 754F0000 		.4byte	.LASF468
 6401 000f 05       		.byte	0x5
 6402 0010 21       		.uleb128 0x21
 6403 0011 AB3B0000 		.4byte	.LASF469
 6404 0015 05       		.byte	0x5
 6405 0016 2F       		.uleb128 0x2f
 6406 0017 392B0000 		.4byte	.LASF470
 6407 001b 05       		.byte	0x5
 6408 001c 45       		.uleb128 0x45
 6409 001d 3D200000 		.4byte	.LASF471
 6410 0021 05       		.byte	0x5
 6411 0022 5F       		.uleb128 0x5f
 6412 0023 7D600000 		.4byte	.LASF472
 6413 0027 05       		.byte	0x5
 6414 0028 7E       		.uleb128 0x7e
 6415 0029 B2560000 		.4byte	.LASF473
 6416 002d 05       		.byte	0x5
 6417 002e 9801     		.uleb128 0x98
 6418 0030 90140000 		.4byte	.LASF474
 6419 0034 05       		.byte	0x5
 6420 0035 AE01     		.uleb128 0xae
 6421 0037 99350000 		.4byte	.LASF475
 6422 003b 05       		.byte	0x5
 6423 003c C001     		.uleb128 0xc0
 6424 003e 184E0000 		.4byte	.LASF476
 6425 0042 06       		.byte	0x6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 153


 6426 0043 D601     		.uleb128 0xd6
 6427 0045 77600000 		.4byte	.LASF477
 6428 0049 00       		.byte	0
 6429              		.section	.debug_macro,"G",%progbits,wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea,comdat
 6430              	.Ldebug_macro10:
 6431 0000 0400     		.2byte	0x4
 6432 0002 00       		.byte	0
 6433 0003 05       		.byte	0x5
 6434 0004 02       		.uleb128 0x2
 6435 0005 698E0000 		.4byte	.LASF478
 6436 0009 05       		.byte	0x5
 6437 000a 0B       		.uleb128 0xb
 6438 000b EA640000 		.4byte	.LASF479
 6439 000f 05       		.byte	0x5
 6440 0010 0C       		.uleb128 0xc
 6441 0011 73410000 		.4byte	.LASF480
 6442 0015 05       		.byte	0x5
 6443 0016 0D       		.uleb128 0xd
 6444 0017 5D580000 		.4byte	.LASF481
 6445 001b 05       		.byte	0x5
 6446 001c 0E       		.uleb128 0xe
 6447 001d 1A880000 		.4byte	.LASF482
 6448 0021 05       		.byte	0x5
 6449 0022 0F       		.uleb128 0xf
 6450 0023 C12E0000 		.4byte	.LASF483
 6451 0027 05       		.byte	0x5
 6452 0028 10       		.uleb128 0x10
 6453 0029 830C0000 		.4byte	.LASF484
 6454 002d 05       		.byte	0x5
 6455 002e 11       		.uleb128 0x11
 6456 002f F8440000 		.4byte	.LASF485
 6457 0033 05       		.byte	0x5
 6458 0034 12       		.uleb128 0x12
 6459 0035 27330000 		.4byte	.LASF486
 6460 0039 05       		.byte	0x5
 6461 003a 13       		.uleb128 0x13
 6462 003b 3D2A0000 		.4byte	.LASF487
 6463 003f 05       		.byte	0x5
 6464 0040 14       		.uleb128 0x14
 6465 0041 6B5F0000 		.4byte	.LASF488
 6466 0045 05       		.byte	0x5
 6467 0046 15       		.uleb128 0x15
 6468 0047 98490000 		.4byte	.LASF489
 6469 004b 05       		.byte	0x5
 6470 004c 16       		.uleb128 0x16
 6471 004d F67B0000 		.4byte	.LASF490
 6472 0051 00       		.byte	0
 6473              		.section	.debug_macro,"G",%progbits,wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08,comdat
 6474              	.Ldebug_macro11:
 6475 0000 0400     		.2byte	0x4
 6476 0002 00       		.byte	0
 6477 0003 05       		.byte	0x5
 6478 0004 36       		.uleb128 0x36
 6479 0005 A6380000 		.4byte	.LASF491
 6480 0009 06       		.byte	0x6
 6481 000a 38       		.uleb128 0x38
 6482 000b 41750000 		.4byte	.LASF492
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 154


 6483 000f 05       		.byte	0x5
 6484 0010 42       		.uleb128 0x42
 6485 0011 F5840000 		.4byte	.LASF493
 6486 0015 00       		.byte	0
 6487              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6,comdat
 6488              	.Ldebug_macro12:
 6489 0000 0400     		.2byte	0x4
 6490 0002 00       		.byte	0
 6491 0003 06       		.byte	0x6
 6492 0004 9E01     		.uleb128 0x9e
 6493 0006 5F7B0000 		.4byte	.LASF463
 6494 000a 06       		.byte	0x6
 6495 000b EA01     		.uleb128 0xea
 6496 000d 49300000 		.4byte	.LASF430
 6497 0011 06       		.byte	0x6
 6498 0012 D702     		.uleb128 0x157
 6499 0014 FF0B0000 		.4byte	.LASF447
 6500 0018 05       		.byte	0x5
 6501 0019 DC02     		.uleb128 0x15c
 6502 001b 7A290000 		.4byte	.LASF494
 6503 001f 06       		.byte	0x6
 6504 0020 E302     		.uleb128 0x163
 6505 0022 21220000 		.4byte	.LASF495
 6506 0026 06       		.byte	0x6
 6507 0027 8D03     		.uleb128 0x18d
 6508 0029 43100000 		.4byte	.LASF448
 6509 002d 05       		.byte	0x5
 6510 002e 9203     		.uleb128 0x192
 6511 0030 F5340000 		.4byte	.LASF449
 6512 0034 06       		.byte	0x6
 6513 0035 9803     		.uleb128 0x198
 6514 0037 DE350000 		.4byte	.LASF450
 6515 003b 05       		.byte	0x5
 6516 003c 9D03     		.uleb128 0x19d
 6517 003e 3B3F0000 		.4byte	.LASF464
 6518 0042 00       		.byte	0
 6519              		.section	.debug_macro,"G",%progbits,wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43,comdat
 6520              	.Ldebug_macro13:
 6521 0000 0400     		.2byte	0x4
 6522 0002 00       		.byte	0
 6523 0003 05       		.byte	0x5
 6524 0004 11       		.uleb128 0x11
 6525 0005 BD7B0000 		.4byte	.LASF496
 6526 0009 05       		.byte	0x5
 6527 000a 15       		.uleb128 0x15
 6528 000b 826F0000 		.4byte	.LASF497
 6529 000f 05       		.byte	0x5
 6530 0010 46       		.uleb128 0x46
 6531 0011 16580000 		.4byte	.LASF498
 6532 0015 05       		.byte	0x5
 6533 0016 62       		.uleb128 0x62
 6534 0017 DB8C0000 		.4byte	.LASF499
 6535 001b 05       		.byte	0x5
 6536 001c 68       		.uleb128 0x68
 6537 001d 72760000 		.4byte	.LASF500
 6538 0021 05       		.byte	0x5
 6539 0022 B001     		.uleb128 0xb0
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 155


 6540 0024 C6440000 		.4byte	.LASF501
 6541 0028 05       		.byte	0x5
 6542 0029 B602     		.uleb128 0x136
 6543 002b D46E0000 		.4byte	.LASF502
 6544 002f 05       		.byte	0x5
 6545 0030 B702     		.uleb128 0x137
 6546 0032 48410000 		.4byte	.LASF503
 6547 0036 05       		.byte	0x5
 6548 0037 B802     		.uleb128 0x138
 6549 0039 311E0000 		.4byte	.LASF504
 6550 003d 05       		.byte	0x5
 6551 003e B902     		.uleb128 0x139
 6552 0040 A3790000 		.4byte	.LASF505
 6553 0044 05       		.byte	0x5
 6554 0045 BA02     		.uleb128 0x13a
 6555 0047 D9510000 		.4byte	.LASF506
 6556 004b 05       		.byte	0x5
 6557 004c BB02     		.uleb128 0x13b
 6558 004e F4540000 		.4byte	.LASF507
 6559 0052 05       		.byte	0x5
 6560 0053 BC02     		.uleb128 0x13c
 6561 0055 818A0000 		.4byte	.LASF508
 6562 0059 05       		.byte	0x5
 6563 005a C802     		.uleb128 0x148
 6564 005c 7A0F0000 		.4byte	.LASF509
 6565 0060 05       		.byte	0x5
 6566 0061 C902     		.uleb128 0x149
 6567 0063 A38E0000 		.4byte	.LASF510
 6568 0067 05       		.byte	0x5
 6569 0068 CA02     		.uleb128 0x14a
 6570 006a 5E030000 		.4byte	.LASF511
 6571 006e 05       		.byte	0x5
 6572 006f F304     		.uleb128 0x273
 6573 0071 1D150000 		.4byte	.LASF512
 6574 0075 05       		.byte	0x5
 6575 0076 8905     		.uleb128 0x289
 6576 0078 53240000 		.4byte	.LASF513
 6577 007c 05       		.byte	0x5
 6578 007d B905     		.uleb128 0x2b9
 6579 007f D6490000 		.4byte	.LASF514
 6580 0083 05       		.byte	0x5
 6581 0084 C905     		.uleb128 0x2c9
 6582 0086 1E830000 		.4byte	.LASF515
 6583 008a 05       		.byte	0x5
 6584 008b CA05     		.uleb128 0x2ca
 6585 008d 48100000 		.4byte	.LASF516
 6586 0091 05       		.byte	0x5
 6587 0092 CB05     		.uleb128 0x2cb
 6588 0094 6B6B0000 		.4byte	.LASF517
 6589 0098 05       		.byte	0x5
 6590 0099 CC05     		.uleb128 0x2cc
 6591 009b 35490000 		.4byte	.LASF518
 6592 009f 05       		.byte	0x5
 6593 00a0 CD05     		.uleb128 0x2cd
 6594 00a2 99330000 		.4byte	.LASF519
 6595 00a6 05       		.byte	0x5
 6596 00a7 CE05     		.uleb128 0x2ce
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 156


 6597 00a9 8F610000 		.4byte	.LASF520
 6598 00ad 05       		.byte	0x5
 6599 00ae CF05     		.uleb128 0x2cf
 6600 00b0 0B440000 		.4byte	.LASF521
 6601 00b4 05       		.byte	0x5
 6602 00b5 D105     		.uleb128 0x2d1
 6603 00b7 A02F0000 		.4byte	.LASF522
 6604 00bb 05       		.byte	0x5
 6605 00bc D205     		.uleb128 0x2d2
 6606 00be 863A0000 		.4byte	.LASF523
 6607 00c2 05       		.byte	0x5
 6608 00c3 D305     		.uleb128 0x2d3
 6609 00c5 3E130000 		.4byte	.LASF524
 6610 00c9 05       		.byte	0x5
 6611 00ca D405     		.uleb128 0x2d4
 6612 00cc DB470000 		.4byte	.LASF525
 6613 00d0 05       		.byte	0x5
 6614 00d1 D505     		.uleb128 0x2d5
 6615 00d3 481D0000 		.4byte	.LASF526
 6616 00d7 05       		.byte	0x5
 6617 00d8 D605     		.uleb128 0x2d6
 6618 00da 13090000 		.4byte	.LASF527
 6619 00de 05       		.byte	0x5
 6620 00df D705     		.uleb128 0x2d7
 6621 00e1 A61E0000 		.4byte	.LASF528
 6622 00e5 05       		.byte	0x5
 6623 00e6 D805     		.uleb128 0x2d8
 6624 00e8 53680000 		.4byte	.LASF529
 6625 00ec 05       		.byte	0x5
 6626 00ed D905     		.uleb128 0x2d9
 6627 00ef 1A060000 		.4byte	.LASF530
 6628 00f3 05       		.byte	0x5
 6629 00f4 DA05     		.uleb128 0x2da
 6630 00f6 F1660000 		.4byte	.LASF531
 6631 00fa 05       		.byte	0x5
 6632 00fb DB05     		.uleb128 0x2db
 6633 00fd C7750000 		.4byte	.LASF532
 6634 0101 05       		.byte	0x5
 6635 0102 DC05     		.uleb128 0x2dc
 6636 0104 EC2A0000 		.4byte	.LASF533
 6637 0108 05       		.byte	0x5
 6638 0109 DD05     		.uleb128 0x2dd
 6639 010b 77090000 		.4byte	.LASF534
 6640 010f 05       		.byte	0x5
 6641 0110 DE05     		.uleb128 0x2de
 6642 0112 81370000 		.4byte	.LASF535
 6643 0116 05       		.byte	0x5
 6644 0117 DF05     		.uleb128 0x2df
 6645 0119 FB360000 		.4byte	.LASF536
 6646 011d 05       		.byte	0x5
 6647 011e E005     		.uleb128 0x2e0
 6648 0120 57640000 		.4byte	.LASF537
 6649 0124 05       		.byte	0x5
 6650 0125 E105     		.uleb128 0x2e1
 6651 0127 60660000 		.4byte	.LASF538
 6652 012b 05       		.byte	0x5
 6653 012c E205     		.uleb128 0x2e2
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 157


 6654 012e 3C290000 		.4byte	.LASF539
 6655 0132 05       		.byte	0x5
 6656 0133 E305     		.uleb128 0x2e3
 6657 0135 AE4D0000 		.4byte	.LASF540
 6658 0139 05       		.byte	0x5
 6659 013a E405     		.uleb128 0x2e4
 6660 013c 59690000 		.4byte	.LASF541
 6661 0140 05       		.byte	0x5
 6662 0141 E505     		.uleb128 0x2e5
 6663 0143 661F0000 		.4byte	.LASF542
 6664 0147 05       		.byte	0x5
 6665 0148 E605     		.uleb128 0x2e6
 6666 014a 254F0000 		.4byte	.LASF543
 6667 014e 05       		.byte	0x5
 6668 014f E705     		.uleb128 0x2e7
 6669 0151 A4890000 		.4byte	.LASF544
 6670 0155 05       		.byte	0x5
 6671 0156 E805     		.uleb128 0x2e8
 6672 0158 AF000000 		.4byte	.LASF545
 6673 015c 05       		.byte	0x5
 6674 015d EF05     		.uleb128 0x2ef
 6675 015f 90030000 		.4byte	.LASF546
 6676 0163 05       		.byte	0x5
 6677 0164 F705     		.uleb128 0x2f7
 6678 0166 06790000 		.4byte	.LASF547
 6679 016a 05       		.byte	0x5
 6680 016b 8706     		.uleb128 0x307
 6681 016d 4E2B0000 		.4byte	.LASF548
 6682 0171 05       		.byte	0x5
 6683 0172 8A06     		.uleb128 0x30a
 6684 0174 54720000 		.4byte	.LASF549
 6685 0178 05       		.byte	0x5
 6686 0179 9006     		.uleb128 0x310
 6687 017b 09010000 		.4byte	.LASF550
 6688 017f 00       		.byte	0
 6689              		.section	.debug_macro,"G",%progbits,wm4.cdefs.h.47.fbe724f4232069283dea9c3aea4135c7,comdat
 6690              	.Ldebug_macro14:
 6691 0000 0400     		.2byte	0x4
 6692 0002 00       		.byte	0
 6693 0003 05       		.byte	0x5
 6694 0004 2F       		.uleb128 0x2f
 6695 0005 E0200000 		.4byte	.LASF552
 6696 0009 05       		.byte	0x5
 6697 000a 30       		.uleb128 0x30
 6698 000b 41630000 		.4byte	.LASF553
 6699 000f 05       		.byte	0x5
 6700 0010 31       		.uleb128 0x31
 6701 0011 0A4F0000 		.4byte	.LASF554
 6702 0015 05       		.byte	0x5
 6703 0016 34       		.uleb128 0x34
 6704 0017 C60B0000 		.4byte	.LASF555
 6705 001b 05       		.byte	0x5
 6706 001c 37       		.uleb128 0x37
 6707 001d 061D0000 		.4byte	.LASF556
 6708 0021 05       		.byte	0x5
 6709 0022 38       		.uleb128 0x38
 6710 0023 A3860000 		.4byte	.LASF557
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 158


 6711 0027 05       		.byte	0x5
 6712 0028 3A       		.uleb128 0x3a
 6713 0029 303D0000 		.4byte	.LASF558
 6714 002d 05       		.byte	0x5
 6715 002e 3B       		.uleb128 0x3b
 6716 002f 7B2E0000 		.4byte	.LASF559
 6717 0033 05       		.byte	0x5
 6718 0034 3C       		.uleb128 0x3c
 6719 0035 04200000 		.4byte	.LASF560
 6720 0039 05       		.byte	0x5
 6721 003a 3D       		.uleb128 0x3d
 6722 003b C57B0000 		.4byte	.LASF561
 6723 003f 05       		.byte	0x5
 6724 0040 40       		.uleb128 0x40
 6725 0041 4B0D0000 		.4byte	.LASF562
 6726 0045 05       		.byte	0x5
 6727 0046 41       		.uleb128 0x41
 6728 0047 05080000 		.4byte	.LASF563
 6729 004b 05       		.byte	0x5
 6730 004c 42       		.uleb128 0x42
 6731 004d 03700000 		.4byte	.LASF564
 6732 0051 05       		.byte	0x5
 6733 0052 4A       		.uleb128 0x4a
 6734 0053 25100000 		.4byte	.LASF565
 6735 0057 05       		.byte	0x5
 6736 0058 4D       		.uleb128 0x4d
 6737 0059 612B0000 		.4byte	.LASF566
 6738 005d 05       		.byte	0x5
 6739 005e 53       		.uleb128 0x53
 6740 005f B26B0000 		.4byte	.LASF567
 6741 0063 05       		.byte	0x5
 6742 0064 5A       		.uleb128 0x5a
 6743 0065 5F610000 		.4byte	.LASF568
 6744 0069 05       		.byte	0x5
 6745 006a 5B       		.uleb128 0x5b
 6746 006b 5E470000 		.4byte	.LASF569
 6747 006f 05       		.byte	0x5
 6748 0070 67       		.uleb128 0x67
 6749 0071 0E320000 		.4byte	.LASF570
 6750 0075 05       		.byte	0x5
 6751 0076 68       		.uleb128 0x68
 6752 0077 C8420000 		.4byte	.LASF571
 6753 007b 05       		.byte	0x5
 6754 007c 6C       		.uleb128 0x6c
 6755 007d 1F040000 		.4byte	.LASF572
 6756 0081 05       		.byte	0x5
 6757 0082 6D       		.uleb128 0x6d
 6758 0083 68730000 		.4byte	.LASF573
 6759 0087 05       		.byte	0x5
 6760 0088 6E       		.uleb128 0x6e
 6761 0089 00000000 		.4byte	.LASF574
 6762 008d 05       		.byte	0x5
 6763 008e 71       		.uleb128 0x71
 6764 008f 162B0000 		.4byte	.LASF575
 6765 0093 05       		.byte	0x5
 6766 0094 74       		.uleb128 0x74
 6767 0095 F2110000 		.4byte	.LASF576
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 159


 6768 0099 05       		.byte	0x5
 6769 009a 7B       		.uleb128 0x7b
 6770 009b 832F0000 		.4byte	.LASF577
 6771 009f 05       		.byte	0x5
 6772 00a0 7C       		.uleb128 0x7c
 6773 00a1 A15A0000 		.4byte	.LASF578
 6774 00a5 05       		.byte	0x5
 6775 00a6 7D       		.uleb128 0x7d
 6776 00a7 8B800000 		.4byte	.LASF579
 6777 00ab 05       		.byte	0x5
 6778 00ac 8101     		.uleb128 0x81
 6779 00ae A7610000 		.4byte	.LASF580
 6780 00b2 05       		.byte	0x5
 6781 00b3 8801     		.uleb128 0x88
 6782 00b5 FD6C0000 		.4byte	.LASF581
 6783 00b9 05       		.byte	0x5
 6784 00ba 8C01     		.uleb128 0x8c
 6785 00bc 155C0000 		.4byte	.LASF582
 6786 00c0 05       		.byte	0x5
 6787 00c1 8D01     		.uleb128 0x8d
 6788 00c3 AA200000 		.4byte	.LASF583
 6789 00c7 05       		.byte	0x5
 6790 00c8 9001     		.uleb128 0x90
 6791 00ca 3E5A0000 		.4byte	.LASF584
 6792 00ce 05       		.byte	0x5
 6793 00cf 9301     		.uleb128 0x93
 6794 00d1 6E310000 		.4byte	.LASF585
 6795 00d5 05       		.byte	0x5
 6796 00d6 9401     		.uleb128 0x94
 6797 00d8 002C0000 		.4byte	.LASF586
 6798 00dc 05       		.byte	0x5
 6799 00dd 9501     		.uleb128 0x95
 6800 00df 9A760000 		.4byte	.LASF587
 6801 00e3 05       		.byte	0x5
 6802 00e4 9701     		.uleb128 0x97
 6803 00e6 FC410000 		.4byte	.LASF588
 6804 00ea 05       		.byte	0x5
 6805 00eb 9801     		.uleb128 0x98
 6806 00ed 53820000 		.4byte	.LASF589
 6807 00f1 05       		.byte	0x5
 6808 00f2 9A01     		.uleb128 0x9a
 6809 00f4 79830000 		.4byte	.LASF590
 6810 00f8 05       		.byte	0x5
 6811 00f9 9C01     		.uleb128 0x9c
 6812 00fb EE180000 		.4byte	.LASF591
 6813 00ff 05       		.byte	0x5
 6814 0100 AD01     		.uleb128 0xad
 6815 0102 58190000 		.4byte	.LASF592
 6816 0106 05       		.byte	0x5
 6817 0107 AE01     		.uleb128 0xae
 6818 0109 EF0D0000 		.4byte	.LASF593
 6819 010d 05       		.byte	0x5
 6820 010e AF01     		.uleb128 0xaf
 6821 0110 DE030000 		.4byte	.LASF594
 6822 0114 05       		.byte	0x5
 6823 0115 B001     		.uleb128 0xb0
 6824 0117 035B0000 		.4byte	.LASF595
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 160


 6825 011b 05       		.byte	0x5
 6826 011c B101     		.uleb128 0xb1
 6827 011e 622E0000 		.4byte	.LASF596
 6828 0122 05       		.byte	0x5
 6829 0123 B301     		.uleb128 0xb3
 6830 0125 94180000 		.4byte	.LASF597
 6831 0129 05       		.byte	0x5
 6832 012a B401     		.uleb128 0xb4
 6833 012c 9C660000 		.4byte	.LASF598
 6834 0130 05       		.byte	0x5
 6835 0131 B501     		.uleb128 0xb5
 6836 0133 36580000 		.4byte	.LASF599
 6837 0137 05       		.byte	0x5
 6838 0138 F601     		.uleb128 0xf6
 6839 013a 17600000 		.4byte	.LASF600
 6840 013e 05       		.byte	0x5
 6841 013f F701     		.uleb128 0xf7
 6842 0141 AB400000 		.4byte	.LASF601
 6843 0145 05       		.byte	0x5
 6844 0146 F801     		.uleb128 0xf8
 6845 0148 457F0000 		.4byte	.LASF602
 6846 014c 05       		.byte	0x5
 6847 014d F901     		.uleb128 0xf9
 6848 014f 20630000 		.4byte	.LASF603
 6849 0153 05       		.byte	0x5
 6850 0154 FA01     		.uleb128 0xfa
 6851 0156 FF8D0000 		.4byte	.LASF604
 6852 015a 05       		.byte	0x5
 6853 015b FB01     		.uleb128 0xfb
 6854 015d A9070000 		.4byte	.LASF605
 6855 0161 05       		.byte	0x5
 6856 0162 FC01     		.uleb128 0xfc
 6857 0164 253A0000 		.4byte	.LASF606
 6858 0168 05       		.byte	0x5
 6859 0169 9902     		.uleb128 0x119
 6860 016b 96230000 		.4byte	.LASF607
 6861 016f 05       		.byte	0x5
 6862 0170 A002     		.uleb128 0x120
 6863 0172 83880000 		.4byte	.LASF608
 6864 0176 05       		.byte	0x5
 6865 0177 A802     		.uleb128 0x128
 6866 0179 F3850000 		.4byte	.LASF609
 6867 017d 05       		.byte	0x5
 6868 017e AE02     		.uleb128 0x12e
 6869 0180 7A570000 		.4byte	.LASF610
 6870 0184 05       		.byte	0x5
 6871 0185 C602     		.uleb128 0x146
 6872 0187 4A350000 		.4byte	.LASF611
 6873 018b 05       		.byte	0x5
 6874 018c D902     		.uleb128 0x159
 6875 018e 61740000 		.4byte	.LASF612
 6876 0192 05       		.byte	0x5
 6877 0193 DF02     		.uleb128 0x15f
 6878 0195 6F590000 		.4byte	.LASF613
 6879 0199 05       		.byte	0x5
 6880 019a E002     		.uleb128 0x160
 6881 019c 07820000 		.4byte	.LASF614
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 161


 6882 01a0 05       		.byte	0x5
 6883 01a1 E702     		.uleb128 0x167
 6884 01a3 7E1D0000 		.4byte	.LASF615
 6885 01a7 05       		.byte	0x5
 6886 01a8 ED02     		.uleb128 0x16d
 6887 01aa 61260000 		.4byte	.LASF616
 6888 01ae 05       		.byte	0x5
 6889 01af F302     		.uleb128 0x173
 6890 01b1 CF410000 		.4byte	.LASF617
 6891 01b5 05       		.byte	0x5
 6892 01b6 F902     		.uleb128 0x179
 6893 01b8 FB3E0000 		.4byte	.LASF618
 6894 01bc 05       		.byte	0x5
 6895 01bd FF02     		.uleb128 0x17f
 6896 01bf 151D0000 		.4byte	.LASF619
 6897 01c3 05       		.byte	0x5
 6898 01c4 9103     		.uleb128 0x191
 6899 01c6 9C530000 		.4byte	.LASF620
 6900 01ca 05       		.byte	0x5
 6901 01cb B403     		.uleb128 0x1b4
 6902 01cd 181F0000 		.4byte	.LASF621
 6903 01d1 05       		.byte	0x5
 6904 01d2 B503     		.uleb128 0x1b5
 6905 01d4 264D0000 		.4byte	.LASF622
 6906 01d8 05       		.byte	0x5
 6907 01d9 BC03     		.uleb128 0x1bc
 6908 01db 74280000 		.4byte	.LASF623
 6909 01df 05       		.byte	0x5
 6910 01e0 BD03     		.uleb128 0x1bd
 6911 01e2 9B2B0000 		.4byte	.LASF624
 6912 01e6 05       		.byte	0x5
 6913 01e7 C303     		.uleb128 0x1c3
 6914 01e9 BF2A0000 		.4byte	.LASF625
 6915 01ed 05       		.byte	0x5
 6916 01ee C403     		.uleb128 0x1c4
 6917 01f0 F8790000 		.4byte	.LASF626
 6918 01f4 05       		.byte	0x5
 6919 01f5 CE03     		.uleb128 0x1ce
 6920 01f7 E8800000 		.4byte	.LASF627
 6921 01fb 05       		.byte	0x5
 6922 01fc E403     		.uleb128 0x1e4
 6923 01fe C5760000 		.4byte	.LASF628
 6924 0202 05       		.byte	0x5
 6925 0203 E603     		.uleb128 0x1e6
 6926 0205 AF7F0000 		.4byte	.LASF629
 6927 0209 05       		.byte	0x5
 6928 020a E803     		.uleb128 0x1e8
 6929 020c 45880000 		.4byte	.LASF630
 6930 0210 05       		.byte	0x5
 6931 0211 E903     		.uleb128 0x1e9
 6932 0213 497D0000 		.4byte	.LASF631
 6933 0217 05       		.byte	0x5
 6934 0218 EB03     		.uleb128 0x1eb
 6935 021a 788C0000 		.4byte	.LASF632
 6936 021e 05       		.byte	0x5
 6937 021f F503     		.uleb128 0x1f5
 6938 0221 F05E0000 		.4byte	.LASF633
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 162


 6939 0225 05       		.byte	0x5
 6940 0226 FA03     		.uleb128 0x1fa
 6941 0228 677E0000 		.4byte	.LASF634
 6942 022c 05       		.byte	0x5
 6943 022d FF03     		.uleb128 0x1ff
 6944 022f A60F0000 		.4byte	.LASF635
 6945 0233 05       		.byte	0x5
 6946 0234 8204     		.uleb128 0x202
 6947 0236 F8450000 		.4byte	.LASF636
 6948 023a 05       		.byte	0x5
 6949 023b 8604     		.uleb128 0x206
 6950 023d 917C0000 		.4byte	.LASF637
 6951 0241 05       		.byte	0x5
 6952 0242 8804     		.uleb128 0x208
 6953 0244 2F220000 		.4byte	.LASF638
 6954 0248 05       		.byte	0x5
 6955 0249 AB04     		.uleb128 0x22b
 6956 024b 3B5B0000 		.4byte	.LASF639
 6957 024f 05       		.byte	0x5
 6958 0250 AF04     		.uleb128 0x22f
 6959 0252 E5720000 		.4byte	.LASF640
 6960 0256 05       		.byte	0x5
 6961 0257 B304     		.uleb128 0x233
 6962 0259 FB040000 		.4byte	.LASF641
 6963 025d 05       		.byte	0x5
 6964 025e B704     		.uleb128 0x237
 6965 0260 D12B0000 		.4byte	.LASF642
 6966 0264 05       		.byte	0x5
 6967 0265 BB04     		.uleb128 0x23b
 6968 0267 FE5D0000 		.4byte	.LASF643
 6969 026b 05       		.byte	0x5
 6970 026c BF04     		.uleb128 0x23f
 6971 026e 0B260000 		.4byte	.LASF644
 6972 0272 05       		.byte	0x5
 6973 0273 C304     		.uleb128 0x243
 6974 0275 4E7C0000 		.4byte	.LASF645
 6975 0279 05       		.byte	0x5
 6976 027a C704     		.uleb128 0x247
 6977 027c 2A8D0000 		.4byte	.LASF646
 6978 0280 05       		.byte	0x5
 6979 0281 BF05     		.uleb128 0x2bf
 6980 0283 31520000 		.4byte	.LASF647
 6981 0287 05       		.byte	0x5
 6982 0288 C005     		.uleb128 0x2c0
 6983 028a C8620000 		.4byte	.LASF648
 6984 028e 05       		.byte	0x5
 6985 028f C105     		.uleb128 0x2c1
 6986 0291 EA620000 		.4byte	.LASF649
 6987 0295 05       		.byte	0x5
 6988 0296 C205     		.uleb128 0x2c2
 6989 0298 E2070000 		.4byte	.LASF650
 6990 029c 00       		.byte	0
 6991              		.section	.debug_macro,"G",%progbits,wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d,comdat
 6992              	.Ldebug_macro15:
 6993 0000 0400     		.2byte	0x4
 6994 0002 00       		.byte	0
 6995 0003 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 163


 6996 0004 08       		.uleb128 0x8
 6997 0005 E3300000 		.4byte	.LASF652
 6998 0009 06       		.byte	0x6
 6999 000a 0D       		.uleb128 0xd
 7000 000b FD550000 		.4byte	.LASF653
 7001 000f 05       		.byte	0x5
 7002 0010 10       		.uleb128 0x10
 7003 0011 4A1C0000 		.4byte	.LASF654
 7004 0015 00       		.byte	0
 7005              		.section	.debug_macro,"G",%progbits,wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043,comdat
 7006              	.Ldebug_macro16:
 7007 0000 0400     		.2byte	0x4
 7008 0002 00       		.byte	0
 7009 0003 05       		.byte	0x5
 7010 0004 36       		.uleb128 0x36
 7011 0005 98000000 		.4byte	.LASF655
 7012 0009 05       		.byte	0x5
 7013 000a 3A       		.uleb128 0x3a
 7014 000b 968A0000 		.4byte	.LASF656
 7015 000f 05       		.byte	0x5
 7016 0010 3B       		.uleb128 0x3b
 7017 0011 D31B0000 		.4byte	.LASF657
 7018 0015 05       		.byte	0x5
 7019 0016 3D       		.uleb128 0x3d
 7020 0017 603C0000 		.4byte	.LASF658
 7021 001b 05       		.byte	0x5
 7022 001c 41       		.uleb128 0x41
 7023 001d 324C0000 		.4byte	.LASF659
 7024 0021 05       		.byte	0x5
 7025 0022 8E01     		.uleb128 0x8e
 7026 0024 DE730000 		.4byte	.LASF660
 7027 0028 00       		.byte	0
 7028              		.section	.debug_macro,"G",%progbits,wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd,comdat
 7029              	.Ldebug_macro17:
 7030 0000 0400     		.2byte	0x4
 7031 0002 00       		.byte	0
 7032 0003 05       		.byte	0x5
 7033 0004 08       		.uleb128 0x8
 7034 0005 B1750000 		.4byte	.LASF661
 7035 0009 05       		.byte	0x5
 7036 000a 0F       		.uleb128 0xf
 7037 000b C2290000 		.4byte	.LASF410
 7038 000f 05       		.byte	0x5
 7039 0010 10       		.uleb128 0x10
 7040 0011 7E3E0000 		.4byte	.LASF412
 7041 0015 00       		.byte	0
 7042              		.section	.debug_macro,"G",%progbits,wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c,comdat
 7043              	.Ldebug_macro18:
 7044 0000 0400     		.2byte	0x4
 7045 0002 00       		.byte	0
 7046 0003 06       		.byte	0x6
 7047 0004 9E01     		.uleb128 0x9e
 7048 0006 5F7B0000 		.4byte	.LASF463
 7049 000a 06       		.byte	0x6
 7050 000b EA01     		.uleb128 0xea
 7051 000d 49300000 		.4byte	.LASF430
 7052 0011 06       		.byte	0x6
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 164


 7053 0012 D702     		.uleb128 0x157
 7054 0014 FF0B0000 		.4byte	.LASF447
 7055 0018 06       		.byte	0x6
 7056 0019 8D03     		.uleb128 0x18d
 7057 001b 43100000 		.4byte	.LASF448
 7058 001f 05       		.byte	0x5
 7059 0020 9203     		.uleb128 0x192
 7060 0022 F5340000 		.4byte	.LASF449
 7061 0026 06       		.byte	0x6
 7062 0027 9803     		.uleb128 0x198
 7063 0029 DE350000 		.4byte	.LASF450
 7064 002d 05       		.byte	0x5
 7065 002e 9D03     		.uleb128 0x19d
 7066 0030 3B3F0000 		.4byte	.LASF464
 7067 0034 00       		.byte	0
 7068              		.section	.debug_macro,"G",%progbits,wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217,comdat
 7069              	.Ldebug_macro19:
 7070 0000 0400     		.2byte	0x4
 7071 0002 00       		.byte	0
 7072 0003 05       		.byte	0x5
 7073 0004 0A       		.uleb128 0xa
 7074 0005 BA830000 		.4byte	.LASF665
 7075 0009 05       		.byte	0x5
 7076 000a 10       		.uleb128 0x10
 7077 000b 594F0000 		.4byte	.LASF666
 7078 000f 05       		.byte	0x5
 7079 0010 1A       		.uleb128 0x1a
 7080 0011 60670000 		.4byte	.LASF667
 7081 0015 05       		.byte	0x5
 7082 0016 21       		.uleb128 0x21
 7083 0017 2B2E0000 		.4byte	.LASF668
 7084 001b 00       		.byte	0
 7085              		.section	.debug_macro,"G",%progbits,wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0,comdat
 7086              	.Ldebug_macro20:
 7087 0000 0400     		.2byte	0x4
 7088 0002 00       		.byte	0
 7089 0003 05       		.byte	0x5
 7090 0004 16       		.uleb128 0x16
 7091 0005 C2690000 		.4byte	.LASF669
 7092 0009 05       		.byte	0x5
 7093 000a 1C       		.uleb128 0x1c
 7094 000b 688A0000 		.4byte	.LASF670
 7095 000f 05       		.byte	0x5
 7096 0010 22       		.uleb128 0x22
 7097 0011 D3430000 		.4byte	.LASF671
 7098 0015 05       		.byte	0x5
 7099 0016 28       		.uleb128 0x28
 7100 0017 A88F0000 		.4byte	.LASF672
 7101 001b 05       		.byte	0x5
 7102 001c 2E       		.uleb128 0x2e
 7103 001d AC3C0000 		.4byte	.LASF673
 7104 0021 05       		.byte	0x5
 7105 0022 34       		.uleb128 0x34
 7106 0023 4A360000 		.4byte	.LASF674
 7107 0027 05       		.byte	0x5
 7108 0028 3A       		.uleb128 0x3a
 7109 0029 247C0000 		.4byte	.LASF675
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 165


 7110 002d 05       		.byte	0x5
 7111 002e 40       		.uleb128 0x40
 7112 002f 1C450000 		.4byte	.LASF676
 7113 0033 05       		.byte	0x5
 7114 0034 4C       		.uleb128 0x4c
 7115 0035 4A570000 		.4byte	.LASF677
 7116 0039 05       		.byte	0x5
 7117 003a 56       		.uleb128 0x56
 7118 003b 77540000 		.4byte	.LASF678
 7119 003f 05       		.byte	0x5
 7120 0040 60       		.uleb128 0x60
 7121 0041 560D0000 		.4byte	.LASF679
 7122 0045 05       		.byte	0x5
 7123 0046 6A       		.uleb128 0x6a
 7124 0047 7D230000 		.4byte	.LASF680
 7125 004b 05       		.byte	0x5
 7126 004c AD01     		.uleb128 0xad
 7127 004e BD5A0000 		.4byte	.LASF681
 7128 0052 05       		.byte	0x5
 7129 0053 AE01     		.uleb128 0xae
 7130 0055 AD810000 		.4byte	.LASF682
 7131 0059 05       		.byte	0x5
 7132 005a AF01     		.uleb128 0xaf
 7133 005c 8A1E0000 		.4byte	.LASF683
 7134 0060 05       		.byte	0x5
 7135 0061 C501     		.uleb128 0xc5
 7136 0063 1A0F0000 		.4byte	.LASF684
 7137 0067 05       		.byte	0x5
 7138 0068 C601     		.uleb128 0xc6
 7139 006a 1C5B0000 		.4byte	.LASF685
 7140 006e 05       		.byte	0x5
 7141 006f C701     		.uleb128 0xc7
 7142 0071 B4180000 		.4byte	.LASF686
 7143 0075 05       		.byte	0x5
 7144 0076 CF01     		.uleb128 0xcf
 7145 0078 947B0000 		.4byte	.LASF687
 7146 007c 05       		.byte	0x5
 7147 007d D001     		.uleb128 0xd0
 7148 007f 3F2D0000 		.4byte	.LASF688
 7149 0083 05       		.byte	0x5
 7150 0084 D101     		.uleb128 0xd1
 7151 0086 D0170000 		.4byte	.LASF689
 7152 008a 05       		.byte	0x5
 7153 008b DB01     		.uleb128 0xdb
 7154 008d A7010000 		.4byte	.LASF690
 7155 0091 05       		.byte	0x5
 7156 0092 DC01     		.uleb128 0xdc
 7157 0094 A4320000 		.4byte	.LASF691
 7158 0098 05       		.byte	0x5
 7159 0099 DD01     		.uleb128 0xdd
 7160 009b 3C310000 		.4byte	.LASF692
 7161 009f 05       		.byte	0x5
 7162 00a0 E501     		.uleb128 0xe5
 7163 00a2 564D0000 		.4byte	.LASF693
 7164 00a6 05       		.byte	0x5
 7165 00a7 E601     		.uleb128 0xe6
 7166 00a9 D9550000 		.4byte	.LASF694
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 166


 7167 00ad 05       		.byte	0x5
 7168 00ae E701     		.uleb128 0xe7
 7169 00b0 A86A0000 		.4byte	.LASF695
 7170 00b4 05       		.byte	0x5
 7171 00b5 F101     		.uleb128 0xf1
 7172 00b7 0F6C0000 		.4byte	.LASF696
 7173 00bb 05       		.byte	0x5
 7174 00bc F201     		.uleb128 0xf2
 7175 00be CD450000 		.4byte	.LASF697
 7176 00c2 05       		.byte	0x5
 7177 00c3 F301     		.uleb128 0xf3
 7178 00c5 D50C0000 		.4byte	.LASF698
 7179 00c9 05       		.byte	0x5
 7180 00ca 8102     		.uleb128 0x101
 7181 00cc D82F0000 		.4byte	.LASF699
 7182 00d0 05       		.byte	0x5
 7183 00d1 8202     		.uleb128 0x102
 7184 00d3 8B210000 		.4byte	.LASF700
 7185 00d7 05       		.byte	0x5
 7186 00d8 8302     		.uleb128 0x103
 7187 00da 7D790000 		.4byte	.LASF701
 7188 00de 05       		.byte	0x5
 7189 00df 9302     		.uleb128 0x113
 7190 00e1 51770000 		.4byte	.LASF702
 7191 00e5 05       		.byte	0x5
 7192 00e6 9402     		.uleb128 0x114
 7193 00e8 B5040000 		.4byte	.LASF703
 7194 00ec 05       		.byte	0x5
 7195 00ed 9502     		.uleb128 0x115
 7196 00ef 8C570000 		.4byte	.LASF704
 7197 00f3 05       		.byte	0x5
 7198 00f4 A302     		.uleb128 0x123
 7199 00f6 83110000 		.4byte	.LASF705
 7200 00fa 05       		.byte	0x5
 7201 00fb A402     		.uleb128 0x124
 7202 00fd 55330000 		.4byte	.LASF706
 7203 0101 05       		.byte	0x5
 7204 0102 A502     		.uleb128 0x125
 7205 0104 37790000 		.4byte	.LASF707
 7206 0108 05       		.byte	0x5
 7207 0109 B302     		.uleb128 0x133
 7208 010b 75530000 		.4byte	.LASF708
 7209 010f 05       		.byte	0x5
 7210 0110 B402     		.uleb128 0x134
 7211 0112 8C360000 		.4byte	.LASF709
 7212 0116 05       		.byte	0x5
 7213 0117 B502     		.uleb128 0x135
 7214 0119 72180000 		.4byte	.LASF710
 7215 011d 05       		.byte	0x5
 7216 011e C302     		.uleb128 0x143
 7217 0120 A81F0000 		.4byte	.LASF711
 7218 0124 05       		.byte	0x5
 7219 0125 C402     		.uleb128 0x144
 7220 0127 EC870000 		.4byte	.LASF712
 7221 012b 05       		.byte	0x5
 7222 012c C502     		.uleb128 0x145
 7223 012e 7F860000 		.4byte	.LASF713
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 167


 7224 0132 05       		.byte	0x5
 7225 0133 D302     		.uleb128 0x153
 7226 0135 06130000 		.4byte	.LASF714
 7227 0139 05       		.byte	0x5
 7228 013a D402     		.uleb128 0x154
 7229 013c 906B0000 		.4byte	.LASF715
 7230 0140 05       		.byte	0x5
 7231 0141 D502     		.uleb128 0x155
 7232 0143 C6610000 		.4byte	.LASF716
 7233 0147 05       		.byte	0x5
 7234 0148 E302     		.uleb128 0x163
 7235 014a 795B0000 		.4byte	.LASF717
 7236 014e 05       		.byte	0x5
 7237 014f E402     		.uleb128 0x164
 7238 0151 12080000 		.4byte	.LASF718
 7239 0155 05       		.byte	0x5
 7240 0156 E502     		.uleb128 0x165
 7241 0158 E24F0000 		.4byte	.LASF719
 7242 015c 05       		.byte	0x5
 7243 015d F302     		.uleb128 0x173
 7244 015f BC490000 		.4byte	.LASF720
 7245 0163 05       		.byte	0x5
 7246 0164 F402     		.uleb128 0x174
 7247 0166 901C0000 		.4byte	.LASF721
 7248 016a 05       		.byte	0x5
 7249 016b FC02     		.uleb128 0x17c
 7250 016d F2310000 		.4byte	.LASF722
 7251 0171 05       		.byte	0x5
 7252 0172 8403     		.uleb128 0x184
 7253 0174 11140000 		.4byte	.LASF723
 7254 0178 05       		.byte	0x5
 7255 0179 8A03     		.uleb128 0x18a
 7256 017b CF320000 		.4byte	.LASF724
 7257 017f 05       		.byte	0x5
 7258 0180 8B03     		.uleb128 0x18b
 7259 0182 BF590000 		.4byte	.LASF725
 7260 0186 05       		.byte	0x5
 7261 0187 8F03     		.uleb128 0x18f
 7262 0189 24680000 		.4byte	.LASF726
 7263 018d 05       		.byte	0x5
 7264 018e 9303     		.uleb128 0x193
 7265 0190 F28E0000 		.4byte	.LASF727
 7266 0194 05       		.byte	0x5
 7267 0195 9803     		.uleb128 0x198
 7268 0197 8C5D0000 		.4byte	.LASF728
 7269 019b 05       		.byte	0x5
 7270 019c A303     		.uleb128 0x1a3
 7271 019e FE720000 		.4byte	.LASF729
 7272 01a2 05       		.byte	0x5
 7273 01a3 AD03     		.uleb128 0x1ad
 7274 01a5 DC270000 		.4byte	.LASF730
 7275 01a9 05       		.byte	0x5
 7276 01aa B203     		.uleb128 0x1b2
 7277 01ac 48030000 		.4byte	.LASF731
 7278 01b0 05       		.byte	0x5
 7279 01b1 B903     		.uleb128 0x1b9
 7280 01b3 5F3D0000 		.4byte	.LASF732
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 168


 7281 01b7 05       		.byte	0x5
 7282 01b8 BA03     		.uleb128 0x1ba
 7283 01ba 347B0000 		.4byte	.LASF733
 7284 01be 05       		.byte	0x5
 7285 01bf C503     		.uleb128 0x1c5
 7286 01c1 A90D0000 		.4byte	.LASF734
 7287 01c5 05       		.byte	0x5
 7288 01c6 C603     		.uleb128 0x1c6
 7289 01c8 FB320000 		.4byte	.LASF735
 7290 01cc 05       		.byte	0x5
 7291 01cd D103     		.uleb128 0x1d1
 7292 01cf EB6F0000 		.4byte	.LASF736
 7293 01d3 05       		.byte	0x5
 7294 01d4 D203     		.uleb128 0x1d2
 7295 01d6 16530000 		.4byte	.LASF737
 7296 01da 05       		.byte	0x5
 7297 01db DE03     		.uleb128 0x1de
 7298 01dd E3360000 		.4byte	.LASF738
 7299 01e1 05       		.byte	0x5
 7300 01e2 DF03     		.uleb128 0x1df
 7301 01e4 CF6C0000 		.4byte	.LASF739
 7302 01e8 05       		.byte	0x5
 7303 01e9 EE03     		.uleb128 0x1ee
 7304 01eb 4D280000 		.4byte	.LASF740
 7305 01ef 05       		.byte	0x5
 7306 01f0 EF03     		.uleb128 0x1ef
 7307 01f2 5B600000 		.4byte	.LASF741
 7308 01f6 00       		.byte	0
 7309              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8,comda
 7310              	.Ldebug_macro21:
 7311 0000 0400     		.2byte	0x4
 7312 0002 00       		.byte	0
 7313 0003 05       		.byte	0x5
 7314 0004 44       		.uleb128 0x44
 7315 0005 0D310000 		.4byte	.LASF743
 7316 0009 05       		.byte	0x5
 7317 000a 5C       		.uleb128 0x5c
 7318 000b 22340000 		.4byte	.LASF744
 7319 000f 05       		.byte	0x5
 7320 0010 5D       		.uleb128 0x5d
 7321 0011 BB370000 		.4byte	.LASF745
 7322 0015 05       		.byte	0x5
 7323 0016 5E       		.uleb128 0x5e
 7324 0017 83290000 		.4byte	.LASF746
 7325 001b 05       		.byte	0x5
 7326 001c 5F       		.uleb128 0x5f
 7327 001d AC360000 		.4byte	.LASF747
 7328 0021 05       		.byte	0x5
 7329 0022 60       		.uleb128 0x60
 7330 0023 FB860000 		.4byte	.LASF748
 7331 0027 05       		.byte	0x5
 7332 0028 61       		.uleb128 0x61
 7333 0029 C6390000 		.4byte	.LASF749
 7334 002d 05       		.byte	0x5
 7335 002e 62       		.uleb128 0x62
 7336 002f F9560000 		.4byte	.LASF750
 7337 0033 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 169


 7338 0034 63       		.uleb128 0x63
 7339 0035 2D610000 		.4byte	.LASF751
 7340 0039 05       		.byte	0x5
 7341 003a 64       		.uleb128 0x64
 7342 003b D11F0000 		.4byte	.LASF752
 7343 003f 05       		.byte	0x5
 7344 0040 65       		.uleb128 0x65
 7345 0041 728D0000 		.4byte	.LASF753
 7346 0045 05       		.byte	0x5
 7347 0046 66       		.uleb128 0x66
 7348 0047 A7280000 		.4byte	.LASF754
 7349 004b 05       		.byte	0x5
 7350 004c 67       		.uleb128 0x67
 7351 004d 8D010000 		.4byte	.LASF755
 7352 0051 05       		.byte	0x5
 7353 0052 68       		.uleb128 0x68
 7354 0053 415E0000 		.4byte	.LASF756
 7355 0057 05       		.byte	0x5
 7356 0058 69       		.uleb128 0x69
 7357 0059 E4440000 		.4byte	.LASF757
 7358 005d 05       		.byte	0x5
 7359 005e 6B       		.uleb128 0x6b
 7360 005f 99590000 		.4byte	.LASF758
 7361 0063 05       		.byte	0x5
 7362 0064 6D       		.uleb128 0x6d
 7363 0065 1F510000 		.4byte	.LASF759
 7364 0069 05       		.byte	0x5
 7365 006a 6E       		.uleb128 0x6e
 7366 006b 74030000 		.4byte	.LASF760
 7367 006f 05       		.byte	0x5
 7368 0070 6F       		.uleb128 0x6f
 7369 0071 C2360000 		.4byte	.LASF761
 7370 0075 05       		.byte	0x5
 7371 0076 70       		.uleb128 0x70
 7372 0077 3C420000 		.4byte	.LASF762
 7373 007b 05       		.byte	0x5
 7374 007c 71       		.uleb128 0x71
 7375 007d 51450000 		.4byte	.LASF763
 7376 0081 05       		.byte	0x5
 7377 0082 72       		.uleb128 0x72
 7378 0083 743C0000 		.4byte	.LASF764
 7379 0087 05       		.byte	0x5
 7380 0088 77       		.uleb128 0x77
 7381 0089 335C0000 		.4byte	.LASF765
 7382 008d 05       		.byte	0x5
 7383 008e 78       		.uleb128 0x78
 7384 008f 18410000 		.4byte	.LASF766
 7385 0093 05       		.byte	0x5
 7386 0094 79       		.uleb128 0x79
 7387 0095 84340000 		.4byte	.LASF767
 7388 0099 05       		.byte	0x5
 7389 009a 7A       		.uleb128 0x7a
 7390 009b 6C360000 		.4byte	.LASF768
 7391 009f 05       		.byte	0x5
 7392 00a0 7B       		.uleb128 0x7b
 7393 00a1 C7060000 		.4byte	.LASF769
 7394 00a5 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 170


 7395 00a6 7C       		.uleb128 0x7c
 7396 00a7 ED2D0000 		.4byte	.LASF770
 7397 00ab 05       		.byte	0x5
 7398 00ac 7D       		.uleb128 0x7d
 7399 00ad 5D5C0000 		.4byte	.LASF771
 7400 00b1 05       		.byte	0x5
 7401 00b2 7E       		.uleb128 0x7e
 7402 00b3 ED020000 		.4byte	.LASF772
 7403 00b7 05       		.byte	0x5
 7404 00b8 8101     		.uleb128 0x81
 7405 00ba BC320000 		.4byte	.LASF773
 7406 00be 05       		.byte	0x5
 7407 00bf 8201     		.uleb128 0x82
 7408 00c1 1D3D0000 		.4byte	.LASF774
 7409 00c5 05       		.byte	0x5
 7410 00c6 8301     		.uleb128 0x83
 7411 00c8 BD2C0000 		.4byte	.LASF775
 7412 00cc 05       		.byte	0x5
 7413 00cd 8401     		.uleb128 0x84
 7414 00cf 930F0000 		.4byte	.LASF776
 7415 00d3 05       		.byte	0x5
 7416 00d4 8701     		.uleb128 0x87
 7417 00d6 FE290000 		.4byte	.LASF777
 7418 00da 05       		.byte	0x5
 7419 00db 8801     		.uleb128 0x88
 7420 00dd C5100000 		.4byte	.LASF778
 7421 00e1 05       		.byte	0x5
 7422 00e2 8901     		.uleb128 0x89
 7423 00e4 168D0000 		.4byte	.LASF779
 7424 00e8 05       		.byte	0x5
 7425 00e9 8A01     		.uleb128 0x8a
 7426 00eb 5B650000 		.4byte	.LASF780
 7427 00ef 05       		.byte	0x5
 7428 00f0 9001     		.uleb128 0x90
 7429 00f2 23490000 		.4byte	.LASF781
 7430 00f6 05       		.byte	0x5
 7431 00f7 9401     		.uleb128 0x94
 7432 00f9 AA8B0000 		.4byte	.LASF782
 7433 00fd 05       		.byte	0x5
 7434 00fe 9601     		.uleb128 0x96
 7435 0100 54490000 		.4byte	.LASF783
 7436 0104 05       		.byte	0x5
 7437 0105 9C01     		.uleb128 0x9c
 7438 0107 37370000 		.4byte	.LASF784
 7439 010b 00       		.byte	0
 7440              		.section	.debug_macro,"G",%progbits,wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066,comdat
 7441              	.Ldebug_macro22:
 7442 0000 0400     		.2byte	0x4
 7443 0002 00       		.byte	0
 7444 0003 05       		.byte	0x5
 7445 0004 43       		.uleb128 0x43
 7446 0005 9A340000 		.4byte	.LASF785
 7447 0009 05       		.byte	0x5
 7448 000a 4C       		.uleb128 0x4c
 7449 000b 983E0000 		.4byte	.LASF786
 7450 000f 05       		.byte	0x5
 7451 0010 4E       		.uleb128 0x4e
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 171


 7452 0011 233C0000 		.4byte	.LASF787
 7453 0015 05       		.byte	0x5
 7454 0016 4F       		.uleb128 0x4f
 7455 0017 A25B0000 		.4byte	.LASF788
 7456 001b 05       		.byte	0x5
 7457 001c 51       		.uleb128 0x51
 7458 001d 15330000 		.4byte	.LASF789
 7459 0021 05       		.byte	0x5
 7460 0022 52       		.uleb128 0x52
 7461 0023 3A8B0000 		.4byte	.LASF790
 7462 0027 05       		.byte	0x5
 7463 0028 53       		.uleb128 0x53
 7464 0029 EF5C0000 		.4byte	.LASF791
 7465 002d 05       		.byte	0x5
 7466 002e 54       		.uleb128 0x54
 7467 002f 8F550000 		.4byte	.LASF792
 7468 0033 05       		.byte	0x5
 7469 0034 57       		.uleb128 0x57
 7470 0035 A3310000 		.4byte	.LASF793
 7471 0039 05       		.byte	0x5
 7472 003a 58       		.uleb128 0x58
 7473 003b 038B0000 		.4byte	.LASF794
 7474 003f 05       		.byte	0x5
 7475 0040 59       		.uleb128 0x59
 7476 0041 BD1B0000 		.4byte	.LASF795
 7477 0045 00       		.byte	0
 7478              		.section	.debug_macro,"G",%progbits,wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946,comdat
 7479              	.Ldebug_macro23:
 7480 0000 0400     		.2byte	0x4
 7481 0002 00       		.byte	0
 7482 0003 05       		.byte	0x5
 7483 0004 44       		.uleb128 0x44
 7484 0005 0F840000 		.4byte	.LASF797
 7485 0009 05       		.byte	0x5
 7486 000a 55       		.uleb128 0x55
 7487 000b BB130000 		.4byte	.LASF798
 7488 000f 05       		.byte	0x5
 7489 0010 56       		.uleb128 0x56
 7490 0011 5C750000 		.4byte	.LASF799
 7491 0015 05       		.byte	0x5
 7492 0016 57       		.uleb128 0x57
 7493 0017 85310000 		.4byte	.LASF800
 7494 001b 05       		.byte	0x5
 7495 001c 58       		.uleb128 0x58
 7496 001d 976F0000 		.4byte	.LASF801
 7497 0021 05       		.byte	0x5
 7498 0022 59       		.uleb128 0x59
 7499 0023 10500000 		.4byte	.LASF802
 7500 0027 05       		.byte	0x5
 7501 0028 5A       		.uleb128 0x5a
 7502 0029 8E380000 		.4byte	.LASF803
 7503 002d 05       		.byte	0x5
 7504 002e 5B       		.uleb128 0x5b
 7505 002f 2B670000 		.4byte	.LASF804
 7506 0033 05       		.byte	0x5
 7507 0034 6A       		.uleb128 0x6a
 7508 0035 96650000 		.4byte	.LASF805
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 172


 7509 0039 05       		.byte	0x5
 7510 003a 6F       		.uleb128 0x6f
 7511 003b 2E500000 		.4byte	.LASF806
 7512 003f 05       		.byte	0x5
 7513 0040 70       		.uleb128 0x70
 7514 0041 C7810000 		.4byte	.LASF807
 7515 0045 05       		.byte	0x5
 7516 0046 71       		.uleb128 0x71
 7517 0047 9E830000 		.4byte	.LASF808
 7518 004b 05       		.byte	0x5
 7519 004c 77       		.uleb128 0x77
 7520 004d C34C0000 		.4byte	.LASF809
 7521 0051 05       		.byte	0x5
 7522 0052 78       		.uleb128 0x78
 7523 0053 15420000 		.4byte	.LASF810
 7524 0057 05       		.byte	0x5
 7525 0058 79       		.uleb128 0x79
 7526 0059 460C0000 		.4byte	.LASF811
 7527 005d 05       		.byte	0x5
 7528 005e 7A       		.uleb128 0x7a
 7529 005f 3B560000 		.4byte	.LASF812
 7530 0063 05       		.byte	0x5
 7531 0064 7B       		.uleb128 0x7b
 7532 0065 B14F0000 		.4byte	.LASF813
 7533 0069 05       		.byte	0x5
 7534 006a 8301     		.uleb128 0x83
 7535 006c AC580000 		.4byte	.LASF814
 7536 0070 05       		.byte	0x5
 7537 0071 8401     		.uleb128 0x84
 7538 0073 D83D0000 		.4byte	.LASF815
 7539 0077 05       		.byte	0x5
 7540 0078 8501     		.uleb128 0x85
 7541 007a 357E0000 		.4byte	.LASF816
 7542 007e 05       		.byte	0x5
 7543 007f 8601     		.uleb128 0x86
 7544 0081 403B0000 		.4byte	.LASF817
 7545 0085 05       		.byte	0x5
 7546 0086 8701     		.uleb128 0x87
 7547 0088 3C380000 		.4byte	.LASF818
 7548 008c 05       		.byte	0x5
 7549 008d 8801     		.uleb128 0x88
 7550 008f 46500000 		.4byte	.LASF819
 7551 0093 05       		.byte	0x5
 7552 0094 8E01     		.uleb128 0x8e
 7553 0096 C0650000 		.4byte	.LASF820
 7554 009a 05       		.byte	0x5
 7555 009b 8F01     		.uleb128 0x8f
 7556 009d B6330000 		.4byte	.LASF821
 7557 00a1 05       		.byte	0x5
 7558 00a2 9501     		.uleb128 0x95
 7559 00a4 EA350000 		.4byte	.LASF822
 7560 00a8 05       		.byte	0x5
 7561 00a9 9B01     		.uleb128 0x9b
 7562 00ab F27A0000 		.4byte	.LASF823
 7563 00af 05       		.byte	0x5
 7564 00b0 AF01     		.uleb128 0xaf
 7565 00b2 EC6E0000 		.4byte	.LASF824
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 173


 7566 00b6 05       		.byte	0x5
 7567 00b7 B001     		.uleb128 0xb0
 7568 00b9 59510000 		.4byte	.LASF825
 7569 00bd 05       		.byte	0x5
 7570 00be B401     		.uleb128 0xb4
 7571 00c0 6B710000 		.4byte	.LASF826
 7572 00c4 05       		.byte	0x5
 7573 00c5 BC01     		.uleb128 0xbc
 7574 00c7 2C8C0000 		.4byte	.LASF827
 7575 00cb 05       		.byte	0x5
 7576 00cc C001     		.uleb128 0xc0
 7577 00ce 48820000 		.4byte	.LASF828
 7578 00d2 00       		.byte	0
 7579              		.section	.debug_macro,"G",%progbits,wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5,comdat
 7580              	.Ldebug_macro24:
 7581 0000 0400     		.2byte	0x4
 7582 0002 00       		.byte	0
 7583 0003 05       		.byte	0x5
 7584 0004 C502     		.uleb128 0x145
 7585 0006 47710000 		.4byte	.LASF829
 7586 000a 05       		.byte	0x5
 7587 000b D902     		.uleb128 0x159
 7588 000d 1D290000 		.4byte	.LASF830
 7589 0011 00       		.byte	0
 7590              		.section	.debug_macro,"G",%progbits,wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168,comdat
 7591              	.Ldebug_macro25:
 7592 0000 0400     		.2byte	0x4
 7593 0002 00       		.byte	0
 7594 0003 05       		.byte	0x5
 7595 0004 43       		.uleb128 0x43
 7596 0005 DA620000 		.4byte	.LASF831
 7597 0009 05       		.byte	0x5
 7598 000a 9101     		.uleb128 0x91
 7599 000c 3D600000 		.4byte	.LASF832
 7600 0010 05       		.byte	0x5
 7601 0011 9201     		.uleb128 0x92
 7602 0013 F81A0000 		.4byte	.LASF833
 7603 0017 05       		.byte	0x5
 7604 0018 9301     		.uleb128 0x93
 7605 001a 2F5D0000 		.4byte	.LASF834
 7606 001e 00       		.byte	0
 7607              		.section	.debug_macro,"G",%progbits,wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e,comdat
 7608              	.Ldebug_macro26:
 7609 0000 0400     		.2byte	0x4
 7610 0002 00       		.byte	0
 7611 0003 05       		.byte	0x5
 7612 0004 AB01     		.uleb128 0xab
 7613 0006 118F0000 		.4byte	.LASF835
 7614 000a 05       		.byte	0x5
 7615 000b AF01     		.uleb128 0xaf
 7616 000d 1C840000 		.4byte	.LASF836
 7617 0011 05       		.byte	0x5
 7618 0012 B301     		.uleb128 0xb3
 7619 0014 105D0000 		.4byte	.LASF837
 7620 0018 05       		.byte	0x5
 7621 0019 B701     		.uleb128 0xb7
 7622 001b E32E0000 		.4byte	.LASF838
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 174


 7623 001f 05       		.byte	0x5
 7624 0020 BB01     		.uleb128 0xbb
 7625 0022 A5050000 		.4byte	.LASF839
 7626 0026 05       		.byte	0x5
 7627 0027 BF01     		.uleb128 0xbf
 7628 0029 5E860000 		.4byte	.LASF840
 7629 002d 05       		.byte	0x5
 7630 002e C701     		.uleb128 0xc7
 7631 0030 902A0000 		.4byte	.LASF841
 7632 0034 05       		.byte	0x5
 7633 0035 D301     		.uleb128 0xd3
 7634 0037 5E140000 		.4byte	.LASF842
 7635 003b 05       		.byte	0x5
 7636 003c DF01     		.uleb128 0xdf
 7637 003e 35240000 		.4byte	.LASF843
 7638 0042 05       		.byte	0x5
 7639 0043 EF01     		.uleb128 0xef
 7640 0045 E86B0000 		.4byte	.LASF844
 7641 0049 05       		.byte	0x5
 7642 004a F301     		.uleb128 0xf3
 7643 004c C28F0000 		.4byte	.LASF845
 7644 0050 05       		.byte	0x5
 7645 0051 F701     		.uleb128 0xf7
 7646 0053 F1740000 		.4byte	.LASF846
 7647 0057 05       		.byte	0x5
 7648 0058 FE01     		.uleb128 0xfe
 7649 005a 000D0000 		.4byte	.LASF847
 7650 005e 05       		.byte	0x5
 7651 005f 9302     		.uleb128 0x113
 7652 0061 E6100000 		.4byte	.LASF848
 7653 0065 05       		.byte	0x5
 7654 0066 9702     		.uleb128 0x117
 7655 0068 BF630000 		.4byte	.LASF849
 7656 006c 05       		.byte	0x5
 7657 006d A402     		.uleb128 0x124
 7658 006f 231C0000 		.4byte	.LASF850
 7659 0073 05       		.byte	0x5
 7660 0074 A802     		.uleb128 0x128
 7661 0076 C0220000 		.4byte	.LASF851
 7662 007a 05       		.byte	0x5
 7663 007b AC02     		.uleb128 0x12c
 7664 007d 5F0C0000 		.4byte	.LASF852
 7665 0081 05       		.byte	0x5
 7666 0082 B902     		.uleb128 0x139
 7667 0084 2A7D0000 		.4byte	.LASF853
 7668 0088 05       		.byte	0x5
 7669 0089 C002     		.uleb128 0x140
 7670 008b F7070000 		.4byte	.LASF854
 7671 008f 05       		.byte	0x5
 7672 0090 C602     		.uleb128 0x146
 7673 0092 D6070000 		.4byte	.LASF855
 7674 0096 05       		.byte	0x5
 7675 0097 CC02     		.uleb128 0x14c
 7676 0099 31010000 		.4byte	.LASF856
 7677 009d 05       		.byte	0x5
 7678 009e D202     		.uleb128 0x152
 7679 00a0 DE860000 		.4byte	.LASF857
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 175


 7680 00a4 05       		.byte	0x5
 7681 00a5 D702     		.uleb128 0x157
 7682 00a7 05340000 		.4byte	.LASF858
 7683 00ab 05       		.byte	0x5
 7684 00ac DC02     		.uleb128 0x15c
 7685 00ae FB030000 		.4byte	.LASF859
 7686 00b2 05       		.byte	0x5
 7687 00b3 E202     		.uleb128 0x162
 7688 00b5 DA540000 		.4byte	.LASF860
 7689 00b9 05       		.byte	0x5
 7690 00ba EB02     		.uleb128 0x16b
 7691 00bc 670B0000 		.4byte	.LASF861
 7692 00c0 05       		.byte	0x5
 7693 00c1 F302     		.uleb128 0x173
 7694 00c3 45210000 		.4byte	.LASF862
 7695 00c7 05       		.byte	0x5
 7696 00c8 FB02     		.uleb128 0x17b
 7697 00ca AB6E0000 		.4byte	.LASF863
 7698 00ce 05       		.byte	0x5
 7699 00cf 8303     		.uleb128 0x183
 7700 00d1 AA7D0000 		.4byte	.LASF864
 7701 00d5 05       		.byte	0x5
 7702 00d6 8D03     		.uleb128 0x18d
 7703 00d8 D75D0000 		.4byte	.LASF865
 7704 00dc 05       		.byte	0x5
 7705 00dd 9103     		.uleb128 0x191
 7706 00df 471F0000 		.4byte	.LASF866
 7707 00e3 05       		.byte	0x5
 7708 00e4 9503     		.uleb128 0x195
 7709 00e6 742B0000 		.4byte	.LASF867
 7710 00ea 05       		.byte	0x5
 7711 00eb 9903     		.uleb128 0x199
 7712 00ed 19540000 		.4byte	.LASF868
 7713 00f1 05       		.byte	0x5
 7714 00f2 9D03     		.uleb128 0x19d
 7715 00f4 DD7C0000 		.4byte	.LASF869
 7716 00f8 05       		.byte	0x5
 7717 00f9 A103     		.uleb128 0x1a1
 7718 00fb 725C0000 		.4byte	.LASF870
 7719 00ff 05       		.byte	0x5
 7720 0100 A503     		.uleb128 0x1a5
 7721 0102 122A0000 		.4byte	.LASF871
 7722 0106 05       		.byte	0x5
 7723 0107 A903     		.uleb128 0x1a9
 7724 0109 FB750000 		.4byte	.LASF872
 7725 010d 05       		.byte	0x5
 7726 010e AD03     		.uleb128 0x1ad
 7727 0110 576F0000 		.4byte	.LASF873
 7728 0114 05       		.byte	0x5
 7729 0115 B103     		.uleb128 0x1b1
 7730 0117 4D6D0000 		.4byte	.LASF874
 7731 011b 05       		.byte	0x5
 7732 011c B503     		.uleb128 0x1b5
 7733 011e E23A0000 		.4byte	.LASF875
 7734 0122 05       		.byte	0x5
 7735 0123 B903     		.uleb128 0x1b9
 7736 0125 3D0A0000 		.4byte	.LASF876
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 176


 7737 0129 05       		.byte	0x5
 7738 012a BD03     		.uleb128 0x1bd
 7739 012c 8E7F0000 		.4byte	.LASF877
 7740 0130 05       		.byte	0x5
 7741 0131 C103     		.uleb128 0x1c1
 7742 0133 976C0000 		.4byte	.LASF878
 7743 0137 05       		.byte	0x5
 7744 0138 C503     		.uleb128 0x1c5
 7745 013a 93120000 		.4byte	.LASF879
 7746 013e 05       		.byte	0x5
 7747 013f C903     		.uleb128 0x1c9
 7748 0141 D37B0000 		.4byte	.LASF880
 7749 0145 05       		.byte	0x5
 7750 0146 CD03     		.uleb128 0x1cd
 7751 0148 A8600000 		.4byte	.LASF881
 7752 014c 05       		.byte	0x5
 7753 014d D103     		.uleb128 0x1d1
 7754 014f E3630000 		.4byte	.LASF882
 7755 0153 05       		.byte	0x5
 7756 0154 D503     		.uleb128 0x1d5
 7757 0156 798E0000 		.4byte	.LASF883
 7758 015a 05       		.byte	0x5
 7759 015b D903     		.uleb128 0x1d9
 7760 015d 0E5A0000 		.4byte	.LASF884
 7761 0161 05       		.byte	0x5
 7762 0162 DD03     		.uleb128 0x1dd
 7763 0164 814D0000 		.4byte	.LASF885
 7764 0168 05       		.byte	0x5
 7765 0169 E103     		.uleb128 0x1e1
 7766 016b F1200000 		.4byte	.LASF886
 7767 016f 05       		.byte	0x5
 7768 0170 E503     		.uleb128 0x1e5
 7769 0172 733B0000 		.4byte	.LASF887
 7770 0176 05       		.byte	0x5
 7771 0177 E903     		.uleb128 0x1e9
 7772 0179 53590000 		.4byte	.LASF888
 7773 017d 05       		.byte	0x5
 7774 017e ED03     		.uleb128 0x1ed
 7775 0180 D7310000 		.4byte	.LASF889
 7776 0184 05       		.byte	0x5
 7777 0185 F103     		.uleb128 0x1f1
 7778 0187 D11E0000 		.4byte	.LASF890
 7779 018b 05       		.byte	0x5
 7780 018c F503     		.uleb128 0x1f5
 7781 018e AD390000 		.4byte	.LASF891
 7782 0192 05       		.byte	0x5
 7783 0193 F903     		.uleb128 0x1f9
 7784 0195 42620000 		.4byte	.LASF892
 7785 0199 05       		.byte	0x5
 7786 019a FD03     		.uleb128 0x1fd
 7787 019c 83750000 		.4byte	.LASF893
 7788 01a0 05       		.byte	0x5
 7789 01a1 8104     		.uleb128 0x201
 7790 01a3 B65C0000 		.4byte	.LASF894
 7791 01a7 05       		.byte	0x5
 7792 01a8 8504     		.uleb128 0x205
 7793 01aa 342F0000 		.4byte	.LASF895
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 177


 7794 01ae 05       		.byte	0x5
 7795 01af 8904     		.uleb128 0x209
 7796 01b1 765A0000 		.4byte	.LASF896
 7797 01b5 05       		.byte	0x5
 7798 01b6 8D04     		.uleb128 0x20d
 7799 01b8 AF0C0000 		.4byte	.LASF897
 7800 01bc 05       		.byte	0x5
 7801 01bd 9104     		.uleb128 0x211
 7802 01bf AE1A0000 		.4byte	.LASF898
 7803 01c3 05       		.byte	0x5
 7804 01c4 9504     		.uleb128 0x215
 7805 01c6 55620000 		.4byte	.LASF899
 7806 01ca 05       		.byte	0x5
 7807 01cb 9904     		.uleb128 0x219
 7808 01cd 8A300000 		.4byte	.LASF900
 7809 01d1 05       		.byte	0x5
 7810 01d2 9D04     		.uleb128 0x21d
 7811 01d4 810D0000 		.4byte	.LASF901
 7812 01d8 05       		.byte	0x5
 7813 01d9 A104     		.uleb128 0x221
 7814 01db AB640000 		.4byte	.LASF902
 7815 01df 05       		.byte	0x5
 7816 01e0 A504     		.uleb128 0x225
 7817 01e2 71140000 		.4byte	.LASF903
 7818 01e6 05       		.byte	0x5
 7819 01e7 A904     		.uleb128 0x229
 7820 01e9 34770000 		.4byte	.LASF904
 7821 01ed 05       		.byte	0x5
 7822 01ee AD04     		.uleb128 0x22d
 7823 01f0 D2790000 		.4byte	.LASF905
 7824 01f4 05       		.byte	0x5
 7825 01f5 B104     		.uleb128 0x231
 7826 01f7 681E0000 		.4byte	.LASF906
 7827 01fb 05       		.byte	0x5
 7828 01fc B504     		.uleb128 0x235
 7829 01fe 48890000 		.4byte	.LASF907
 7830 0202 05       		.byte	0x5
 7831 0203 B904     		.uleb128 0x239
 7832 0205 7F020000 		.4byte	.LASF908
 7833 0209 05       		.byte	0x5
 7834 020a BD04     		.uleb128 0x23d
 7835 020c 630A0000 		.4byte	.LASF909
 7836 0210 05       		.byte	0x5
 7837 0211 C104     		.uleb128 0x241
 7838 0213 B7820000 		.4byte	.LASF910
 7839 0217 05       		.byte	0x5
 7840 0218 C504     		.uleb128 0x245
 7841 021a 263E0000 		.4byte	.LASF911
 7842 021e 05       		.byte	0x5
 7843 021f C904     		.uleb128 0x249
 7844 0221 35040000 		.4byte	.LASF912
 7845 0225 05       		.byte	0x5
 7846 0226 CD04     		.uleb128 0x24d
 7847 0228 50340000 		.4byte	.LASF913
 7848 022c 05       		.byte	0x5
 7849 022d D104     		.uleb128 0x251
 7850 022f 8B620000 		.4byte	.LASF914
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 178


 7851 0233 05       		.byte	0x5
 7852 0234 D504     		.uleb128 0x255
 7853 0236 301B0000 		.4byte	.LASF915
 7854 023a 05       		.byte	0x5
 7855 023b D904     		.uleb128 0x259
 7856 023d 06350000 		.4byte	.LASF916
 7857 0241 05       		.byte	0x5
 7858 0242 DD04     		.uleb128 0x25d
 7859 0244 AB680000 		.4byte	.LASF917
 7860 0248 05       		.byte	0x5
 7861 0249 E104     		.uleb128 0x261
 7862 024b 562F0000 		.4byte	.LASF918
 7863 024f 05       		.byte	0x5
 7864 0250 F704     		.uleb128 0x277
 7865 0252 2D5F0000 		.4byte	.LASF919
 7866 0256 05       		.byte	0x5
 7867 0257 FB04     		.uleb128 0x27b
 7868 0259 16730000 		.4byte	.LASF920
 7869 025d 05       		.byte	0x5
 7870 025e FF04     		.uleb128 0x27f
 7871 0260 90540000 		.4byte	.LASF921
 7872 0264 05       		.byte	0x5
 7873 0265 8305     		.uleb128 0x283
 7874 0267 3E0F0000 		.4byte	.LASF922
 7875 026b 05       		.byte	0x5
 7876 026c 8705     		.uleb128 0x287
 7877 026e 31400000 		.4byte	.LASF923
 7878 0272 05       		.byte	0x5
 7879 0273 8B05     		.uleb128 0x28b
 7880 0275 6E450000 		.4byte	.LASF924
 7881 0279 05       		.byte	0x5
 7882 027a 9305     		.uleb128 0x293
 7883 027c A66D0000 		.4byte	.LASF925
 7884 0280 05       		.byte	0x5
 7885 0281 9B05     		.uleb128 0x29b
 7886 0283 38540000 		.4byte	.LASF926
 7887 0287 05       		.byte	0x5
 7888 0288 9F05     		.uleb128 0x29f
 7889 028a 491E0000 		.4byte	.LASF927
 7890 028e 05       		.byte	0x5
 7891 028f A305     		.uleb128 0x2a3
 7892 0291 EA3C0000 		.4byte	.LASF928
 7893 0295 05       		.byte	0x5
 7894 0296 A705     		.uleb128 0x2a7
 7895 0298 E11A0000 		.4byte	.LASF929
 7896 029c 05       		.byte	0x5
 7897 029d AB05     		.uleb128 0x2ab
 7898 029f 2C6E0000 		.4byte	.LASF930
 7899 02a3 05       		.byte	0x5
 7900 02a4 AF05     		.uleb128 0x2af
 7901 02a6 49730000 		.4byte	.LASF931
 7902 02aa 05       		.byte	0x5
 7903 02ab B305     		.uleb128 0x2b3
 7904 02ad 9C880000 		.4byte	.LASF932
 7905 02b1 05       		.byte	0x5
 7906 02b2 B705     		.uleb128 0x2b7
 7907 02b4 AF5E0000 		.4byte	.LASF933
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 179


 7908 02b8 05       		.byte	0x5
 7909 02b9 BB05     		.uleb128 0x2bb
 7910 02bb CC850000 		.4byte	.LASF934
 7911 02bf 05       		.byte	0x5
 7912 02c0 C705     		.uleb128 0x2c7
 7913 02c2 69110000 		.4byte	.LASF935
 7914 02c6 05       		.byte	0x5
 7915 02c7 CB05     		.uleb128 0x2cb
 7916 02c9 F97C0000 		.4byte	.LASF936
 7917 02cd 05       		.byte	0x5
 7918 02ce D505     		.uleb128 0x2d5
 7919 02d0 0B400000 		.4byte	.LASF937
 7920 02d4 05       		.byte	0x5
 7921 02d5 D905     		.uleb128 0x2d9
 7922 02d7 56180000 		.4byte	.LASF938
 7923 02db 05       		.byte	0x5
 7924 02dc DA05     		.uleb128 0x2da
 7925 02de C4510000 		.4byte	.LASF939
 7926 02e2 05       		.byte	0x5
 7927 02e3 DB05     		.uleb128 0x2db
 7928 02e5 463D0000 		.4byte	.LASF940
 7929 02e9 05       		.byte	0x5
 7930 02ea DC05     		.uleb128 0x2dc
 7931 02ec 36450000 		.4byte	.LASF941
 7932 02f0 05       		.byte	0x5
 7933 02f1 DD05     		.uleb128 0x2dd
 7934 02f3 85500000 		.4byte	.LASF942
 7935 02f7 05       		.byte	0x5
 7936 02f8 DE05     		.uleb128 0x2de
 7937 02fa F1510000 		.4byte	.LASF943
 7938 02fe 05       		.byte	0x5
 7939 02ff DF05     		.uleb128 0x2df
 7940 0301 15620000 		.4byte	.LASF944
 7941 0305 05       		.byte	0x5
 7942 0306 E005     		.uleb128 0x2e0
 7943 0308 C31D0000 		.4byte	.LASF945
 7944 030c 05       		.byte	0x5
 7945 030d E105     		.uleb128 0x2e1
 7946 030f F4230000 		.4byte	.LASF946
 7947 0313 05       		.byte	0x5
 7948 0314 E205     		.uleb128 0x2e2
 7949 0316 048C0000 		.4byte	.LASF947
 7950 031a 05       		.byte	0x5
 7951 031b E305     		.uleb128 0x2e3
 7952 031d 24750000 		.4byte	.LASF948
 7953 0321 05       		.byte	0x5
 7954 0322 E405     		.uleb128 0x2e4
 7955 0324 422C0000 		.4byte	.LASF949
 7956 0328 05       		.byte	0x5
 7957 0329 E505     		.uleb128 0x2e5
 7958 032b 9E2E0000 		.4byte	.LASF950
 7959 032f 05       		.byte	0x5
 7960 0330 E605     		.uleb128 0x2e6
 7961 0332 4C6E0000 		.4byte	.LASF951
 7962 0336 05       		.byte	0x5
 7963 0337 E705     		.uleb128 0x2e7
 7964 0339 E6210000 		.4byte	.LASF952
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 180


 7965 033d 05       		.byte	0x5
 7966 033e EB05     		.uleb128 0x2eb
 7967 0340 A6570000 		.4byte	.LASF953
 7968 0344 05       		.byte	0x5
 7969 0345 EC05     		.uleb128 0x2ec
 7970 0347 B46C0000 		.4byte	.LASF954
 7971 034b 05       		.byte	0x5
 7972 034c ED05     		.uleb128 0x2ed
 7973 034e 4D8B0000 		.4byte	.LASF955
 7974 0352 05       		.byte	0x5
 7975 0353 EE05     		.uleb128 0x2ee
 7976 0355 EA610000 		.4byte	.LASF956
 7977 0359 00       		.byte	0
 7978              		.section	.debug_macro,"G",%progbits,wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370,comdat
 7979              	.Ldebug_macro27:
 7980 0000 0400     		.2byte	0x4
 7981 0002 00       		.byte	0
 7982 0003 05       		.byte	0x5
 7983 0004 60       		.uleb128 0x60
 7984 0005 DC460000 		.4byte	.LASF958
 7985 0009 05       		.byte	0x5
 7986 000a 7F       		.uleb128 0x7f
 7987 000b C03C0000 		.4byte	.LASF959
 7988 000f 05       		.byte	0x5
 7989 0010 AB01     		.uleb128 0xab
 7990 0012 63840000 		.4byte	.LASF960
 7991 0016 05       		.byte	0x5
 7992 0017 B401     		.uleb128 0xb4
 7993 0019 17390000 		.4byte	.LASF961
 7994 001d 05       		.byte	0x5
 7995 001e BD01     		.uleb128 0xbd
 7996 0020 D5690000 		.4byte	.LASF962
 7997 0024 05       		.byte	0x5
 7998 0025 C701     		.uleb128 0xc7
 7999 0027 1F760000 		.4byte	.LASF963
 8000 002b 05       		.byte	0x5
 8001 002c D001     		.uleb128 0xd0
 8002 002e AD1C0000 		.4byte	.LASF964
 8003 0032 05       		.byte	0x5
 8004 0033 D801     		.uleb128 0xd8
 8005 0035 76040000 		.4byte	.LASF965
 8006 0039 05       		.byte	0x5
 8007 003a E001     		.uleb128 0xe0
 8008 003c 523A0000 		.4byte	.LASF966
 8009 0040 05       		.byte	0x5
 8010 0041 E801     		.uleb128 0xe8
 8011 0043 F9730000 		.4byte	.LASF967
 8012 0047 05       		.byte	0x5
 8013 0048 F101     		.uleb128 0xf1
 8014 004a EC880000 		.4byte	.LASF968
 8015 004e 05       		.byte	0x5
 8016 004f F601     		.uleb128 0xf6
 8017 0051 A8800000 		.4byte	.LASF969
 8018 0055 05       		.byte	0x5
 8019 0056 8C02     		.uleb128 0x10c
 8020 0058 AB770000 		.4byte	.LASF970
 8021 005c 05       		.byte	0x5
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 181


 8022 005d AA02     		.uleb128 0x12a
 8023 005f DE060000 		.4byte	.LASF971
 8024 0063 05       		.byte	0x5
 8025 0064 B502     		.uleb128 0x135
 8026 0066 87150000 		.4byte	.LASF972
 8027 006a 05       		.byte	0x5
 8028 006b BD02     		.uleb128 0x13d
 8029 006d 932D0000 		.4byte	.LASF973
 8030 0071 05       		.byte	0x5
 8031 0072 C402     		.uleb128 0x144
 8032 0074 6B190000 		.4byte	.LASF974
 8033 0078 00       		.byte	0
 8034              		.section	.debug_macro,"G",%progbits,wm4.task.h.84.e110bc08aaffa67ce542955b890201b4,comdat
 8035              	.Ldebug_macro28:
 8036 0000 0400     		.2byte	0x4
 8037 0002 00       		.byte	0
 8038 0003 05       		.byte	0x5
 8039 0004 54       		.uleb128 0x54
 8040 0005 C96F0000 		.4byte	.LASF975
 8041 0009 05       		.byte	0x5
 8042 000a 55       		.uleb128 0x55
 8043 000b 3F510000 		.4byte	.LASF976
 8044 000f 05       		.byte	0x5
 8045 0010 56       		.uleb128 0x56
 8046 0011 D3120000 		.4byte	.LASF977
 8047 0015 05       		.byte	0x5
 8048 0016 57       		.uleb128 0x57
 8049 0017 EF710000 		.4byte	.LASF978
 8050 001b 05       		.byte	0x5
 8051 001c B201     		.uleb128 0xb2
 8052 001e 74680000 		.4byte	.LASF979
 8053 0022 05       		.byte	0x5
 8054 0023 BC01     		.uleb128 0xbc
 8055 0025 56310000 		.4byte	.LASF980
 8056 0029 05       		.byte	0x5
 8057 002a CA01     		.uleb128 0xca
 8058 002c 092D0000 		.4byte	.LASF981
 8059 0030 05       		.byte	0x5
 8060 0031 D801     		.uleb128 0xd8
 8061 0033 7E6D0000 		.4byte	.LASF982
 8062 0037 05       		.byte	0x5
 8063 0038 E201     		.uleb128 0xe2
 8064 003a 43530000 		.4byte	.LASF983
 8065 003e 05       		.byte	0x5
 8066 003f EC01     		.uleb128 0xec
 8067 0041 C2110000 		.4byte	.LASF984
 8068 0045 05       		.byte	0x5
 8069 0046 F101     		.uleb128 0xf1
 8070 0048 AF550000 		.4byte	.LASF985
 8071 004c 05       		.byte	0x5
 8072 004d F201     		.uleb128 0xf2
 8073 004f 97870000 		.4byte	.LASF986
 8074 0053 05       		.byte	0x5
 8075 0054 F301     		.uleb128 0xf3
 8076 0056 6B820000 		.4byte	.LASF987
 8077 005a 05       		.byte	0x5
 8078 005b CA02     		.uleb128 0x14a
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 182


 8079 005d 9B260000 		.4byte	.LASF988
 8080 0061 05       		.byte	0x5
 8081 0062 8F03     		.uleb128 0x18f
 8082 0064 31700000 		.4byte	.LASF989
 8083 0068 00       		.byte	0
 8084              		.section	.debug_macro,"G",%progbits,wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94,comdat
 8085              	.Ldebug_macro29:
 8086 0000 0400     		.2byte	0x4
 8087 0002 00       		.byte	0
 8088 0003 05       		.byte	0x5
 8089 0004 44       		.uleb128 0x44
 8090 0005 52600000 		.4byte	.LASF990
 8091 0009 05       		.byte	0x5
 8092 000a 65       		.uleb128 0x65
 8093 000b 52000000 		.4byte	.LASF991
 8094 000f 05       		.byte	0x5
 8095 0010 66       		.uleb128 0x66
 8096 0011 AA410000 		.4byte	.LASF992
 8097 0015 05       		.byte	0x5
 8098 0016 67       		.uleb128 0x67
 8099 0017 11190000 		.4byte	.LASF993
 8100 001b 05       		.byte	0x5
 8101 001c 6A       		.uleb128 0x6a
 8102 001d 29150000 		.4byte	.LASF994
 8103 0021 05       		.byte	0x5
 8104 0022 6B       		.uleb128 0x6b
 8105 0023 76810000 		.4byte	.LASF995
 8106 0027 05       		.byte	0x5
 8107 0028 6C       		.uleb128 0x6c
 8108 0029 CC600000 		.4byte	.LASF996
 8109 002d 05       		.byte	0x5
 8110 002e 6D       		.uleb128 0x6d
 8111 002f 356B0000 		.4byte	.LASF997
 8112 0033 05       		.byte	0x5
 8113 0034 6E       		.uleb128 0x6e
 8114 0035 561B0000 		.4byte	.LASF998
 8115 0039 05       		.byte	0x5
 8116 003a 6F       		.uleb128 0x6f
 8117 003b D08A0000 		.4byte	.LASF999
 8118 003f 05       		.byte	0x5
 8119 0040 A901     		.uleb128 0xa9
 8120 0042 5A420000 		.4byte	.LASF1000
 8121 0046 05       		.byte	0x5
 8122 0047 FB01     		.uleb128 0xfb
 8123 0049 5B520000 		.4byte	.LASF1001
 8124 004d 05       		.byte	0x5
 8125 004e CD02     		.uleb128 0x14d
 8126 0050 B1090000 		.4byte	.LASF1002
 8127 0054 05       		.byte	0x5
 8128 0055 A103     		.uleb128 0x1a1
 8129 0057 02430000 		.4byte	.LASF1003
 8130 005b 05       		.byte	0x5
 8131 005c F403     		.uleb128 0x1f4
 8132 005e DC890000 		.4byte	.LASF1004
 8133 0062 05       		.byte	0x5
 8134 0063 AC05     		.uleb128 0x2ac
 8135 0065 70080000 		.4byte	.LASF1005
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 183


 8136 0069 05       		.byte	0x5
 8137 006a AA06     		.uleb128 0x32a
 8138 006c 72480000 		.4byte	.LASF1006
 8139 0070 05       		.byte	0x5
 8140 0071 8108     		.uleb128 0x401
 8141 0073 640E0000 		.4byte	.LASF1007
 8142 0077 05       		.byte	0x5
 8143 0078 C808     		.uleb128 0x448
 8144 007a DD190000 		.4byte	.LASF1008
 8145 007e 05       		.byte	0x5
 8146 007f 9F09     		.uleb128 0x49f
 8147 0081 74670000 		.4byte	.LASF1009
 8148 0085 05       		.byte	0x5
 8149 0086 E909     		.uleb128 0x4e9
 8150 0088 447A0000 		.4byte	.LASF1010
 8151 008c 05       		.byte	0x5
 8152 008d AB0B     		.uleb128 0x5ab
 8153 008f 544E0000 		.4byte	.LASF1011
 8154 0093 05       		.byte	0x5
 8155 0094 AC0B     		.uleb128 0x5ac
 8156 0096 34440000 		.4byte	.LASF1012
 8157 009a 05       		.byte	0x5
 8158 009b AD0B     		.uleb128 0x5ad
 8159 009d 3E850000 		.4byte	.LASF1013
 8160 00a1 05       		.byte	0x5
 8161 00a2 AE0B     		.uleb128 0x5ae
 8162 00a4 9D5F0000 		.4byte	.LASF1014
 8163 00a8 05       		.byte	0x5
 8164 00a9 D40B     		.uleb128 0x5d4
 8165 00ab B6380000 		.4byte	.LASF1015
 8166 00af 00       		.byte	0
 8167              		.section	.debug_line,"",%progbits
 8168              	.Ldebug_line0:
 8169 0000 03080000 		.section	.debug_str,"MS",%progbits,1
 8169      0200D702 
 8169      00000201 
 8169      FB0E0D00 
 8169      01010101 
 8170              	.LASF574:
 8171 0000 5F5F474E 		.ascii	"__GNUCLIKE___SECTION 1\000"
 8171      55434C49 
 8171      4B455F5F 
 8171      5F534543 
 8171      54494F4E 
 8172              	.LASF1107:
 8173 0017 70764974 		.ascii	"pvItemToQueue\000"
 8173      656D546F 
 8173      51756575 
 8173      6500
 8174              	.LASF1103:
 8175 0025 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8175      75654372 
 8175      65617465 
 8175      436F756E 
 8175      74696E67 
 8176              	.LASF294:
 8177 0043 5F5F5548 		.ascii	"__UHA_FBIT__ 8\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 184


 8177      415F4642 
 8177      49545F5F 
 8177      203800
 8178              	.LASF991:
 8179 0052 71756575 		.ascii	"queueSEND_TO_BACK ( ( BaseT_t ) 0 )\000"
 8179      6553454E 
 8179      445F544F 
 8179      5F424143 
 8179      4B202820 
 8180              	.LASF1041:
 8181 0076 696E7438 		.ascii	"int8_t\000"
 8181      5F7400
 8182              	.LASF184:
 8183 007d 5F5F4445 		.ascii	"__DEC128_EPSILON__ 1E-33DL\000"
 8183      43313238 
 8183      5F455053 
 8183      494C4F4E 
 8183      5F5F2031 
 8184              	.LASF655:
 8185 0098 5F5F636F 		.ascii	"__compar_fn_t_defined \000"
 8185      6D706172 
 8185      5F666E5F 
 8185      745F6465 
 8185      66696E65 
 8186              	.LASF545:
 8187 00af 5F524545 		.ascii	"_REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._ge"
 8187      4E545F47 
 8187      45544441 
 8187      54455F45 
 8187      52525F50 
 8188 00e2 74646174 		.ascii	"tdate_err))\000"
 8188      655F6572 
 8188      72292900 
 8189              	.LASF306:
 8190 00ee 5F5F4348 		.ascii	"__CHAR_UNSIGNED__ 1\000"
 8190      41525F55 
 8190      4E534947 
 8190      4E45445F 
 8190      5F203100 
 8191              	.LASF1027:
 8192 0102 73697A65 		.ascii	"size_t\000"
 8192      5F7400
 8193              	.LASF550:
 8194 0109 5F474C4F 		.ascii	"_GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)\000"
 8194      42414C5F 
 8194      41544558 
 8194      49542028 
 8194      5F474C4F 
 8195              	.LASF856:
 8196 0131 74726163 		.ascii	"traceTASK_SWITCHED_IN() \000"
 8196      65544153 
 8196      4B5F5357 
 8196      49544348 
 8196      45445F49 
 8197              	.LASF186:
 8198 014a 5F5F5346 		.ascii	"__SFRACT_FBIT__ 7\000"
 8198      52414354 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 185


 8198      5F464249 
 8198      545F5F20 
 8198      3700
 8199              	.LASF1039:
 8200 015c 73697A65 		.ascii	"sizetype\000"
 8200      74797065 
 8200      00
 8201              	.LASF71:
 8202 0165 5F5F4C4F 		.ascii	"__LONG_LONG_MAX__ 9223372036854775807LL\000"
 8202      4E475F4C 
 8202      4F4E475F 
 8202      4D41585F 
 8202      5F203932 
 8203              	.LASF755:
 8204 018d 636F6E66 		.ascii	"configIDLE_SHOULD_YIELD 0\000"
 8204      69674944 
 8204      4C455F53 
 8204      484F554C 
 8204      445F5949 
 8205              	.LASF690:
 8206 01a7 494E5431 		.ascii	"INT16_MIN (-__INT16_MAX__ - 1)\000"
 8206      365F4D49 
 8206      4E20282D 
 8206      5F5F494E 
 8206      5431365F 
 8207              	.LASF258:
 8208 01c6 5F5F4C4C 		.ascii	"__LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)\000"
 8208      41434355 
 8208      4D5F4D49 
 8208      4E5F5F20 
 8208      282D3058 
 8209              	.LASF250:
 8210 01ed 5F5F4C41 		.ascii	"__LACCUM_EPSILON__ 0x1P-31LK\000"
 8210      4343554D 
 8210      5F455053 
 8210      494C4F4E 
 8210      5F5F2030 
 8211              	.LASF1084:
 8212 020a 70635175 		.ascii	"pcQueueName\000"
 8212      6575654E 
 8212      616D6500 
 8213              	.LASF183:
 8214 0216 5F5F4445 		.ascii	"__DEC128_MAX__ 9.999999999999999999999999999999999E"
 8214      43313238 
 8214      5F4D4158 
 8214      5F5F2039 
 8214      2E393939 
 8215 0249 36313434 		.ascii	"6144DL\000"
 8215      444C00
 8216              	.LASF404:
 8217 0250 5F4C4F4E 		.ascii	"_LONG_DOUBLE long double\000"
 8217      475F444F 
 8217      55424C45 
 8217      206C6F6E 
 8217      6720646F 
 8218              	.LASF79:
 8219 0269 5F5F494E 		.ascii	"__INTMAX_C(c) c ## LL\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 186


 8219      544D4158 
 8219      5F432863 
 8219      29206320 
 8219      2323204C 
 8220              	.LASF908:
 8221 027f 74726163 		.ascii	"traceEVENT_GROUP_SYNC_END(xEventGroup,uxBitsToSet,u"
 8221      65455645 
 8221      4E545F47 
 8221      524F5550 
 8221      5F53594E 
 8222 02b2 78426974 		.ascii	"xBitsToWaitFor,xTimeoutOccurred) ( void ) xTimeoutO"
 8222      73546F57 
 8222      61697446 
 8222      6F722C78 
 8222      54696D65 
 8223 02e5 63637572 		.ascii	"ccurred\000"
 8223      72656400 
 8224              	.LASF772:
 8225 02ed 494E434C 		.ascii	"INCLUDE_uxTaskGetStackHighWaterMark 1\000"
 8225      5544455F 
 8225      75785461 
 8225      736B4765 
 8225      74537461 
 8226              	.LASF171:
 8227 0313 5F5F4445 		.ascii	"__DEC32_SUBNORMAL_MIN__ 0.000001E-95DF\000"
 8227      4333325F 
 8227      5355424E 
 8227      4F524D41 
 8227      4C5F4D49 
 8228              	.LASF275:
 8229 033a 5F5F5451 		.ascii	"__TQ_IBIT__ 0\000"
 8229      5F494249 
 8229      545F5F20 
 8229      3000
 8230              	.LASF731:
 8231 0348 57494E54 		.ascii	"WINT_MIN __WINT_MIN__\000"
 8231      5F4D494E 
 8231      205F5F57 
 8231      494E545F 
 8231      4D494E5F 
 8232              	.LASF511:
 8233 035e 5F524545 		.ascii	"_REENT_SIGNAL_SIZE 24\000"
 8233      4E545F53 
 8233      49474E41 
 8233      4C5F5349 
 8233      5A452032 
 8234              	.LASF760:
 8235 0374 636F6E66 		.ascii	"configUSE_ALTERNATIVE_API 0\000"
 8235      69675553 
 8235      455F414C 
 8235      5445524E 
 8235      41544956 
 8236              	.LASF546:
 8237 0390 5F4B6D61 		.ascii	"_Kmax (sizeof (size_t) << 3)\000"
 8237      78202873 
 8237      697A656F 
 8237      66202873 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 187


 8237      697A655F 
 8238              	.LASF11:
 8239 03ad 5F5F4154 		.ascii	"__ATOMIC_CONSUME 1\000"
 8239      4F4D4943 
 8239      5F434F4E 
 8239      53554D45 
 8239      203100
 8240              	.LASF208:
 8241 03c0 5F5F4C46 		.ascii	"__LFRACT_MIN__ (-0.5LR-0.5LR)\000"
 8241      52414354 
 8241      5F4D494E 
 8241      5F5F2028 
 8241      2D302E35 
 8242              	.LASF594:
 8243 03de 5F5F434F 		.ascii	"__CONCAT(x,y) __CONCAT1(x,y)\000"
 8243      4E434154 
 8243      28782C79 
 8243      29205F5F 
 8243      434F4E43 
 8244              	.LASF859:
 8245 03fb 74726163 		.ascii	"traceLOW_POWER_IDLE_END() \000"
 8245      654C4F57 
 8245      5F504F57 
 8245      45525F49 
 8245      444C455F 
 8246              	.LASF1116:
 8247 0416 70764275 		.ascii	"pvBuffer\000"
 8247      66666572 
 8247      00
 8248              	.LASF572:
 8249 041f 5F5F474E 		.ascii	"__GNUCLIKE___TYPEOF 1\000"
 8249      55434C49 
 8249      4B455F5F 
 8249      5F545950 
 8249      454F4620 
 8250              	.LASF912:
 8251 0435 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS_FROM_ISR(xEventGroup,ux"
 8251      65455645 
 8251      4E545F47 
 8251      524F5550 
 8251      5F434C45 
 8252 0468 42697473 		.ascii	"BitsToClear) \000"
 8252      546F436C 
 8252      65617229 
 8252      2000
 8253              	.LASF965:
 8254 0476 6C697374 		.ascii	"listGET_HEAD_ENTRY(pxList) ( ( ( pxList )->xListEnd"
 8254      4745545F 
 8254      48454144 
 8254      5F454E54 
 8254      52592870 
 8255 04a9 20292E70 		.ascii	" ).pxNext )\000"
 8255      784E6578 
 8255      74202900 
 8256              	.LASF703:
 8257 04b5 494E5436 		.ascii	"INT64_MAX __INT64_MAX__\000"
 8257      345F4D41 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 188


 8257      58205F5F 
 8257      494E5436 
 8257      345F4D41 
 8258              	.LASF15:
 8259 04cd 5F5F5349 		.ascii	"__SIZEOF_LONG_LONG__ 8\000"
 8259      5A454F46 
 8259      5F4C4F4E 
 8259      475F4C4F 
 8259      4E475F5F 
 8260              	.LASF142:
 8261 04e4 5F5F4442 		.ascii	"__DBL_MAX_10_EXP__ 308\000"
 8261      4C5F4D41 
 8261      585F3130 
 8261      5F455850 
 8261      5F5F2033 
 8262              	.LASF641:
 8263 04fb 5F5F5243 		.ascii	"__RCSID_SOURCE(s) struct __hack\000"
 8263      5349445F 
 8263      534F5552 
 8263      43452873 
 8263      29207374 
 8264              	.LASF198:
 8265 051b 5F5F4652 		.ascii	"__FRACT_MIN__ (-0.5R-0.5R)\000"
 8265      4143545F 
 8265      4D494E5F 
 8265      5F20282D 
 8265      302E3552 
 8266              	.LASF264:
 8267 0536 5F5F554C 		.ascii	"__ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK\000"
 8267      4C414343 
 8267      554D5F4D 
 8267      41585F5F 
 8267      20305846 
 8268              	.LASF234:
 8269 0562 5F5F5553 		.ascii	"__USACCUM_MAX__ 0XFFFFP-8UHK\000"
 8269      41434355 
 8269      4D5F4D41 
 8269      585F5F20 
 8269      30584646 
 8270              	.LASF168:
 8271 057f 5F5F4445 		.ascii	"__DEC32_MIN__ 1E-95DF\000"
 8271      4333325F 
 8271      4D494E5F 
 8271      5F203145 
 8271      2D393544 
 8272              	.LASF346:
 8273 0595 5F5F4152 		.ascii	"__ARM_NEON_FP 4\000"
 8273      4D5F4E45 
 8273      4F4E5F46 
 8273      50203400 
 8274              	.LASF839:
 8275 05a5 494E434C 		.ascii	"INCLUDE_pcTaskGetTaskName 0\000"
 8275      5544455F 
 8275      70635461 
 8275      736B4765 
 8275      74546173 
 8276              	.LASF271:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 189


 8277 05c1 5F5F5351 		.ascii	"__SQ_IBIT__ 0\000"
 8277      5F494249 
 8277      545F5F20 
 8277      3000
 8278              	.LASF25:
 8279 05cf 5F5F4F52 		.ascii	"__ORDER_PDP_ENDIAN__ 3412\000"
 8279      4445525F 
 8279      5044505F 
 8279      454E4449 
 8279      414E5F5F 
 8280              	.LASF29:
 8281 05e9 5F5F5349 		.ascii	"__SIZE_TYPE__ unsigned int\000"
 8281      5A455F54 
 8281      5950455F 
 8281      5F20756E 
 8281      7369676E 
 8282              	.LASF174:
 8283 0604 5F5F4445 		.ascii	"__DEC64_MAX_EXP__ 385\000"
 8283      4336345F 
 8283      4D41585F 
 8283      4558505F 
 8283      5F203338 
 8284              	.LASF530:
 8285 061a 5F524545 		.ascii	"_REENT_MP_FREELIST(ptr) ((ptr)->_freelist)\000"
 8285      4E545F4D 
 8285      505F4652 
 8285      45454C49 
 8285      53542870 
 8286              	.LASF134:
 8287 0645 5F5F464C 		.ascii	"__FLT_HAS_DENORM__ 1\000"
 8287      545F4841 
 8287      535F4445 
 8287      4E4F524D 
 8287      5F5F2031 
 8288              	.LASF38:
 8289 065a 5F5F494E 		.ascii	"__INT8_TYPE__ signed char\000"
 8289      54385F54 
 8289      5950455F 
 8289      5F207369 
 8289      676E6564 
 8290              	.LASF334:
 8291 0674 5F5F4152 		.ascii	"__ARM_ARCH_PROFILE 77\000"
 8291      4D5F4152 
 8291      43485F50 
 8291      524F4649 
 8291      4C452037 
 8292              	.LASF1119:
 8293 068a 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8293      75655265 
 8293      63656976 
 8293      6546726F 
 8293      6D495352 
 8294              	.LASF1061:
 8295 069f 7854494D 		.ascii	"xTIME_OUT\000"
 8295      455F4F55 
 8295      5400
 8296              	.LASF398:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 190


 8297 06a9 5F455846 		.ascii	"_EXFUN(name,proto) name proto\000"
 8297      554E286E 
 8297      616D652C 
 8297      70726F74 
 8297      6F29206E 
 8298              	.LASF769:
 8299 06c7 494E434C 		.ascii	"INCLUDE_vTaskSuspend 1\000"
 8299      5544455F 
 8299      76546173 
 8299      6B537573 
 8299      70656E64 
 8300              	.LASF971:
 8301 06de 6C697374 		.ascii	"listGET_OWNER_OF_HEAD_ENTRY(pxList) ( (&( ( pxList "
 8301      4745545F 
 8301      4F574E45 
 8301      525F4F46 
 8301      5F484541 
 8302 0711 292D3E78 		.ascii	")->xListEnd ))->pxNext->pvOwner )\000"
 8302      4C697374 
 8302      456E6420 
 8302      29292D3E 
 8302      70784E65 
 8303              	.LASF157:
 8304 0733 5F5F4445 		.ascii	"__DECIMAL_DIG__ 17\000"
 8304      43494D41 
 8304      4C5F4449 
 8304      475F5F20 
 8304      313700
 8305              	.LASF153:
 8306 0746 5F5F4C44 		.ascii	"__LDBL_MIN_EXP__ (-1021)\000"
 8306      424C5F4D 
 8306      494E5F45 
 8306      58505F5F 
 8306      20282D31 
 8307              	.LASF151:
 8308 075f 5F5F4C44 		.ascii	"__LDBL_MANT_DIG__ 53\000"
 8308      424C5F4D 
 8308      414E545F 
 8308      4449475F 
 8308      5F203533 
 8309              	.LASF1117:
 8310 0774 784A7573 		.ascii	"xJustPeeking\000"
 8310      74506565 
 8310      6B696E67 
 8310      00
 8311              	.LASF101:
 8312 0781 5F5F5549 		.ascii	"__UINT8_C(c) c\000"
 8312      4E54385F 
 8312      43286329 
 8312      206300
 8313              	.LASF39:
 8314 0790 5F5F494E 		.ascii	"__INT16_TYPE__ short int\000"
 8314      5431365F 
 8314      54595045 
 8314      5F5F2073 
 8314      686F7274 
 8315              	.LASF605:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 191


 8316 07a9 5F5F616C 		.ascii	"__aligned(x) __attribute__((__aligned__(x)))\000"
 8316      69676E65 
 8316      64287829 
 8316      205F5F61 
 8316      74747269 
 8317              	.LASF855:
 8318 07d6 74726163 		.ascii	"traceEND() \000"
 8318      65454E44 
 8318      28292000 
 8319              	.LASF650:
 8320 07e2 5F5F4953 		.ascii	"__ISO_C_VISIBLE 2011\000"
 8320      4F5F435F 
 8320      56495349 
 8320      424C4520 
 8320      32303131 
 8321              	.LASF854:
 8322 07f7 74726163 		.ascii	"traceSTART() \000"
 8322      65535441 
 8322      52542829 
 8322      2000
 8323              	.LASF563:
 8324 0805 5F5F756E 		.ascii	"__unbounded \000"
 8324      626F756E 
 8324      64656420 
 8324      00
 8325              	.LASF718:
 8326 0812 494E545F 		.ascii	"INT_FAST64_MAX __INT_FAST64_MAX__\000"
 8326      46415354 
 8326      36345F4D 
 8326      4158205F 
 8326      5F494E54 
 8327              	.LASF307:
 8328 0834 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\000"
 8328      435F4841 
 8328      56455F53 
 8328      594E435F 
 8328      434F4D50 
 8329              	.LASF54:
 8330 0859 5F5F494E 		.ascii	"__INT_FAST8_TYPE__ int\000"
 8330      545F4641 
 8330      5354385F 
 8330      54595045 
 8330      5F5F2069 
 8331              	.LASF1005:
 8332 0870 78517565 		.ascii	"xQueuePeek(xQueue,pvBuffer,xTicksToWait) xQueueGene"
 8332      75655065 
 8332      656B2878 
 8332      51756575 
 8332      652C7076 
 8333 08a3 72696352 		.ascii	"ricReceive( ( xQueue ), ( pvBuffer ), ( xTicksToWai"
 8333      65636569 
 8333      76652820 
 8333      28207851 
 8333      75657565 
 8334 08d6 7420292C 		.ascii	"t ), pdTRUE )\000"
 8334      20706454 
 8334      52554520 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 192


 8334      2900
 8335              	.LASF1:
 8336 08e4 5F5F5354 		.ascii	"__STDC_HOSTED__ 1\000"
 8336      44435F48 
 8336      4F535445 
 8336      445F5F20 
 8336      3100
 8337              	.LASF221:
 8338 08f6 5F5F554C 		.ascii	"__ULLFRACT_FBIT__ 64\000"
 8338      4C465241 
 8338      43545F46 
 8338      4249545F 
 8338      5F203634 
 8339              	.LASF1085:
 8340 090b 7848616E 		.ascii	"xHandle\000"
 8340      646C6500 
 8341              	.LASF527:
 8342 0913 5F524545 		.ascii	"_REENT_MP_RESULT(ptr) ((ptr)->_result)\000"
 8342      4E545F4D 
 8342      505F5245 
 8342      53554C54 
 8342      28707472 
 8343              	.LASF57:
 8344 093a 5F5F494E 		.ascii	"__INT_FAST64_TYPE__ long long int\000"
 8344      545F4641 
 8344      53543634 
 8344      5F545950 
 8344      455F5F20 
 8345              	.LASF32:
 8346 095c 5F5F5749 		.ascii	"__WINT_TYPE__ unsigned int\000"
 8346      4E545F54 
 8346      5950455F 
 8346      5F20756E 
 8346      7369676E 
 8347              	.LASF534:
 8348 0977 5F524545 		.ascii	"_REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok"
 8348      4E545F53 
 8348      5452544F 
 8348      4B5F4C41 
 8348      53542870 
 8349 09aa 5F6C6173 		.ascii	"_last)\000"
 8349      742900
 8350              	.LASF1002:
 8351 09b1 78517565 		.ascii	"xQueueSendToBack(xQueue,pvItemToQueue,xTicksToWait)"
 8351      75655365 
 8351      6E64546F 
 8351      4261636B 
 8351      28785175 
 8352 09e4 20785175 		.ascii	" xQueueGenericSend( ( xQueue ), ( pvItemToQueue ), "
 8352      65756547 
 8352      656E6572 
 8352      69635365 
 8352      6E642820 
 8353 0a17 28207854 		.ascii	"( xTicksToWait ), queueSEND_TO_BACK )\000"
 8353      69636B73 
 8353      546F5761 
 8353      69742029 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 193


 8353      2C207175 
 8354              	.LASF876:
 8355 0a3d 74726163 		.ascii	"traceQUEUE_SEND(pxQueue) \000"
 8355      65515545 
 8355      55455F53 
 8355      454E4428 
 8355      70785175 
 8356              	.LASF414:
 8357 0a57 5F5F5349 		.ascii	"__SIZE_T__ \000"
 8357      5A455F54 
 8357      5F5F2000 
 8358              	.LASF909:
 8359 0a63 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_BLOCK(xEventGroup,uxBits"
 8359      65455645 
 8359      4E545F47 
 8359      524F5550 
 8359      5F574149 
 8360 0a96 546F5761 		.ascii	"ToWaitFor) \000"
 8360      6974466F 
 8360      72292000 
 8361              	.LASF91:
 8362 0aa2 5F5F5549 		.ascii	"__UINT64_MAX__ 18446744073709551615ULL\000"
 8362      4E543634 
 8362      5F4D4158 
 8362      5F5F2031 
 8362      38343436 
 8363              	.LASF1139:
 8364 0ac9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8364      4320342E 
 8364      392E3320 
 8364      32303135 
 8364      30333033 
 8365 0afc 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -g"
 8365      20726576 
 8365      6973696F 
 8365      6E203232 
 8365      31323230 
 8366 0b2f 67646233 		.ascii	"gdb3 -O0 -std=gnu90 -ffunction-sections -fdata-sect"
 8366      202D4F30 
 8366      202D7374 
 8366      643D676E 
 8366      75393020 
 8367 0b62 696F6E73 		.ascii	"ions\000"
 8367      00
 8368              	.LASF861:
 8369 0b67 74726163 		.ascii	"traceTASK_PRIORITY_INHERIT(pxTCBOfMutexHolder,uxInh"
 8369      65544153 
 8369      4B5F5052 
 8369      494F5249 
 8369      54595F49 
 8370 0b9a 65726974 		.ascii	"eritedPriority) \000"
 8370      65645072 
 8370      696F7269 
 8370      74792920 
 8370      00
 8371              	.LASF194:
 8372 0bab 5F5F5553 		.ascii	"__USFRACT_MAX__ 0XFFP-8UHR\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 194


 8372      46524143 
 8372      545F4D41 
 8372      585F5F20 
 8372      30584646 
 8373              	.LASF555:
 8374 0bc6 5F5F4153 		.ascii	"__ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) "
 8374      4D4E414D 
 8374      4528636E 
 8374      616D6529 
 8374      205F5F58 
 8375 0bf9 636E616D 		.ascii	"cname\000"
 8375      6500
 8376              	.LASF447:
 8377 0bff 5F5F6E65 		.ascii	"__need_wchar_t\000"
 8377      65645F77 
 8377      63686172 
 8377      5F7400
 8378              	.LASF1024:
 8379 0c0e 71756575 		.ascii	"queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_A"
 8379      65594945 
 8379      4C445F49 
 8379      465F5553 
 8379      494E475F 
 8380 0c41 50492829 		.ascii	"PI()\000"
 8380      00
 8381              	.LASF811:
 8382 0c46 706F7274 		.ascii	"portYIELD() vPortYield()\000"
 8382      5949454C 
 8382      44282920 
 8382      76506F72 
 8382      74596965 
 8383              	.LASF852:
 8384 0c5f 706F7274 		.ascii	"portSETUP_TCB(pxTCB) ( void ) pxTCB\000"
 8384      53455455 
 8384      505F5443 
 8384      42287078 
 8384      54434229 
 8385              	.LASF484:
 8386 0c83 5F5F6C6F 		.ascii	"__lock_close_recursive(lock) (_CAST_VOID 0)\000"
 8386      636B5F63 
 8386      6C6F7365 
 8386      5F726563 
 8386      75727369 
 8387              	.LASF897:
 8388 0caf 74726163 		.ascii	"traceTASK_INCREMENT_TICK(xTickCount) \000"
 8388      65544153 
 8388      4B5F494E 
 8388      4352454D 
 8388      454E545F 
 8389              	.LASF698:
 8390 0cd5 55494E54 		.ascii	"UINT32_MAX __UINT32_MAX__\000"
 8390      33325F4D 
 8390      4158205F 
 8390      5F55494E 
 8390      5433325F 
 8391              	.LASF460:
 8392 0cef 5F425344 		.ascii	"_BSD_PTRDIFF_T_ \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 195


 8392      5F505452 
 8392      44494646 
 8392      5F545F20 
 8392      00
 8393              	.LASF847:
 8394 0d00 636F6E66 		.ascii	"configASSERT_DEFINED 1\000"
 8394      69674153 
 8394      53455254 
 8394      5F444546 
 8394      494E4544 
 8395              	.LASF1070:
 8396 0d17 70635461 		.ascii	"pcTail\000"
 8396      696C00
 8397              	.LASF291:
 8398 0d1e 5F5F4441 		.ascii	"__DA_IBIT__ 32\000"
 8398      5F494249 
 8398      545F5F20 
 8398      333200
 8399              	.LASF211:
 8400 0d2d 5F5F554C 		.ascii	"__ULFRACT_FBIT__ 32\000"
 8400      46524143 
 8400      545F4642 
 8400      49545F5F 
 8400      20333200 
 8401              	.LASF429:
 8402 0d41 5F5F7369 		.ascii	"__size_t \000"
 8402      7A655F74 
 8402      2000
 8403              	.LASF562:
 8404 0d4b 5F5F626F 		.ascii	"__bounded \000"
 8404      756E6465 
 8404      642000
 8405              	.LASF679:
 8406 0d56 5F5F696E 		.ascii	"__int_fast32_t_defined 1\000"
 8406      745F6661 
 8406      73743332 
 8406      5F745F64 
 8406      6566696E 
 8407              	.LASF442:
 8408 0d6f 5F5F5F69 		.ascii	"___int_wchar_t_h \000"
 8408      6E745F77 
 8408      63686172 
 8408      5F745F68 
 8408      2000
 8409              	.LASF901:
 8410 0d81 74726163 		.ascii	"traceTIMER_EXPIRED(pxTimer) \000"
 8410      6554494D 
 8410      45525F45 
 8410      58504952 
 8410      45442870 
 8411              	.LASF1066:
 8412 0d9e 70635265 		.ascii	"pcReadFrom\000"
 8412      61644672 
 8412      6F6D00
 8413              	.LASF734:
 8414 0da9 494E5431 		.ascii	"INT16_C(x) __INT16_C(x)\000"
 8414      365F4328 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 196


 8414      7829205F 
 8414      5F494E54 
 8414      31365F43 
 8415              	.LASF378:
 8416 0dc1 5F504F49 		.ascii	"_POINTER_INT long\000"
 8416      4E544552 
 8416      5F494E54 
 8416      206C6F6E 
 8416      6700
 8417              	.LASF190:
 8418 0dd3 5F5F5346 		.ascii	"__SFRACT_EPSILON__ 0x1P-7HR\000"
 8418      52414354 
 8418      5F455053 
 8418      494C4F4E 
 8418      5F5F2030 
 8419              	.LASF593:
 8420 0def 5F5F434F 		.ascii	"__CONCAT1(x,y) x ## y\000"
 8420      4E434154 
 8420      3128782C 
 8420      79292078 
 8420      20232320 
 8421              	.LASF418:
 8422 0e05 5F545F53 		.ascii	"_T_SIZE \000"
 8422      495A4520 
 8422      00
 8423              	.LASF97:
 8424 0e0e 5F5F494E 		.ascii	"__INT32_C(c) c ## L\000"
 8424      5433325F 
 8424      43286329 
 8424      20632023 
 8424      23204C00 
 8425              	.LASF280:
 8426 0e22 5F5F5553 		.ascii	"__USQ_FBIT__ 32\000"
 8426      515F4642 
 8426      49545F5F 
 8426      20333200 
 8427              	.LASF24:
 8428 0e32 5F5F4F52 		.ascii	"__ORDER_BIG_ENDIAN__ 4321\000"
 8428      4445525F 
 8428      4249475F 
 8428      454E4449 
 8428      414E5F5F 
 8429              	.LASF270:
 8430 0e4c 5F5F5351 		.ascii	"__SQ_FBIT__ 31\000"
 8430      5F464249 
 8430      545F5F20 
 8430      333100
 8431              	.LASF1122:
 8432 0e5b 75785265 		.ascii	"uxReturn\000"
 8432      7475726E 
 8432      00
 8433              	.LASF1007:
 8434 0e64 78517565 		.ascii	"xQueueSendToFrontFromISR(xQueue,pvItemToQueue,pxHig"
 8434      75655365 
 8434      6E64546F 
 8434      46726F6E 
 8434      7446726F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 197


 8435 0e97 68657250 		.ascii	"herPriorityTaskWoken) xQueueGenericSendFromISR( ( x"
 8435      72696F72 
 8435      69747954 
 8435      61736B57 
 8435      6F6B656E 
 8436 0eca 51756575 		.ascii	"Queue ), ( pvItemToQueue ), ( pxHigherPriorityTaskW"
 8436      6520292C 
 8436      20282070 
 8436      76497465 
 8436      6D546F51 
 8437 0efd 6F6B656E 		.ascii	"oken ), queueSEND_TO_FRONT )\000"
 8437      20292C20 
 8437      71756575 
 8437      6553454E 
 8437      445F544F 
 8438              	.LASF684:
 8439 0f1a 494E5438 		.ascii	"INT8_MIN (-__INT8_MAX__ - 1)\000"
 8439      5F4D494E 
 8439      20282D5F 
 8439      5F494E54 
 8439      385F4D41 
 8440              	.LASF1048:
 8441 0f37 70784E65 		.ascii	"pxNext\000"
 8441      787400
 8442              	.LASF922:
 8443 0f3e 706F7274 		.ascii	"portYIELD_WITHIN_API portYIELD\000"
 8443      5949454C 
 8443      445F5749 
 8443      5448494E 
 8443      5F415049 
 8444              	.LASF278:
 8445 0f5d 5F5F5548 		.ascii	"__UHQ_FBIT__ 16\000"
 8445      515F4642 
 8445      49545F5F 
 8445      20313600 
 8446              	.LASF432:
 8447 0f6d 5F5F5743 		.ascii	"__WCHAR_T__ \000"
 8447      4841525F 
 8447      545F5F20 
 8447      00
 8448              	.LASF509:
 8449 0f7a 5F524545 		.ascii	"_REENT_EMERGENCY_SIZE 25\000"
 8449      4E545F45 
 8449      4D455247 
 8449      454E4359 
 8449      5F53495A 
 8450              	.LASF776:
 8451 0f93 636F6E66 		.ascii	"configIP_ADDR3 201\000"
 8451      69674950 
 8451      5F414444 
 8451      52332032 
 8451      303100
 8452              	.LASF635:
 8453 0fa6 5F5F7765 		.ascii	"__weak_reference(sym,alias) __asm__(\".weak \" #ali"
 8453      616B5F72 
 8453      65666572 
 8453      656E6365 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 198


 8453      2873796D 
 8454 0fd7 6173293B 		.ascii	"as); __asm__(\".equ \" #alias \", \" #sym)\000"
 8454      205F5F61 
 8454      736D5F5F 
 8454      28222E65 
 8454      71752022 
 8455              	.LASF1092:
 8456 0ffe 75785175 		.ascii	"uxQueueLength\000"
 8456      6575654C 
 8456      656E6774 
 8456      6800
 8457              	.LASF170:
 8458 100c 5F5F4445 		.ascii	"__DEC32_EPSILON__ 1E-6DF\000"
 8458      4333325F 
 8458      45505349 
 8458      4C4F4E5F 
 8458      5F203145 
 8459              	.LASF565:
 8460 1025 5F5F6861 		.ascii	"__has_extension __has_feature\000"
 8460      735F6578 
 8460      74656E73 
 8460      696F6E20 
 8460      5F5F6861 
 8461              	.LASF448:
 8462 1043 4E554C4C 		.ascii	"NULL\000"
 8462      00
 8463              	.LASF516:
 8464 1048 5F524545 		.ascii	"_REENT_CHECK_MP(ptr) \000"
 8464      4E545F43 
 8464      4845434B 
 8464      5F4D5028 
 8464      70747229 
 8465              	.LASF247:
 8466 105e 5F5F4C41 		.ascii	"__LACCUM_IBIT__ 32\000"
 8466      4343554D 
 8466      5F494249 
 8466      545F5F20 
 8466      333200
 8467              	.LASF1098:
 8468 1071 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8468      75654769 
 8468      76654D75 
 8468      74657852 
 8468      65637572 
 8469              	.LASF1030:
 8470 108a 5F5F7569 		.ascii	"__uint8_t\000"
 8470      6E74385F 
 8470      7400
 8471              	.LASF287:
 8472 1094 5F5F4841 		.ascii	"__HA_IBIT__ 8\000"
 8472      5F494249 
 8472      545F5F20 
 8472      3800
 8473              	.LASF358:
 8474 10a2 5F5F4E45 		.ascii	"__NEWLIB_H__ 1\000"
 8474      574C4942 
 8474      5F485F5F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 199


 8474      203100
 8475              	.LASF85:
 8476 10b1 5F5F494E 		.ascii	"__INT16_MAX__ 32767\000"
 8476      5431365F 
 8476      4D41585F 
 8476      5F203332 
 8476      37363700 
 8477              	.LASF778:
 8478 10c5 636F6E66 		.ascii	"configNET_MASK1 255\000"
 8478      69674E45 
 8478      545F4D41 
 8478      534B3120 
 8478      32353500 
 8479              	.LASF344:
 8480 10d9 5F5F5646 		.ascii	"__VFP_FP__ 1\000"
 8480      505F4650 
 8480      5F5F2031 
 8480      00
 8481              	.LASF848:
 8482 10e6 494E434C 		.ascii	"INCLUDE_xTaskGetSchedulerState 0\000"
 8482      5544455F 
 8482      78546173 
 8482      6B476574 
 8482      53636865 
 8483              	.LASF218:
 8484 1107 5F5F4C4C 		.ascii	"__LLFRACT_MIN__ (-0.5LLR-0.5LLR)\000"
 8484      46524143 
 8484      545F4D49 
 8484      4E5F5F20 
 8484      282D302E 
 8485              	.LASF1140:
 8486 1128 46726565 		.ascii	"FreeRTOS/queue.c\000"
 8486      52544F53 
 8486      2F717565 
 8486      75652E63 
 8486      00
 8487              	.LASF78:
 8488 1139 5F5F494E 		.ascii	"__INTMAX_MAX__ 9223372036854775807LL\000"
 8488      544D4158 
 8488      5F4D4158 
 8488      5F5F2039 
 8488      32323333 
 8489              	.LASF379:
 8490 115e 5F5F5241 		.ascii	"__RAND_MAX\000"
 8490      4E445F4D 
 8490      415800
 8491              	.LASF935:
 8492 1169 6D74434F 		.ascii	"mtCOVERAGE_TEST_MARKER() \000"
 8492      56455241 
 8492      47455F54 
 8492      4553545F 
 8492      4D41524B 
 8493              	.LASF705:
 8494 1183 494E545F 		.ascii	"INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)\000"
 8494      4C454153 
 8494      5436345F 
 8494      4D494E20 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 200


 8494      282D5F5F 
 8495              	.LASF62:
 8496 11ae 5F5F494E 		.ascii	"__INTPTR_TYPE__ int\000"
 8496      54505452 
 8496      5F545950 
 8496      455F5F20 
 8496      696E7400 
 8497              	.LASF984:
 8498 11c2 7461736B 		.ascii	"taskENABLE_INTERRUPTS() portENABLE_INTERRUPTS()\000"
 8498      454E4142 
 8498      4C455F49 
 8498      4E544552 
 8498      52555054 
 8499              	.LASF576:
 8500 11f2 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_CONSTANT_P 1\000"
 8500      55434C49 
 8500      4B455F42 
 8500      55494C54 
 8500      494E5F43 
 8501              	.LASF119:
 8502 1212 5F5F4743 		.ascii	"__GCC_IEC_559_COMPLEX 0\000"
 8502      435F4945 
 8502      435F3535 
 8502      395F434F 
 8502      4D504C45 
 8503              	.LASF376:
 8504 122a 5F5F474E 		.ascii	"__GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_M"
 8504      55435F50 
 8504      52455245 
 8504      51286D61 
 8504      6A2C6D69 
 8505 125d 494E4F52 		.ascii	"INOR__ >= ((maj) << 16) + (min))\000"
 8505      5F5F203E 
 8505      3D202828 
 8505      6D616A29 
 8505      203C3C20 
 8506              	.LASF203:
 8507 127e 5F5F5546 		.ascii	"__UFRACT_MIN__ 0.0UR\000"
 8507      52414354 
 8507      5F4D494E 
 8507      5F5F2030 
 8507      2E305552 
 8508              	.LASF879:
 8509 1293 74726163 		.ascii	"traceQUEUE_PEEK(pxQueue) \000"
 8509      65515545 
 8509      55455F50 
 8509      45454B28 
 8509      70785175 
 8510              	.LASF164:
 8511 12ad 5F5F4C44 		.ascii	"__LDBL_HAS_QUIET_NAN__ 1\000"
 8511      424C5F48 
 8511      41535F51 
 8511      55494554 
 8511      5F4E414E 
 8512              	.LASF392:
 8513 12c6 5F434F4E 		.ascii	"_CONST const\000"
 8513      53542063 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 201


 8513      6F6E7374 
 8513      00
 8514              	.LASF977:
 8515 12d3 74736B4B 		.ascii	"tskKERNEL_VERSION_MINOR 1\000"
 8515      45524E45 
 8515      4C5F5645 
 8515      5253494F 
 8515      4E5F4D49 
 8516              	.LASF1136:
 8517 12ed 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8517      75654973 
 8517      51756575 
 8517      6546756C 
 8517      6C46726F 
 8518              	.LASF714:
 8519 1306 494E545F 		.ascii	"INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)\000"
 8519      46415354 
 8519      33325F4D 
 8519      494E2028 
 8519      2D5F5F49 
 8520              	.LASF416:
 8521 132f 5F535953 		.ascii	"_SYS_SIZE_T_H \000"
 8521      5F53495A 
 8521      455F545F 
 8521      482000
 8522              	.LASF524:
 8523 133e 5F524545 		.ascii	"_REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._s"
 8523      4E545F52 
 8523      414E4434 
 8523      385F5345 
 8523      45442870 
 8524 1371 65656429 		.ascii	"eed)\000"
 8524      00
 8525              	.LASF50:
 8526 1376 5F5F5549 		.ascii	"__UINT_LEAST8_TYPE__ unsigned char\000"
 8526      4E545F4C 
 8526      45415354 
 8526      385F5459 
 8526      50455F5F 
 8527              	.LASF1133:
 8528 1399 70727649 		.ascii	"prvIsQueueEmpty\000"
 8528      73517565 
 8528      7565456D 
 8528      70747900 
 8529              	.LASF236:
 8530 13a9 5F5F4143 		.ascii	"__ACCUM_FBIT__ 15\000"
 8530      43554D5F 
 8530      46424954 
 8530      5F5F2031 
 8530      3500
 8531              	.LASF798:
 8532 13bb 706F7274 		.ascii	"portCHAR char\000"
 8532      43484152 
 8532      20636861 
 8532      7200
 8533              	.LASF242:
 8534 13c9 5F5F5541 		.ascii	"__UACCUM_IBIT__ 16\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 202


 8534      4343554D 
 8534      5F494249 
 8534      545F5F20 
 8534      313600
 8535              	.LASF1034:
 8536 13dc 6C6F6E67 		.ascii	"long int\000"
 8536      20696E74 
 8536      00
 8537              	.LASF115:
 8538 13e5 5F5F5549 		.ascii	"__UINT_FAST64_MAX__ 18446744073709551615ULL\000"
 8538      4E545F46 
 8538      41535436 
 8538      345F4D41 
 8538      585F5F20 
 8539              	.LASF723:
 8540 1411 53495A45 		.ascii	"SIZE_MAX __SIZE_MAX__\000"
 8540      5F4D4158 
 8540      205F5F53 
 8540      495A455F 
 8540      4D41585F 
 8541              	.LASF1093:
 8542 1427 70785175 		.ascii	"pxQueue\000"
 8542      65756500 
 8543              	.LASF145:
 8544 142f 5F5F4442 		.ascii	"__DBL_MIN__ ((double)2.2250738585072014e-308L)\000"
 8544      4C5F4D49 
 8544      4E5F5F20 
 8544      2828646F 
 8544      75626C65 
 8545              	.LASF842:
 8546 145e 636F6E66 		.ascii	"configUSE_TIMERS 0\000"
 8546      69675553 
 8546      455F5449 
 8546      4D455253 
 8546      203000
 8547              	.LASF903:
 8548 1471 74726163 		.ascii	"traceMALLOC(pvAddress,uiSize) \000"
 8548      654D414C 
 8548      4C4F4328 
 8548      70764164 
 8548      64726573 
 8549              	.LASF474:
 8550 1490 5F5F5F69 		.ascii	"___int_least16_t_defined 1\000"
 8550      6E745F6C 
 8550      65617374 
 8550      31365F74 
 8550      5F646566 
 8551              	.LASF72:
 8552 14ab 5F5F5743 		.ascii	"__WCHAR_MAX__ 4294967295U\000"
 8552      4841525F 
 8552      4D41585F 
 8552      5F203432 
 8552      39343936 
 8553              	.LASF1068:
 8554 14c5 51756575 		.ascii	"QueueDefinition\000"
 8554      65446566 
 8554      696E6974 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 203


 8554      696F6E00 
 8555              	.LASF367:
 8556 14d5 5F4C4442 		.ascii	"_LDBL_EQ_DBL 1\000"
 8556      4C5F4551 
 8556      5F44424C 
 8556      203100
 8557              	.LASF408:
 8558 14e4 5F4E4F49 		.ascii	"_NOINLINE __attribute__ ((__noinline__))\000"
 8558      4E4C494E 
 8558      45205F5F 
 8558      61747472 
 8558      69627574 
 8559              	.LASF298:
 8560 150d 5F5F5544 		.ascii	"__UDA_FBIT__ 32\000"
 8560      415F4642 
 8560      49545F5F 
 8560      20333200 
 8561              	.LASF512:
 8562 151d 5F4E5F4C 		.ascii	"_N_LISTS 30\000"
 8562      49535453 
 8562      20333000 
 8563              	.LASF994:
 8564 1529 71756575 		.ascii	"queueQUEUE_TYPE_BASE ( ( uint8_t ) 0U )\000"
 8564      65515545 
 8564      55455F54 
 8564      5950455F 
 8564      42415345 
 8565              	.LASF235:
 8566 1551 5F5F5553 		.ascii	"__USACCUM_EPSILON__ 0x1P-8UHK\000"
 8566      41434355 
 8566      4D5F4550 
 8566      53494C4F 
 8566      4E5F5F20 
 8567              	.LASF81:
 8568 156f 5F5F5549 		.ascii	"__UINTMAX_C(c) c ## ULL\000"
 8568      4E544D41 
 8568      585F4328 
 8568      63292063 
 8568      20232320 
 8569              	.LASF972:
 8570 1587 6C697374 		.ascii	"listIS_CONTAINED_WITHIN(pxList,pxListItem) ( ( Base"
 8570      49535F43 
 8570      4F4E5441 
 8570      494E4544 
 8570      5F574954 
 8571 15ba 545F7420 		.ascii	"T_t ) ( ( pxListItem )->pvContainer == ( void * ) ("
 8571      29202820 
 8571      28207078 
 8571      4C697374 
 8571      4974656D 
 8572 15ed 2070784C 		.ascii	" pxList ) ) )\000"
 8572      69737420 
 8572      29202920 
 8572      2900
 8573              	.LASF28:
 8574 15fb 5F5F5349 		.ascii	"__SIZEOF_POINTER__ 4\000"
 8574      5A454F46 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 204


 8574      5F504F49 
 8574      4E544552 
 8574      5F5F2034 
 8575              	.LASF46:
 8576 1610 5F5F494E 		.ascii	"__INT_LEAST8_TYPE__ signed char\000"
 8576      545F4C45 
 8576      41535438 
 8576      5F545950 
 8576      455F5F20 
 8577              	.LASF310:
 8578 1630 5F5F4743 		.ascii	"__GCC_ATOMIC_BOOL_LOCK_FREE 2\000"
 8578      435F4154 
 8578      4F4D4943 
 8578      5F424F4F 
 8578      4C5F4C4F 
 8579              	.LASF407:
 8580 164e 5F454C49 		.ascii	"_ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__a"
 8580      4441424C 
 8580      455F494E 
 8580      4C494E45 
 8580      20657874 
 8581 1681 6C776179 		.ascii	"lways_inline__))\000"
 8581      735F696E 
 8581      6C696E65 
 8581      5F5F2929 
 8581      00
 8582              	.LASF1135:
 8583 1692 70727649 		.ascii	"prvIsQueueFull\000"
 8583      73517565 
 8583      75654675 
 8583      6C6C00
 8584              	.LASF1025:
 8585 16a1 7072764C 		.ascii	"prvLockQueue(pxQueue) taskENTER_CRITICAL(); { if( ("
 8585      6F636B51 
 8585      75657565 
 8585      28707851 
 8585      75657565 
 8586 16d4 20707851 		.ascii	" pxQueue )->xRxLock == queueUNLOCKED ) { ( pxQueue "
 8586      75657565 
 8586      20292D3E 
 8586      7852784C 
 8586      6F636B20 
 8587 1707 292D3E78 		.ascii	")->xRxLock = queueLOCKED_UNMODIFIED; } if( ( pxQueu"
 8587      52784C6F 
 8587      636B203D 
 8587      20717565 
 8587      75654C4F 
 8588 173a 6520292D 		.ascii	"e )->xTxLock == queueUNLOCKED ) { ( pxQueue )->xTxL"
 8588      3E785478 
 8588      4C6F636B 
 8588      203D3D20 
 8588      71756575 
 8589 176d 6F636B20 		.ascii	"ock = queueLOCKED_UNMODIFIED; } } taskEXIT_CRITICAL"
 8589      3D207175 
 8589      6575654C 
 8589      4F434B45 
 8589      445F554E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 205


 8590 17a0 282900   		.ascii	"()\000"
 8591              	.LASF288:
 8592 17a3 5F5F5341 		.ascii	"__SA_FBIT__ 15\000"
 8592      5F464249 
 8592      545F5F20 
 8592      313500
 8593              	.LASF109:
 8594 17b2 5F5F494E 		.ascii	"__INT_FAST16_MAX__ 2147483647\000"
 8594      545F4641 
 8594      53543136 
 8594      5F4D4158 
 8594      5F5F2032 
 8595              	.LASF689:
 8596 17d0 55494E54 		.ascii	"UINT_LEAST8_MAX __UINT_LEAST8_MAX__\000"
 8596      5F4C4541 
 8596      5354385F 
 8596      4D415820 
 8596      5F5F5549 
 8597              	.LASF292:
 8598 17f4 5F5F5441 		.ascii	"__TA_FBIT__ 63\000"
 8598      5F464249 
 8598      545F5F20 
 8598      363300
 8599              	.LASF347:
 8600 1803 5F5F5448 		.ascii	"__THUMB_INTERWORK__ 1\000"
 8600      554D425F 
 8600      494E5445 
 8600      52574F52 
 8600      4B5F5F20 
 8601              	.LASF224:
 8602 1819 5F5F554C 		.ascii	"__ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR\000"
 8602      4C465241 
 8602      43545F4D 
 8602      41585F5F 
 8602      20305846 
 8603              	.LASF84:
 8604 1845 5F5F494E 		.ascii	"__INT8_MAX__ 127\000"
 8604      54385F4D 
 8604      41585F5F 
 8604      20313237 
 8604      00
 8605              	.LASF938:
 8606 1856 65546173 		.ascii	"eTaskStateGet eTaskGetState\000"
 8606      6B537461 
 8606      74654765 
 8606      74206554 
 8606      61736B47 
 8607              	.LASF710:
 8608 1872 55494E54 		.ascii	"UINT_FAST8_MAX __UINT_FAST8_MAX__\000"
 8608      5F464153 
 8608      54385F4D 
 8608      4158205F 
 8608      5F55494E 
 8609              	.LASF597:
 8610 1894 5F5F636F 		.ascii	"__const const\000"
 8610      6E737420 
 8610      636F6E73 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 206


 8610      7400
 8611              	.LASF425:
 8612 18a2 5F53495A 		.ascii	"_SIZE_T_DECLARED \000"
 8612      455F545F 
 8612      4445434C 
 8612      41524544 
 8612      2000
 8613              	.LASF686:
 8614 18b4 55494E54 		.ascii	"UINT8_MAX __UINT8_MAX__\000"
 8614      385F4D41 
 8614      58205F5F 
 8614      55494E54 
 8614      385F4D41 
 8615              	.LASF36:
 8616 18cc 5F5F4348 		.ascii	"__CHAR32_TYPE__ long unsigned int\000"
 8616      41523332 
 8616      5F545950 
 8616      455F5F20 
 8616      6C6F6E67 
 8617              	.LASF591:
 8618 18ee 5F5F4343 		.ascii	"__CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1\000"
 8618      5F535550 
 8618      504F5254 
 8618      535F4459 
 8618      4E414D49 
 8619              	.LASF993:
 8620 1911 71756575 		.ascii	"queueOVERWRITE ( ( BaseT_t ) 2 )\000"
 8620      654F5645 
 8620      52575249 
 8620      54452028 
 8620      20282042 
 8621              	.LASF127:
 8622 1932 5F5F464C 		.ascii	"__FLT_MAX_EXP__ 128\000"
 8622      545F4D41 
 8622      585F4558 
 8622      505F5F20 
 8622      31323800 
 8623              	.LASF14:
 8624 1946 5F5F5349 		.ascii	"__SIZEOF_LONG__ 4\000"
 8624      5A454F46 
 8624      5F4C4F4E 
 8624      475F5F20 
 8624      3400
 8625              	.LASF592:
 8626 1958 5F5F5028 		.ascii	"__P(protos) protos\000"
 8626      70726F74 
 8626      6F732920 
 8626      70726F74 
 8626      6F7300
 8627              	.LASF974:
 8628 196b 6C697374 		.ascii	"listLIST_IS_INITIALISED(pxList) ( ( pxList )->xList"
 8628      4C495354 
 8628      5F49535F 
 8628      494E4954 
 8628      49414C49 
 8629 199e 456E642E 		.ascii	"End.xItemValue == portMAX_DELAY )\000"
 8629      78497465 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 207


 8629      6D56616C 
 8629      7565203D 
 8629      3D20706F 
 8630              	.LASF405:
 8631 19c0 5F504152 		.ascii	"_PARAMS(paramlist) paramlist\000"
 8631      414D5328 
 8631      70617261 
 8631      6D6C6973 
 8631      74292070 
 8632              	.LASF1008:
 8633 19dd 78517565 		.ascii	"xQueueSendToBackFromISR(xQueue,pvItemToQueue,pxHigh"
 8633      75655365 
 8633      6E64546F 
 8633      4261636B 
 8633      46726F6D 
 8634 1a10 65725072 		.ascii	"erPriorityTaskWoken) xQueueGenericSendFromISR( ( xQ"
 8634      696F7269 
 8634      74795461 
 8634      736B576F 
 8634      6B656E29 
 8635 1a43 75657565 		.ascii	"ueue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWo"
 8635      20292C20 
 8635      28207076 
 8635      4974656D 
 8635      546F5175 
 8636 1a76 6B656E20 		.ascii	"ken ), queueSEND_TO_BACK )\000"
 8636      292C2071 
 8636      75657565 
 8636      53454E44 
 8636      5F544F5F 
 8637              	.LASF384:
 8638 1a91 5F524541 		.ascii	"_READ_WRITE_BUFSIZE_TYPE int\000"
 8638      445F5752 
 8638      4954455F 
 8638      42554653 
 8638      495A455F 
 8639              	.LASF898:
 8640 1aae 74726163 		.ascii	"traceTIMER_CREATE(pxNewTimer) \000"
 8640      6554494D 
 8640      45525F43 
 8640      52454154 
 8640      45287078 
 8641              	.LASF18:
 8642 1acd 5F5F5349 		.ascii	"__SIZEOF_DOUBLE__ 8\000"
 8642      5A454F46 
 8642      5F444F55 
 8642      424C455F 
 8642      5F203800 
 8643              	.LASF929:
 8644 1ae1 636F6E66 		.ascii	"configUSE_QUEUE_SETS 0\000"
 8644      69675553 
 8644      455F5155 
 8644      4555455F 
 8644      53455453 
 8645              	.LASF833:
 8646 1af8 50524956 		.ascii	"PRIVILEGED_DATA \000"
 8646      494C4547 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 208


 8646      45445F44 
 8646      41544120 
 8646      00
 8647              	.LASF1112:
 8648 1b09 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8648      75654765 
 8648      6E657269 
 8648      6353656E 
 8648      6446726F 
 8649              	.LASF1079:
 8650 1b22 75785175 		.ascii	"uxQueueNumber\000"
 8650      6575654E 
 8650      756D6265 
 8650      7200
 8651              	.LASF915:
 8652 1b30 74726163 		.ascii	"traceEVENT_GROUP_DELETE(xEventGroup) \000"
 8652      65455645 
 8652      4E545F47 
 8652      524F5550 
 8652      5F44454C 
 8653              	.LASF998:
 8654 1b56 71756575 		.ascii	"queueQUEUE_TYPE_BINARY_SEMAPHORE ( ( uint8_t ) 3U )"
 8654      65515545 
 8654      55455F54 
 8654      5950455F 
 8654      42494E41 
 8655 1b89 00       		.ascii	"\000"
 8656              	.LASF176:
 8657 1b8a 5F5F4445 		.ascii	"__DEC64_MAX__ 9.999999999999999E384DD\000"
 8657      4336345F 
 8657      4D41585F 
 8657      5F20392E 
 8657      39393939 
 8658              	.LASF374:
 8659 1bb0 5F5F4E45 		.ascii	"__NEWLIB__ 2\000"
 8659      574C4942 
 8659      5F5F2032 
 8659      00
 8660              	.LASF795:
 8661 1bbd 65727251 		.ascii	"errQUEUE_YIELD ( -5 )\000"
 8661      55455545 
 8661      5F594945 
 8661      4C442028 
 8661      202D3520 
 8662              	.LASF657:
 8663 1bd3 45584954 		.ascii	"EXIT_SUCCESS 0\000"
 8663      5F535543 
 8663      43455353 
 8663      203000
 8664              	.LASF300:
 8665 1be2 5F5F5554 		.ascii	"__UTA_FBIT__ 64\000"
 8665      415F4642 
 8665      49545F5F 
 8665      20363400 
 8666              	.LASF180:
 8667 1bf2 5F5F4445 		.ascii	"__DEC128_MIN_EXP__ (-6142)\000"
 8667      43313238 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 209


 8667      5F4D494E 
 8667      5F455850 
 8667      5F5F2028 
 8668              	.LASF129:
 8669 1c0d 5F5F464C 		.ascii	"__FLT_DECIMAL_DIG__ 9\000"
 8669      545F4445 
 8669      43494D41 
 8669      4C5F4449 
 8669      475F5F20 
 8670              	.LASF850:
 8671 1c23 706F7274 		.ascii	"portCLEAN_UP_TCB(pxTCB) ( void ) pxTCB\000"
 8671      434C4541 
 8671      4E5F5550 
 8671      5F544342 
 8671      28707854 
 8672              	.LASF654:
 8673 1c4a 616C6C6F 		.ascii	"alloca(size) __builtin_alloca(size)\000"
 8673      63612873 
 8673      697A6529 
 8673      205F5F62 
 8673      75696C74 
 8674              	.LASF1065:
 8675 1c6e 51756575 		.ascii	"QueueHandle_t\000"
 8675      6548616E 
 8675      646C655F 
 8675      7400
 8676              	.LASF1029:
 8677 1c7c 7369676E 		.ascii	"signed char\000"
 8677      65642063 
 8677      68617200 
 8678              	.LASF1042:
 8679 1c88 75696E74 		.ascii	"uint8_t\000"
 8679      385F7400 
 8680              	.LASF721:
 8681 1c90 494E544D 		.ascii	"INTMAX_MIN (-INTMAX_MAX - 1)\000"
 8681      41585F4D 
 8681      494E2028 
 8681      2D494E54 
 8681      4D41585F 
 8682              	.LASF964:
 8683 1cad 6C697374 		.ascii	"listGET_ITEM_VALUE_OF_HEAD_ENTRY(pxList) ( ( ( pxLi"
 8683      4745545F 
 8683      4954454D 
 8683      5F56414C 
 8683      55455F4F 
 8684 1ce0 73742029 		.ascii	"st )->xListEnd ).pxNext->xItemValue )\000"
 8684      2D3E784C 
 8684      69737445 
 8684      6E642029 
 8684      2E70784E 
 8685              	.LASF556:
 8686 1d06 5F5F7074 		.ascii	"__ptr_t void *\000"
 8686      725F7420 
 8686      766F6964 
 8686      202A00
 8687              	.LASF619:
 8688 1d15 5F5F7265 		.ascii	"__returns_twice __attribute__((__returns_twice__))\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 210


 8688      7475726E 
 8688      735F7477 
 8688      69636520 
 8688      5F5F6174 
 8689              	.LASF526:
 8690 1d48 5F524545 		.ascii	"_REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._ad"
 8690      4E545F52 
 8690      414E4434 
 8690      385F4144 
 8690      44287074 
 8691 1d7b 642900   		.ascii	"d)\000"
 8692              	.LASF615:
 8693 1d7e 5F5F616C 		.ascii	"__always_inline __attribute__((__always_inline__))\000"
 8693      77617973 
 8693      5F696E6C 
 8693      696E6520 
 8693      5F5F6174 
 8694              	.LASF196:
 8695 1db1 5F5F4652 		.ascii	"__FRACT_FBIT__ 15\000"
 8695      4143545F 
 8695      46424954 
 8695      5F5F2031 
 8695      3500
 8696              	.LASF945:
 8697 1dc3 7854696D 		.ascii	"xTimeOutType TimeOut_t\000"
 8697      654F7574 
 8697      54797065 
 8697      2054696D 
 8697      654F7574 
 8698              	.LASF260:
 8699 1dda 5F5F4C4C 		.ascii	"__LLACCUM_EPSILON__ 0x1P-31LLK\000"
 8699      41434355 
 8699      4D5F4550 
 8699      53494C4F 
 8699      4E5F5F20 
 8700              	.LASF313:
 8701 1df9 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\000"
 8701      435F4154 
 8701      4F4D4943 
 8701      5F434841 
 8701      5233325F 
 8702              	.LASF4:
 8703 1e1b 5F5F474E 		.ascii	"__GNUC_PATCHLEVEL__ 3\000"
 8703      55435F50 
 8703      41544348 
 8703      4C455645 
 8703      4C5F5F20 
 8704              	.LASF504:
 8705 1e31 5F52414E 		.ascii	"_RAND48_SEED_2 (0x1234)\000"
 8705      4434385F 
 8705      53454544 
 8705      5F322028 
 8705      30783132 
 8706              	.LASF927:
 8707 1e49 636F6E66 		.ascii	"configPRE_SLEEP_PROCESSING(x) \000"
 8707      69675052 
 8707      455F534C 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 211


 8707      4545505F 
 8707      50524F43 
 8708              	.LASF906:
 8709 1e68 74726163 		.ascii	"traceEVENT_GROUP_CREATE_FAILED() \000"
 8709      65455645 
 8709      4E545F47 
 8709      524F5550 
 8709      5F435245 
 8710              	.LASF683:
 8711 1e8a 55494E54 		.ascii	"UINTPTR_MAX __UINTPTR_MAX__\000"
 8711      5054525F 
 8711      4D415820 
 8711      5F5F5549 
 8711      4E545054 
 8712              	.LASF528:
 8713 1ea6 5F524545 		.ascii	"_REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)\000"
 8713      4E545F4D 
 8713      505F5245 
 8713      53554C54 
 8713      5F4B2870 
 8714              	.LASF890:
 8715 1ed1 74726163 		.ascii	"traceTASK_DELETE(pxTaskToDelete) \000"
 8715      65544153 
 8715      4B5F4445 
 8715      4C455445 
 8715      28707854 
 8716              	.LASF401:
 8717 1ef3 5F444546 		.ascii	"_DEFUN(name,arglist,args) name(args)\000"
 8717      554E286E 
 8717      616D652C 
 8717      6172676C 
 8717      6973742C 
 8718              	.LASF621:
 8719 1f18 5F5F7072 		.ascii	"__predict_true(exp) __builtin_expect((exp), 1)\000"
 8719      65646963 
 8719      745F7472 
 8719      75652865 
 8719      78702920 
 8720              	.LASF866:
 8721 1f47 74726163 		.ascii	"traceQUEUE_CREATE(pxNewQueue) \000"
 8721      65515545 
 8721      55455F43 
 8721      52454154 
 8721      45287078 
 8722              	.LASF542:
 8723 1f66 5F524545 		.ascii	"_REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wc"
 8723      4E545F57 
 8723      43535254 
 8723      4F4D4253 
 8723      5F535441 
 8724 1f99 7372746F 		.ascii	"srtombs_state)\000"
 8724      6D62735F 
 8724      73746174 
 8724      652900
 8725              	.LASF711:
 8726 1fa8 494E545F 		.ascii	"INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)\000"
 8726      46415354 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 212


 8726      31365F4D 
 8726      494E2028 
 8726      2D5F5F49 
 8727              	.LASF752:
 8728 1fd1 636F6E66 		.ascii	"configMAX_TASK_NAME_LEN ( 12 )\000"
 8728      69674D41 
 8728      585F5441 
 8728      534B5F4E 
 8728      414D455F 
 8729              	.LASF1072:
 8730 1ff0 78546173 		.ascii	"xTasksWaitingToSend\000"
 8730      6B735761 
 8730      6974696E 
 8730      67546F53 
 8730      656E6400 
 8731              	.LASF560:
 8732 2004 5F5F6174 		.ascii	"__attribute_format_strfmon__(a,b) \000"
 8732      74726962 
 8732      7574655F 
 8732      666F726D 
 8732      61745F73 
 8733              	.LASF424:
 8734 2027 5F425344 		.ascii	"_BSD_SIZE_T_DEFINED_ \000"
 8734      5F53495A 
 8734      455F545F 
 8734      44454649 
 8734      4E45445F 
 8735              	.LASF471:
 8736 203d 5F5F5F69 		.ascii	"___int32_t_defined 1\000"
 8736      6E743332 
 8736      5F745F64 
 8736      6566696E 
 8736      65642031 
 8737              	.LASF60:
 8738 2052 5F5F5549 		.ascii	"__UINT_FAST32_TYPE__ unsigned int\000"
 8738      4E545F46 
 8738      41535433 
 8738      325F5459 
 8738      50455F5F 
 8739              	.LASF426:
 8740 2074 5F5F5F69 		.ascii	"___int_size_t_h \000"
 8740      6E745F73 
 8740      697A655F 
 8740      745F6820 
 8740      00
 8741              	.LASF17:
 8742 2085 5F5F5349 		.ascii	"__SIZEOF_FLOAT__ 4\000"
 8742      5A454F46 
 8742      5F464C4F 
 8742      41545F5F 
 8742      203400
 8743              	.LASF227:
 8744 2098 5F5F5341 		.ascii	"__SACCUM_IBIT__ 8\000"
 8744      4343554D 
 8744      5F494249 
 8744      545F5F20 
 8744      3800
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 213


 8745              	.LASF583:
 8746 20aa 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_RELOPS \000"
 8746      55434C49 
 8746      4B455F4D 
 8746      4154485F 
 8746      4255494C 
 8747              	.LASF128:
 8748 20ca 5F5F464C 		.ascii	"__FLT_MAX_10_EXP__ 38\000"
 8748      545F4D41 
 8748      585F3130 
 8748      5F455850 
 8748      5F5F2033 
 8749              	.LASF552:
 8750 20e0 5F5F504D 		.ascii	"__PMT(args) args\000"
 8750      54286172 
 8750      67732920 
 8750      61726773 
 8750      00
 8751              	.LASF886:
 8752 20f1 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR_FAILED(pxQueue) \000"
 8752      65515545 
 8752      55455F50 
 8752      45454B5F 
 8752      46524F4D 
 8753              	.LASF199:
 8754 211b 5F5F4652 		.ascii	"__FRACT_MAX__ 0X7FFFP-15R\000"
 8754      4143545F 
 8754      4D41585F 
 8754      5F203058 
 8754      37464646 
 8755              	.LASF118:
 8756 2135 5F5F4743 		.ascii	"__GCC_IEC_559 0\000"
 8756      435F4945 
 8756      435F3535 
 8756      39203000 
 8757              	.LASF862:
 8758 2145 74726163 		.ascii	"traceTASK_PRIORITY_DISINHERIT(pxTCBOfMutexHolder,ux"
 8758      65544153 
 8758      4B5F5052 
 8758      494F5249 
 8758      54595F44 
 8759 2178 4F726967 		.ascii	"OriginalPriority) \000"
 8759      696E616C 
 8759      5072696F 
 8759      72697479 
 8759      292000
 8760              	.LASF700:
 8761 218b 494E545F 		.ascii	"INT_LEAST32_MAX __INT_LEAST32_MAX__\000"
 8761      4C454153 
 8761      5433325F 
 8761      4D415820 
 8761      5F5F494E 
 8762              	.LASF1096:
 8763 21af 78526574 		.ascii	"xReturn\000"
 8763      75726E00 
 8764              	.LASF7:
 8765 21b7 5F5F4154 		.ascii	"__ATOMIC_SEQ_CST 5\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 214


 8765      4F4D4943 
 8765      5F534551 
 8765      5F435354 
 8765      203500
 8766              	.LASF383:
 8767 21ca 5F524541 		.ascii	"_READ_WRITE_RETURN_TYPE int\000"
 8767      445F5752 
 8767      4954455F 
 8767      52455455 
 8767      524E5F54 
 8768              	.LASF952:
 8769 21e6 706F7274 		.ascii	"portTICK_RATE_MS portTICK_PERIOD_MS\000"
 8769      5449434B 
 8769      5F524154 
 8769      455F4D53 
 8769      20706F72 
 8770              	.LASF135:
 8771 220a 5F5F464C 		.ascii	"__FLT_HAS_INFINITY__ 1\000"
 8771      545F4841 
 8771      535F494E 
 8771      46494E49 
 8771      54595F5F 
 8772              	.LASF495:
 8773 2221 5F5F6E65 		.ascii	"__need_wint_t\000"
 8773      65645F77 
 8773      696E745F 
 8773      7400
 8774              	.LASF638:
 8775 222f 5F5F7379 		.ascii	"__sym_default(sym,impl,verid) __asm__(\".symver \" "
 8775      6D5F6465 
 8775      6661756C 
 8775      74287379 
 8775      6D2C696D 
 8776 2260 23696D70 		.ascii	"#impl \", \" #sym \"@@\" #verid)\000"
 8776      6C20222C 
 8776      20222023 
 8776      73796D20 
 8776      22404022 
 8777              	.LASF1091:
 8778 227d 78517565 		.ascii	"xQueueGenericCreate\000"
 8778      75654765 
 8778      6E657269 
 8778      63437265 
 8778      61746500 
 8779              	.LASF112:
 8780 2291 5F5F5549 		.ascii	"__UINT_FAST8_MAX__ 4294967295U\000"
 8780      4E545F46 
 8780      41535438 
 8780      5F4D4158 
 8780      5F5F2034 
 8781              	.LASF274:
 8782 22b0 5F5F5451 		.ascii	"__TQ_FBIT__ 127\000"
 8782      5F464249 
 8782      545F5F20 
 8782      31323700 
 8783              	.LASF851:
 8784 22c0 706F7274 		.ascii	"portPRE_TASK_DELETE_HOOK(pvTaskToDelete,pxYieldPend"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 215


 8784      5052455F 
 8784      5441534B 
 8784      5F44454C 
 8784      4554455F 
 8785 22f3 696E6729 		.ascii	"ing) \000"
 8785      2000
 8786              	.LASF155:
 8787 22f9 5F5F4C44 		.ascii	"__LDBL_MAX_EXP__ 1024\000"
 8787      424C5F4D 
 8787      41585F45 
 8787      58505F5F 
 8787      20313032 
 8788              	.LASF185:
 8789 230f 5F5F4445 		.ascii	"__DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000"
 8789      43313238 
 8789      5F535542 
 8789      4E4F524D 
 8789      414C5F4D 
 8790 2342 30303030 		.ascii	"000000001E-6143DL\000"
 8790      30303030 
 8790      31452D36 
 8790      31343344 
 8790      4C00
 8791              	.LASF89:
 8792 2354 5F5F5549 		.ascii	"__UINT16_MAX__ 65535\000"
 8792      4E543136 
 8792      5F4D4158 
 8792      5F5F2036 
 8792      35353335 
 8793              	.LASF365:
 8794 2369 5F484156 		.ascii	"_HAVE_LONG_DOUBLE 1\000"
 8794      455F4C4F 
 8794      4E475F44 
 8794      4F55424C 
 8794      45203100 
 8795              	.LASF680:
 8796 237d 5F5F696E 		.ascii	"__int_fast64_t_defined 1\000"
 8796      745F6661 
 8796      73743634 
 8796      5F745F64 
 8796      6566696E 
 8797              	.LASF607:
 8798 2396 5F416C69 		.ascii	"_Alignas(x) __aligned(x)\000"
 8798      676E6173 
 8798      28782920 
 8798      5F5F616C 
 8798      69676E65 
 8799              	.LASF1063:
 8800 23af 7854696D 		.ascii	"xTimeOnEntering\000"
 8800      654F6E45 
 8800      6E746572 
 8800      696E6700 
 8801              	.LASF393:
 8802 23bf 5F564F4C 		.ascii	"_VOLATILE volatile\000"
 8802      4154494C 
 8802      4520766F 
 8802      6C617469 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 216


 8802      6C6500
 8803              	.LASF339:
 8804 23d2 5F5F7468 		.ascii	"__thumb2__ 1\000"
 8804      756D6232 
 8804      5F5F2031 
 8804      00
 8805              	.LASF261:
 8806 23df 5F5F554C 		.ascii	"__ULLACCUM_FBIT__ 32\000"
 8806      4C414343 
 8806      554D5F46 
 8806      4249545F 
 8806      5F203332 
 8807              	.LASF946:
 8808 23f4 784D656D 		.ascii	"xMemoryRegion MemoryRegion_t\000"
 8808      6F727952 
 8808      6567696F 
 8808      6E204D65 
 8808      6D6F7279 
 8809              	.LASF400:
 8810 2411 5F455846 		.ascii	"_EXFNPTR(name,proto) (* name) proto\000"
 8810      4E505452 
 8810      286E616D 
 8810      652C7072 
 8810      6F746F29 
 8811              	.LASF843:
 8812 2435 706F7274 		.ascii	"portCRITICAL_NESTING_IN_TCB 0\000"
 8812      43524954 
 8812      4943414C 
 8812      5F4E4553 
 8812      54494E47 
 8813              	.LASF513:
 8814 2453 5F524545 		.ascii	"_REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1"
 8814      4E545F49 
 8814      4E495428 
 8814      76617229 
 8814      207B2030 
 8815 2486 5D2C2026 		.ascii	"], &(var).__sf[2], 0, \"\", 0, \"C\", 0, _NULL, _NU"
 8815      28766172 
 8815      292E5F5F 
 8815      73665B32 
 8815      5D2C2030 
 8816 24b5 4C4C2C20 		.ascii	"LL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, \"\", "
 8816      302C205F 
 8816      4E554C4C 
 8816      2C205F4E 
 8816      554C4C2C 
 8817 24e6 7B302C20 		.ascii	"{0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_"
 8817      302C2030 
 8817      2C20302C 
 8817      20302C20 
 8817      302C2030 
 8818 2519 302C205F 		.ascii	"0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0"
 8818      52414E44 
 8818      34385F53 
 8818      4545445F 
 8818      312C205F 
 8819 254c 2C205F52 		.ascii	", _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 217


 8819      414E4434 
 8819      385F4D55 
 8819      4C545F31 
 8819      2C205F52 
 8820 257f 302C207B 		.ascii	"0, {0}}, {0, {0}}, {0, {0}}, \"\", \"\", 0, {0, {0}"
 8820      307D7D2C 
 8820      207B302C 
 8820      207B307D 
 8820      7D2C207B 
 8821 25ae 7D2C207B 		.ascii	"}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REE"
 8821      302C207B 
 8821      307D7D2C 
 8821      207B302C 
 8821      207B307D 
 8822 25e1 4E545F49 		.ascii	"NT_INIT_ATEXIT _NULL, {_NULL, 0, _NULL} }\000"
 8822      4E49545F 
 8822      41544558 
 8822      4954205F 
 8822      4E554C4C 
 8823              	.LASF644:
 8824 260b 5F5F4445 		.ascii	"__DECONST(type,var) ((type)(__uintptr_t)(const void"
 8824      434F4E53 
 8824      54287479 
 8824      70652C76 
 8824      61722920 
 8825 263e 202A2928 		.ascii	" *)(var))\000"
 8825      76617229 
 8825      2900
 8826              	.LASF373:
 8827 2648 5F535953 		.ascii	"_SYS_FEATURES_H \000"
 8827      5F464541 
 8827      54555245 
 8827      535F4820 
 8827      00
 8828              	.LASF1058:
 8829 2659 7078496E 		.ascii	"pxIndex\000"
 8829      64657800 
 8830              	.LASF616:
 8831 2661 5F5F6E6F 		.ascii	"__noinline __attribute__ ((__noinline__))\000"
 8831      696E6C69 
 8831      6E65205F 
 8831      5F617474 
 8831      72696275 
 8832              	.LASF651:
 8833 268b 5F4D4143 		.ascii	"_MACHSTDLIB_H_ \000"
 8833      48535444 
 8833      4C49425F 
 8833      485F2000 
 8834              	.LASF988:
 8835 269b 78546173 		.ascii	"xTaskCreate(pvTaskCode,pcName,usStackDepth,pvParame"
 8835      6B437265 
 8835      61746528 
 8835      70765461 
 8835      736B436F 
 8836 26ce 74657273 		.ascii	"ters,uxPriority,pxCreatedTask) xTaskGenericCreate( "
 8836      2C757850 
 8836      72696F72 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 218


 8836      6974792C 
 8836      70784372 
 8837 2701 28207076 		.ascii	"( pvTaskCode ), ( pcName ), ( usStackDepth ), ( pvP"
 8837      5461736B 
 8837      436F6465 
 8837      20292C20 
 8837      28207063 
 8838 2734 6172616D 		.ascii	"arameters ), ( uxPriority ), ( pxCreatedTask ), ( N"
 8838      65746572 
 8838      7320292C 
 8838      20282075 
 8838      78507269 
 8839 2767 554C4C20 		.ascii	"ULL ), ( NULL ) )\000"
 8839      292C2028 
 8839      204E554C 
 8839      4C202920 
 8839      2900
 8840              	.LASF19:
 8841 2779 5F5F5349 		.ascii	"__SIZEOF_LONG_DOUBLE__ 8\000"
 8841      5A454F46 
 8841      5F4C4F4E 
 8841      475F444F 
 8841      55424C45 
 8842              	.LASF1097:
 8843 2792 78517565 		.ascii	"xQueueCreateMutex\000"
 8843      75654372 
 8843      65617465 
 8843      4D757465 
 8843      7800
 8844              	.LASF322:
 8845 27a4 5F5F5052 		.ascii	"__PRAGMA_REDEFINE_EXTNAME 1\000"
 8845      41474D41 
 8845      5F524544 
 8845      4546494E 
 8845      455F4558 
 8846              	.LASF31:
 8847 27c0 5F5F5743 		.ascii	"__WCHAR_TYPE__ unsigned int\000"
 8847      4841525F 
 8847      54595045 
 8847      5F5F2075 
 8847      6E736967 
 8848              	.LASF730:
 8849 27dc 57494E54 		.ascii	"WINT_MAX __WINT_MAX__\000"
 8849      5F4D4158 
 8849      205F5F57 
 8849      494E545F 
 8849      4D41585F 
 8850              	.LASF1067:
 8851 27f2 75785265 		.ascii	"uxRecursiveCallCount\000"
 8851      63757273 
 8851      69766543 
 8851      616C6C43 
 8851      6F756E74 
 8852              	.LASF796:
 8853 2807 504F5254 		.ascii	"PORTABLE_H \000"
 8853      41424C45 
 8853      5F482000 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 219


 8854              	.LASF1040:
 8855 2813 63686172 		.ascii	"char\000"
 8855      00
 8856              	.LASF297:
 8857 2818 5F5F5553 		.ascii	"__USA_IBIT__ 16\000"
 8857      415F4942 
 8857      49545F5F 
 8857      20313600 
 8858              	.LASF308:
 8859 2828 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\000"
 8859      435F4841 
 8859      56455F53 
 8859      594E435F 
 8859      434F4D50 
 8860              	.LASF740:
 8861 284d 494E544D 		.ascii	"INTMAX_C(x) __INTMAX_C(x)\000"
 8861      41585F43 
 8861      28782920 
 8861      5F5F494E 
 8861      544D4158 
 8862              	.LASF1126:
 8863 2867 76517565 		.ascii	"vQueueDelete\000"
 8863      75654465 
 8863      6C657465 
 8863      00
 8864              	.LASF623:
 8865 2874 5F5F6869 		.ascii	"__hidden __attribute__((__visibility__(\"hidden\"))"
 8865      6464656E 
 8865      205F5F61 
 8865      74747269 
 8865      62757465 
 8866 28a5 2900     		.ascii	")\000"
 8867              	.LASF754:
 8868 28a7 636F6E66 		.ascii	"configUSE_16_BIT_TICKS 0\000"
 8868      69675553 
 8868      455F3136 
 8868      5F424954 
 8868      5F544943 
 8869              	.LASF66:
 8870 28c0 5F5F4758 		.ascii	"__GXX_ABI_VERSION 1002\000"
 8870      585F4142 
 8870      495F5645 
 8870      5253494F 
 8870      4E203130 
 8871              	.LASF1064:
 8872 28d7 54696D65 		.ascii	"TimeOut_t\000"
 8872      4F75745F 
 8872      7400
 8873              	.LASF61:
 8874 28e1 5F5F5549 		.ascii	"__UINT_FAST64_TYPE__ long long unsigned int\000"
 8874      4E545F46 
 8874      41535436 
 8874      345F5459 
 8874      50455F5F 
 8875              	.LASF1054:
 8876 290d 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8876      495F4C49 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 220


 8876      53545F49 
 8876      54454D00 
 8877              	.LASF830:
 8878 291d 706F7274 		.ascii	"portNUM_CONFIGURABLE_REGIONS 1\000"
 8878      4E554D5F 
 8878      434F4E46 
 8878      49475552 
 8878      41424C45 
 8879              	.LASF539:
 8880 293c 5F524545 		.ascii	"_REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrt"
 8880      4E545F4D 
 8880      4252544F 
 8880      57435F53 
 8880      54415445 
 8881 296f 6F77635F 		.ascii	"owc_state)\000"
 8881      73746174 
 8881      652900
 8882              	.LASF494:
 8883 297a 5F57494E 		.ascii	"_WINT_T \000"
 8883      545F5420 
 8883      00
 8884              	.LASF746:
 8885 2983 636F6E66 		.ascii	"configMAX_PRIORITIES ( 8 )\000"
 8885      69674D41 
 8885      585F5052 
 8885      494F5249 
 8885      54494553 
 8886              	.LASF131:
 8887 299e 5F5F464C 		.ascii	"__FLT_MIN__ 1.1754943508222875e-38F\000"
 8887      545F4D49 
 8887      4E5F5F20 
 8887      312E3137 
 8887      35343934 
 8888              	.LASF410:
 8889 29c2 5F5F6E65 		.ascii	"__need_size_t \000"
 8889      65645F73 
 8889      697A655F 
 8889      742000
 8890              	.LASF286:
 8891 29d1 5F5F4841 		.ascii	"__HA_FBIT__ 7\000"
 8891      5F464249 
 8891      545F5F20 
 8891      3700
 8892              	.LASF318:
 8893 29df 5F5F4743 		.ascii	"__GCC_ATOMIC_LLONG_LOCK_FREE 1\000"
 8893      435F4154 
 8893      4F4D4943 
 8893      5F4C4C4F 
 8893      4E475F4C 
 8894              	.LASF777:
 8895 29fe 636F6E66 		.ascii	"configNET_MASK0 255\000"
 8895      69674E45 
 8895      545F4D41 
 8895      534B3020 
 8895      32353500 
 8896              	.LASF871:
 8897 2a12 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 221


 8897      65474956 
 8897      455F4D55 
 8897      5445585F 
 8897      52454355 
 8898              	.LASF487:
 8899 2a3d 5F5F6C6F 		.ascii	"__lock_try_acquire(lock) (_CAST_VOID 0)\000"
 8899      636B5F74 
 8899      72795F61 
 8899      63717569 
 8899      7265286C 
 8900              	.LASF166:
 8901 2a65 5F5F4445 		.ascii	"__DEC32_MIN_EXP__ (-94)\000"
 8901      4333325F 
 8901      4D494E5F 
 8901      4558505F 
 8901      5F20282D 
 8902              	.LASF192:
 8903 2a7d 5F5F5553 		.ascii	"__USFRACT_IBIT__ 0\000"
 8903      46524143 
 8903      545F4942 
 8903      49545F5F 
 8903      203000
 8904              	.LASF841:
 8905 2a90 494E434C 		.ascii	"INCLUDE_eTaskGetState 0\000"
 8905      5544455F 
 8905      65546173 
 8905      6B476574 
 8905      53746174 
 8906              	.LASF193:
 8907 2aa8 5F5F5553 		.ascii	"__USFRACT_MIN__ 0.0UHR\000"
 8907      46524143 
 8907      545F4D49 
 8907      4E5F5F20 
 8907      302E3055 
 8908              	.LASF625:
 8909 2abf 5F5F6F66 		.ascii	"__offsetof(type,field) offsetof(type, field)\000"
 8909      66736574 
 8909      6F662874 
 8909      7970652C 
 8909      6669656C 
 8910              	.LASF533:
 8911 2aec 5F524545 		.ascii	"_REENT_EMERGENCY(ptr) ((ptr)->_emergency)\000"
 8911      4E545F45 
 8911      4D455247 
 8911      454E4359 
 8911      28707472 
 8912              	.LASF575:
 8913 2b16 5F5F474E 		.ascii	"__GNUCLIKE_CTOR_SECTION_HANDLING 1\000"
 8913      55434C49 
 8913      4B455F43 
 8913      544F525F 
 8913      53454354 
 8914              	.LASF470:
 8915 2b39 5F5F5F69 		.ascii	"___int16_t_defined 1\000"
 8915      6E743136 
 8915      5F745F64 
 8915      6566696E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 222


 8915      65642031 
 8916              	.LASF548:
 8917 2b4e 5F524545 		.ascii	"_REENT _impure_ptr\000"
 8917      4E54205F 
 8917      696D7075 
 8917      72655F70 
 8917      747200
 8918              	.LASF566:
 8919 2b61 5F5F6861 		.ascii	"__has_feature(x) 0\000"
 8919      735F6665 
 8919      61747572 
 8919      65287829 
 8919      203000
 8920              	.LASF867:
 8921 2b74 74726163 		.ascii	"traceQUEUE_CREATE_FAILED(ucQueueType) \000"
 8921      65515545 
 8921      55455F43 
 8921      52454154 
 8921      455F4641 
 8922              	.LASF624:
 8923 2b9b 5F5F6578 		.ascii	"__exported __attribute__((__visibility__(\"default\""
 8923      706F7274 
 8923      6564205F 
 8923      5F617474 
 8923      72696275 
 8924 2bcd 29292900 		.ascii	")))\000"
 8925              	.LASF642:
 8926 2bd1 5F5F5343 		.ascii	"__SCCSID(s) struct __hack\000"
 8926      43534944 
 8926      28732920 
 8926      73747275 
 8926      6374205F 
 8927              	.LASF1045:
 8928 2beb 55426173 		.ascii	"UBaseT_t\000"
 8928      65545F74 
 8928      00
 8929              	.LASF413:
 8930 2bf4 5F5F7369 		.ascii	"__size_t__ \000"
 8930      7A655F74 
 8930      5F5F2000 
 8931              	.LASF586:
 8932 2c00 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE 1\000"
 8932      5F535550 
 8932      504F5254 
 8932      535F5F5F 
 8932      494E4C49 
 8933              	.LASF362:
 8934 2c19 5F4D425F 		.ascii	"_MB_LEN_MAX 1\000"
 8934      4C454E5F 
 8934      4D415820 
 8934      3100
 8935              	.LASF290:
 8936 2c27 5F5F4441 		.ascii	"__DA_FBIT__ 31\000"
 8936      5F464249 
 8936      545F5F20 
 8936      333100
 8937              	.LASF1051:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 223


 8938 2c36 7076436F 		.ascii	"pvContainer\000"
 8938      6E746169 
 8938      6E657200 
 8939              	.LASF949:
 8940 2c42 7854696D 		.ascii	"xTimerHandle TimerHandle_t\000"
 8940      65724861 
 8940      6E646C65 
 8940      2054696D 
 8940      65724861 
 8941              	.LASF394:
 8942 2c5d 5F534947 		.ascii	"_SIGNED signed\000"
 8942      4E454420 
 8942      7369676E 
 8942      656400
 8943              	.LASF133:
 8944 2c6c 5F5F464C 		.ascii	"__FLT_DENORM_MIN__ 1.4012984643248171e-45F\000"
 8944      545F4445 
 8944      4E4F524D 
 8944      5F4D494E 
 8944      5F5F2031 
 8945              	.LASF158:
 8946 2c97 5F5F4C44 		.ascii	"__LDBL_MAX__ 1.7976931348623157e+308L\000"
 8946      424C5F4D 
 8946      41585F5F 
 8946      20312E37 
 8946      39373639 
 8947              	.LASF775:
 8948 2cbd 636F6E66 		.ascii	"configIP_ADDR2 0\000"
 8948      69674950 
 8948      5F414444 
 8948      52322030 
 8948      00
 8949              	.LASF94:
 8950 2cce 5F5F494E 		.ascii	"__INT_LEAST16_MAX__ 32767\000"
 8950      545F4C45 
 8950      41535431 
 8950      365F4D41 
 8950      585F5F20 
 8951              	.LASF265:
 8952 2ce8 5F5F554C 		.ascii	"__ULLACCUM_EPSILON__ 0x1P-32ULLK\000"
 8952      4C414343 
 8952      554D5F45 
 8952      5053494C 
 8952      4F4E5F5F 
 8953              	.LASF981:
 8954 2d09 7461736B 		.ascii	"taskENTER_CRITICAL() portENTER_CRITICAL()\000"
 8954      454E5445 
 8954      525F4352 
 8954      49544943 
 8954      414C2829 
 8955              	.LASF387:
 8956 2d33 5F454E44 		.ascii	"_END_STD_C \000"
 8956      5F535444 
 8956      5F432000 
 8957              	.LASF688:
 8958 2d3f 494E545F 		.ascii	"INT_LEAST8_MAX __INT_LEAST8_MAX__\000"
 8958      4C454153 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 224


 8958      54385F4D 
 8958      4158205F 
 8958      5F494E54 
 8959              	.LASF65:
 8960 2d61 5F5F6861 		.ascii	"__has_include_next(STR) __has_include_next__(STR)\000"
 8960      735F696E 
 8960      636C7564 
 8960      655F6E65 
 8960      78742853 
 8961              	.LASF973:
 8962 2d93 6C697374 		.ascii	"listLIST_ITEM_CONTAINER(pxListItem) ( ( pxListItem "
 8962      4C495354 
 8962      5F495445 
 8962      4D5F434F 
 8962      4E544149 
 8963 2dc6 292D3E70 		.ascii	")->pvContainer )\000"
 8963      76436F6E 
 8963      7461696E 
 8963      65722029 
 8963      00
 8964              	.LASF105:
 8965 2dd7 5F5F5549 		.ascii	"__UINT32_C(c) c ## UL\000"
 8965      4E543332 
 8965      5F432863 
 8965      29206320 
 8965      23232055 
 8966              	.LASF770:
 8967 2ded 494E434C 		.ascii	"INCLUDE_vTaskDelayUntil 1\000"
 8967      5544455F 
 8967      76546173 
 8967      6B44656C 
 8967      6179556E 
 8968              	.LASF87:
 8969 2e07 5F5F494E 		.ascii	"__INT64_MAX__ 9223372036854775807LL\000"
 8969      5436345F 
 8969      4D41585F 
 8969      5F203932 
 8969      32333337 
 8970              	.LASF668:
 8971 2e2b 5F5F6861 		.ascii	"__have_long32 1\000"
 8971      76655F6C 
 8971      6F6E6733 
 8971      32203100 
 8972              	.LASF132:
 8973 2e3b 5F5F464C 		.ascii	"__FLT_EPSILON__ 1.1920928955078125e-7F\000"
 8973      545F4550 
 8973      53494C4F 
 8973      4E5F5F20 
 8973      312E3139 
 8974              	.LASF596:
 8975 2e62 5F5F5853 		.ascii	"__XSTRING(x) __STRING(x)\000"
 8975      5452494E 
 8975      47287829 
 8975      205F5F53 
 8975      5452494E 
 8976              	.LASF559:
 8977 2e7b 5F5F6174 		.ascii	"__attribute_pure__ \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 225


 8977      74726962 
 8977      7574655F 
 8977      70757265 
 8977      5F5F2000 
 8978              	.LASF370:
 8979 2e8f 5F574944 		.ascii	"_WIDE_ORIENT 1\000"
 8979      455F4F52 
 8979      49454E54 
 8979      203100
 8980              	.LASF950:
 8981 2e9e 78436F52 		.ascii	"xCoRoutineHandle CoRoutineHandle_t\000"
 8981      6F757469 
 8981      6E654861 
 8981      6E646C65 
 8981      20436F52 
 8982              	.LASF483:
 8983 2ec1 5F5F6C6F 		.ascii	"__lock_close(lock) (_CAST_VOID 0)\000"
 8983      636B5F63 
 8983      6C6F7365 
 8983      286C6F63 
 8983      6B292028 
 8984              	.LASF838:
 8985 2ee3 494E434C 		.ascii	"INCLUDE_xSemaphoreGetMutexHolder INCLUDE_xQueueGetM"
 8985      5544455F 
 8985      7853656D 
 8985      6170686F 
 8985      72654765 
 8986 2f16 75746578 		.ascii	"utexHolder\000"
 8986      486F6C64 
 8986      657200
 8987              	.LASF1086:
 8988 2f21 78517565 		.ascii	"xQueueRegistryItem\000"
 8988      75655265 
 8988      67697374 
 8988      72794974 
 8988      656D00
 8989              	.LASF895:
 8990 2f34 74726163 		.ascii	"traceTASK_RESUME(pxTaskToResume) \000"
 8990      65544153 
 8990      4B5F5245 
 8990      53554D45 
 8990      28707854 
 8991              	.LASF918:
 8992 2f56 74726163 		.ascii	"traceQUEUE_REGISTRY_ADD(xQueue,pcQueueName) \000"
 8992      65515545 
 8992      55455F52 
 8992      45474953 
 8992      5452595F 
 8993              	.LASF577:
 8994 2f83 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VARARGS 1\000"
 8994      55434C49 
 8994      4B455F42 
 8994      55494C54 
 8994      494E5F56 
 8995              	.LASF522:
 8996 2fa0 5F524545 		.ascii	"_REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_sign"
 8996      4E545F53 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 226


 8996      49474E47 
 8996      414D2870 
 8996      74722920 
 8997 2fd3 67616D29 		.ascii	"gam)\000"
 8997      00
 8998              	.LASF699:
 8999 2fd8 494E545F 		.ascii	"INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)\000"
 8999      4C454153 
 8999      5433325F 
 8999      4D494E20 
 8999      282D5F5F 
 9000              	.LASF315:
 9001 3003 5F5F4743 		.ascii	"__GCC_ATOMIC_SHORT_LOCK_FREE 2\000"
 9001      435F4154 
 9001      4F4D4943 
 9001      5F53484F 
 9001      52545F4C 
 9002              	.LASF1083:
 9003 3022 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 9003      455F5245 
 9003      47495354 
 9003      52595F49 
 9003      54454D00 
 9004              	.LASF231:
 9005 3036 5F5F5553 		.ascii	"__USACCUM_FBIT__ 8\000"
 9005      41434355 
 9005      4D5F4642 
 9005      49545F5F 
 9005      203800
 9006              	.LASF430:
 9007 3049 5F5F6E65 		.ascii	"__need_size_t\000"
 9007      65645F73 
 9007      697A655F 
 9007      7400
 9008              	.LASF319:
 9009 3057 5F5F4743 		.ascii	"__GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\000"
 9009      435F4154 
 9009      4F4D4943 
 9009      5F544553 
 9009      545F414E 
 9010              	.LASF465:
 9011 307b 5F535953 		.ascii	"_SYS__TYPES_H \000"
 9011      5F5F5459 
 9011      5045535F 
 9011      482000
 9012              	.LASF900:
 9013 308a 74726163 		.ascii	"traceTIMER_COMMAND_SEND(xTimer,xMessageID,xMessageV"
 9013      6554494D 
 9013      45525F43 
 9013      4F4D4D41 
 9013      4E445F53 
 9014 30bd 616C7565 		.ascii	"alueValue,xReturn) \000"
 9014      56616C75 
 9014      652C7852 
 9014      65747572 
 9014      6E292000 
 9015              	.LASF67:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 227


 9016 30d1 5F5F5343 		.ascii	"__SCHAR_MAX__ 127\000"
 9016      4841525F 
 9016      4D41585F 
 9016      5F203132 
 9016      3700
 9017              	.LASF652:
 9018 30e3 5F4E4557 		.ascii	"_NEWLIB_ALLOCA_H \000"
 9018      4C49425F 
 9018      414C4C4F 
 9018      43415F48 
 9018      2000
 9019              	.LASF163:
 9020 30f5 5F5F4C44 		.ascii	"__LDBL_HAS_INFINITY__ 1\000"
 9020      424C5F48 
 9020      41535F49 
 9020      4E46494E 
 9020      4954595F 
 9021              	.LASF743:
 9022 310d 46524545 		.ascii	"FREERTOS_CONFIG_H \000"
 9022      52544F53 
 9022      5F434F4E 
 9022      4649475F 
 9022      482000
 9023              	.LASF169:
 9024 3120 5F5F4445 		.ascii	"__DEC32_MAX__ 9.999999E96DF\000"
 9024      4333325F 
 9024      4D41585F 
 9024      5F20392E 
 9024      39393939 
 9025              	.LASF692:
 9026 313c 55494E54 		.ascii	"UINT16_MAX __UINT16_MAX__\000"
 9026      31365F4D 
 9026      4158205F 
 9026      5F55494E 
 9026      5431365F 
 9027              	.LASF980:
 9028 3156 7461736B 		.ascii	"taskYIELD() portYIELD()\000"
 9028      5949454C 
 9028      44282920 
 9028      706F7274 
 9028      5949454C 
 9029              	.LASF585:
 9030 316e 5F5F4343 		.ascii	"__CC_SUPPORTS_INLINE 1\000"
 9030      5F535550 
 9030      504F5254 
 9030      535F494E 
 9030      4C494E45 
 9031              	.LASF800:
 9032 3185 706F7274 		.ascii	"portDOUBLE double\000"
 9032      444F5542 
 9032      4C452064 
 9032      6F75626C 
 9032      6500
 9033              	.LASF349:
 9034 3197 5F5F4152 		.ascii	"__ARM_PCS 1\000"
 9034      4D5F5043 
 9034      53203100 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 228


 9035              	.LASF793:
 9036 31a3 65727243 		.ascii	"errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY ( -1 )\000"
 9036      4F554C44 
 9036      5F4E4F54 
 9036      5F414C4C 
 9036      4F434154 
 9037              	.LASF1069:
 9038 31d0 70634865 		.ascii	"pcHead\000"
 9038      616400
 9039              	.LASF889:
 9040 31d7 74726163 		.ascii	"traceTASK_CREATE_FAILED() \000"
 9040      65544153 
 9040      4B5F4352 
 9040      45415445 
 9040      5F464149 
 9041              	.LASF722:
 9042 31f2 55494E54 		.ascii	"UINTMAX_MAX __UINTMAX_MAX__\000"
 9042      4D41585F 
 9042      4D415820 
 9042      5F5F5549 
 9042      4E544D41 
 9043              	.LASF570:
 9044 320e 5F5F474E 		.ascii	"__GNUCLIKE_ASM 3\000"
 9044      55434C49 
 9044      4B455F41 
 9044      534D2033 
 9044      00
 9045              	.LASF83:
 9046 321f 5F5F5349 		.ascii	"__SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)\000"
 9046      475F4154 
 9046      4F4D4943 
 9046      5F4D494E 
 9046      5F5F2028 
 9047              	.LASF243:
 9048 324c 5F5F5541 		.ascii	"__UACCUM_MIN__ 0.0UK\000"
 9048      4343554D 
 9048      5F4D494E 
 9048      5F5F2030 
 9048      2E30554B 
 9049              	.LASF1022:
 9050 3261 71756575 		.ascii	"queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseT_t ) 0 )"
 9050      6553454D 
 9050      4150484F 
 9050      52455F51 
 9050      55455545 
 9051 3294 00       		.ascii	"\000"
 9052              	.LASF438:
 9053 3295 5F425344 		.ascii	"_BSD_WCHAR_T_ \000"
 9053      5F574348 
 9053      41525F54 
 9053      5F2000
 9054              	.LASF691:
 9055 32a4 494E5431 		.ascii	"INT16_MAX __INT16_MAX__\000"
 9055      365F4D41 
 9055      58205F5F 
 9055      494E5431 
 9055      365F4D41 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 229


 9056              	.LASF773:
 9057 32bc 636F6E66 		.ascii	"configIP_ADDR0 192\000"
 9057      69674950 
 9057      5F414444 
 9057      52302031 
 9057      393200
 9058              	.LASF724:
 9059 32cf 5349475F 		.ascii	"SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)\000"
 9059      41544F4D 
 9059      49435F4D 
 9059      494E2028 
 9059      2D5F5F53 
 9060              	.LASF735:
 9061 32fb 55494E54 		.ascii	"UINT16_C(x) __UINT16_C(x)\000"
 9061      31365F43 
 9061      28782920 
 9061      5F5F5549 
 9061      4E543136 
 9062              	.LASF789:
 9063 3315 70645041 		.ascii	"pdPASS ( pdTRUE )\000"
 9063      53532028 
 9063      20706454 
 9063      52554520 
 9063      2900
 9064              	.LASF486:
 9065 3327 5F5F6C6F 		.ascii	"__lock_acquire_recursive(lock) (_CAST_VOID 0)\000"
 9065      636B5F61 
 9065      63717569 
 9065      72655F72 
 9065      65637572 
 9066              	.LASF706:
 9067 3355 494E545F 		.ascii	"INT_LEAST64_MAX __INT_LEAST64_MAX__\000"
 9067      4C454153 
 9067      5436345F 
 9067      4D415820 
 9067      5F5F494E 
 9068              	.LASF1076:
 9069 3379 75784974 		.ascii	"uxItemSize\000"
 9069      656D5369 
 9069      7A6500
 9070              	.LASF148:
 9071 3384 5F5F4442 		.ascii	"__DBL_HAS_DENORM__ 1\000"
 9071      4C5F4841 
 9071      535F4445 
 9071      4E4F524D 
 9071      5F5F2031 
 9072              	.LASF519:
 9073 3399 5F524545 		.ascii	"_REENT_CHECK_EMERGENCY(ptr) \000"
 9073      4E545F43 
 9073      4845434B 
 9073      5F454D45 
 9073      5247454E 
 9074              	.LASF821:
 9075 33b6 706F7274 		.ascii	"portTASK_FUNCTION(vFunction,pvParameters) void vFun"
 9075      5441534B 
 9075      5F46554E 
 9075      4354494F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 230


 9075      4E287646 
 9076 33e9 6374696F 		.ascii	"ction( void *pvParameters )\000"
 9076      6E282076 
 9076      6F696420 
 9076      2A707650 
 9076      6172616D 
 9077              	.LASF858:
 9078 3405 74726163 		.ascii	"traceLOW_POWER_IDLE_BEGIN() \000"
 9078      654C4F57 
 9078      5F504F57 
 9078      45525F49 
 9078      444C455F 
 9079              	.LASF744:
 9080 3422 636F6E66 		.ascii	"configUSE_PREEMPTION 1\000"
 9080      69675553 
 9080      455F5052 
 9080      45454D50 
 9080      54494F4E 
 9081              	.LASF92:
 9082 3439 5F5F494E 		.ascii	"__INT_LEAST8_MAX__ 127\000"
 9082      545F4C45 
 9082      41535438 
 9082      5F4D4158 
 9082      5F5F2031 
 9083              	.LASF913:
 9084 3450 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS(xEventGroup,uxBitsToSet) "
 9084      65455645 
 9084      4E545F47 
 9084      524F5550 
 9084      5F534554 
 9085 3483 00       		.ascii	"\000"
 9086              	.LASF767:
 9087 3484 494E434C 		.ascii	"INCLUDE_vTaskDelete 1\000"
 9087      5544455F 
 9087      76546173 
 9087      6B44656C 
 9087      65746520 
 9088              	.LASF785:
 9089 349a 50524F4A 		.ascii	"PROJDEFS_H \000"
 9089      44454653 
 9089      5F482000 
 9090              	.LASF178:
 9091 34a6 5F5F4445 		.ascii	"__DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD\000"
 9091      4336345F 
 9091      5355424E 
 9091      4F524D41 
 9091      4C5F4D49 
 9092              	.LASF195:
 9093 34d7 5F5F5553 		.ascii	"__USFRACT_EPSILON__ 0x1P-8UHR\000"
 9093      46524143 
 9093      545F4550 
 9093      53494C4F 
 9093      4E5F5F20 
 9094              	.LASF449:
 9095 34f5 4E554C4C 		.ascii	"NULL ((void *)0)\000"
 9095      20282876 
 9095      6F696420 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 231


 9095      2A293029 
 9095      00
 9096              	.LASF916:
 9097 3506 74726163 		.ascii	"tracePEND_FUNC_CALL(xFunctionToPend,pvParameter1,ul"
 9097      6550454E 
 9097      445F4655 
 9097      4E435F43 
 9097      414C4C28 
 9098 3539 50617261 		.ascii	"Parameter2,ret) \000"
 9098      6D657465 
 9098      72322C72 
 9098      65742920 
 9098      00
 9099              	.LASF611:
 9100 354a 5F546872 		.ascii	"_Thread_local __thread\000"
 9100      6561645F 
 9100      6C6F6361 
 9100      6C205F5F 
 9100      74687265 
 9101              	.LASF111:
 9102 3561 5F5F494E 		.ascii	"__INT_FAST64_MAX__ 9223372036854775807LL\000"
 9102      545F4641 
 9102      53543634 
 9102      5F4D4158 
 9102      5F5F2039 
 9103              	.LASF1105:
 9104 358a 7578496E 		.ascii	"uxInitialCount\000"
 9104      69746961 
 9104      6C436F75 
 9104      6E7400
 9105              	.LASF475:
 9106 3599 5F5F5F69 		.ascii	"___int_least32_t_defined 1\000"
 9106      6E745F6C 
 9106      65617374 
 9106      33325F74 
 9106      5F646566 
 9107              	.LASF259:
 9108 35b4 5F5F4C4C 		.ascii	"__LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK\000"
 9108      41434355 
 9108      4D5F4D41 
 9108      585F5F20 
 9108      30583746 
 9109              	.LASF450:
 9110 35de 5F5F6E65 		.ascii	"__need_NULL\000"
 9110      65645F4E 
 9110      554C4C00 
 9111              	.LASF822:
 9112 35ea 706F7274 		.ascii	"portSUPPRESS_TICKS_AND_SLEEP(xExpectedIdleTime) vPo"
 9112      53555050 
 9112      52455353 
 9112      5F544943 
 9112      4B535F41 
 9113 361d 72745375 		.ascii	"rtSuppressTicksAndSleep( xExpectedIdleTime )\000"
 9113      70707265 
 9113      73735469 
 9113      636B7341 
 9113      6E64536C 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 232


 9114              	.LASF674:
 9115 364a 5F5F696E 		.ascii	"__int_least32_t_defined 1\000"
 9115      745F6C65 
 9115      61737433 
 9115      325F745F 
 9115      64656669 
 9116              	.LASF1077:
 9117 3664 7852784C 		.ascii	"xRxLock\000"
 9117      6F636B00 
 9118              	.LASF768:
 9119 366c 494E434C 		.ascii	"INCLUDE_vTaskCleanUpResources 0\000"
 9119      5544455F 
 9119      76546173 
 9119      6B436C65 
 9119      616E5570 
 9120              	.LASF709:
 9121 368c 494E545F 		.ascii	"INT_FAST8_MAX __INT_FAST8_MAX__\000"
 9121      46415354 
 9121      385F4D41 
 9121      58205F5F 
 9121      494E545F 
 9122              	.LASF747:
 9123 36ac 636F6E66 		.ascii	"configUSE_TICK_HOOK 1\000"
 9123      69675553 
 9123      455F5449 
 9123      434B5F48 
 9123      4F4F4B20 
 9124              	.LASF761:
 9125 36c2 636F6E66 		.ascii	"configCHECK_FOR_STACK_OVERFLOW 0\000"
 9125      69674348 
 9125      45434B5F 
 9125      464F525F 
 9125      53544143 
 9126              	.LASF738:
 9127 36e3 494E5436 		.ascii	"INT64_C(x) __INT64_C(x)\000"
 9127      345F4328 
 9127      7829205F 
 9127      5F494E54 
 9127      36345F43 
 9128              	.LASF536:
 9129 36fb 5F524545 		.ascii	"_REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtow"
 9129      4E545F4D 
 9129      42544F57 
 9129      435F5354 
 9129      41544528 
 9130 372e 635F7374 		.ascii	"c_state)\000"
 9130      61746529 
 9130      00
 9131              	.LASF784:
 9132 3737 636F6E66 		.ascii	"configASSERT(x) if( ( x ) == 0 ) { taskDISABLE_INTE"
 9132      69674153 
 9132      53455254 
 9132      28782920 
 9132      69662820 
 9133 376a 52525550 		.ascii	"RRUPTS(); for( ;; ); }\000"
 9133      54532829 
 9133      3B20666F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 233


 9133      7228203B 
 9133      3B20293B 
 9134              	.LASF535:
 9135 3781 5F524545 		.ascii	"_REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_"
 9135      4E545F4D 
 9135      424C454E 
 9135      5F535441 
 9135      54452870 
 9136 37b4 73746174 		.ascii	"state)\000"
 9136      652900
 9137              	.LASF745:
 9138 37bb 636F6E66 		.ascii	"configUSE_IDLE_HOOK 0\000"
 9138      69675553 
 9138      455F4944 
 9138      4C455F48 
 9138      4F4F4B20 
 9139              	.LASF266:
 9140 37d1 5F5F5151 		.ascii	"__QQ_FBIT__ 7\000"
 9140      5F464249 
 9140      545F5F20 
 9140      3700
 9141              	.LASF320:
 9142 37df 5F5F4743 		.ascii	"__GCC_ATOMIC_POINTER_LOCK_FREE 2\000"
 9142      435F4154 
 9142      4F4D4943 
 9142      5F504F49 
 9142      4E544552 
 9143              	.LASF326:
 9144 3800 5F5F4152 		.ascii	"__ARM_FEATURE_QBIT 1\000"
 9144      4D5F4645 
 9144      41545552 
 9144      455F5142 
 9144      49542031 
 9145              	.LASF331:
 9146 3815 5F5F4152 		.ascii	"__ARM_FEATURE_CLZ 1\000"
 9146      4D5F4645 
 9146      41545552 
 9146      455F434C 
 9146      5A203100 
 9147              	.LASF8:
 9148 3829 5F5F4154 		.ascii	"__ATOMIC_ACQUIRE 2\000"
 9148      4F4D4943 
 9148      5F414351 
 9148      55495245 
 9148      203200
 9149              	.LASF818:
 9150 383c 706F7274 		.ascii	"portENTER_CRITICAL() vPortEnterCritical()\000"
 9150      454E5445 
 9150      525F4352 
 9150      49544943 
 9150      414C2829 
 9151              	.LASF80:
 9152 3866 5F5F5549 		.ascii	"__UINTMAX_MAX__ 18446744073709551615ULL\000"
 9152      4E544D41 
 9152      585F4D41 
 9152      585F5F20 
 9152      31383434 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 234


 9153              	.LASF803:
 9154 388e 706F7274 		.ascii	"portSTACK_TYPE uint32_t\000"
 9154      53544143 
 9154      4B5F5459 
 9154      50452075 
 9154      696E7433 
 9155              	.LASF491:
 9156 38a6 756E7369 		.ascii	"unsigned signed\000"
 9156      676E6564 
 9156      20736967 
 9156      6E656400 
 9157              	.LASF1015:
 9158 38b6 78517565 		.ascii	"xQueueReset(xQueue) xQueueGenericReset( xQueue, pdF"
 9158      75655265 
 9158      73657428 
 9158      78517565 
 9158      75652920 
 9159 38e9 414C5345 		.ascii	"ALSE )\000"
 9159      202900
 9160              	.LASF45:
 9161 38f0 5F5F5549 		.ascii	"__UINT64_TYPE__ long long unsigned int\000"
 9161      4E543634 
 9161      5F545950 
 9161      455F5F20 
 9161      6C6F6E67 
 9162              	.LASF961:
 9163 3917 6C697374 		.ascii	"listGET_LIST_ITEM_OWNER(pxListItem) ( ( pxListItem "
 9163      4745545F 
 9163      4C495354 
 9163      5F495445 
 9163      4D5F4F57 
 9164 394a 292D3E70 		.ascii	")->pvOwner )\000"
 9164      764F776E 
 9164      65722029 
 9164      00
 9165              	.LASF333:
 9166 3957 5F5F4152 		.ascii	"__ARM_SIZEOF_WCHAR_T 4\000"
 9166      4D5F5349 
 9166      5A454F46 
 9166      5F574348 
 9166      41525F54 
 9167              	.LASF1100:
 9168 396e 70784D75 		.ascii	"pxMutex\000"
 9168      74657800 
 9169              	.LASF64:
 9170 3976 5F5F6861 		.ascii	"__has_include(STR) __has_include__(STR)\000"
 9170      735F696E 
 9170      636C7564 
 9170      65285354 
 9170      5229205F 
 9171              	.LASF1062:
 9172 399e 784F7665 		.ascii	"xOverflowCount\000"
 9172      72666C6F 
 9172      77436F75 
 9172      6E7400
 9173              	.LASF891:
 9174 39ad 74726163 		.ascii	"traceTASK_DELAY_UNTIL() \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 235


 9174      65544153 
 9174      4B5F4445 
 9174      4C41595F 
 9174      554E5449 
 9175              	.LASF749:
 9176 39c6 636F6E66 		.ascii	"configTICK_RATE_HZ ( ( portTickType ) 1200 )\000"
 9176      69675449 
 9176      434B5F52 
 9176      4154455F 
 9176      485A2028 
 9177              	.LASF146:
 9178 39f3 5F5F4442 		.ascii	"__DBL_EPSILON__ ((double)2.2204460492503131e-16L)\000"
 9178      4C5F4550 
 9178      53494C4F 
 9178      4E5F5F20 
 9178      2828646F 
 9179              	.LASF606:
 9180 3a25 5F5F7365 		.ascii	"__section(x) __attribute__((__section__(x)))\000"
 9180      6374696F 
 9180      6E287829 
 9180      205F5F61 
 9180      74747269 
 9181              	.LASF966:
 9182 3a52 6C697374 		.ascii	"listGET_NEXT(pxListItem) ( ( pxListItem )->pxNext )"
 9182      4745545F 
 9182      4E455854 
 9182      2870784C 
 9182      69737449 
 9183 3a85 00       		.ascii	"\000"
 9184              	.LASF523:
 9185 3a86 5F524545 		.ascii	"_REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_nex"
 9185      4E545F52 
 9185      414E445F 
 9185      4E455854 
 9185      28707472 
 9186 3ab9 742900   		.ascii	"t)\000"
 9187              	.LASF1044:
 9188 3abc 42617365 		.ascii	"BaseT_t\000"
 9188      545F7400 
 9189              	.LASF239:
 9190 3ac4 5F5F4143 		.ascii	"__ACCUM_MAX__ 0X7FFFFFFFP-15K\000"
 9190      43554D5F 
 9190      4D41585F 
 9190      5F203058 
 9190      37464646 
 9191              	.LASF875:
 9192 3ae2 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE_FAILED() \000"
 9192      65435245 
 9192      4154455F 
 9192      434F554E 
 9192      54494E47 
 9193              	.LASF154:
 9194 3b0b 5F5F4C44 		.ascii	"__LDBL_MIN_10_EXP__ (-307)\000"
 9194      424C5F4D 
 9194      494E5F31 
 9194      305F4558 
 9194      505F5F20 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 236


 9195              	.LASF1134:
 9196 3b26 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 9196      75654973 
 9196      51756575 
 9196      65456D70 
 9196      74794672 
 9197              	.LASF817:
 9198 3b40 706F7274 		.ascii	"portENABLE_INTERRUPTS() vPortClearInterruptMask(0)\000"
 9198      454E4142 
 9198      4C455F49 
 9198      4E544552 
 9198      52555054 
 9199              	.LASF887:
 9200 3b73 74726163 		.ascii	"traceQUEUE_DELETE(pxQueue) \000"
 9200      65515545 
 9200      55455F44 
 9200      454C4554 
 9200      45287078 
 9201              	.LASF321:
 9202 3b8f 5F5F4743 		.ascii	"__GCC_HAVE_DWARF2_CFI_ASM 1\000"
 9202      435F4841 
 9202      56455F44 
 9202      57415246 
 9202      325F4346 
 9203              	.LASF469:
 9204 3bab 5F5F5F69 		.ascii	"___int8_t_defined 1\000"
 9204      6E74385F 
 9204      745F6465 
 9204      66696E65 
 9204      64203100 
 9205              	.LASF188:
 9206 3bbf 5F5F5346 		.ascii	"__SFRACT_MIN__ (-0.5HR-0.5HR)\000"
 9206      52414354 
 9206      5F4D494E 
 9206      5F5F2028 
 9206      2D302E35 
 9207              	.LASF1036:
 9208 3bdd 6C6F6E67 		.ascii	"long unsigned int\000"
 9208      20756E73 
 9208      69676E65 
 9208      6420696E 
 9208      7400
 9209              	.LASF289:
 9210 3bef 5F5F5341 		.ascii	"__SA_IBIT__ 16\000"
 9210      5F494249 
 9210      545F5F20 
 9210      313600
 9211              	.LASF1082:
 9212 3bfe 51756575 		.ascii	"Queue_t\000"
 9212      655F7400 
 9213              	.LASF1120:
 9214 3c06 78517565 		.ascii	"xQueuePeekFromISR\000"
 9214      75655065 
 9214      656B4672 
 9214      6F6D4953 
 9214      5200
 9215              	.LASF2:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 237


 9216 3c18 5F5F474E 		.ascii	"__GNUC__ 4\000"
 9216      55435F5F 
 9216      203400
 9217              	.LASF787:
 9218 3c23 70644641 		.ascii	"pdFALSE ( ( BaseT_t ) 0 )\000"
 9218      4C534520 
 9218      28202820 
 9218      42617365 
 9218      545F7420 
 9219              	.LASF43:
 9220 3c3d 5F5F5549 		.ascii	"__UINT16_TYPE__ short unsigned int\000"
 9220      4E543136 
 9220      5F545950 
 9220      455F5F20 
 9220      73686F72 
 9221              	.LASF658:
 9222 3c60 52414E44 		.ascii	"RAND_MAX __RAND_MAX\000"
 9222      5F4D4158 
 9222      205F5F52 
 9222      414E445F 
 9222      4D415800 
 9223              	.LASF764:
 9224 3c74 636F6E66 		.ascii	"configGENERATE_RUN_TIME_STATS 0\000"
 9224      69674745 
 9224      4E455241 
 9224      54455F52 
 9224      554E5F54 
 9225              	.LASF1035:
 9226 3c94 5F5F7569 		.ascii	"__uint32_t\000"
 9226      6E743332 
 9226      5F7400
 9227              	.LASF343:
 9228 3c9f 5F5F534F 		.ascii	"__SOFTFP__ 1\000"
 9228      46544650 
 9228      5F5F2031 
 9228      00
 9229              	.LASF673:
 9230 3cac 5F5F696E 		.ascii	"__int32_t_defined 1\000"
 9230      7433325F 
 9230      745F6465 
 9230      66696E65 
 9230      64203100 
 9231              	.LASF959:
 9232 3cc0 636F6E66 		.ascii	"configLIST_VOLATILE \000"
 9232      69674C49 
 9232      53545F56 
 9232      4F4C4154 
 9232      494C4520 
 9233              	.LASF167:
 9234 3cd5 5F5F4445 		.ascii	"__DEC32_MAX_EXP__ 97\000"
 9234      4333325F 
 9234      4D41585F 
 9234      4558505F 
 9234      5F203937 
 9235              	.LASF928:
 9236 3cea 636F6E66 		.ascii	"configPOST_SLEEP_PROCESSING(x) \000"
 9236      6967504F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 238


 9236      53545F53 
 9236      4C454550 
 9236      5F50524F 
 9237              	.LASF439:
 9238 3d0a 5F574348 		.ascii	"_WCHAR_T_DEFINED_ \000"
 9238      41525F54 
 9238      5F444546 
 9238      494E4544 
 9238      5F2000
 9239              	.LASF774:
 9240 3d1d 636F6E66 		.ascii	"configIP_ADDR1 168\000"
 9240      69674950 
 9240      5F414444 
 9240      52312031 
 9240      363800
 9241              	.LASF558:
 9242 3d30 5F5F6174 		.ascii	"__attribute_malloc__ \000"
 9242      74726962 
 9242      7574655F 
 9242      6D616C6C 
 9242      6F635F5F 
 9243              	.LASF940:
 9244 3d46 78546173 		.ascii	"xTaskHandle TaskHandle_t\000"
 9244      6B48616E 
 9244      646C6520 
 9244      5461736B 
 9244      48616E64 
 9245              	.LASF732:
 9246 3d5f 494E5438 		.ascii	"INT8_C(x) __INT8_C(x)\000"
 9246      5F432878 
 9246      29205F5F 
 9246      494E5438 
 9246      5F432878 
 9247              	.LASF58:
 9248 3d75 5F5F5549 		.ascii	"__UINT_FAST8_TYPE__ unsigned int\000"
 9248      4E545F46 
 9248      41535438 
 9248      5F545950 
 9248      455F5F20 
 9249              	.LASF257:
 9250 3d96 5F5F4C4C 		.ascii	"__LLACCUM_IBIT__ 32\000"
 9250      41434355 
 9250      4D5F4942 
 9250      49545F5F 
 9250      20333200 
 9251              	.LASF200:
 9252 3daa 5F5F4652 		.ascii	"__FRACT_EPSILON__ 0x1P-15R\000"
 9252      4143545F 
 9252      45505349 
 9252      4C4F4E5F 
 9252      5F203078 
 9253              	.LASF1020:
 9254 3dc5 75785175 		.ascii	"uxQueueType pcHead\000"
 9254      65756554 
 9254      79706520 
 9254      70634865 
 9254      616400
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 239


 9255              	.LASF815:
 9256 3dd8 706F7274 		.ascii	"portCLEAR_INTERRUPT_MASK_FROM_ISR(x) vPortClearInte"
 9256      434C4541 
 9256      525F494E 
 9256      54455252 
 9256      5550545F 
 9257 3e0b 72727570 		.ascii	"rruptMask(x)\000"
 9257      744D6173 
 9257      6B287829 
 9257      00
 9258              	.LASF1109:
 9259 3e18 78456E74 		.ascii	"xEntryTimeSet\000"
 9259      72795469 
 9259      6D655365 
 9259      7400
 9260              	.LASF911:
 9261 3e26 74726163 		.ascii	"traceEVENT_GROUP_CLEAR_BITS(xEventGroup,uxBitsToCle"
 9261      65455645 
 9261      4E545F47 
 9261      524F5550 
 9261      5F434C45 
 9262 3e59 61722920 		.ascii	"ar) \000"
 9262      00
 9263              	.LASF88:
 9264 3e5e 5F5F5549 		.ascii	"__UINT8_MAX__ 255\000"
 9264      4E54385F 
 9264      4D41585F 
 9264      5F203235 
 9264      3500
 9265              	.LASF337:
 9266 3e70 5F5F4150 		.ascii	"__APCS_32__ 1\000"
 9266      43535F33 
 9266      325F5F20 
 9266      3100
 9267              	.LASF412:
 9268 3e7e 5F5F6E65 		.ascii	"__need_NULL \000"
 9268      65645F4E 
 9268      554C4C20 
 9268      00
 9269              	.LASF1102:
 9270 3e8b 78546963 		.ascii	"xTicksToWait\000"
 9270      6B73546F 
 9270      57616974 
 9270      00
 9271              	.LASF786:
 9272 3e98 70644D53 		.ascii	"pdMS_TO_TICKS(xTimeInMs) ( ( ( TickT_t ) ( xTimeInM"
 9272      5F544F5F 
 9272      5449434B 
 9272      53287854 
 9272      696D6549 
 9273 3ecb 73202920 		.ascii	"s ) * configTICK_RATE_HZ ) / ( TickT_t ) 1000 )\000"
 9273      2A20636F 
 9273      6E666967 
 9273      5449434B 
 9273      5F524154 
 9274              	.LASF618:
 9275 3efb 5F5F6661 		.ascii	"__fastcall __attribute__((__fastcall__))\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 240


 9275      73746361 
 9275      6C6C205F 
 9275      5F617474 
 9275      72696275 
 9276              	.LASF69:
 9277 3f24 5F5F494E 		.ascii	"__INT_MAX__ 2147483647\000"
 9277      545F4D41 
 9277      585F5F20 
 9277      32313437 
 9277      34383336 
 9278              	.LASF464:
 9279 3f3b 6F666673 		.ascii	"offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEM"
 9279      65746F66 
 9279      28545950 
 9279      452C4D45 
 9279      4D424552 
 9280 3f6e 42455229 		.ascii	"BER)\000"
 9280      00
 9281              	.LASF107:
 9282 3f73 5F5F5549 		.ascii	"__UINT64_C(c) c ## ULL\000"
 9282      4E543634 
 9282      5F432863 
 9282      29206320 
 9282      23232055 
 9283              	.LASF53:
 9284 3f8a 5F5F5549 		.ascii	"__UINT_LEAST64_TYPE__ long long unsigned int\000"
 9284      4E545F4C 
 9284      45415354 
 9284      36345F54 
 9284      5950455F 
 9285              	.LASF359:
 9286 3fb7 5F4E4557 		.ascii	"_NEWLIB_VERSION \"2.2.0\"\000"
 9286      4C49425F 
 9286      56455253 
 9286      494F4E20 
 9286      22322E32 
 9287              	.LASF191:
 9288 3fcf 5F5F5553 		.ascii	"__USFRACT_FBIT__ 8\000"
 9288      46524143 
 9288      545F4642 
 9288      49545F5F 
 9288      203800
 9289              	.LASF160:
 9290 3fe2 5F5F4C44 		.ascii	"__LDBL_EPSILON__ 2.2204460492503131e-16L\000"
 9290      424C5F45 
 9290      5053494C 
 9290      4F4E5F5F 
 9290      20322E32 
 9291              	.LASF937:
 9292 400b 636F6E66 		.ascii	"configENABLE_BACKWARD_COMPATIBILITY 1\000"
 9292      6967454E 
 9292      41424C45 
 9292      5F424143 
 9292      4B574152 
 9293              	.LASF923:
 9294 4031 7076506F 		.ascii	"pvPortMallocAligned(x,puxStackBuffer) ( ( ( puxStac"
 9294      72744D61 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 241


 9294      6C6C6F63 
 9294      416C6967 
 9294      6E656428 
 9295 4064 6B427566 		.ascii	"kBuffer ) == NULL ) ? ( pvPortMalloc( ( x ) ) ) : ("
 9295      66657220 
 9295      29203D3D 
 9295      204E554C 
 9295      4C202920 
 9296 4097 20707578 		.ascii	" puxStackBuffer ) )\000"
 9296      53746163 
 9296      6B427566 
 9296      66657220 
 9296      29202900 
 9297              	.LASF601:
 9298 40ab 5F5F7075 		.ascii	"__pure2 __attribute__((__const__))\000"
 9298      72653220 
 9298      5F5F6174 
 9298      74726962 
 9298      7574655F 
 9299              	.LASF312:
 9300 40ce 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\000"
 9300      435F4154 
 9300      4F4D4943 
 9300      5F434841 
 9300      5231365F 
 9301              	.LASF141:
 9302 40f0 5F5F4442 		.ascii	"__DBL_MAX_EXP__ 1024\000"
 9302      4C5F4D41 
 9302      585F4558 
 9302      505F5F20 
 9302      31303234 
 9303              	.LASF9:
 9304 4105 5F5F4154 		.ascii	"__ATOMIC_RELEASE 3\000"
 9304      4F4D4943 
 9304      5F52454C 
 9304      45415345 
 9304      203300
 9305              	.LASF766:
 9306 4118 494E434C 		.ascii	"INCLUDE_uxTaskPriorityGet 1\000"
 9306      5544455F 
 9306      75785461 
 9306      736B5072 
 9306      696F7269 
 9307              	.LASF123:
 9308 4134 5F5F464C 		.ascii	"__FLT_MANT_DIG__ 24\000"
 9308      545F4D41 
 9308      4E545F44 
 9308      49475F5F 
 9308      20323400 
 9309              	.LASF503:
 9310 4148 5F52414E 		.ascii	"_RAND48_SEED_1 (0xabcd)\000"
 9310      4434385F 
 9310      53454544 
 9310      5F312028 
 9310      30786162 
 9311              	.LASF246:
 9312 4160 5F5F4C41 		.ascii	"__LACCUM_FBIT__ 31\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 242


 9312      4343554D 
 9312      5F464249 
 9312      545F5F20 
 9312      333100
 9313              	.LASF480:
 9314 4173 5F5F4C4F 		.ascii	"__LOCK_INIT_RECURSIVE(class,lock) static int lock ="
 9314      434B5F49 
 9314      4E49545F 
 9314      52454355 
 9314      52534956 
 9315 41a6 20303B00 		.ascii	" 0;\000"
 9316              	.LASF992:
 9317 41aa 71756575 		.ascii	"queueSEND_TO_FRONT ( ( BaseT_t ) 1 )\000"
 9317      6553454E 
 9317      445F544F 
 9317      5F46524F 
 9317      4E542028 
 9318              	.LASF617:
 9319 41cf 5F5F6E6F 		.ascii	"__nonnull(x) __attribute__((__nonnull__(x)))\000"
 9319      6E6E756C 
 9319      6C287829 
 9319      205F5F61 
 9319      74747269 
 9320              	.LASF588:
 9321 41fc 5F5F4343 		.ascii	"__CC_SUPPORTS___FUNC__ 1\000"
 9321      5F535550 
 9321      504F5254 
 9321      535F5F5F 
 9321      46554E43 
 9322              	.LASF810:
 9323 4215 706F7274 		.ascii	"portNVIC_PENDSVSET_BIT ( 1UL << 28UL )\000"
 9323      4E564943 
 9323      5F50454E 
 9323      44535653 
 9323      45545F42 
 9324              	.LASF762:
 9325 423c 636F6E66 		.ascii	"configUSE_RECURSIVE_MUTEXES 1\000"
 9325      69675553 
 9325      455F5245 
 9325      43555253 
 9325      4956455F 
 9326              	.LASF1000:
 9327 425a 78517565 		.ascii	"xQueueCreate(uxQueueLength,uxItemSize) xQueueGeneri"
 9327      75654372 
 9327      65617465 
 9327      28757851 
 9327      75657565 
 9328 428d 63437265 		.ascii	"cCreate( uxQueueLength, uxItemSize, queueQUEUE_TYPE"
 9328      61746528 
 9328      20757851 
 9328      75657565 
 9328      4C656E67 
 9329 42c0 5F424153 		.ascii	"_BASE )\000"
 9329      45202900 
 9330              	.LASF571:
 9331 42c8 5F5F474E 		.ascii	"__GNUCLIKE_MATH_BUILTIN_CONSTANTS \000"
 9331      55434C49 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 243


 9331      4B455F4D 
 9331      4154485F 
 9331      4255494C 
 9332              	.LASF1129:
 9333 42eb 78506F73 		.ascii	"xPosition\000"
 9333      6974696F 
 9333      6E00
 9334              	.LASF456:
 9335 42f5 5F545F50 		.ascii	"_T_PTRDIFF_ \000"
 9335      54524449 
 9335      46465F20 
 9335      00
 9336              	.LASF1003:
 9337 4302 78517565 		.ascii	"xQueueSend(xQueue,pvItemToQueue,xTicksToWait) xQueu"
 9337      75655365 
 9337      6E642878 
 9337      51756575 
 9337      652C7076 
 9338 4335 6547656E 		.ascii	"eGenericSend( ( xQueue ), ( pvItemToQueue ), ( xTic"
 9338      65726963 
 9338      53656E64 
 9338      28202820 
 9338      78517565 
 9339 4368 6B73546F 		.ascii	"ksToWait ), queueSEND_TO_BACK )\000"
 9339      57616974 
 9339      20292C20 
 9339      71756575 
 9339      6553454E 
 9340              	.LASF161:
 9341 4388 5F5F4C44 		.ascii	"__LDBL_DENORM_MIN__ 4.9406564584124654e-324L\000"
 9341      424C5F44 
 9341      454E4F52 
 9341      4D5F4D49 
 9341      4E5F5F20 
 9342              	.LASF381:
 9343 43b5 5F5F4558 		.ascii	"__EXPORT \000"
 9343      504F5254 
 9343      2000
 9344              	.LASF327:
 9345 43bf 5F5F4152 		.ascii	"__ARM_FEATURE_SAT 1\000"
 9345      4D5F4645 
 9345      41545552 
 9345      455F5341 
 9345      54203100 
 9346              	.LASF671:
 9347 43d3 5F5F696E 		.ascii	"__int16_t_defined 1\000"
 9347      7431365F 
 9347      745F6465 
 9347      66696E65 
 9347      64203100 
 9348              	.LASF222:
 9349 43e7 5F5F554C 		.ascii	"__ULLFRACT_IBIT__ 0\000"
 9349      4C465241 
 9349      43545F49 
 9349      4249545F 
 9349      5F203000 
 9350              	.LASF454:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 244


 9351 43fb 5F414E53 		.ascii	"_ANSI_STDDEF_H \000"
 9351      495F5354 
 9351      44444546 
 9351      5F482000 
 9352              	.LASF521:
 9353 440b 5F524545 		.ascii	"_REENT_CHECK_SIGNAL_BUF(ptr) \000"
 9353      4E545F43 
 9353      4845434B 
 9353      5F534947 
 9353      4E414C5F 
 9354              	.LASF452:
 9355 4429 5F535444 		.ascii	"_STDDEF_H \000"
 9355      4445465F 
 9355      482000
 9356              	.LASF1012:
 9357 4434 78517565 		.ascii	"xQueueAltSendToBack(xQueue,pvItemToQueue,xTicksToWa"
 9357      7565416C 
 9357      7453656E 
 9357      64546F42 
 9357      61636B28 
 9358 4467 69742920 		.ascii	"it) xQueueAltGenericSend( ( xQueue ), ( pvItemToQue"
 9358      78517565 
 9358      7565416C 
 9358      7447656E 
 9358      65726963 
 9359 449a 75652029 		.ascii	"ue ), ( xTicksToWait ), queueSEND_TO_BACK )\000"
 9359      2C202820 
 9359      78546963 
 9359      6B73546F 
 9359      57616974 
 9360              	.LASF501:
 9361 44c6 5F524545 		.ascii	"_REENT_SMALL_CHECK_INIT(ptr) \000"
 9361      4E545F53 
 9361      4D414C4C 
 9361      5F434845 
 9361      434B5F49 
 9362              	.LASF757:
 9363 44e4 636F6E66 		.ascii	"configUSE_MUTEXES 1\000"
 9363      69675553 
 9363      455F4D55 
 9363      54455845 
 9363      53203100 
 9364              	.LASF485:
 9365 44f8 5F5F6C6F 		.ascii	"__lock_acquire(lock) (_CAST_VOID 0)\000"
 9365      636B5F61 
 9365      63717569 
 9365      7265286C 
 9365      6F636B29 
 9366              	.LASF676:
 9367 451c 5F5F696E 		.ascii	"__int_least64_t_defined 1\000"
 9367      745F6C65 
 9367      61737436 
 9367      345F745F 
 9367      64656669 
 9368              	.LASF941:
 9369 4536 78517565 		.ascii	"xQueueHandle QueueHandle_t\000"
 9369      75654861 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 245


 9369      6E646C65 
 9369      20517565 
 9369      75654861 
 9370              	.LASF763:
 9371 4551 636F6E66 		.ascii	"configQUEUE_REGISTRY_SIZE 10\000"
 9371      69675155 
 9371      4555455F 
 9371      52454749 
 9371      53545259 
 9372              	.LASF924:
 9373 456e 76506F72 		.ascii	"vPortFreeAligned(pvBlockToFree) vPortFree( pvBlockT"
 9373      74467265 
 9373      65416C69 
 9373      676E6564 
 9373      28707642 
 9374 45a1 6F467265 		.ascii	"oFree )\000"
 9374      65202900 
 9375              	.LASF130:
 9376 45a9 5F5F464C 		.ascii	"__FLT_MAX__ 3.4028234663852886e+38F\000"
 9376      545F4D41 
 9376      585F5F20 
 9376      332E3430 
 9376      32383233 
 9377              	.LASF697:
 9378 45cd 494E5433 		.ascii	"INT32_MAX __INT32_MAX__\000"
 9378      325F4D41 
 9378      58205F5F 
 9378      494E5433 
 9378      325F4D41 
 9379              	.LASF241:
 9380 45e5 5F5F5541 		.ascii	"__UACCUM_FBIT__ 16\000"
 9380      4343554D 
 9380      5F464249 
 9380      545F5F20 
 9380      313600
 9381              	.LASF636:
 9382 45f8 5F5F7761 		.ascii	"__warn_references(sym,msg) __asm__(\".section .gnu."
 9382      726E5F72 
 9382      65666572 
 9382      656E6365 
 9382      73287379 
 9383 462a 7761726E 		.ascii	"warning.\" #sym); __asm__(\".asciz \\\"\" msg \"\\\""
 9383      696E672E 
 9383      22202373 
 9383      796D293B 
 9383      205F5F61 
 9384 4656 22293B20 		.ascii	"\"); __asm__(\".previous\")\000"
 9384      5F5F6173 
 9384      6D5F5F28 
 9384      222E7072 
 9384      6576696F 
 9385              	.LASF205:
 9386 466f 5F5F5546 		.ascii	"__UFRACT_EPSILON__ 0x1P-16UR\000"
 9386      52414354 
 9386      5F455053 
 9386      494C4F4E 
 9386      5F5F2030 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 246


 9387              	.LASF73:
 9388 468c 5F5F5743 		.ascii	"__WCHAR_MIN__ 0U\000"
 9388      4841525F 
 9388      4D494E5F 
 9388      5F203055 
 9388      00
 9389              	.LASF90:
 9390 469d 5F5F5549 		.ascii	"__UINT32_MAX__ 4294967295UL\000"
 9390      4E543332 
 9390      5F4D4158 
 9390      5F5F2034 
 9390      32393439 
 9391              	.LASF1137:
 9392 46b9 76517565 		.ascii	"vQueueAddToRegistry\000"
 9392      75654164 
 9392      64546F52 
 9392      65676973 
 9392      74727900 
 9393              	.LASF277:
 9394 46cd 5F5F5551 		.ascii	"__UQQ_IBIT__ 0\000"
 9394      515F4942 
 9394      49545F5F 
 9394      203000
 9395              	.LASF958:
 9396 46dc 4C495354 		.ascii	"LIST_H \000"
 9396      5F482000 
 9397              	.LASF175:
 9398 46e4 5F5F4445 		.ascii	"__DEC64_MIN__ 1E-383DD\000"
 9398      4336345F 
 9398      4D494E5F 
 9398      5F203145 
 9398      2D333833 
 9399              	.LASF1138:
 9400 46fb 76517565 		.ascii	"vQueueUnregisterQueue\000"
 9400      7565556E 
 9400      72656769 
 9400      73746572 
 9400      51756575 
 9401              	.LASF317:
 9402 4711 5F5F4743 		.ascii	"__GCC_ATOMIC_LONG_LOCK_FREE 2\000"
 9402      435F4154 
 9402      4F4D4943 
 9402      5F4C4F4E 
 9402      475F4C4F 
 9403              	.LASF253:
 9404 472f 5F5F554C 		.ascii	"__ULACCUM_MIN__ 0.0ULK\000"
 9404      41434355 
 9404      4D5F4D49 
 9404      4E5F5F20 
 9404      302E3055 
 9405              	.LASF364:
 9406 4746 5F415445 		.ascii	"_ATEXIT_DYNAMIC_ALLOC 1\000"
 9406      5849545F 
 9406      44594E41 
 9406      4D49435F 
 9406      414C4C4F 
 9407              	.LASF569:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 247


 9408 475e 5F5F454E 		.ascii	"__END_DECLS \000"
 9408      445F4445 
 9408      434C5320 
 9408      00
 9409              	.LASF1114:
 9410 476b 75785361 		.ascii	"uxSavedInterruptStatus\000"
 9410      76656449 
 9410      6E746572 
 9410      72757074 
 9410      53746174 
 9411              	.LASF336:
 9412 4782 5F5F4152 		.ascii	"__ARM_ARCH 7\000"
 9412      4D5F4152 
 9412      43482037 
 9412      00
 9413              	.LASF40:
 9414 478f 5F5F494E 		.ascii	"__INT32_TYPE__ long int\000"
 9414      5433325F 
 9414      54595045 
 9414      5F5F206C 
 9414      6F6E6720 
 9415              	.LASF420:
 9416 47a7 5F53495A 		.ascii	"_SIZE_T_ \000"
 9416      455F545F 
 9416      2000
 9417              	.LASF395:
 9418 47b1 5F444F54 		.ascii	"_DOTS , ...\000"
 9418      53202C20 
 9418      2E2E2E00 
 9419              	.LASF122:
 9420 47bd 5F5F464C 		.ascii	"__FLT_RADIX__ 2\000"
 9420      545F5241 
 9420      4449585F 
 9420      5F203200 
 9421              	.LASF1037:
 9422 47cd 6C6F6E67 		.ascii	"long long int\000"
 9422      206C6F6E 
 9422      6720696E 
 9422      7400
 9423              	.LASF525:
 9424 47db 5F524545 		.ascii	"_REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._m"
 9424      4E545F52 
 9424      414E4434 
 9424      385F4D55 
 9424      4C542870 
 9425 480e 756C7429 		.ascii	"ult)\000"
 9425      00
 9426              	.LASF104:
 9427 4813 5F5F5549 		.ascii	"__UINT_LEAST32_MAX__ 4294967295UL\000"
 9427      4E545F4C 
 9427      45415354 
 9427      33325F4D 
 9427      41585F5F 
 9428              	.LASF1023:
 9429 4835 71756575 		.ascii	"queueMUTEX_GIVE_BLOCK_TIME ( ( TickT_t ) 0U )\000"
 9429      654D5554 
 9429      45585F47 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 248


 9429      4956455F 
 9429      424C4F43 
 9430              	.LASF1110:
 9431 4863 78596965 		.ascii	"xYieldRequired\000"
 9431      6C645265 
 9431      71756972 
 9431      656400
 9432              	.LASF1006:
 9433 4872 78517565 		.ascii	"xQueueReceive(xQueue,pvBuffer,xTicksToWait) xQueueG"
 9433      75655265 
 9433      63656976 
 9433      65287851 
 9433      75657565 
 9434 48a5 656E6572 		.ascii	"enericReceive( ( xQueue ), ( pvBuffer ), ( xTicksTo"
 9434      69635265 
 9434      63656976 
 9434      65282028 
 9434      20785175 
 9435 48d8 57616974 		.ascii	"Wait ), pdFALSE )\000"
 9435      20292C20 
 9435      70644641 
 9435      4C534520 
 9435      2900
 9436              	.LASF1130:
 9437 48ea 70727643 		.ascii	"prvCopyDataFromQueue\000"
 9437      6F707944 
 9437      61746146 
 9437      726F6D51 
 9437      75657565 
 9438              	.LASF455:
 9439 48ff 5F505452 		.ascii	"_PTRDIFF_T \000"
 9439      44494646 
 9439      5F542000 
 9440              	.LASF56:
 9441 490b 5F5F494E 		.ascii	"__INT_FAST32_TYPE__ int\000"
 9441      545F4641 
 9441      53543332 
 9441      5F545950 
 9441      455F5F20 
 9442              	.LASF781:
 9443 4923 636F6E66 		.ascii	"configPRIO_BITS 5\000"
 9443      69675052 
 9443      494F5F42 
 9443      49545320 
 9443      3500
 9444              	.LASF518:
 9445 4935 5F524545 		.ascii	"_REENT_CHECK_ASCTIME_BUF(ptr) \000"
 9445      4E545F43 
 9445      4845434B 
 9445      5F415343 
 9445      54494D45 
 9446              	.LASF783:
 9447 4954 636F6E66 		.ascii	"configMAX_SYSCALL_INTERRUPT_PRIORITY ( 5 << (8 - co"
 9447      69674D41 
 9447      585F5359 
 9447      5343414C 
 9447      4C5F494E 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 249


 9448 4987 6E666967 		.ascii	"nfigPRIO_BITS) )\000"
 9448      5052494F 
 9448      5F424954 
 9448      53292029 
 9448      00
 9449              	.LASF489:
 9450 4998 5F5F6C6F 		.ascii	"__lock_release(lock) (_CAST_VOID 0)\000"
 9450      636B5F72 
 9450      656C6561 
 9450      7365286C 
 9450      6F636B29 
 9451              	.LASF720:
 9452 49bc 494E544D 		.ascii	"INTMAX_MAX __INTMAX_MAX__\000"
 9452      41585F4D 
 9452      4158205F 
 9452      5F494E54 
 9452      4D41585F 
 9453              	.LASF514:
 9454 49d6 5F524545 		.ascii	"_REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(va"
 9454      4E545F49 
 9454      4E49545F 
 9454      50545228 
 9454      76617229 
 9455 4a09 72292929 		.ascii	"r))); (var)->_stdin = &(var)->__sf[0]; (var)->_stdo"
 9455      3B202876 
 9455      6172292D 
 9455      3E5F7374 
 9455      64696E20 
 9456 4a3c 7574203D 		.ascii	"ut = &(var)->__sf[1]; (var)->_stderr = &(var)->__sf"
 9456      20262876 
 9456      6172292D 
 9456      3E5F5F73 
 9456      665B315D 
 9457 4a6f 5B325D3B 		.ascii	"[2]; (var)->_current_locale = \"C\"; (var)->_new._r"
 9457      20287661 
 9457      72292D3E 
 9457      5F637572 
 9457      72656E74 
 9458 4aa0 65656E74 		.ascii	"eent._rand_next = 1; (var)->_new._reent._r48._seed["
 9458      2E5F7261 
 9458      6E645F6E 
 9458      65787420 
 9458      3D20313B 
 9459 4ad3 305D203D 		.ascii	"0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed["
 9459      205F5241 
 9459      4E443438 
 9459      5F534545 
 9459      445F303B 
 9460 4b06 315D203D 		.ascii	"1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed["
 9460      205F5241 
 9460      4E443438 
 9460      5F534545 
 9460      445F313B 
 9461 4b39 325D203D 		.ascii	"2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult["
 9461      205F5241 
 9461      4E443438 
 9461      5F534545 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 250


 9461      445F323B 
 9462 4b6c 305D203D 		.ascii	"0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult["
 9462      205F5241 
 9462      4E443438 
 9462      5F4D554C 
 9462      545F303B 
 9463 4b9f 315D203D 		.ascii	"1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult["
 9463      205F5241 
 9463      4E443438 
 9463      5F4D554C 
 9463      545F313B 
 9464 4bd2 325D203D 		.ascii	"2] = _RAND48_MULT_2; (var)->_new._reent._r48._add ="
 9464      205F5241 
 9464      4E443438 
 9464      5F4D554C 
 9464      545F323B 
 9465 4c05 205F5241 		.ascii	" _RAND48_ADD; }\000"
 9465      4E443438 
 9465      5F414444 
 9465      3B207D00 
 9466              	.LASF436:
 9467 4c15 5F5F5743 		.ascii	"__WCHAR_T \000"
 9467      4841525F 
 9467      542000
 9468              	.LASF372:
 9469 4c20 5F5F5359 		.ascii	"__SYS_CONFIG_H__ \000"
 9469      535F434F 
 9469      4E464947 
 9469      5F485F5F 
 9469      2000
 9470              	.LASF659:
 9471 4c32 4D425F43 		.ascii	"MB_CUR_MAX __locale_mb_cur_max()\000"
 9471      55525F4D 
 9471      4158205F 
 9471      5F6C6F63 
 9471      616C655F 
 9472              	.LASF1108:
 9473 4c53 78436F70 		.ascii	"xCopyPosition\000"
 9473      79506F73 
 9473      6974696F 
 9473      6E00
 9474              	.LASF366:
 9475 4c61 5F484156 		.ascii	"_HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1\000"
 9475      455F4343 
 9475      5F494E48 
 9475      49424954 
 9475      5F4C4F4F 
 9476              	.LASF41:
 9477 4c84 5F5F494E 		.ascii	"__INT64_TYPE__ long long int\000"
 9477      5436345F 
 9477      54595045 
 9477      5F5F206C 
 9477      6F6E6720 
 9478              	.LASF206:
 9479 4ca1 5F5F4C46 		.ascii	"__LFRACT_FBIT__ 31\000"
 9479      52414354 
 9479      5F464249 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 251


 9479      545F5F20 
 9479      333100
 9480              	.LASF21:
 9481 4cb4 5F5F4348 		.ascii	"__CHAR_BIT__ 8\000"
 9481      41525F42 
 9481      49545F5F 
 9481      203800
 9482              	.LASF809:
 9483 4cc3 706F7274 		.ascii	"portNVIC_INT_CTRL_REG ( * ( ( volatile uint32_t * )"
 9483      4E564943 
 9483      5F494E54 
 9483      5F435452 
 9483      4C5F5245 
 9484 4cf6 20307865 		.ascii	" 0xe000ed04 ) )\000"
 9484      30303065 
 9484      64303420 
 9484      29202900 
 9485              	.LASF323:
 9486 4d06 5F5F5349 		.ascii	"__SIZEOF_WCHAR_T__ 4\000"
 9486      5A454F46 
 9486      5F574348 
 9486      41525F54 
 9486      5F5F2034 
 9487              	.LASF1053:
 9488 4d1b 784C4953 		.ascii	"xLIST_ITEM\000"
 9488      545F4954 
 9488      454D00
 9489              	.LASF622:
 9490 4d26 5F5F7072 		.ascii	"__predict_false(exp) __builtin_expect((exp), 0)\000"
 9490      65646963 
 9490      745F6661 
 9490      6C736528 
 9490      65787029 
 9491              	.LASF693:
 9492 4d56 494E545F 		.ascii	"INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)\000"
 9492      4C454153 
 9492      5431365F 
 9492      4D494E20 
 9492      282D5F5F 
 9493              	.LASF885:
 9494 4d81 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR_FAILED(pxQueue) \000"
 9494      65515545 
 9494      55455F52 
 9494      45434549 
 9494      56455F46 
 9495              	.LASF540:
 9496 4dae 5F524545 		.ascii	"_REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mb"
 9496      4E545F4D 
 9496      42535254 
 9496      4F574353 
 9496      5F535441 
 9497 4de1 7372746F 		.ascii	"srtowcs_state)\000"
 9497      7763735F 
 9497      73746174 
 9497      652900
 9498              	.LASF1080:
 9499 4df0 75635175 		.ascii	"ucQueueType\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 252


 9499      65756554 
 9499      79706500 
 9500              	.LASF204:
 9501 4dfc 5F5F5546 		.ascii	"__UFRACT_MAX__ 0XFFFFP-16UR\000"
 9501      52414354 
 9501      5F4D4158 
 9501      5F5F2030 
 9501      58464646 
 9502              	.LASF476:
 9503 4e18 5F5F5F69 		.ascii	"___int_least64_t_defined 1\000"
 9503      6E745F6C 
 9503      65617374 
 9503      36345F74 
 9503      5F646566 
 9504              	.LASF1017:
 9505 4e33 71756575 		.ascii	"queueUNLOCKED ( ( BaseT_t ) -1 )\000"
 9505      65554E4C 
 9505      4F434B45 
 9505      44202820 
 9505      28204261 
 9506              	.LASF1011:
 9507 4e54 78517565 		.ascii	"xQueueAltSendToFront(xQueue,pvItemToQueue,xTicksToW"
 9507      7565416C 
 9507      7453656E 
 9507      64546F46 
 9507      726F6E74 
 9508 4e87 61697429 		.ascii	"ait) xQueueAltGenericSend( ( xQueue ), ( pvItemToQu"
 9508      20785175 
 9508      65756541 
 9508      6C744765 
 9508      6E657269 
 9509 4eba 65756520 		.ascii	"eue ), ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9509      292C2028 
 9509      20785469 
 9509      636B7354 
 9509      6F576169 
 9510              	.LASF44:
 9511 4ee8 5F5F5549 		.ascii	"__UINT32_TYPE__ long unsigned int\000"
 9511      4E543332 
 9511      5F545950 
 9511      455F5F20 
 9511      6C6F6E67 
 9512              	.LASF554:
 9513 4f0a 5F5F5448 		.ascii	"__THROW \000"
 9513      524F5720 
 9513      00
 9514              	.LASF187:
 9515 4f13 5F5F5346 		.ascii	"__SFRACT_IBIT__ 0\000"
 9515      52414354 
 9515      5F494249 
 9515      545F5F20 
 9515      3000
 9516              	.LASF543:
 9517 4f25 5F524545 		.ascii	"_REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)"
 9517      4E545F4C 
 9517      3634415F 
 9517      42554628 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 253


 9517      70747229 
 9518 4f58 00       		.ascii	"\000"
 9519              	.LASF666:
 9520 4f59 5F5F5354 		.ascii	"__STDINT_EXP(x) __ ##x ##__\000"
 9520      44494E54 
 9520      5F455850 
 9520      28782920 
 9520      5F5F2023 
 9521              	.LASF468:
 9522 4f75 5F5F4558 		.ascii	"__EXP(x) __ ##x ##__\000"
 9522      50287829 
 9522      205F5F20 
 9522      23237820 
 9522      23235F5F 
 9523              	.LASF26:
 9524 4f8a 5F5F4259 		.ascii	"__BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 9524      54455F4F 
 9524      52444552 
 9524      5F5F205F 
 9524      5F4F5244 
 9525              	.LASF813:
 9526 4fb1 706F7274 		.ascii	"portYIELD_FROM_ISR(x) portEND_SWITCHING_ISR( x )\000"
 9526      5949454C 
 9526      445F4652 
 9526      4F4D5F49 
 9526      53522878 
 9527              	.LASF719:
 9528 4fe2 55494E54 		.ascii	"UINT_FAST64_MAX __UINT_FAST64_MAX__\000"
 9528      5F464153 
 9528      5436345F 
 9528      4D415820 
 9528      5F5F5549 
 9529              	.LASF388:
 9530 5006 5F4E4F54 		.ascii	"_NOTHROW \000"
 9530      48524F57 
 9530      2000
 9531              	.LASF802:
 9532 5010 706F7274 		.ascii	"portSHORT short\000"
 9532      53484F52 
 9532      54207368 
 9532      6F727400 
 9533              	.LASF357:
 9534 5020 5F414E53 		.ascii	"_ANSIDECL_H_ \000"
 9534      49444543 
 9534      4C5F485F 
 9534      2000
 9535              	.LASF806:
 9536 502e 706F7274 		.ascii	"portSTACK_GROWTH ( -1 )\000"
 9536      53544143 
 9536      4B5F4752 
 9536      4F575448 
 9536      2028202D 
 9537              	.LASF819:
 9538 5046 706F7274 		.ascii	"portEXIT_CRITICAL() vPortExitCritical()\000"
 9538      45584954 
 9538      5F435249 
 9538      54494341 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 254


 9538      4C282920 
 9539              	.LASF303:
 9540 506e 5F5F5553 		.ascii	"__USER_LABEL_PREFIX__ \000"
 9540      45525F4C 
 9540      4142454C 
 9540      5F505245 
 9540      4649585F 
 9541              	.LASF942:
 9542 5085 7853656D 		.ascii	"xSemaphoreHandle SemaphoreHandle_t\000"
 9542      6170686F 
 9542      72654861 
 9542      6E646C65 
 9542      2053656D 
 9543              	.LASF110:
 9544 50a8 5F5F494E 		.ascii	"__INT_FAST32_MAX__ 2147483647\000"
 9544      545F4641 
 9544      53543332 
 9544      5F4D4158 
 9544      5F5F2032 
 9545              	.LASF201:
 9546 50c6 5F5F5546 		.ascii	"__UFRACT_FBIT__ 16\000"
 9546      52414354 
 9546      5F464249 
 9546      545F5F20 
 9546      313600
 9547              	.LASF957:
 9548 50d9 494E435F 		.ascii	"INC_TASK_H \000"
 9548      5441534B 
 9548      5F482000 
 9549              	.LASF282:
 9550 50e5 5F5F5544 		.ascii	"__UDQ_FBIT__ 64\000"
 9550      515F4642 
 9550      49545F5F 
 9550      20363400 
 9551              	.LASF1074:
 9552 50f5 75784D65 		.ascii	"uxMessagesWaiting\000"
 9552      73736167 
 9552      65735761 
 9552      6974696E 
 9552      6700
 9553              	.LASF156:
 9554 5107 5F5F4C44 		.ascii	"__LDBL_MAX_10_EXP__ 308\000"
 9554      424C5F4D 
 9554      41585F31 
 9554      305F4558 
 9554      505F5F20 
 9555              	.LASF759:
 9556 511f 636F6E66 		.ascii	"configUSE_COUNTING_SEMAPHORES 1\000"
 9556      69675553 
 9556      455F434F 
 9556      554E5449 
 9556      4E475F53 
 9557              	.LASF976:
 9558 513f 74736B4B 		.ascii	"tskKERNEL_VERSION_MAJOR 8\000"
 9558      45524E45 
 9558      4C5F5645 
 9558      5253494F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 255


 9558      4E5F4D41 
 9559              	.LASF825:
 9560 5159 706F7274 		.ascii	"portRESET_READY_PRIORITY(uxPriority,uxReadyPrioriti"
 9560      52455345 
 9560      545F5245 
 9560      4144595F 
 9560      5052494F 
 9561 518c 65732920 		.ascii	"es) ( uxReadyPriorities ) &= ~( 1UL << ( uxPriority"
 9561      28207578 
 9561      52656164 
 9561      79507269 
 9561      6F726974 
 9562 51bf 20292029 		.ascii	" ) )\000"
 9562      00
 9563              	.LASF939:
 9564 51c4 706F7274 		.ascii	"portTickType TickT_t\000"
 9564      5469636B 
 9564      54797065 
 9564      20546963 
 9564      6B545F74 
 9565              	.LASF506:
 9566 51d9 5F52414E 		.ascii	"_RAND48_MULT_1 (0xdeec)\000"
 9566      4434385F 
 9566      4D554C54 
 9566      5F312028 
 9566      30786465 
 9567              	.LASF943:
 9568 51f1 78517565 		.ascii	"xQueueSetHandle QueueSetHandle_t\000"
 9568      75655365 
 9568      7448616E 
 9568      646C6520 
 9568      51756575 
 9569              	.LASF1026:
 9570 5212 756E7369 		.ascii	"unsigned int\000"
 9570      676E6564 
 9570      20696E74 
 9570      00
 9571              	.LASF422:
 9572 521f 5F53495A 		.ascii	"_SIZE_T_DEFINED_ \000"
 9572      455F545F 
 9572      44454649 
 9572      4E45445F 
 9572      2000
 9573              	.LASF647:
 9574 5231 5F5F504F 		.ascii	"__POSIX_VISIBLE 200809\000"
 9574      5349585F 
 9574      56495349 
 9574      424C4520 
 9574      32303038 
 9575              	.LASF375:
 9576 5248 5F5F4E45 		.ascii	"__NEWLIB_MINOR__ 2\000"
 9576      574C4942 
 9576      5F4D494E 
 9576      4F525F5F 
 9576      203200
 9577              	.LASF1001:
 9578 525b 78517565 		.ascii	"xQueueSendToFront(xQueue,pvItemToQueue,xTicksToWait"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 256


 9578      75655365 
 9578      6E64546F 
 9578      46726F6E 
 9578      74287851 
 9579 528e 29207851 		.ascii	") xQueueGenericSend( ( xQueue ), ( pvItemToQueue ),"
 9579      75657565 
 9579      47656E65 
 9579      72696353 
 9579      656E6428 
 9580 52c1 20282078 		.ascii	" ( xTicksToWait ), queueSEND_TO_FRONT )\000"
 9580      5469636B 
 9580      73546F57 
 9580      61697420 
 9580      292C2071 
 9581              	.LASF125:
 9582 52e9 5F5F464C 		.ascii	"__FLT_MIN_EXP__ (-125)\000"
 9582      545F4D49 
 9582      4E5F4558 
 9582      505F5F20 
 9582      282D3132 
 9583              	.LASF121:
 9584 5300 5F5F4445 		.ascii	"__DEC_EVAL_METHOD__ 2\000"
 9584      435F4556 
 9584      414C5F4D 
 9584      4554484F 
 9584      445F5F20 
 9585              	.LASF737:
 9586 5316 55494E54 		.ascii	"UINT32_C(x) __UINT32_C(x)\000"
 9586      33325F43 
 9586      28782920 
 9586      5F5F5549 
 9586      4E543332 
 9587              	.LASF232:
 9588 5330 5F5F5553 		.ascii	"__USACCUM_IBIT__ 8\000"
 9588      41434355 
 9588      4D5F4942 
 9588      49545F5F 
 9588      203800
 9589              	.LASF983:
 9590 5343 7461736B 		.ascii	"taskDISABLE_INTERRUPTS() portDISABLE_INTERRUPTS()\000"
 9590      44495341 
 9590      424C455F 
 9590      494E5445 
 9590      52525550 
 9591              	.LASF708:
 9592 5375 494E545F 		.ascii	"INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)\000"
 9592      46415354 
 9592      385F4D49 
 9592      4E20282D 
 9592      5F5F494E 
 9593              	.LASF620:
 9594 539c 5F5F7265 		.ascii	"__restrict \000"
 9594      73747269 
 9594      63742000 
 9595              	.LASF117:
 9596 53a8 5F5F5549 		.ascii	"__UINTPTR_MAX__ 4294967295U\000"
 9596      4E545054 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 257


 9596      525F4D41 
 9596      585F5F20 
 9596      34323934 
 9597              	.LASF124:
 9598 53c4 5F5F464C 		.ascii	"__FLT_DIG__ 6\000"
 9598      545F4449 
 9598      475F5F20 
 9598      3600
 9599              	.LASF245:
 9600 53d2 5F5F5541 		.ascii	"__UACCUM_EPSILON__ 0x1P-16UK\000"
 9600      4343554D 
 9600      5F455053 
 9600      494C4F4E 
 9600      5F5F2030 
 9601              	.LASF368:
 9602 53ef 5F465657 		.ascii	"_FVWRITE_IN_STREAMIO 1\000"
 9602      52495445 
 9602      5F494E5F 
 9602      53545245 
 9602      414D494F 
 9603              	.LASF445:
 9604 5406 5F574348 		.ascii	"_WCHAR_T_DECLARED \000"
 9604      41525F54 
 9604      5F444543 
 9604      4C415245 
 9604      442000
 9605              	.LASF868:
 9606 5419 74726163 		.ascii	"traceCREATE_MUTEX(pxNewQueue) \000"
 9606      65435245 
 9606      4154455F 
 9606      4D555445 
 9606      58287078 
 9607              	.LASF926:
 9608 5438 636F6E66 		.ascii	"configUSE_TICKLESS_IDLE 0\000"
 9608      69675553 
 9608      455F5449 
 9608      434B4C45 
 9608      53535F49 
 9609              	.LASF451:
 9610 5452 5F535953 		.ascii	"_SYS_REENT_H_ \000"
 9610      5F524545 
 9610      4E545F48 
 9610      5F2000
 9611              	.LASF120:
 9612 5461 5F5F464C 		.ascii	"__FLT_EVAL_METHOD__ 0\000"
 9612      545F4556 
 9612      414C5F4D 
 9612      4554484F 
 9612      445F5F20 
 9613              	.LASF678:
 9614 5477 5F5F696E 		.ascii	"__int_fast16_t_defined 1\000"
 9614      745F6661 
 9614      73743136 
 9614      5F745F64 
 9614      6566696E 
 9615              	.LASF921:
 9616 5490 706F7274 		.ascii	"portPRIVILEGE_BIT ( ( UBaseT_t ) 0x00 )\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 258


 9616      50524956 
 9616      494C4547 
 9616      455F4249 
 9616      54202820 
 9617              	.LASF1057:
 9618 54b8 75784E75 		.ascii	"uxNumberOfItems\000"
 9618      6D626572 
 9618      4F664974 
 9618      656D7300 
 9619              	.LASF348:
 9620 54c8 5F5F4152 		.ascii	"__ARM_ARCH_7M__ 1\000"
 9620      4D5F4152 
 9620      43485F37 
 9620      4D5F5F20 
 9620      3100
 9621              	.LASF860:
 9622 54da 74726163 		.ascii	"traceTASK_SWITCHED_OUT() \000"
 9622      65544153 
 9622      4B5F5357 
 9622      49544348 
 9622      45445F4F 
 9623              	.LASF507:
 9624 54f4 5F52414E 		.ascii	"_RAND48_MULT_2 (0x0005)\000"
 9624      4434385F 
 9624      4D554C54 
 9624      5F322028 
 9624      30783030 
 9625              	.LASF397:
 9626 550c 5F455846 		.ascii	"_EXFUN_NOTHROW(name,proto) name proto _NOTHROW\000"
 9626      554E5F4E 
 9626      4F544852 
 9626      4F57286E 
 9626      616D652C 
 9627              	.LASF457:
 9628 553b 5F545F50 		.ascii	"_T_PTRDIFF \000"
 9628      54524449 
 9628      46462000 
 9629              	.LASF276:
 9630 5547 5F5F5551 		.ascii	"__UQQ_FBIT__ 8\000"
 9630      515F4642 
 9630      49545F5F 
 9630      203800
 9631              	.LASF173:
 9632 5556 5F5F4445 		.ascii	"__DEC64_MIN_EXP__ (-382)\000"
 9632      4336345F 
 9632      4D494E5F 
 9632      4558505F 
 9632      5F20282D 
 9633              	.LASF244:
 9634 556f 5F5F5541 		.ascii	"__UACCUM_MAX__ 0XFFFFFFFFP-16UK\000"
 9634      4343554D 
 9634      5F4D4158 
 9634      5F5F2030 
 9634      58464646 
 9635              	.LASF792:
 9636 558f 65727251 		.ascii	"errQUEUE_FULL ( ( BaseT_t ) 0 )\000"
 9636      55455545 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 259


 9636      5F46554C 
 9636      4C202820 
 9636      28204261 
 9637              	.LASF985:
 9638 55af 7461736B 		.ascii	"taskSCHEDULER_SUSPENDED ( ( BaseT_t ) 0 )\000"
 9638      53434845 
 9638      44554C45 
 9638      525F5355 
 9638      5350454E 
 9639              	.LASF694:
 9640 55d9 494E545F 		.ascii	"INT_LEAST16_MAX __INT_LEAST16_MAX__\000"
 9640      4C454153 
 9640      5431365F 
 9640      4D415820 
 9640      5F5F494E 
 9641              	.LASF653:
 9642 55fd 616C6C6F 		.ascii	"alloca\000"
 9642      636100
 9643              	.LASF209:
 9644 5604 5F5F4C46 		.ascii	"__LFRACT_MAX__ 0X7FFFFFFFP-31LR\000"
 9644      52414354 
 9644      5F4D4158 
 9644      5F5F2030 
 9644      58374646 
 9645              	.LASF325:
 9646 5624 5F5F5349 		.ascii	"__SIZEOF_PTRDIFF_T__ 4\000"
 9646      5A454F46 
 9646      5F505452 
 9646      44494646 
 9646      5F545F5F 
 9647              	.LASF812:
 9648 563b 706F7274 		.ascii	"portEND_SWITCHING_ISR(xSwitchRequired) if( xSwitchR"
 9648      454E445F 
 9648      53574954 
 9648      4348494E 
 9648      475F4953 
 9649 566e 65717569 		.ascii	"equired ) portNVIC_INT_CTRL_REG = portNVIC_PENDSVSE"
 9649      72656420 
 9649      2920706F 
 9649      72744E56 
 9649      49435F49 
 9650 56a1 545F4249 		.ascii	"T_BIT\000"
 9650      5400
 9651              	.LASF0:
 9652 56a7 5F5F5354 		.ascii	"__STDC__ 1\000"
 9652      44435F5F 
 9652      203100
 9653              	.LASF473:
 9654 56b2 5F5F5F69 		.ascii	"___int_least8_t_defined 1\000"
 9654      6E745F6C 
 9654      65617374 
 9654      385F745F 
 9654      64656669 
 9655              	.LASF27:
 9656 56cc 5F5F464C 		.ascii	"__FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__\000"
 9656      4F41545F 
 9656      574F5244 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 260


 9656      5F4F5244 
 9656      45525F5F 
 9657              	.LASF750:
 9658 56f9 636F6E66 		.ascii	"configMINIMAL_STACK_SIZE ( ( unsigned short ) 256 )"
 9658      69674D49 
 9658      4E494D41 
 9658      4C5F5354 
 9658      41434B5F 
 9659 572c 00       		.ascii	"\000"
 9660              	.LASF42:
 9661 572d 5F5F5549 		.ascii	"__UINT8_TYPE__ unsigned char\000"
 9661      4E54385F 
 9661      54595045 
 9661      5F5F2075 
 9661      6E736967 
 9662              	.LASF677:
 9663 574a 5F5F696E 		.ascii	"__int_fast8_t_defined 1\000"
 9663      745F6661 
 9663      7374385F 
 9663      745F6465 
 9663      66696E65 
 9664              	.LASF37:
 9665 5762 5F5F5349 		.ascii	"__SIG_ATOMIC_TYPE__ int\000"
 9665      475F4154 
 9665      4F4D4943 
 9665      5F545950 
 9665      455F5F20 
 9666              	.LASF610:
 9667 577a 5F4E6F72 		.ascii	"_Noreturn __dead2\000"
 9667      65747572 
 9667      6E205F5F 
 9667      64656164 
 9667      3200
 9668              	.LASF704:
 9669 578c 55494E54 		.ascii	"UINT64_MAX __UINT64_MAX__\000"
 9669      36345F4D 
 9669      4158205F 
 9669      5F55494E 
 9669      5436345F 
 9670              	.LASF953:
 9671 57a6 746D7254 		.ascii	"tmrTIMER_CALLBACK TimerCallbackFunction_t\000"
 9671      494D4552 
 9671      5F43414C 
 9671      4C424143 
 9671      4B205469 
 9672              	.LASF1060:
 9673 57d0 4C697374 		.ascii	"List_t\000"
 9673      5F7400
 9674              	.LASF1071:
 9675 57d7 70635772 		.ascii	"pcWriteTo\000"
 9675      69746554 
 9675      6F00
 9676              	.LASF179:
 9677 57e1 5F5F4445 		.ascii	"__DEC128_MANT_DIG__ 34\000"
 9677      43313238 
 9677      5F4D414E 
 9677      545F4449 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 261


 9677      475F5F20 
 9678              	.LASF371:
 9679 57f8 5F554E42 		.ascii	"_UNBUF_STREAM_OPT 1\000"
 9679      55465F53 
 9679      54524541 
 9679      4D5F4F50 
 9679      54203100 
 9680              	.LASF382:
 9681 580c 5F5F494D 		.ascii	"__IMPORT \000"
 9681      504F5254 
 9681      2000
 9682              	.LASF498:
 9683 5816 5F415445 		.ascii	"_ATEXIT_SIZE 32\000"
 9683      5849545F 
 9683      53495A45 
 9683      20333200 
 9684              	.LASF296:
 9685 5826 5F5F5553 		.ascii	"__USA_FBIT__ 16\000"
 9685      415F4642 
 9685      49545F5F 
 9685      20313600 
 9686              	.LASF599:
 9687 5836 5F5F766F 		.ascii	"__volatile volatile\000"
 9687      6C617469 
 9687      6C652076 
 9687      6F6C6174 
 9687      696C6500 
 9688              	.LASF466:
 9689 584a 5F4D4143 		.ascii	"_MACHINE__TYPES_H \000"
 9689      48494E45 
 9689      5F5F5459 
 9689      5045535F 
 9689      482000
 9690              	.LASF481:
 9691 585d 5F5F6C6F 		.ascii	"__lock_init(lock) (_CAST_VOID 0)\000"
 9691      636B5F69 
 9691      6E697428 
 9691      6C6F636B 
 9691      2920285F 
 9692              	.LASF356:
 9693 587e 5F5F4945 		.ascii	"__IEEE_LITTLE_ENDIAN \000"
 9693      45455F4C 
 9693      4954544C 
 9693      455F454E 
 9693      4449414E 
 9694              	.LASF136:
 9695 5894 5F5F464C 		.ascii	"__FLT_HAS_QUIET_NAN__ 1\000"
 9695      545F4841 
 9695      535F5155 
 9695      4945545F 
 9695      4E414E5F 
 9696              	.LASF814:
 9697 58ac 706F7274 		.ascii	"portSET_INTERRUPT_MASK_FROM_ISR() ulPortSetInterrup"
 9697      5345545F 
 9697      494E5445 
 9697      52525550 
 9697      545F4D41 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 262


 9698 58df 744D6173 		.ascii	"tMask()\000"
 9698      6B282900 
 9699              	.LASF311:
 9700 58e7 5F5F4743 		.ascii	"__GCC_ATOMIC_CHAR_LOCK_FREE 2\000"
 9700      435F4154 
 9700      4F4D4943 
 9700      5F434841 
 9700      525F4C4F 
 9701              	.LASF399:
 9702 5905 5F455850 		.ascii	"_EXPARM(name,proto) (* name) proto\000"
 9702      41524D28 
 9702      6E616D65 
 9702      2C70726F 
 9702      746F2920 
 9703              	.LASF210:
 9704 5928 5F5F4C46 		.ascii	"__LFRACT_EPSILON__ 0x1P-31LR\000"
 9704      52414354 
 9704      5F455053 
 9704      494C4F4E 
 9704      5F5F2030 
 9705              	.LASF386:
 9706 5945 5F424547 		.ascii	"_BEGIN_STD_C \000"
 9706      494E5F53 
 9706      54445F43 
 9706      2000
 9707              	.LASF888:
 9708 5953 74726163 		.ascii	"traceTASK_CREATE(pxNewTCB) \000"
 9708      65544153 
 9708      4B5F4352 
 9708      45415445 
 9708      2870784E 
 9709              	.LASF613:
 9710 596f 5F5F6D61 		.ascii	"__malloc_like __attribute__((__malloc__))\000"
 9710      6C6C6F63 
 9710      5F6C696B 
 9710      65205F5F 
 9710      61747472 
 9711              	.LASF758:
 9712 5999 636F6E66 		.ascii	"configMAX_CO_ROUTINE_PRIORITIES ( 2 )\000"
 9712      69674D41 
 9712      585F434F 
 9712      5F524F55 
 9712      54494E45 
 9713              	.LASF725:
 9714 59bf 5349475F 		.ascii	"SIG_ATOMIC_MAX __STDINT_EXP(INT_MAX)\000"
 9714      41544F4D 
 9714      49435F4D 
 9714      4158205F 
 9714      5F535444 
 9715              	.LASF332:
 9716 59e4 5F5F4152 		.ascii	"__ARM_SIZEOF_MINIMAL_ENUM 1\000"
 9716      4D5F5349 
 9716      5A454F46 
 9716      5F4D494E 
 9716      494D414C 
 9717              	.LASF1031:
 9718 5a00 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 263


 9718      676E6564 
 9718      20636861 
 9718      7200
 9719              	.LASF884:
 9720 5a0e 74726163 		.ascii	"traceQUEUE_RECEIVE_FROM_ISR(pxQueue) \000"
 9720      65515545 
 9720      55455F52 
 9720      45434549 
 9720      56455F46 
 9721              	.LASF335:
 9722 5a34 5F5F6172 		.ascii	"__arm__ 1\000"
 9722      6D5F5F20 
 9722      3100
 9723              	.LASF584:
 9724 5a3e 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_MEMCPY 1\000"
 9724      55434C49 
 9724      4B455F42 
 9724      55494C54 
 9724      494E5F4D 
 9725              	.LASF1033:
 9726 5a5a 73686F72 		.ascii	"short unsigned int\000"
 9726      7420756E 
 9726      7369676E 
 9726      65642069 
 9726      6E7400
 9727              	.LASF1059:
 9728 5a6d 784C6973 		.ascii	"xListEnd\000"
 9728      74456E64 
 9728      00
 9729              	.LASF896:
 9730 5a76 74726163 		.ascii	"traceTASK_RESUME_FROM_ISR(pxTaskToResume) \000"
 9730      65544153 
 9730      4B5F5245 
 9730      53554D45 
 9730      5F46524F 
 9731              	.LASF578:
 9732 5aa1 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_STDARG 1\000"
 9732      55434C49 
 9732      4B455F42 
 9732      55494C54 
 9732      494E5F53 
 9733              	.LASF681:
 9734 5abd 494E5450 		.ascii	"INTPTR_MIN (-__INTPTR_MAX__ - 1)\000"
 9734      54525F4D 
 9734      494E2028 
 9734      2D5F5F49 
 9734      4E545054 
 9735              	.LASF380:
 9736 5ade 5F5F5241 		.ascii	"__RAND_MAX 0x7fffffff\000"
 9736      4E445F4D 
 9736      41582030 
 9736      78376666 
 9736      66666666 
 9737              	.LASF1142:
 9738 5af4 78517565 		.ascii	"xQueueRegistry\000"
 9738      75655265 
 9738      67697374 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 264


 9738      727900
 9739              	.LASF595:
 9740 5b03 5F5F5354 		.ascii	"__STRING(x) #x\000"
 9740      52494E47 
 9740      28782920 
 9740      237800
 9741              	.LASF433:
 9742 5b12 5F574348 		.ascii	"_WCHAR_T \000"
 9742      41525F54 
 9742      2000
 9743              	.LASF685:
 9744 5b1c 494E5438 		.ascii	"INT8_MAX __INT8_MAX__\000"
 9744      5F4D4158 
 9744      205F5F49 
 9744      4E54385F 
 9744      4D41585F 
 9745              	.LASF1111:
 9746 5b32 7854696D 		.ascii	"xTimeOut\000"
 9746      654F7574 
 9746      00
 9747              	.LASF639:
 9748 5b3b 5F5F4642 		.ascii	"__FBSDID(s) struct __hack\000"
 9748      53444944 
 9748      28732920 
 9748      73747275 
 9748      6374205F 
 9749              	.LASF165:
 9750 5b55 5F5F4445 		.ascii	"__DEC32_MANT_DIG__ 7\000"
 9750      4333325F 
 9750      4D414E54 
 9750      5F444947 
 9750      5F5F2037 
 9751              	.LASF1131:
 9752 5b6a 70727655 		.ascii	"prvUnlockQueue\000"
 9752      6E6C6F63 
 9752      6B517565 
 9752      756500
 9753              	.LASF717:
 9754 5b79 494E545F 		.ascii	"INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)\000"
 9754      46415354 
 9754      36345F4D 
 9754      494E2028 
 9754      2D5F5F49 
 9755              	.LASF788:
 9756 5ba2 70645452 		.ascii	"pdTRUE ( ( BaseT_t ) 1 )\000"
 9756      55452028 
 9756      20282042 
 9756      61736554 
 9756      5F742029 
 9757              	.LASF467:
 9758 5bbb 5F4D4143 		.ascii	"_MACHINE__DEFAULT_TYPES_H \000"
 9758      48494E45 
 9758      5F5F4445 
 9758      4641554C 
 9758      545F5459 
 9759              	.LASF22:
 9760 5bd6 5F5F4249 		.ascii	"__BIGGEST_ALIGNMENT__ 8\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 265


 9760      47474553 
 9760      545F414C 
 9760      49474E4D 
 9760      454E545F 
 9761              	.LASF233:
 9762 5bee 5F5F5553 		.ascii	"__USACCUM_MIN__ 0.0UHK\000"
 9762      41434355 
 9762      4D5F4D49 
 9762      4E5F5F20 
 9762      302E3055 
 9763              	.LASF462:
 9764 5c05 5F474343 		.ascii	"_GCC_PTRDIFF_T \000"
 9764      5F505452 
 9764      44494646 
 9764      5F542000 
 9765              	.LASF582:
 9766 5c15 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_NEXT_ARG 1\000"
 9766      55434C49 
 9766      4B455F42 
 9766      55494C54 
 9766      494E5F4E 
 9767              	.LASF765:
 9768 5c33 494E434C 		.ascii	"INCLUDE_vTaskPrioritySet 1\000"
 9768      5544455F 
 9768      76546173 
 9768      6B507269 
 9768      6F726974 
 9769              	.LASF293:
 9770 5c4e 5F5F5441 		.ascii	"__TA_IBIT__ 64\000"
 9770      5F494249 
 9770      545F5F20 
 9770      363400
 9771              	.LASF771:
 9772 5c5d 494E434C 		.ascii	"INCLUDE_vTaskDelay 1\000"
 9772      5544455F 
 9772      76546173 
 9772      6B44656C 
 9772      61792031 
 9773              	.LASF870:
 9774 5c72 74726163 		.ascii	"traceGIVE_MUTEX_RECURSIVE(pxMutex) \000"
 9774      65474956 
 9774      455F4D55 
 9774      5445585F 
 9774      52454355 
 9775              	.LASF113:
 9776 5c96 5F5F5549 		.ascii	"__UINT_FAST16_MAX__ 4294967295U\000"
 9776      4E545F46 
 9776      41535431 
 9776      365F4D41 
 9776      585F5F20 
 9777              	.LASF894:
 9778 5cb6 74726163 		.ascii	"traceTASK_SUSPEND(pxTaskToSuspend) \000"
 9778      65544153 
 9778      4B5F5355 
 9778      5350454E 
 9778      44287078 
 9779              	.LASF415:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 266


 9780 5cda 5F53495A 		.ascii	"_SIZE_T \000"
 9780      455F5420 
 9780      00
 9781              	.LASF441:
 9782 5ce3 5F574348 		.ascii	"_WCHAR_T_H \000"
 9782      41525F54 
 9782      5F482000 
 9783              	.LASF791:
 9784 5cef 65727251 		.ascii	"errQUEUE_EMPTY ( ( BaseT_t ) 0 )\000"
 9784      55455545 
 9784      5F454D50 
 9784      54592028 
 9784      20282042 
 9785              	.LASF837:
 9786 5d10 494E434C 		.ascii	"INCLUDE_xQueueGetMutexHolder 0\000"
 9786      5544455F 
 9786      78517565 
 9786      75654765 
 9786      744D7574 
 9787              	.LASF834:
 9788 5d2f 706F7274 		.ascii	"portUSING_MPU_WRAPPERS 0\000"
 9788      5553494E 
 9788      475F4D50 
 9788      555F5752 
 9788      41505045 
 9789              	.LASF340:
 9790 5d48 5F5F4152 		.ascii	"__ARM_ARCH_ISA_THUMB 2\000"
 9790      4D5F4152 
 9790      43485F49 
 9790      53415F54 
 9790      48554D42 
 9791              	.LASF106:
 9792 5d5f 5F5F5549 		.ascii	"__UINT_LEAST64_MAX__ 18446744073709551615ULL\000"
 9792      4E545F4C 
 9792      45415354 
 9792      36345F4D 
 9792      41585F5F 
 9793              	.LASF728:
 9794 5d8c 57434841 		.ascii	"WCHAR_MIN __WCHAR_MIN__\000"
 9794      525F4D49 
 9794      4E205F5F 
 9794      57434841 
 9794      525F4D49 
 9795              	.LASF369:
 9796 5da4 5F465345 		.ascii	"_FSEEK_OPTIMIZATION 1\000"
 9796      454B5F4F 
 9796      5054494D 
 9796      495A4154 
 9796      494F4E20 
 9797              	.LASF108:
 9798 5dba 5F5F494E 		.ascii	"__INT_FAST8_MAX__ 2147483647\000"
 9798      545F4641 
 9798      5354385F 
 9798      4D41585F 
 9798      5F203231 
 9799              	.LASF865:
 9800 5dd7 74726163 		.ascii	"traceMOVED_TASK_TO_READY_STATE(pxTCB) \000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 267


 9800      654D4F56 
 9800      45445F54 
 9800      41534B5F 
 9800      544F5F52 
 9801              	.LASF643:
 9802 5dfe 5F5F434F 		.ascii	"__COPYRIGHT(s) struct __hack\000"
 9802      50595249 
 9802      47485428 
 9802      73292073 
 9802      74727563 
 9803              	.LASF202:
 9804 5e1b 5F5F5546 		.ascii	"__UFRACT_IBIT__ 0\000"
 9804      52414354 
 9804      5F494249 
 9804      545F5F20 
 9804      3000
 9805              	.LASF329:
 9806 5e2d 5F5F4152 		.ascii	"__ARM_32BIT_STATE 1\000"
 9806      4D5F3332 
 9806      4249545F 
 9806      53544154 
 9806      45203100 
 9807              	.LASF756:
 9808 5e41 636F6E66 		.ascii	"configUSE_CO_ROUTINES 0\000"
 9808      69675553 
 9808      455F434F 
 9808      5F524F55 
 9808      54494E45 
 9809              	.LASF93:
 9810 5e59 5F5F494E 		.ascii	"__INT8_C(c) c\000"
 9810      54385F43 
 9810      28632920 
 9810      6300
 9811              	.LASF207:
 9812 5e67 5F5F4C46 		.ascii	"__LFRACT_IBIT__ 0\000"
 9812      52414354 
 9812      5F494249 
 9812      545F5F20 
 9812      3000
 9813              	.LASF453:
 9814 5e79 5F535444 		.ascii	"_STDDEF_H_ \000"
 9814      4445465F 
 9814      485F2000 
 9815              	.LASF1050:
 9816 5e85 70764F77 		.ascii	"pvOwner\000"
 9816      6E657200 
 9817              	.LASF139:
 9818 5e8d 5F5F4442 		.ascii	"__DBL_MIN_EXP__ (-1021)\000"
 9818      4C5F4D49 
 9818      4E5F4558 
 9818      505F5F20 
 9818      282D3130 
 9819              	.LASF419:
 9820 5ea5 5F5F5349 		.ascii	"__SIZE_T \000"
 9820      5A455F54 
 9820      2000
 9821              	.LASF933:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 268


 9822 5eaf 636F6E66 		.ascii	"configUSE_NEWLIB_REENTRANT 0\000"
 9822      69675553 
 9822      455F4E45 
 9822      574C4942 
 9822      5F524545 
 9823              	.LASF663:
 9824 5ecc 494E435F 		.ascii	"INC_FREERTOS_H \000"
 9824      46524545 
 9824      52544F53 
 9824      5F482000 
 9825              	.LASF251:
 9826 5edc 5F5F554C 		.ascii	"__ULACCUM_FBIT__ 32\000"
 9826      41434355 
 9826      4D5F4642 
 9826      49545F5F 
 9826      20333200 
 9827              	.LASF633:
 9828 5ef0 5F5F7072 		.ascii	"__printf0like(fmtarg,firstvararg) \000"
 9828      696E7466 
 9828      306C696B 
 9828      6528666D 
 9828      74617267 
 9829              	.LASF86:
 9830 5f13 5F5F494E 		.ascii	"__INT32_MAX__ 2147483647L\000"
 9830      5433325F 
 9830      4D41585F 
 9830      5F203231 
 9830      34373438 
 9831              	.LASF919:
 9832 5f2d 706F7274 		.ascii	"portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() \000"
 9832      434F4E46 
 9832      49475552 
 9832      455F5449 
 9832      4D45525F 
 9833              	.LASF354:
 9834 5f57 5F5F5553 		.ascii	"__USES_INITFINI__ 1\000"
 9834      45535F49 
 9834      4E495446 
 9834      494E495F 
 9834      5F203100 
 9835              	.LASF488:
 9836 5f6b 5F5F6C6F 		.ascii	"__lock_try_acquire_recursive(lock) (_CAST_VOID 0)\000"
 9836      636B5F74 
 9836      72795F61 
 9836      63717569 
 9836      72655F72 
 9837              	.LASF1014:
 9838 5f9d 78517565 		.ascii	"xQueueAltPeek(xQueue,pvBuffer,xTicksToWait) xQueueA"
 9838      7565416C 
 9838      74506565 
 9838      6B287851 
 9838      75657565 
 9839 5fd0 6C744765 		.ascii	"ltGenericReceive( ( xQueue ), ( pvBuffer ), ( xTick"
 9839      6E657269 
 9839      63526563 
 9839      65697665 
 9839      28202820 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 269


 9840 6003 73546F57 		.ascii	"sToWait ), pdTRUE )\000"
 9840      61697420 
 9840      292C2070 
 9840      64545255 
 9840      45202900 
 9841              	.LASF600:
 9842 6017 5F5F6465 		.ascii	"__dead2 __attribute__((__noreturn__))\000"
 9842      61643220 
 9842      5F5F6174 
 9842      74726962 
 9842      7574655F 
 9843              	.LASF832:
 9844 603d 50524956 		.ascii	"PRIVILEGED_FUNCTION \000"
 9844      494C4547 
 9844      45445F46 
 9844      554E4354 
 9844      494F4E20 
 9845              	.LASF990:
 9846 6052 51554555 		.ascii	"QUEUE_H \000"
 9846      455F4820 
 9846      00
 9847              	.LASF741:
 9848 605b 55494E54 		.ascii	"UINTMAX_C(x) __UINTMAX_C(x)\000"
 9848      4D41585F 
 9848      43287829 
 9848      205F5F55 
 9848      494E544D 
 9849              	.LASF477:
 9850 6077 5F5F4558 		.ascii	"__EXP\000"
 9850      5000
 9851              	.LASF472:
 9852 607d 5F5F5F69 		.ascii	"___int64_t_defined 1\000"
 9852      6E743634 
 9852      5F745F64 
 9852      6566696E 
 9852      65642031 
 9853              	.LASF162:
 9854 6092 5F5F4C44 		.ascii	"__LDBL_HAS_DENORM__ 1\000"
 9854      424C5F48 
 9854      41535F44 
 9854      454E4F52 
 9854      4D5F5F20 
 9855              	.LASF881:
 9856 60a8 74726163 		.ascii	"traceQUEUE_RECEIVE_FAILED(pxQueue) \000"
 9856      65515545 
 9856      55455F52 
 9856      45434549 
 9856      56455F46 
 9857              	.LASF996:
 9858 60cc 71756575 		.ascii	"queueQUEUE_TYPE_MUTEX ( ( uint8_t ) 1U )\000"
 9858      65515545 
 9858      55455F54 
 9858      5950455F 
 9858      4D555445 
 9859              	.LASF309:
 9860 60f5 5F5F4743 		.ascii	"__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\000"
 9860      435F4841 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 270


 9860      56455F53 
 9860      594E435F 
 9860      434F4D50 
 9861              	.LASF1090:
 9862 611a 78517565 		.ascii	"xQueueGenericReset\000"
 9862      75654765 
 9862      6E657269 
 9862      63526573 
 9862      657400
 9863              	.LASF751:
 9864 612d 636F6E66 		.ascii	"configTOTAL_HEAP_SIZE ( ( size_t ) ( 8 * 1024 ) )\000"
 9864      6967544F 
 9864      54414C5F 
 9864      48454150 
 9864      5F53495A 
 9865              	.LASF568:
 9866 615f 5F5F4245 		.ascii	"__BEGIN_DECLS \000"
 9866      47494E5F 
 9866      4445434C 
 9866      532000
 9867              	.LASF238:
 9868 616e 5F5F4143 		.ascii	"__ACCUM_MIN__ (-0X1P15K-0X1P15K)\000"
 9868      43554D5F 
 9868      4D494E5F 
 9868      5F20282D 
 9868      30583150 
 9869              	.LASF520:
 9870 618f 5F524545 		.ascii	"_REENT_CHECK_MISC(ptr) \000"
 9870      4E545F43 
 9870      4845434B 
 9870      5F4D4953 
 9870      43287074 
 9871              	.LASF580:
 9872 61a7 5F5F474E 		.ascii	"__GNUC_VA_LIST_COMPATIBILITY 1\000"
 9872      55435F56 
 9872      415F4C49 
 9872      53545F43 
 9872      4F4D5041 
 9873              	.LASF716:
 9874 61c6 55494E54 		.ascii	"UINT_FAST32_MAX __UINT_FAST32_MAX__\000"
 9874      5F464153 
 9874      5433325F 
 9874      4D415820 
 9874      5F5F5549 
 9875              	.LASF956:
 9876 61ea 784C6973 		.ascii	"xList List_t\000"
 9876      74204C69 
 9876      73745F74 
 9876      00
 9877              	.LASF48:
 9878 61f7 5F5F494E 		.ascii	"__INT_LEAST32_TYPE__ long int\000"
 9878      545F4C45 
 9878      41535433 
 9878      325F5459 
 9878      50455F5F 
 9879              	.LASF944:
 9880 6215 78517565 		.ascii	"xQueueSetMemberHandle QueueSetMemberHandle_t\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 271


 9880      75655365 
 9880      744D656D 
 9880      62657248 
 9880      616E646C 
 9881              	.LASF892:
 9882 6242 74726163 		.ascii	"traceTASK_DELAY() \000"
 9882      65544153 
 9882      4B5F4445 
 9882      4C415928 
 9882      292000
 9883              	.LASF899:
 9884 6255 74726163 		.ascii	"traceTIMER_CREATE_FAILED() \000"
 9884      6554494D 
 9884      45525F43 
 9884      52454154 
 9884      455F4641 
 9885              	.LASF1028:
 9886 6271 5F5F696E 		.ascii	"__int8_t\000"
 9886      74385F74 
 9886      00
 9887              	.LASF197:
 9888 627a 5F5F4652 		.ascii	"__FRACT_IBIT__ 0\000"
 9888      4143545F 
 9888      49424954 
 9888      5F5F2030 
 9888      00
 9889              	.LASF914:
 9890 628b 74726163 		.ascii	"traceEVENT_GROUP_SET_BITS_FROM_ISR(xEventGroup,uxBi"
 9890      65455645 
 9890      4E545F47 
 9890      524F5550 
 9890      5F534554 
 9891 62be 7473546F 		.ascii	"tsToSet) \000"
 9891      53657429 
 9891      2000
 9892              	.LASF648:
 9893 62c8 5F5F5853 		.ascii	"__XSI_VISIBLE 700\000"
 9893      495F5649 
 9893      5349424C 
 9893      45203730 
 9893      3000
 9894              	.LASF831:
 9895 62da 4D50555F 		.ascii	"MPU_WRAPPERS_H \000"
 9895      57524150 
 9895      50455253 
 9895      5F482000 
 9896              	.LASF649:
 9897 62ea 5F5F4253 		.ascii	"__BSD_VISIBLE 1\000"
 9897      445F5649 
 9897      5349424C 
 9897      45203100 
 9898              	.LASF23:
 9899 62fa 5F5F4F52 		.ascii	"__ORDER_LITTLE_ENDIAN__ 1234\000"
 9899      4445525F 
 9899      4C495454 
 9899      4C455F45 
 9899      4E444941 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 272


 9900              	.LASF1075:
 9901 6317 75784C65 		.ascii	"uxLength\000"
 9901      6E677468 
 9901      00
 9902              	.LASF603:
 9903 6320 5F5F7573 		.ascii	"__used __attribute__((__used__))\000"
 9903      6564205F 
 9903      5F617474 
 9903      72696275 
 9903      74655F5F 
 9904              	.LASF553:
 9905 6341 5F5F444F 		.ascii	"__DOTS , ...\000"
 9905      5453202C 
 9905      202E2E2E 
 9905      00
 9906              	.LASF172:
 9907 634e 5F5F4445 		.ascii	"__DEC64_MANT_DIG__ 16\000"
 9907      4336345F 
 9907      4D414E54 
 9907      5F444947 
 9907      5F5F2031 
 9908              	.LASF1038:
 9909 6364 6C6F6E67 		.ascii	"long long unsigned int\000"
 9909      206C6F6E 
 9909      6720756E 
 9909      7369676E 
 9909      65642069 
 9910              	.LASF126:
 9911 637b 5F5F464C 		.ascii	"__FLT_MIN_10_EXP__ (-37)\000"
 9911      545F4D49 
 9911      4E5F3130 
 9911      5F455850 
 9911      5F5F2028 
 9912              	.LASF252:
 9913 6394 5F5F554C 		.ascii	"__ULACCUM_IBIT__ 32\000"
 9913      41434355 
 9913      4D5F4942 
 9913      49545F5F 
 9913      20333200 
 9914              	.LASF1073:
 9915 63a8 78546173 		.ascii	"xTasksWaitingToReceive\000"
 9915      6B735761 
 9915      6974696E 
 9915      67546F52 
 9915      65636569 
 9916              	.LASF849:
 9917 63bf 494E434C 		.ascii	"INCLUDE_xTaskGetCurrentTaskHandle 0\000"
 9917      5544455F 
 9917      78546173 
 9917      6B476574 
 9917      43757272 
 9918              	.LASF882:
 9919 63e3 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR(pxQueue) \000"
 9919      65515545 
 9919      55455F53 
 9919      454E445F 
 9919      46524F4D 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 273


 9920              	.LASF30:
 9921 6406 5F5F5054 		.ascii	"__PTRDIFF_TYPE__ int\000"
 9921      52444946 
 9921      465F5459 
 9921      50455F5F 
 9921      20696E74 
 9922              	.LASF423:
 9923 641b 5F53495A 		.ascii	"_SIZE_T_DEFINED \000"
 9923      455F545F 
 9923      44454649 
 9923      4E454420 
 9923      00
 9924              	.LASF272:
 9925 642c 5F5F4451 		.ascii	"__DQ_FBIT__ 63\000"
 9925      5F464249 
 9925      545F5F20 
 9925      363300
 9926              	.LASF458:
 9927 643b 5F5F5054 		.ascii	"__PTRDIFF_T \000"
 9927      52444946 
 9927      465F5420 
 9927      00
 9928              	.LASF279:
 9929 6448 5F5F5548 		.ascii	"__UHQ_IBIT__ 0\000"
 9929      515F4942 
 9929      49545F5F 
 9929      203000
 9930              	.LASF537:
 9931 6457 5F524545 		.ascii	"_REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctom"
 9931      4E545F57 
 9931      43544F4D 
 9931      425F5354 
 9931      41544528 
 9932 648a 625F7374 		.ascii	"b_state)\000"
 9932      61746529 
 9932      00
 9933              	.LASF55:
 9934 6493 5F5F494E 		.ascii	"__INT_FAST16_TYPE__ int\000"
 9934      545F4641 
 9934      53543136 
 9934      5F545950 
 9934      455F5F20 
 9935              	.LASF902:
 9936 64ab 74726163 		.ascii	"traceTIMER_COMMAND_RECEIVED(pxTimer,xMessageID,xMes"
 9936      6554494D 
 9936      45525F43 
 9936      4F4D4D41 
 9936      4E445F52 
 9937 64de 73616765 		.ascii	"sageValue) \000"
 9937      56616C75 
 9937      65292000 
 9938              	.LASF479:
 9939 64ea 5F5F4C4F 		.ascii	"__LOCK_INIT(class,lock) static int lock = 0;\000"
 9939      434B5F49 
 9939      4E495428 
 9939      636C6173 
 9939      732C6C6F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 274


 9940              	.LASF228:
 9941 6517 5F5F5341 		.ascii	"__SACCUM_MIN__ (-0X1P7HK-0X1P7HK)\000"
 9941      4343554D 
 9941      5F4D494E 
 9941      5F5F2028 
 9941      2D305831 
 9942              	.LASF214:
 9943 6539 5F5F554C 		.ascii	"__ULFRACT_MAX__ 0XFFFFFFFFP-32ULR\000"
 9943      46524143 
 9943      545F4D41 
 9943      585F5F20 
 9943      30584646 
 9944              	.LASF780:
 9945 655b 636F6E66 		.ascii	"configNET_MASK3 0\000"
 9945      69674E45 
 9945      545F4D41 
 9945      534B3320 
 9945      3000
 9946              	.LASF51:
 9947 656d 5F5F5549 		.ascii	"__UINT_LEAST16_TYPE__ short unsigned int\000"
 9947      4E545F4C 
 9947      45415354 
 9947      31365F54 
 9947      5950455F 
 9948              	.LASF805:
 9949 6596 706F7274 		.ascii	"portMAX_DELAY ( TickType_t ) 0xffffffffUL\000"
 9949      4D41585F 
 9949      44454C41 
 9949      59202820 
 9949      5469636B 
 9950              	.LASF820:
 9951 65c0 706F7274 		.ascii	"portTASK_FUNCTION_PROTO(vFunction,pvParameters) voi"
 9951      5441534B 
 9951      5F46554E 
 9951      4354494F 
 9951      4E5F5052 
 9952 65f3 64207646 		.ascii	"d vFunction( void *pvParameters )\000"
 9952      756E6374 
 9952      696F6E28 
 9952      20766F69 
 9952      64202A70 
 9953              	.LASF249:
 9954 6615 5F5F4C41 		.ascii	"__LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK\000"
 9954      4343554D 
 9954      5F4D4158 
 9954      5F5F2030 
 9954      58374646 
 9955              	.LASF35:
 9956 663d 5F5F4348 		.ascii	"__CHAR16_TYPE__ short unsigned int\000"
 9956      41523136 
 9956      5F545950 
 9956      455F5F20 
 9956      73686F72 
 9957              	.LASF538:
 9958 6660 5F524545 		.ascii	"_REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrle"
 9958      4E545F4D 
 9958      42524C45 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 275


 9958      4E5F5354 
 9958      41544528 
 9959 6693 6E5F7374 		.ascii	"n_state)\000"
 9959      61746529 
 9959      00
 9960              	.LASF598:
 9961 669c 5F5F7369 		.ascii	"__signed signed\000"
 9961      676E6564 
 9961      20736967 
 9961      6E656400 
 9962              	.LASF102:
 9963 66ac 5F5F5549 		.ascii	"__UINT_LEAST16_MAX__ 65535\000"
 9963      4E545F4C 
 9963      45415354 
 9963      31365F4D 
 9963      41585F5F 
 9964              	.LASF284:
 9965 66c7 5F5F5554 		.ascii	"__UTQ_FBIT__ 128\000"
 9965      515F4642 
 9965      49545F5F 
 9965      20313238 
 9965      00
 9966              	.LASF1101:
 9967 66d8 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 9967      75655461 
 9967      6B654D75 
 9967      74657852 
 9967      65637572 
 9968              	.LASF531:
 9969 66f1 5F524545 		.ascii	"_REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctim"
 9969      4E545F41 
 9969      53435449 
 9969      4D455F42 
 9969      55462870 
 9970 6724 655F6275 		.ascii	"e_buf)\000"
 9970      662900
 9971              	.LASF804:
 9972 672b 706F7274 		.ascii	"portBASE_TYPE long\000"
 9972      42415345 
 9972      5F545950 
 9972      45206C6F 
 9972      6E6700
 9973              	.LASF12:
 9974 673e 5F5F4649 		.ascii	"__FINITE_MATH_ONLY__ 0\000"
 9974      4E495445 
 9974      5F4D4154 
 9974      485F4F4E 
 9974      4C595F5F 
 9975              	.LASF1049:
 9976 6755 70785072 		.ascii	"pxPrevious\000"
 9976      6576696F 
 9976      757300
 9977              	.LASF667:
 9978 6760 5F5F6861 		.ascii	"__have_longlong64 1\000"
 9978      76655F6C 
 9978      6F6E676C 
 9978      6F6E6736 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 276


 9978      34203100 
 9979              	.LASF1009:
 9980 6774 78517565 		.ascii	"xQueueOverwriteFromISR(xQueue,pvItemToQueue,pxHighe"
 9980      75654F76 
 9980      65727772 
 9980      69746546 
 9980      726F6D49 
 9981 67a7 72507269 		.ascii	"rPriorityTaskWoken) xQueueGenericSendFromISR( ( xQu"
 9981      6F726974 
 9981      79546173 
 9981      6B576F6B 
 9981      656E2920 
 9982 67da 65756520 		.ascii	"eue ), ( pvItemToQueue ), ( pxHigherPriorityTaskWok"
 9982      292C2028 
 9982      20707649 
 9982      74656D54 
 9982      6F517565 
 9983 680d 656E2029 		.ascii	"en ), queueOVERWRITE )\000"
 9983      2C207175 
 9983      6575654F 
 9983      56455257 
 9983      52495445 
 9984              	.LASF726:
 9985 6824 50545244 		.ascii	"PTRDIFF_MAX __PTRDIFF_MAX__\000"
 9985      4946465F 
 9985      4D415820 
 9985      5F5F5054 
 9985      52444946 
 9986              	.LASF16:
 9987 6840 5F5F5349 		.ascii	"__SIZEOF_SHORT__ 2\000"
 9987      5A454F46 
 9987      5F53484F 
 9987      52545F5F 
 9987      203200
 9988              	.LASF529:
 9989 6853 5F524545 		.ascii	"_REENT_MP_P5S(ptr) ((ptr)->_p5s)\000"
 9989      4E545F4D 
 9989      505F5035 
 9989      53287074 
 9989      72292028 
 9990              	.LASF979:
 9991 6874 74736B49 		.ascii	"tskIDLE_PRIORITY ( ( UBaseT_t ) 0U )\000"
 9991      444C455F 
 9991      5052494F 
 9991      52495459 
 9991      20282028 
 9992              	.LASF440:
 9993 6899 5F574348 		.ascii	"_WCHAR_T_DEFINED \000"
 9993      41525F54 
 9993      5F444546 
 9993      494E4544 
 9993      2000
 9994              	.LASF917:
 9995 68ab 74726163 		.ascii	"tracePEND_FUNC_CALL_FROM_ISR(xFunctionToPend,pvPara"
 9995      6550454E 
 9995      445F4655 
 9995      4E435F43 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 277


 9995      414C4C5F 
 9996 68de 6D657465 		.ascii	"meter1,ulParameter2,ret) \000"
 9996      72312C75 
 9996      6C506172 
 9996      616D6574 
 9996      6572322C 
 9997              	.LASF254:
 9998 68f8 5F5F554C 		.ascii	"__ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK\000"
 9998      41434355 
 9998      4D5F4D41 
 9998      585F5F20 
 9998      30584646 
 9999              	.LASF213:
 10000 6922 5F5F554C 		.ascii	"__ULFRACT_MIN__ 0.0ULR\000"
 10000      46524143 
 10000      545F4D49 
 10000      4E5F5F20 
 10000      302E3055 
 10001              	.LASF1106:
 10002 6939 78517565 		.ascii	"xQueueGenericSend\000"
 10002      75654765 
 10002      6E657269 
 10002      6353656E 
 10002      6400
 10003              	.LASF273:
 10004 694b 5F5F4451 		.ascii	"__DQ_IBIT__ 0\000"
 10004      5F494249 
 10004      545F5F20 
 10004      3000
 10005              	.LASF541:
 10006 6959 5F524545 		.ascii	"_REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrt"
 10006      4E545F57 
 10006      4352544F 
 10006      4D425F53 
 10006      54415445 
 10007 698c 6F6D625F 		.ascii	"omb_state)\000"
 10007      73746174 
 10007      652900
 10008              	.LASF1121:
 10009 6997 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 10009      6575654D 
 10009      65737361 
 10009      67657357 
 10009      61697469 
 10010              	.LASF1128:
 10011 69ae 75635175 		.ascii	"ucQueueGetQueueType\000"
 10011      65756547 
 10011      65745175 
 10011      65756554 
 10011      79706500 
 10012              	.LASF669:
 10013 69c2 5F5F696E 		.ascii	"__int8_t_defined 1\000"
 10013      74385F74 
 10013      5F646566 
 10013      696E6564 
 10013      203100
 10014              	.LASF962:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 278


 10015 69d5 6C697374 		.ascii	"listSET_LIST_ITEM_VALUE(pxListItem,xValue) ( ( pxLi"
 10015      5345545F 
 10015      4C495354 
 10015      5F495445 
 10015      4D5F5641 
 10016 6a08 73744974 		.ascii	"stItem )->xItemValue = ( xValue ) )\000"
 10016      656D2029 
 10016      2D3E7849 
 10016      74656D56 
 10016      616C7565 
 10017              	.LASF402:
 10018 6a2c 5F444546 		.ascii	"_DEFUN_VOID(name) name(_NOARGS)\000"
 10018      554E5F56 
 10018      4F494428 
 10018      6E616D65 
 10018      29206E61 
 10019              	.LASF74:
 10020 6a4c 5F5F5749 		.ascii	"__WINT_MAX__ 4294967295U\000"
 10020      4E545F4D 
 10020      41585F5F 
 10020      20343239 
 10020      34393637 
 10021              	.LASF421:
 10022 6a65 5F425344 		.ascii	"_BSD_SIZE_T_ \000"
 10022      5F53495A 
 10022      455F545F 
 10022      2000
 10023              	.LASF437:
 10024 6a73 5F574348 		.ascii	"_WCHAR_T_ \000"
 10024      41525F54 
 10024      5F2000
 10025              	.LASF98:
 10026 6a7e 5F5F494E 		.ascii	"__INT_LEAST64_MAX__ 9223372036854775807LL\000"
 10026      545F4C45 
 10026      41535436 
 10026      345F4D41 
 10026      585F5F20 
 10027              	.LASF695:
 10028 6aa8 55494E54 		.ascii	"UINT_LEAST16_MAX __UINT_LEAST16_MAX__\000"
 10028      5F4C4541 
 10028      53543136 
 10028      5F4D4158 
 10028      205F5F55 
 10029              	.LASF435:
 10030 6ace 5F545F57 		.ascii	"_T_WCHAR \000"
 10030      43484152 
 10030      2000
 10031              	.LASF1016:
 10032 6ad8 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE\000"
 10032      57524150 
 10032      50455253 
 10032      5F494E43 
 10032      4C554445 
 10033              	.LASF461:
 10034 6afc 5F5F5F69 		.ascii	"___int_ptrdiff_t_h \000"
 10034      6E745F70 
 10034      74726469 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 279


 10034      66665F74 
 10034      5F682000 
 10035              	.LASF345:
 10036 6b10 5F5F4152 		.ascii	"__ARM_FP 12\000"
 10036      4D5F4650 
 10036      20313200 
 10037              	.LASF77:
 10038 6b1c 5F5F5349 		.ascii	"__SIZE_MAX__ 4294967295U\000"
 10038      5A455F4D 
 10038      41585F5F 
 10038      20343239 
 10038      34393637 
 10039              	.LASF997:
 10040 6b35 71756575 		.ascii	"queueQUEUE_TYPE_COUNTING_SEMAPHORE ( ( uint8_t ) 2U"
 10040      65515545 
 10040      55455F54 
 10040      5950455F 
 10040      434F554E 
 10041 6b68 202900   		.ascii	" )\000"
 10042              	.LASF517:
 10043 6b6b 5F524545 		.ascii	"_REENT_CHECK_TM(ptr) \000"
 10043      4E545F43 
 10043      4845434B 
 10043      5F544D28 
 10043      70747229 
 10044              	.LASF285:
 10045 6b81 5F5F5554 		.ascii	"__UTQ_IBIT__ 0\000"
 10045      515F4942 
 10045      49545F5F 
 10045      203000
 10046              	.LASF715:
 10047 6b90 494E545F 		.ascii	"INT_FAST32_MAX __INT_FAST32_MAX__\000"
 10047      46415354 
 10047      33325F4D 
 10047      4158205F 
 10047      5F494E54 
 10048              	.LASF567:
 10049 6bb2 5F5F6861 		.ascii	"__has_builtin(x) 0\000"
 10049      735F6275 
 10049      696C7469 
 10049      6E287829 
 10049      203000
 10050              	.LASF443:
 10051 6bc5 5F5F494E 		.ascii	"__INT_WCHAR_T_H \000"
 10051      545F5743 
 10051      4841525F 
 10051      545F4820 
 10051      00
 10052              	.LASF403:
 10053 6bd6 5F434153 		.ascii	"_CAST_VOID (void)\000"
 10053      545F564F 
 10053      49442028 
 10053      766F6964 
 10053      2900
 10054              	.LASF844:
 10055 6be8 494E434C 		.ascii	"INCLUDE_xTaskResumeFromISR 1\000"
 10055      5544455F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 280


 10055      78546173 
 10055      6B526573 
 10055      756D6546 
 10056              	.LASF353:
 10057 6c05 5F5F454C 		.ascii	"__ELF__ 1\000"
 10057      465F5F20 
 10057      3100
 10058              	.LASF696:
 10059 6c0f 494E5433 		.ascii	"INT32_MIN (-__INT32_MAX__ - 1)\000"
 10059      325F4D49 
 10059      4E20282D 
 10059      5F5F494E 
 10059      5433325F 
 10060              	.LASF342:
 10061 6c2e 5F5F5448 		.ascii	"__THUMBEL__ 1\000"
 10061      554D4245 
 10061      4C5F5F20 
 10061      3100
 10062              	.LASF444:
 10063 6c3c 5F474343 		.ascii	"_GCC_WCHAR_T \000"
 10063      5F574348 
 10063      41525F54 
 10063      2000
 10064              	.LASF662:
 10065 6c4a 4D50555F 		.ascii	"MPU_WRAPPERS_INCLUDED_FROM_API_FILE \000"
 10065      57524150 
 10065      50455253 
 10065      5F494E43 
 10065      4C554445 
 10066              	.LASF267:
 10067 6c6f 5F5F5151 		.ascii	"__QQ_IBIT__ 0\000"
 10067      5F494249 
 10067      545F5F20 
 10067      3000
 10068              	.LASF116:
 10069 6c7d 5F5F494E 		.ascii	"__INTPTR_MAX__ 2147483647\000"
 10069      54505452 
 10069      5F4D4158 
 10069      5F5F2032 
 10069      31343734 
 10070              	.LASF878:
 10071 6c97 74726163 		.ascii	"traceQUEUE_RECEIVE(pxQueue) \000"
 10071      65515545 
 10071      55455F52 
 10071      45434549 
 10071      56452870 
 10072              	.LASF954:
 10073 6cb4 70645441 		.ascii	"pdTASK_CODE TaskFunction_t\000"
 10073      534B5F43 
 10073      4F444520 
 10073      5461736B 
 10073      46756E63 
 10074              	.LASF739:
 10075 6ccf 55494E54 		.ascii	"UINT64_C(x) __UINT64_C(x)\000"
 10075      36345F43 
 10075      28782920 
 10075      5F5F5549 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 281


 10075      4E543634 
 10076              	.LASF256:
 10077 6ce9 5F5F4C4C 		.ascii	"__LLACCUM_FBIT__ 31\000"
 10077      41434355 
 10077      4D5F4642 
 10077      49545F5F 
 10077      20333100 
 10078              	.LASF581:
 10079 6cfd 5F5F636F 		.ascii	"__compiler_membar() __asm __volatile(\" \" : : : \""
 10079      6D70696C 
 10079      65725F6D 
 10079      656D6261 
 10079      72282920 
 10080 6d2d 6D656D6F 		.ascii	"memory\")\000"
 10080      72792229 
 10080      00
 10081              	.LASF1089:
 10082 6d36 784E6577 		.ascii	"xNewQueue\000"
 10082      51756575 
 10082      6500
 10083              	.LASF391:
 10084 6d40 5F4E4F41 		.ascii	"_NOARGS void\000"
 10084      52475320 
 10084      766F6964 
 10084      00
 10085              	.LASF874:
 10086 6d4d 74726163 		.ascii	"traceCREATE_COUNTING_SEMAPHORE() \000"
 10086      65435245 
 10086      4154455F 
 10086      434F554E 
 10086      54494E47 
 10087              	.LASF281:
 10088 6d6f 5F5F5553 		.ascii	"__USQ_IBIT__ 0\000"
 10088      515F4942 
 10088      49545F5F 
 10088      203000
 10089              	.LASF982:
 10090 6d7e 7461736B 		.ascii	"taskEXIT_CRITICAL() portEXIT_CRITICAL()\000"
 10090      45584954 
 10090      5F435249 
 10090      54494341 
 10090      4C282920 
 10091              	.LASF925:
 10092 6da6 636F6E66 		.ascii	"configEXPECTED_IDLE_TIME_BEFORE_SLEEP 2\000"
 10092      69674558 
 10092      50454354 
 10092      45445F49 
 10092      444C455F 
 10093              	.LASF52:
 10094 6dce 5F5F5549 		.ascii	"__UINT_LEAST32_TYPE__ long unsigned int\000"
 10094      4E545F4C 
 10094      45415354 
 10094      33325F54 
 10094      5950455F 
 10095              	.LASF1099:
 10096 6df6 784D7574 		.ascii	"xMutex\000"
 10096      657800
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 282


 10097              	.LASF3:
 10098 6dfd 5F5F474E 		.ascii	"__GNUC_MINOR__ 9\000"
 10098      55435F4D 
 10098      494E4F52 
 10098      5F5F2039 
 10098      00
 10099              	.LASF33:
 10100 6e0e 5F5F494E 		.ascii	"__INTMAX_TYPE__ long long int\000"
 10100      544D4158 
 10100      5F545950 
 10100      455F5F20 
 10100      6C6F6E67 
 10101              	.LASF930:
 10102 6e2c 706F7274 		.ascii	"portTASK_USES_FLOATING_POINT() \000"
 10102      5441534B 
 10102      5F555345 
 10102      535F464C 
 10102      4F415449 
 10103              	.LASF951:
 10104 6e4c 70645441 		.ascii	"pdTASK_HOOK_CODE TaskHookFunction_t\000"
 10104      534B5F48 
 10104      4F4F4B5F 
 10104      434F4445 
 10104      20546173 
 10105              	.LASF316:
 10106 6e70 5F5F4743 		.ascii	"__GCC_ATOMIC_INT_LOCK_FREE 2\000"
 10106      435F4154 
 10106      4F4D4943 
 10106      5F494E54 
 10106      5F4C4F43 
 10107              	.LASF1124:
 10108 6e8d 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 10108      6575654D 
 10108      65737361 
 10108      67657357 
 10108      61697469 
 10109              	.LASF863:
 10110 6eab 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_RECEIVE(pxQueue) \000"
 10110      65424C4F 
 10110      434B494E 
 10110      475F4F4E 
 10110      5F515545 
 10111              	.LASF502:
 10112 6ed4 5F52414E 		.ascii	"_RAND48_SEED_0 (0x330e)\000"
 10112      4434385F 
 10112      53454544 
 10112      5F302028 
 10112      30783333 
 10113              	.LASF824:
 10114 6eec 706F7274 		.ascii	"portRECORD_READY_PRIORITY(uxPriority,uxReadyPriorit"
 10114      5245434F 
 10114      52445F52 
 10114      45414459 
 10114      5F505249 
 10115 6f1f 69657329 		.ascii	"ies) ( uxReadyPriorities ) |= ( 1UL << ( uxPriority"
 10115      20282075 
 10115      78526561 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 283


 10115      64795072 
 10115      696F7269 
 10116 6f52 20292029 		.ascii	" ) )\000"
 10116      00
 10117              	.LASF873:
 10118 6f57 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE_FAILED(pxMutex) \000"
 10118      6554414B 
 10118      455F4D55 
 10118      5445585F 
 10118      52454355 
 10119              	.LASF497:
 10120 6f82 5F5F4C6F 		.ascii	"__Long long\000"
 10120      6E67206C 
 10120      6F6E6700 
 10121              	.LASF428:
 10122 6f8e 5F53495A 		.ascii	"_SIZET_ \000"
 10122      45545F20 
 10122      00
 10123              	.LASF801:
 10124 6f97 706F7274 		.ascii	"portLONG long\000"
 10124      4C4F4E47 
 10124      206C6F6E 
 10124      6700
 10125              	.LASF355:
 10126 6fa5 5F535444 		.ascii	"_STDLIB_H_ \000"
 10126      4C49425F 
 10126      485F2000 
 10127              	.LASF150:
 10128 6fb1 5F5F4442 		.ascii	"__DBL_HAS_QUIET_NAN__ 1\000"
 10128      4C5F4841 
 10128      535F5155 
 10128      4945545F 
 10128      4E414E5F 
 10129              	.LASF975:
 10130 6fc9 74736B4B 		.ascii	"tskKERNEL_VERSION_NUMBER \"V8.1.2\"\000"
 10130      45524E45 
 10130      4C5F5645 
 10130      5253494F 
 10130      4E5F4E55 
 10131              	.LASF736:
 10132 6feb 494E5433 		.ascii	"INT32_C(x) __INT32_C(x)\000"
 10132      325F4328 
 10132      7829205F 
 10132      5F494E54 
 10132      33325F43 
 10133              	.LASF564:
 10134 7003 5F5F7074 		.ascii	"__ptrvalue \000"
 10134      7276616C 
 10134      75652000 
 10135              	.LASF409:
 10136 700f 5F4E4F49 		.ascii	"_NOINLINE_STATIC _NOINLINE static\000"
 10136      4E4C494E 
 10136      455F5354 
 10136      41544943 
 10136      205F4E4F 
 10137              	.LASF989:
 10138 7031 78546173 		.ascii	"xTaskCreateRestricted(x,pxCreatedTask) xTaskGeneric"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 284


 10138      6B437265 
 10138      61746552 
 10138      65737472 
 10138      69637465 
 10139 7064 43726561 		.ascii	"Create( ((x)->pvTaskCode), ((x)->pcName), ((x)->usS"
 10139      74652820 
 10139      28287829 
 10139      2D3E7076 
 10139      5461736B 
 10140 7097 7461636B 		.ascii	"tackDepth), ((x)->pvParameters), ((x)->uxPriority),"
 10140      44657074 
 10140      68292C20 
 10140      28287829 
 10140      2D3E7076 
 10141 70ca 20287078 		.ascii	" (pxCreatedTask), ((x)->puxStackBuffer), ((x)->xReg"
 10141      43726561 
 10141      74656454 
 10141      61736B29 
 10141      2C202828 
 10142 70fd 696F6E73 		.ascii	"ions) )\000"
 10142      29202900 
 10143              	.LASF219:
 10144 7105 5F5F4C4C 		.ascii	"__LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR\000"
 10144      46524143 
 10144      545F4D41 
 10144      585F5F20 
 10144      30583746 
 10145              	.LASF181:
 10146 712f 5F5F4445 		.ascii	"__DEC128_MAX_EXP__ 6145\000"
 10146      43313238 
 10146      5F4D4158 
 10146      5F455850 
 10146      5F5F2036 
 10147              	.LASF829:
 10148 7147 706F7274 		.ascii	"portBYTE_ALIGNMENT_MASK ( 0x0007U )\000"
 10148      42595445 
 10148      5F414C49 
 10148      474E4D45 
 10148      4E545F4D 
 10149              	.LASF826:
 10150 716b 706F7274 		.ascii	"portGET_HIGHEST_PRIORITY(uxTopPriority,uxReadyPrior"
 10150      4745545F 
 10150      48494748 
 10150      4553545F 
 10150      5052494F 
 10151 719e 69746965 		.ascii	"ities) uxTopPriority = ( 31 - ucPortCountLeadingZer"
 10151      73292075 
 10151      78546F70 
 10151      5072696F 
 10151      72697479 
 10152 71d1 6F732820 		.ascii	"os( ( uxReadyPriorities ) ) )\000"
 10152      28207578 
 10152      52656164 
 10152      79507269 
 10152      6F726974 
 10153              	.LASF978:
 10154 71ef 74736B4B 		.ascii	"tskKERNEL_VERSION_BUILD 2\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 285


 10154      45524E45 
 10154      4C5F5645 
 10154      5253494F 
 10154      4E5F4255 
 10155              	.LASF76:
 10156 7209 5F5F5054 		.ascii	"__PTRDIFF_MAX__ 2147483647\000"
 10156      52444946 
 10156      465F4D41 
 10156      585F5F20 
 10156      32313437 
 10157              	.LASF1019:
 10158 7224 70784D75 		.ascii	"pxMutexHolder pcTail\000"
 10158      74657848 
 10158      6F6C6465 
 10158      72207063 
 10158      5461696C 
 10159              	.LASF229:
 10160 7239 5F5F5341 		.ascii	"__SACCUM_MAX__ 0X7FFFP-7HK\000"
 10160      4343554D 
 10160      5F4D4158 
 10160      5F5F2030 
 10160      58374646 
 10161              	.LASF549:
 10162 7254 5F474C4F 		.ascii	"_GLOBAL_REENT _global_impure_ptr\000"
 10162      42414C5F 
 10162      5245454E 
 10162      54205F67 
 10162      6C6F6261 
 10163              	.LASF63:
 10164 7275 5F5F5549 		.ascii	"__UINTPTR_TYPE__ unsigned int\000"
 10164      4E545054 
 10164      525F5459 
 10164      50455F5F 
 10164      20756E73 
 10165              	.LASF302:
 10166 7293 5F5F5245 		.ascii	"__REGISTER_PREFIX__ \000"
 10166      47495354 
 10166      45525F50 
 10166      52454649 
 10166      585F5F20 
 10167              	.LASF1055:
 10168 72a8 4D696E69 		.ascii	"MiniListItem_t\000"
 10168      4C697374 
 10168      4974656D 
 10168      5F7400
 10169              	.LASF138:
 10170 72b7 5F5F4442 		.ascii	"__DBL_DIG__ 15\000"
 10170      4C5F4449 
 10170      475F5F20 
 10170      313500
 10171              	.LASF215:
 10172 72c6 5F5F554C 		.ascii	"__ULFRACT_EPSILON__ 0x1P-32ULR\000"
 10172      46524143 
 10172      545F4550 
 10172      53494C4F 
 10172      4E5F5F20 
 10173              	.LASF640:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 286


 10174 72e5 5F5F5243 		.ascii	"__RCSID(s) struct __hack\000"
 10174      53494428 
 10174      73292073 
 10174      74727563 
 10174      74205F5F 
 10175              	.LASF729:
 10176 72fe 57434841 		.ascii	"WCHAR_MAX __WCHAR_MAX__\000"
 10176      525F4D41 
 10176      58205F5F 
 10176      57434841 
 10176      525F4D41 
 10177              	.LASF920:
 10178 7316 636F6E66 		.ascii	"configUSE_MALLOC_FAILED_HOOK 0\000"
 10178      69675553 
 10178      455F4D41 
 10178      4C4C4F43 
 10178      5F464149 
 10179              	.LASF20:
 10180 7335 5F5F5349 		.ascii	"__SIZEOF_SIZE_T__ 4\000"
 10180      5A454F46 
 10180      5F53495A 
 10180      455F545F 
 10180      5F203400 
 10181              	.LASF931:
 10182 7349 636F6E66 		.ascii	"configUSE_TIME_SLICING 1\000"
 10182      69675553 
 10182      455F5449 
 10182      4D455F53 
 10182      4C494349 
 10183              	.LASF1056:
 10184 7362 784C4953 		.ascii	"xLIST\000"
 10184      5400
 10185              	.LASF573:
 10186 7368 5F5F474E 		.ascii	"__GNUCLIKE___OFFSETOF 1\000"
 10186      55434C49 
 10186      4B455F5F 
 10186      5F4F4646 
 10186      5345544F 
 10187              	.LASF182:
 10188 7380 5F5F4445 		.ascii	"__DEC128_MIN__ 1E-6143DL\000"
 10188      43313238 
 10188      5F4D494E 
 10188      5F5F2031 
 10188      452D3631 
 10189              	.LASF99:
 10190 7399 5F5F494E 		.ascii	"__INT64_C(c) c ## LL\000"
 10190      5436345F 
 10190      43286329 
 10190      20632023 
 10190      23204C4C 
 10191              	.LASF1113:
 10192 73ae 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 10192      67686572 
 10192      5072696F 
 10192      72697479 
 10192      5461736B 
 10193              	.LASF363:
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 287


 10194 73c8 48415645 		.ascii	"HAVE_INITFINI_ARRAY 1\000"
 10194      5F494E49 
 10194      5446494E 
 10194      495F4152 
 10194      52415920 
 10195              	.LASF660:
 10196 73de 73747274 		.ascii	"strtodf strtof\000"
 10196      6F646620 
 10196      73747274 
 10196      6F6600
 10197              	.LASF385:
 10198 73ed 5F484156 		.ascii	"_HAVE_STDC \000"
 10198      455F5354 
 10198      44432000 
 10199              	.LASF967:
 10200 73f9 6C697374 		.ascii	"listGET_END_MARKER(pxList) ( ( ListItem_t const * )"
 10200      4745545F 
 10200      454E445F 
 10200      4D41524B 
 10200      45522870 
 10201 742c 20282026 		.ascii	" ( &( ( pxList )->xListEnd ) ) )\000"
 10201      28202820 
 10201      70784C69 
 10201      73742029 
 10201      2D3E784C 
 10202              	.LASF742:
 10203 744d 5F474343 		.ascii	"_GCC_WRAP_STDINT_H \000"
 10203      5F575241 
 10203      505F5354 
 10203      44494E54 
 10203      5F482000 
 10204              	.LASF612:
 10205 7461 5F5F6765 		.ascii	"__generic(expr,t,yes,no) __builtin_choose_expr( __b"
 10205      6E657269 
 10205      63286578 
 10205      70722C74 
 10205      2C796573 
 10206 7494 75696C74 		.ascii	"uiltin_types_compatible_p(__typeof(expr), t), yes, "
 10206      696E5F74 
 10206      79706573 
 10206      5F636F6D 
 10206      70617469 
 10207 74c7 6E6F2900 		.ascii	"no)\000"
 10208              	.LASF159:
 10209 74cb 5F5F4C44 		.ascii	"__LDBL_MIN__ 2.2250738585072014e-308L\000"
 10209      424C5F4D 
 10209      494E5F5F 
 10209      20322E32 
 10209      32353037 
 10210              	.LASF846:
 10211 74f1 494E434C 		.ascii	"INCLUDE_xTimerPendFunctionCall 0\000"
 10211      5544455F 
 10211      7854696D 
 10211      65725065 
 10211      6E644675 
 10212              	.LASF237:
 10213 7512 5F5F4143 		.ascii	"__ACCUM_IBIT__ 16\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 288


 10213      43554D5F 
 10213      49424954 
 10213      5F5F2031 
 10213      3600
 10214              	.LASF948:
 10215 7524 78546173 		.ascii	"xTaskStatusType TaskStatus_t\000"
 10215      6B537461 
 10215      74757354 
 10215      79706520 
 10215      5461736B 
 10216              	.LASF492:
 10217 7541 756E7369 		.ascii	"unsigned\000"
 10217      676E6564 
 10217      00
 10218              	.LASF1095:
 10219 754a 78517565 		.ascii	"xQueueSizeInBytes\000"
 10219      75655369 
 10219      7A65496E 
 10219      42797465 
 10219      7300
 10220              	.LASF799:
 10221 755c 706F7274 		.ascii	"portFLOAT float\000"
 10221      464C4F41 
 10221      5420666C 
 10221      6F617400 
 10222              	.LASF1118:
 10223 756c 70634F72 		.ascii	"pcOriginalReadPosition\000"
 10223      6967696E 
 10223      616C5265 
 10223      6164506F 
 10223      73697469 
 10224              	.LASF893:
 10225 7583 74726163 		.ascii	"traceTASK_PRIORITY_SET(pxTask,uxNewPriority) \000"
 10225      65544153 
 10225      4B5F5052 
 10225      494F5249 
 10225      54595F53 
 10226              	.LASF661:
 10227 75b1 5F535452 		.ascii	"_STRING_H_ \000"
 10227      494E475F 
 10227      485F2000 
 10228              	.LASF1032:
 10229 75bd 73686F72 		.ascii	"short int\000"
 10229      7420696E 
 10229      7400
 10230              	.LASF532:
 10231 75c7 5F524545 		.ascii	"_REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)"
 10231      4E545F54 
 10231      4D287074 
 10231      72292028 
 10231      26287074 
 10232 75fa 00       		.ascii	"\000"
 10233              	.LASF872:
 10234 75fb 74726163 		.ascii	"traceTAKE_MUTEX_RECURSIVE(pxMutex) \000"
 10234      6554414B 
 10234      455F4D55 
 10234      5445585F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 289


 10234      52454355 
 10235              	.LASF963:
 10236 761f 6C697374 		.ascii	"listGET_LIST_ITEM_VALUE(pxListItem) ( ( pxListItem "
 10236      4745545F 
 10236      4C495354 
 10236      5F495445 
 10236      4D5F5641 
 10237 7652 292D3E78 		.ascii	")->xItemValue )\000"
 10237      4974656D 
 10237      56616C75 
 10237      65202900 
 10238              	.LASF103:
 10239 7662 5F5F5549 		.ascii	"__UINT16_C(c) c\000"
 10239      4E543136 
 10239      5F432863 
 10239      29206300 
 10240              	.LASF500:
 10241 7672 5F524545 		.ascii	"_REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,\000"
 10241      4E545F49 
 10241      4E49545F 
 10241      41544558 
 10241      4954205F 
 10242              	.LASF587:
 10243 769a 5F5F4343 		.ascii	"__CC_SUPPORTS___INLINE__ 1\000"
 10243      5F535550 
 10243      504F5254 
 10243      535F5F5F 
 10243      494E4C49 
 10244              	.LASF299:
 10245 76b5 5F5F5544 		.ascii	"__UDA_IBIT__ 32\000"
 10245      415F4942 
 10245      49545F5F 
 10245      20333200 
 10246              	.LASF628:
 10247 76c5 5F5F7072 		.ascii	"__printflike(fmtarg,firstvararg) __attribute__((__f"
 10247      696E7466 
 10247      6C696B65 
 10247      28666D74 
 10247      6172672C 
 10248 76f8 6F726D61 		.ascii	"ormat__ (__printf__, fmtarg, firstvararg)))\000"
 10248      745F5F20 
 10248      285F5F70 
 10248      72696E74 
 10248      665F5F2C 
 10249              	.LASF305:
 10250 7724 5F5F4E4F 		.ascii	"__NO_INLINE__ 1\000"
 10250      5F494E4C 
 10250      494E455F 
 10250      5F203100 
 10251              	.LASF904:
 10252 7734 74726163 		.ascii	"traceFREE(pvAddress,uiSize) \000"
 10252      65465245 
 10252      45287076 
 10252      41646472 
 10252      6573732C 
 10253              	.LASF702:
 10254 7751 494E5436 		.ascii	"INT64_MIN (-__INT64_MAX__ - 1)\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 290


 10254      345F4D49 
 10254      4E20282D 
 10254      5F5F494E 
 10254      5436345F 
 10255              	.LASF6:
 10256 7770 5F5F4154 		.ascii	"__ATOMIC_RELAXED 0\000"
 10256      4F4D4943 
 10256      5F52454C 
 10256      41584544 
 10256      203000
 10257              	.LASF406:
 10258 7783 5F415454 		.ascii	"_ATTRIBUTE(attrs) __attribute__ (attrs)\000"
 10258      52494255 
 10258      54452861 
 10258      74747273 
 10258      29205F5F 
 10259              	.LASF970:
 10260 77ab 6C697374 		.ascii	"listGET_OWNER_OF_NEXT_ENTRY(pxTCB,pxList) { List_t "
 10260      4745545F 
 10260      4F574E45 
 10260      525F4F46 
 10260      5F4E4558 
 10261 77de 2A20636F 		.ascii	"* const pxConstList = ( pxList ); ( pxConstList )->"
 10261      6E737420 
 10261      7078436F 
 10261      6E73744C 
 10261      69737420 
 10262 7811 7078496E 		.ascii	"pxIndex = ( pxConstList )->pxIndex->pxNext; if( ( v"
 10262      64657820 
 10262      3D202820 
 10262      7078436F 
 10262      6E73744C 
 10263 7844 6F696420 		.ascii	"oid * ) ( pxConstList )->pxIndex == ( void * ) &( ("
 10263      2A202920 
 10263      28207078 
 10263      436F6E73 
 10263      744C6973 
 10264 7877 20707843 		.ascii	" pxConstList )->xListEnd ) ) { ( pxConstList )->pxI"
 10264      6F6E7374 
 10264      4C697374 
 10264      20292D3E 
 10264      784C6973 
 10265 78aa 6E646578 		.ascii	"ndex = ( pxConstList )->pxIndex->pxNext; } ( pxTCB "
 10265      203D2028 
 10265      20707843 
 10265      6F6E7374 
 10265      4C697374 
 10266 78dd 29203D20 		.ascii	") = ( pxConstList )->pxIndex->pvOwner; }\000"
 10266      28207078 
 10266      436F6E73 
 10266      744C6973 
 10266      7420292D 
 10267              	.LASF547:
 10268 7906 5F5F4154 		.ascii	"__ATTRIBUTE_IMPURE_PTR__ \000"
 10268      54524942 
 10268      5554455F 
 10268      494D5055 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 291


 10268      52455F50 
 10269              	.LASF149:
 10270 7920 5F5F4442 		.ascii	"__DBL_HAS_INFINITY__ 1\000"
 10270      4C5F4841 
 10270      535F494E 
 10270      46494E49 
 10270      54595F5F 
 10271              	.LASF707:
 10272 7937 55494E54 		.ascii	"UINT_LEAST64_MAX __UINT_LEAST64_MAX__\000"
 10272      5F4C4541 
 10272      53543634 
 10272      5F4D4158 
 10272      205F5F55 
 10273              	.LASF96:
 10274 795d 5F5F494E 		.ascii	"__INT_LEAST32_MAX__ 2147483647L\000"
 10274      545F4C45 
 10274      41535433 
 10274      325F4D41 
 10274      585F5F20 
 10275              	.LASF701:
 10276 797d 55494E54 		.ascii	"UINT_LEAST32_MAX __UINT_LEAST32_MAX__\000"
 10276      5F4C4541 
 10276      53543332 
 10276      5F4D4158 
 10276      205F5F55 
 10277              	.LASF505:
 10278 79a3 5F52414E 		.ascii	"_RAND48_MULT_0 (0xe66d)\000"
 10278      4434385F 
 10278      4D554C54 
 10278      5F302028 
 10278      30786536 
 10279              	.LASF1123:
 10280 79bb 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 10280      65756553 
 10280      70616365 
 10280      73417661 
 10280      696C6162 
 10281              	.LASF905:
 10282 79d2 74726163 		.ascii	"traceEVENT_GROUP_CREATE(xEventGroup) \000"
 10282      65455645 
 10282      4E545F47 
 10282      524F5550 
 10282      5F435245 
 10283              	.LASF626:
 10284 79f8 5F5F7261 		.ascii	"__rangeof(type,start,end) (__offsetof(type, end) - "
 10284      6E67656F 
 10284      66287479 
 10284      70652C73 
 10284      74617274 
 10285 7a2b 5F5F6F66 		.ascii	"__offsetof(type, start))\000"
 10285      66736574 
 10285      6F662874 
 10285      7970652C 
 10285      20737461 
 10286              	.LASF1010:
 10287 7a44 78517565 		.ascii	"xQueueSendFromISR(xQueue,pvItemToQueue,pxHigherPrio"
 10287      75655365 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 292


 10287      6E644672 
 10287      6F6D4953 
 10287      52287851 
 10288 7a77 72697479 		.ascii	"rityTaskWoken) xQueueGenericSendFromISR( ( xQueue )"
 10288      5461736B 
 10288      576F6B65 
 10288      6E292078 
 10288      51756575 
 10289 7aaa 2C202820 		.ascii	", ( pvItemToQueue ), ( pxHigherPriorityTaskWoken ),"
 10289      70764974 
 10289      656D546F 
 10289      51756575 
 10289      6520292C 
 10290 7add 20717565 		.ascii	" queueSEND_TO_BACK )\000"
 10290      75655345 
 10290      4E445F54 
 10290      4F5F4241 
 10290      434B2029 
 10291              	.LASF823:
 10292 7af2 636F6E66 		.ascii	"configUSE_PORT_OPTIMISED_TASK_SELECTION 1\000"
 10292      69675553 
 10292      455F504F 
 10292      52545F4F 
 10292      5054494D 
 10293              	.LASF351:
 10294 7b1c 5F5F4152 		.ascii	"__ARM_ARCH_EXT_IDIV__ 1\000"
 10294      4D5F4152 
 10294      43485F45 
 10294      58545F49 
 10294      4449565F 
 10295              	.LASF733:
 10296 7b34 55494E54 		.ascii	"UINT8_C(x) __UINT8_C(x)\000"
 10296      385F4328 
 10296      7829205F 
 10296      5F55494E 
 10296      54385F43 
 10297              	.LASF68:
 10298 7b4c 5F5F5348 		.ascii	"__SHRT_MAX__ 32767\000"
 10298      52545F4D 
 10298      41585F5F 
 10298      20333237 
 10298      363700
 10299              	.LASF463:
 10300 7b5f 5F5F6E65 		.ascii	"__need_ptrdiff_t\000"
 10300      65645F70 
 10300      74726469 
 10300      66665F74 
 10300      00
 10301              	.LASF143:
 10302 7b70 5F5F4442 		.ascii	"__DBL_DECIMAL_DIG__ 17\000"
 10302      4C5F4445 
 10302      43494D41 
 10302      4C5F4449 
 10302      475F5F20 
 10303              	.LASF459:
 10304 7b87 5F505452 		.ascii	"_PTRDIFF_T_ \000"
 10304      44494646 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 293


 10304      5F545F20 
 10304      00
 10305              	.LASF687:
 10306 7b94 494E545F 		.ascii	"INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)\000"
 10306      4C454153 
 10306      54385F4D 
 10306      494E2028 
 10306      2D5F5F49 
 10307              	.LASF496:
 10308 7bbd 5F4E554C 		.ascii	"_NULL 0\000"
 10308      4C203000 
 10309              	.LASF561:
 10310 7bc5 5F5F666C 		.ascii	"__flexarr [0]\000"
 10310      65786172 
 10310      72205B30 
 10310      5D00
 10311              	.LASF880:
 10312 7bd3 74726163 		.ascii	"traceQUEUE_PEEK_FROM_ISR(pxQueue) \000"
 10312      65515545 
 10312      55455F50 
 10312      45454B5F 
 10312      46524F4D 
 10313              	.LASF490:
 10314 7bf6 5F5F6C6F 		.ascii	"__lock_release_recursive(lock) (_CAST_VOID 0)\000"
 10314      636B5F72 
 10314      656C6561 
 10314      73655F72 
 10314      65637572 
 10315              	.LASF675:
 10316 7c24 5F5F696E 		.ascii	"__int64_t_defined 1\000"
 10316      7436345F 
 10316      745F6465 
 10316      66696E65 
 10316      64203100 
 10317              	.LASF361:
 10318 7c38 5F57414E 		.ascii	"_WANT_REGISTER_FINI 1\000"
 10318      545F5245 
 10318      47495354 
 10318      45525F46 
 10318      494E4920 
 10319              	.LASF645:
 10320 7c4e 5F5F4445 		.ascii	"__DEVOLATILE(type,var) ((type)(__uintptr_t)(volatil"
 10320      564F4C41 
 10320      54494C45 
 10320      28747970 
 10320      652C7661 
 10321 7c81 6520766F 		.ascii	"e void *)(var))\000"
 10321      6964202A 
 10321      29287661 
 10321      72292900 
 10322              	.LASF637:
 10323 7c91 5F5F7379 		.ascii	"__sym_compat(sym,impl,verid) __asm__(\".symver \" #"
 10323      6D5F636F 
 10323      6D706174 
 10323      2873796D 
 10323      2C696D70 
 10324 7cc2 696D706C 		.ascii	"impl \", \" #sym \"@\" #verid)\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 294


 10324      20222C20 
 10324      22202373 
 10324      796D2022 
 10324      40222023 
 10325              	.LASF869:
 10326 7cdd 74726163 		.ascii	"traceCREATE_MUTEX_FAILED() \000"
 10326      65435245 
 10326      4154455F 
 10326      4D555445 
 10326      585F4641 
 10327              	.LASF936:
 10328 7cf9 706F7274 		.ascii	"portASSERT_IF_IN_ISR() \000"
 10328      41535345 
 10328      52545F49 
 10328      465F494E 
 10328      5F495352 
 10329              	.LASF70:
 10330 7d11 5F5F4C4F 		.ascii	"__LONG_MAX__ 2147483647L\000"
 10330      4E475F4D 
 10330      41585F5F 
 10330      20323134 
 10330      37343833 
 10331              	.LASF853:
 10332 7d2a 706F7274 		.ascii	"portPOINTER_SIZE_TYPE uint32_t\000"
 10332      504F494E 
 10332      5445525F 
 10332      53495A45 
 10332      5F545950 
 10333              	.LASF631:
 10334 7d49 5F5F7374 		.ascii	"__strfmonlike(fmtarg,firstvararg) __attribute__((__"
 10334      72666D6F 
 10334      6E6C696B 
 10334      6528666D 
 10334      74617267 
 10335 7d7c 666F726D 		.ascii	"format__ (__strfmon__, fmtarg, firstvararg)))\000"
 10335      61745F5F 
 10335      20285F5F 
 10335      73747266 
 10335      6D6F6E5F 
 10336              	.LASF864:
 10337 7daa 74726163 		.ascii	"traceBLOCKING_ON_QUEUE_SEND(pxQueue) \000"
 10337      65424C4F 
 10337      434B494E 
 10337      475F4F4E 
 10337      5F515545 
 10338              	.LASF1052:
 10339 7dd0 4C697374 		.ascii	"ListItem_t\000"
 10339      4974656D 
 10339      5F7400
 10340              	.LASF1046:
 10341 7ddb 5469636B 		.ascii	"TickT_t\000"
 10341      545F7400 
 10342              	.LASF377:
 10343 7de3 5F5F474E 		.ascii	"__GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)\000"
 10343      55435F50 
 10343      52455245 
 10343      515F5F28 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 295


 10343      6D612C6D 
 10344              	.LASF301:
 10345 7e10 5F5F5554 		.ascii	"__UTA_IBIT__ 64\000"
 10345      415F4942 
 10345      49545F5F 
 10345      20363400 
 10346              	.LASF262:
 10347 7e20 5F5F554C 		.ascii	"__ULLACCUM_IBIT__ 32\000"
 10347      4C414343 
 10347      554D5F49 
 10347      4249545F 
 10347      5F203332 
 10348              	.LASF816:
 10349 7e35 706F7274 		.ascii	"portDISABLE_INTERRUPTS() ulPortSetInterruptMask()\000"
 10349      44495341 
 10349      424C455F 
 10349      494E5445 
 10349      52525550 
 10350              	.LASF634:
 10351 7e67 5F5F7374 		.ascii	"__strong_reference(sym,aliassym) extern __typeof (s"
 10351      726F6E67 
 10351      5F726566 
 10351      6572656E 
 10351      63652873 
 10352 7e9a 796D2920 		.ascii	"ym) aliassym __attribute__ ((__alias__ (#sym)))\000"
 10352      616C6961 
 10352      7373796D 
 10352      205F5F61 
 10352      74747269 
 10353              	.LASF225:
 10354 7eca 5F5F554C 		.ascii	"__ULLFRACT_EPSILON__ 0x1P-64ULLR\000"
 10354      4C465241 
 10354      43545F45 
 10354      5053494C 
 10354      4F4E5F5F 
 10355              	.LASF324:
 10356 7eeb 5F5F5349 		.ascii	"__SIZEOF_WINT_T__ 4\000"
 10356      5A454F46 
 10356      5F57494E 
 10356      545F545F 
 10356      5F203400 
 10357              	.LASF328:
 10358 7eff 5F5F4152 		.ascii	"__ARM_FEATURE_UNALIGNED 1\000"
 10358      4D5F4645 
 10358      41545552 
 10358      455F554E 
 10358      414C4947 
 10359              	.LASF352:
 10360 7f19 5F5F4758 		.ascii	"__GXX_TYPEINFO_EQUALITY_INLINE 0\000"
 10360      585F5459 
 10360      5045494E 
 10360      464F5F45 
 10360      5155414C 
 10361              	.LASF396:
 10362 7f3a 5F564F49 		.ascii	"_VOID void\000"
 10362      4420766F 
 10362      696400
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 296


 10363              	.LASF602:
 10364 7f45 5F5F756E 		.ascii	"__unused __attribute__((__unused__))\000"
 10364      75736564 
 10364      205F5F61 
 10364      74747269 
 10364      62757465 
 10365              	.LASF248:
 10366 7f6a 5F5F4C41 		.ascii	"__LACCUM_MIN__ (-0X1P31LK-0X1P31LK)\000"
 10366      4343554D 
 10366      5F4D494E 
 10366      5F5F2028 
 10366      2D305831 
 10367              	.LASF877:
 10368 7f8e 74726163 		.ascii	"traceQUEUE_SEND_FAILED(pxQueue) \000"
 10368      65515545 
 10368      55455F53 
 10368      454E445F 
 10368      4641494C 
 10369              	.LASF629:
 10370 7faf 5F5F7363 		.ascii	"__scanflike(fmtarg,firstvararg) __attribute__((__fo"
 10370      616E666C 
 10370      696B6528 
 10370      666D7461 
 10370      72672C66 
 10371 7fe2 726D6174 		.ascii	"rmat__ (__scanf__, fmtarg, firstvararg)))\000"
 10371      5F5F2028 
 10371      5F5F7363 
 10371      616E665F 
 10371      5F2C2066 
 10372              	.LASF147:
 10373 800c 5F5F4442 		.ascii	"__DBL_DENORM_MIN__ ((double)4.9406564584124654e-324"
 10373      4C5F4445 
 10373      4E4F524D 
 10373      5F4D494E 
 10373      5F5F2028 
 10374 803f 4C2900   		.ascii	"L)\000"
 10375              	.LASF263:
 10376 8042 5F5F554C 		.ascii	"__ULLACCUM_MIN__ 0.0ULLK\000"
 10376      4C414343 
 10376      554D5F4D 
 10376      494E5F5F 
 10376      20302E30 
 10377              	.LASF551:
 10378 805b 5F535953 		.ascii	"_SYS_CDEFS_H_ \000"
 10378      5F434445 
 10378      46535F48 
 10378      5F2000
 10379              	.LASF314:
 10380 806a 5F5F4743 		.ascii	"__GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\000"
 10380      435F4154 
 10380      4F4D4943 
 10380      5F574348 
 10380      41525F54 
 10381              	.LASF579:
 10382 808b 5F5F474E 		.ascii	"__GNUCLIKE_BUILTIN_VAALIST 1\000"
 10382      55434C49 
 10382      4B455F42 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 297


 10382      55494C54 
 10382      494E5F56 
 10383              	.LASF969:
 10384 80a8 6C697374 		.ascii	"listCURRENT_LIST_LENGTH(pxList) ( ( pxList )->uxNum"
 10384      43555252 
 10384      454E545F 
 10384      4C495354 
 10384      5F4C454E 
 10385 80db 6265724F 		.ascii	"berOfItems )\000"
 10385      66497465 
 10385      6D732029 
 10385      00
 10386              	.LASF627:
 10387 80e8 5F5F636F 		.ascii	"__containerof(x,s,m) ({ const volatile __typeof__(("
 10387      6E746169 
 10387      6E65726F 
 10387      6628782C 
 10387      732C6D29 
 10388 811b 2873202A 		.ascii	"(s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const vol"
 10388      2930292D 
 10388      3E6D2920 
 10388      2A5F5F78 
 10388      203D2028 
 10389 814e 6174696C 		.ascii	"atile char *)__x - __offsetof(s, m));})\000"
 10389      65206368 
 10389      6172202A 
 10389      295F5F78 
 10389      202D205F 
 10390              	.LASF995:
 10391 8176 71756575 		.ascii	"queueQUEUE_TYPE_SET ( ( uint8_t ) 0U )\000"
 10391      65515545 
 10391      55455F54 
 10391      5950455F 
 10391      53455420 
 10392              	.LASF411:
 10393 819d 5F5F6E65 		.ascii	"__need_wchar_t \000"
 10393      65645F77 
 10393      63686172 
 10393      5F742000 
 10394              	.LASF682:
 10395 81ad 494E5450 		.ascii	"INTPTR_MAX __INTPTR_MAX__\000"
 10395      54525F4D 
 10395      4158205F 
 10395      5F494E54 
 10395      5054525F 
 10396              	.LASF807:
 10397 81c7 706F7274 		.ascii	"portTICK_PERIOD_MS ( ( TickType_t ) 1000 / configTI"
 10397      5449434B 
 10397      5F504552 
 10397      494F445F 
 10397      4D532028 
 10398 81fa 434B5F52 		.ascii	"CK_RATE_HZ )\000"
 10398      4154455F 
 10398      485A2029 
 10398      00
 10399              	.LASF614:
 10400 8207 5F5F7075 		.ascii	"__pure __attribute__((__pure__))\000"
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 298


 10400      7265205F 
 10400      5F617474 
 10400      72696275 
 10400      74655F5F 
 10401              	.LASF1132:
 10402 8228 70727643 		.ascii	"prvCopyDataToQueue\000"
 10402      6F707944 
 10402      61746154 
 10402      6F517565 
 10402      756500
 10403              	.LASF427:
 10404 823b 5F474343 		.ascii	"_GCC_SIZE_T \000"
 10404      5F53495A 
 10404      455F5420 
 10404      00
 10405              	.LASF828:
 10406 8248 706F7274 		.ascii	"portNOP() \000"
 10406      4E4F5028 
 10406      292000
 10407              	.LASF589:
 10408 8253 5F5F4343 		.ascii	"__CC_SUPPORTS_WARNING 1\000"
 10408      5F535550 
 10408      504F5254 
 10408      535F5741 
 10408      524E494E 
 10409              	.LASF987:
 10410 826b 7461736B 		.ascii	"taskSCHEDULER_RUNNING ( ( BaseT_t ) 2 )\000"
 10410      53434845 
 10410      44554C45 
 10410      525F5255 
 10410      4E4E494E 
 10411              	.LASF223:
 10412 8293 5F5F554C 		.ascii	"__ULLFRACT_MIN__ 0.0ULLR\000"
 10412      4C465241 
 10412      43545F4D 
 10412      494E5F5F 
 10412      20302E30 
 10413              	.LASF434:
 10414 82ac 5F545F57 		.ascii	"_T_WCHAR_ \000"
 10414      43484152 
 10414      5F2000
 10415              	.LASF910:
 10416 82b7 74726163 		.ascii	"traceEVENT_GROUP_WAIT_BITS_END(xEventGroup,uxBitsTo"
 10416      65455645 
 10416      4E545F47 
 10416      524F5550 
 10416      5F574149 
 10417 82ea 57616974 		.ascii	"WaitFor,xTimeoutOccurred) ( void ) xTimeoutOccurred"
 10417      466F722C 
 10417      7854696D 
 10417      656F7574 
 10417      4F636375 
 10418 831d 00       		.ascii	"\000"
 10419              	.LASF515:
 10420 831e 5F524545 		.ascii	"_REENT_CHECK_RAND48(ptr) \000"
 10420      4E545F43 
 10420      4845434B 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 299


 10420      5F52414E 
 10420      44343828 
 10421              	.LASF283:
 10422 8338 5F5F5544 		.ascii	"__UDQ_IBIT__ 0\000"
 10422      515F4942 
 10422      49545F5F 
 10422      203000
 10423              	.LASF13:
 10424 8347 5F5F5349 		.ascii	"__SIZEOF_INT__ 4\000"
 10424      5A454F46 
 10424      5F494E54 
 10424      5F5F2034 
 10424      00
 10425              	.LASF446:
 10426 8358 5F425344 		.ascii	"_BSD_WCHAR_T_\000"
 10426      5F574348 
 10426      41525F54 
 10426      5F00
 10427              	.LASF217:
 10428 8366 5F5F4C4C 		.ascii	"__LLFRACT_IBIT__ 0\000"
 10428      46524143 
 10428      545F4942 
 10428      49545F5F 
 10428      203000
 10429              	.LASF590:
 10430 8379 5F5F4343 		.ascii	"__CC_SUPPORTS_VARADIC_XXX 1\000"
 10430      5F535550 
 10430      504F5254 
 10430      535F5641 
 10430      52414449 
 10431              	.LASF1043:
 10432 8395 75696E74 		.ascii	"uint32_t\000"
 10432      33325F74 
 10432      00
 10433              	.LASF808:
 10434 839e 706F7274 		.ascii	"portBYTE_ALIGNMENT 8\000"
 10434      42595445 
 10434      5F414C49 
 10434      474E4D45 
 10434      4E542038 
 10435              	.LASF1088:
 10436 83b3 78517565 		.ascii	"xQueue\000"
 10436      756500
 10437              	.LASF665:
 10438 83ba 5F535953 		.ascii	"_SYS__INTSUP_H \000"
 10438      5F5F494E 
 10438      54535550 
 10438      5F482000 
 10439              	.LASF1087:
 10440 83ca 51756575 		.ascii	"QueueRegistryItem_t\000"
 10440      65526567 
 10440      69737472 
 10440      79497465 
 10440      6D5F7400 
 10441              	.LASF230:
 10442 83de 5F5F5341 		.ascii	"__SACCUM_EPSILON__ 0x1P-7HK\000"
 10442      4343554D 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 300


 10442      5F455053 
 10442      494C4F4E 
 10442      5F5F2030 
 10443              	.LASF1127:
 10444 83fa 76517565 		.ascii	"vQueueSetQueueNumber\000"
 10444      75655365 
 10444      74517565 
 10444      75654E75 
 10444      6D626572 
 10445              	.LASF797:
 10446 840f 504F5254 		.ascii	"PORTMACRO_H \000"
 10446      4D414352 
 10446      4F5F4820 
 10446      00
 10447              	.LASF836:
 10448 841c 494E434C 		.ascii	"INCLUDE_xTimerGetTimerDaemonTaskHandle 0\000"
 10448      5544455F 
 10448      7854696D 
 10448      65724765 
 10448      7454696D 
 10449              	.LASF82:
 10450 8445 5F5F5349 		.ascii	"__SIG_ATOMIC_MAX__ 2147483647\000"
 10450      475F4154 
 10450      4F4D4943 
 10450      5F4D4158 
 10450      5F5F2032 
 10451              	.LASF960:
 10452 8463 6C697374 		.ascii	"listSET_LIST_ITEM_OWNER(pxListItem,pxOwner) ( ( pxL"
 10452      5345545F 
 10452      4C495354 
 10452      5F495445 
 10452      4D5F4F57 
 10453 8496 69737449 		.ascii	"istItem )->pvOwner = ( void * ) ( pxOwner ) )\000"
 10453      74656D20 
 10453      292D3E70 
 10453      764F776E 
 10453      6572203D 
 10454              	.LASF59:
 10455 84c4 5F5F5549 		.ascii	"__UINT_FAST16_TYPE__ unsigned int\000"
 10455      4E545F46 
 10455      41535431 
 10455      365F5459 
 10455      50455F5F 
 10456              	.LASF295:
 10457 84e6 5F5F5548 		.ascii	"__UHA_IBIT__ 8\000"
 10457      415F4942 
 10457      49545F5F 
 10457      203800
 10458              	.LASF493:
 10459 84f5 5F5F6E65 		.ascii	"__need_wint_t \000"
 10459      65645F77 
 10459      696E745F 
 10459      742000
 10460              	.LASF240:
 10461 8504 5F5F4143 		.ascii	"__ACCUM_EPSILON__ 0x1P-15K\000"
 10461      43554D5F 
 10461      45505349 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 301


 10461      4C4F4E5F 
 10461      5F203078 
 10462              	.LASF255:
 10463 851f 5F5F554C 		.ascii	"__ULACCUM_EPSILON__ 0x1P-32ULK\000"
 10463      41434355 
 10463      4D5F4550 
 10463      53494C4F 
 10463      4E5F5F20 
 10464              	.LASF1013:
 10465 853e 78517565 		.ascii	"xQueueAltReceive(xQueue,pvBuffer,xTicksToWait) xQue"
 10465      7565416C 
 10465      74526563 
 10465      65697665 
 10465      28785175 
 10466 8571 7565416C 		.ascii	"ueAltGenericReceive( ( xQueue ), ( pvBuffer ), ( xT"
 10466      7447656E 
 10466      65726963 
 10466      52656365 
 10466      69766528 
 10467 85a4 69636B73 		.ascii	"icksToWait ), pdFALSE )\000"
 10467      546F5761 
 10467      69742029 
 10467      2C207064 
 10467      46414C53 
 10468              	.LASF152:
 10469 85bc 5F5F4C44 		.ascii	"__LDBL_DIG__ 15\000"
 10469      424C5F44 
 10469      49475F5F 
 10469      20313500 
 10470              	.LASF934:
 10471 85cc 636F6E66 		.ascii	"configUSE_STATS_FORMATTING_FUNCTIONS 0\000"
 10471      69675553 
 10471      455F5354 
 10471      4154535F 
 10471      464F524D 
 10472              	.LASF609:
 10473 85f3 5F41746F 		.ascii	"_Atomic(T) struct { T volatile __val; }\000"
 10473      6D696328 
 10473      54292073 
 10473      74727563 
 10473      74207B20 
 10474              	.LASF75:
 10475 861b 5F5F5749 		.ascii	"__WINT_MIN__ 0U\000"
 10475      4E545F4D 
 10475      494E5F5F 
 10475      20305500 
 10476              	.LASF1021:
 10477 862b 71756575 		.ascii	"queueQUEUE_IS_MUTEX NULL\000"
 10477      65515545 
 10477      55455F49 
 10477      535F4D55 
 10477      54455820 
 10478              	.LASF177:
 10479 8644 5F5F4445 		.ascii	"__DEC64_EPSILON__ 1E-15DD\000"
 10479      4336345F 
 10479      45505349 
 10479      4C4F4E5F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 302


 10479      5F203145 
 10480              	.LASF840:
 10481 865e 636F6E66 		.ascii	"configUSE_APPLICATION_TASK_TAG 0\000"
 10481      69675553 
 10481      455F4150 
 10481      504C4943 
 10481      4154494F 
 10482              	.LASF713:
 10483 867f 55494E54 		.ascii	"UINT_FAST16_MAX __UINT_FAST16_MAX__\000"
 10483      5F464153 
 10483      5431365F 
 10483      4D415820 
 10483      5F5F5549 
 10484              	.LASF557:
 10485 86a3 5F5F6C6F 		.ascii	"__long_double_t long double\000"
 10485      6E675F64 
 10485      6F75626C 
 10485      655F7420 
 10485      6C6F6E67 
 10486              	.LASF47:
 10487 86bf 5F5F494E 		.ascii	"__INT_LEAST16_TYPE__ short int\000"
 10487      545F4C45 
 10487      41535431 
 10487      365F5459 
 10487      50455F5F 
 10488              	.LASF857:
 10489 86de 74726163 		.ascii	"traceINCREASE_TICK_COUNT(x) \000"
 10489      65494E43 
 10489      52454153 
 10489      455F5449 
 10489      434B5F43 
 10490              	.LASF748:
 10491 86fb 636F6E66 		.ascii	"configCPU_CLOCK_HZ ( ( unsigned long )120000000ul )"
 10491      69674350 
 10491      555F434C 
 10491      4F434B5F 
 10491      485A2028 
 10492 872e 00       		.ascii	"\000"
 10493              	.LASF144:
 10494 872f 5F5F4442 		.ascii	"__DBL_MAX__ ((double)1.7976931348623157e+308L)\000"
 10494      4C5F4D41 
 10494      585F5F20 
 10494      2828646F 
 10494      75626C65 
 10495              	.LASF389:
 10496 875e 5F505452 		.ascii	"_PTR void *\000"
 10496      20766F69 
 10496      64202A00 
 10497              	.LASF216:
 10498 876a 5F5F4C4C 		.ascii	"__LLFRACT_FBIT__ 63\000"
 10498      46524143 
 10498      545F4642 
 10498      49545F5F 
 10498      20363300 
 10499              	.LASF431:
 10500 877e 5F5F7763 		.ascii	"__wchar_t__ \000"
 10500      6861725F 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 303


 10500      745F5F20 
 10500      00
 10501              	.LASF338:
 10502 878b 5F5F7468 		.ascii	"__thumb__ 1\000"
 10502      756D625F 
 10502      5F203100 
 10503              	.LASF986:
 10504 8797 7461736B 		.ascii	"taskSCHEDULER_NOT_STARTED ( ( BaseT_t ) 1 )\000"
 10504      53434845 
 10504      44554C45 
 10504      525F4E4F 
 10504      545F5354 
 10505              	.LASF1018:
 10506 87c3 71756575 		.ascii	"queueLOCKED_UNMODIFIED ( ( BaseT_t ) 0 )\000"
 10506      654C4F43 
 10506      4B45445F 
 10506      554E4D4F 
 10506      44494649 
 10507              	.LASF712:
 10508 87ec 494E545F 		.ascii	"INT_FAST16_MAX __INT_FAST16_MAX__\000"
 10508      46415354 
 10508      31365F4D 
 10508      4158205F 
 10508      5F494E54 
 10509              	.LASF341:
 10510 880e 5F5F4152 		.ascii	"__ARMEL__ 1\000"
 10510      4D454C5F 
 10510      5F203100 
 10511              	.LASF482:
 10512 881a 5F5F6C6F 		.ascii	"__lock_init_recursive(lock) (_CAST_VOID 0)\000"
 10512      636B5F69 
 10512      6E69745F 
 10512      72656375 
 10512      72736976 
 10513              	.LASF630:
 10514 8845 5F5F666F 		.ascii	"__format_arg(fmtarg) __attribute__((__format_arg__ "
 10514      726D6174 
 10514      5F617267 
 10514      28666D74 
 10514      61726729 
 10515 8878 28666D74 		.ascii	"(fmtarg)))\000"
 10515      61726729 
 10515      292900
 10516              	.LASF608:
 10517 8883 5F416C69 		.ascii	"_Alignof(x) __alignof(x)\000"
 10517      676E6F66 
 10517      28782920 
 10517      5F5F616C 
 10517      69676E6F 
 10518              	.LASF932:
 10519 889c 636F6E66 		.ascii	"configINCLUDE_APPLICATION_DEFINED_PRIVILEGED_FUNCTI"
 10519      6967494E 
 10519      434C5544 
 10519      455F4150 
 10519      504C4943 
 10520 88cf 4F4E5320 		.ascii	"ONS 0\000"
 10520      3000
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 304


 10521              	.LASF268:
 10522 88d5 5F5F4851 		.ascii	"__HQ_FBIT__ 15\000"
 10522      5F464249 
 10522      545F5F20 
 10522      313500
 10523              	.LASF1078:
 10524 88e4 7854784C 		.ascii	"xTxLock\000"
 10524      6F636B00 
 10525              	.LASF968:
 10526 88ec 6C697374 		.ascii	"listLIST_IS_EMPTY(pxList) ( ( BaseT_t ) ( ( pxList "
 10526      4C495354 
 10526      5F49535F 
 10526      454D5054 
 10526      59287078 
 10527 891f 292D3E75 		.ascii	")->uxNumberOfItems == ( UBaseT_t ) 0 ) )\000"
 10527      784E756D 
 10527      6265724F 
 10527      66497465 
 10527      6D73203D 
 10528              	.LASF907:
 10529 8948 74726163 		.ascii	"traceEVENT_GROUP_SYNC_BLOCK(xEventGroup,uxBitsToSet"
 10529      65455645 
 10529      4E545F47 
 10529      524F5550 
 10529      5F53594E 
 10530 897b 2C757842 		.ascii	",uxBitsToWaitFor) \000"
 10530      69747354 
 10530      6F576169 
 10530      74466F72 
 10530      292000
 10531              	.LASF304:
 10532 898e 5F5F474E 		.ascii	"__GNUC_GNU_INLINE__ 1\000"
 10532      55435F47 
 10532      4E555F49 
 10532      4E4C494E 
 10532      455F5F20 
 10533              	.LASF544:
 10534 89a4 5F524545 		.ascii	"_REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_"
 10534      4E545F53 
 10534      49474E41 
 10534      4C5F4255 
 10534      46287074 
 10535 89d7 62756629 		.ascii	"buf)\000"
 10535      00
 10536              	.LASF1004:
 10537 89dc 78517565 		.ascii	"xQueueOverwrite(xQueue,pvItemToQueue) xQueueGeneric"
 10537      75654F76 
 10537      65727772 
 10537      69746528 
 10537      78517565 
 10538 8a0f 53656E64 		.ascii	"Send( ( xQueue ), ( pvItemToQueue ), 0, queueOVERWR"
 10538      28202820 
 10538      78517565 
 10538      75652029 
 10538      2C202820 
 10539 8a42 49544520 		.ascii	"ITE )\000"
 10539      2900
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 305


 10540              	.LASF1115:
 10541 8a48 78517565 		.ascii	"xQueueGenericReceive\000"
 10541      75654765 
 10541      6E657269 
 10541      63526563 
 10541      65697665 
 10542              	.LASF1094:
 10543 8a5d 70784E65 		.ascii	"pxNewQueue\000"
 10543      77517565 
 10543      756500
 10544              	.LASF670:
 10545 8a68 5F5F696E 		.ascii	"__int_least8_t_defined 1\000"
 10545      745F6C65 
 10545      61737438 
 10545      5F745F64 
 10545      6566696E 
 10546              	.LASF508:
 10547 8a81 5F52414E 		.ascii	"_RAND48_ADD (0x000b)\000"
 10547      4434385F 
 10547      41444420 
 10547      28307830 
 10547      30306229 
 10548              	.LASF656:
 10549 8a96 45584954 		.ascii	"EXIT_FAILURE 1\000"
 10549      5F464149 
 10549      4C555245 
 10549      203100
 10550              	.LASF330:
 10551 8aa5 5F5F4152 		.ascii	"__ARM_FEATURE_LDREX 7\000"
 10551      4D5F4645 
 10551      41545552 
 10551      455F4C44 
 10551      52455820 
 10552              	.LASF664:
 10553 8abb 5F535444 		.ascii	"_STDINT_H \000"
 10553      494E545F 
 10553      482000
 10554              	.LASF417:
 10555 8ac6 5F545F53 		.ascii	"_T_SIZE_ \000"
 10555      495A455F 
 10555      2000
 10556              	.LASF999:
 10557 8ad0 71756575 		.ascii	"queueQUEUE_TYPE_RECURSIVE_MUTEX ( ( uint8_t ) 4U )\000"
 10557      65515545 
 10557      55455F54 
 10557      5950455F 
 10557      52454355 
 10558              	.LASF794:
 10559 8b03 65727251 		.ascii	"errQUEUE_BLOCKED ( -4 )\000"
 10559      55455545 
 10559      5F424C4F 
 10559      434B4544 
 10559      2028202D 
 10560              	.LASF220:
 10561 8b1b 5F5F4C4C 		.ascii	"__LLFRACT_EPSILON__ 0x1P-63LLR\000"
 10561      46524143 
 10561      545F4550 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 306


 10561      53494C4F 
 10561      4E5F5F20 
 10562              	.LASF790:
 10563 8b3a 70644641 		.ascii	"pdFAIL ( pdFALSE )\000"
 10563      494C2028 
 10563      20706446 
 10563      414C5345 
 10563      202900
 10564              	.LASF955:
 10565 8b4d 784C6973 		.ascii	"xListItem ListItem_t\000"
 10565      74497465 
 10565      6D204C69 
 10565      73744974 
 10565      656D5F74 
 10566              	.LASF189:
 10567 8b62 5F5F5346 		.ascii	"__SFRACT_MAX__ 0X7FP-7HR\000"
 10567      52414354 
 10567      5F4D4158 
 10567      5F5F2030 
 10567      58374650 
 10568              	.LASF1081:
 10569 8b7b 78515545 		.ascii	"xQUEUE\000"
 10569      554500
 10570              	.LASF34:
 10571 8b82 5F5F5549 		.ascii	"__UINTMAX_TYPE__ long long unsigned int\000"
 10571      4E544D41 
 10571      585F5459 
 10571      50455F5F 
 10571      206C6F6E 
 10572              	.LASF782:
 10573 8baa 636F6E66 		.ascii	"configKERNEL_INTERRUPT_PRIORITY ( 31 << (8 - config"
 10573      69674B45 
 10573      524E454C 
 10573      5F494E54 
 10573      45525255 
 10574 8bdd 5052494F 		.ascii	"PRIO_BITS) )\000"
 10574      5F424954 
 10574      53292029 
 10574      00
 10575              	.LASF95:
 10576 8bea 5F5F494E 		.ascii	"__INT16_C(c) c\000"
 10576      5431365F 
 10576      43286329 
 10576      206300
 10577              	.LASF1104:
 10578 8bf9 75784D61 		.ascii	"uxMaxCount\000"
 10578      78436F75 
 10578      6E7400
 10579              	.LASF947:
 10580 8c04 78546173 		.ascii	"xTaskParameters TaskParameters_t\000"
 10580      6B506172 
 10580      616D6574 
 10580      65727320 
 10580      5461736B 
 10581              	.LASF390:
 10582 8c25 5F414E44 		.ascii	"_AND ,\000"
 10582      202C00
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 307


 10583              	.LASF827:
 10584 8c2c 706F7274 		.ascii	"portASSERT_IF_INTERRUPT_PRIORITY_INVALID() vPortVal"
 10584      41535345 
 10584      52545F49 
 10584      465F494E 
 10584      54455252 
 10585 8c5f 69646174 		.ascii	"idateInterruptPriority()\000"
 10585      65496E74 
 10585      65727275 
 10585      70745072 
 10585      696F7269 
 10586              	.LASF632:
 10587 8c78 5F5F7374 		.ascii	"__strftimelike(fmtarg,firstvararg) __attribute__((_"
 10587      72667469 
 10587      6D656C69 
 10587      6B652866 
 10587      6D746172 
 10588 8cab 5F666F72 		.ascii	"_format__ (__strftime__, fmtarg, firstvararg)))\000"
 10588      6D61745F 
 10588      5F20285F 
 10588      5F737472 
 10588      6674696D 
 10589              	.LASF499:
 10590 8cdb 5F415445 		.ascii	"_ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL},"
 10590      5849545F 
 10590      494E4954 
 10590      207B5F4E 
 10590      554C4C2C 
 10591 8d0e 20302C20 		.ascii	" 0, 0}}\000"
 10591      307D7D00 
 10592              	.LASF779:
 10593 8d16 636F6E66 		.ascii	"configNET_MASK2 255\000"
 10593      69674E45 
 10593      545F4D41 
 10593      534B3220 
 10593      32353500 
 10594              	.LASF646:
 10595 8d2a 5F5F4445 		.ascii	"__DEQUALIFY(type,var) ((type)(__uintptr_t)(const vo"
 10595      5155414C 
 10595      49465928 
 10595      74797065 
 10595      2C766172 
 10596 8d5d 6C617469 		.ascii	"latile void *)(var))\000"
 10596      6C652076 
 10596      6F696420 
 10596      2A292876 
 10596      61722929 
 10597              	.LASF753:
 10598 8d72 636F6E66 		.ascii	"configUSE_TRACE_FACILITY 1\000"
 10598      69675553 
 10598      455F5452 
 10598      4143455F 
 10598      46414349 
 10599              	.LASF10:
 10600 8d8d 5F5F4154 		.ascii	"__ATOMIC_ACQ_REL 4\000"
 10600      4F4D4943 
 10600      5F414351 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 308


 10600      5F52454C 
 10600      203400
 10601              	.LASF5:
 10602 8da0 5F5F5645 		.ascii	"__VERSION__ \"4.9.3 20150303 (release) [ARM/embedde"
 10602      5253494F 
 10602      4E5F5F20 
 10602      22342E39 
 10602      2E332032 
 10603 8dd2 642D345F 		.ascii	"d-4_9-branch revision 221220]\"\000"
 10603      392D6272 
 10603      616E6368 
 10603      20726576 
 10603      6973696F 
 10604              	.LASF269:
 10605 8df1 5F5F4851 		.ascii	"__HQ_IBIT__ 0\000"
 10605      5F494249 
 10605      545F5F20 
 10605      3000
 10606              	.LASF604:
 10607 8dff 5F5F7061 		.ascii	"__packed __attribute__((__packed__))\000"
 10607      636B6564 
 10607      205F5F61 
 10607      74747269 
 10607      62757465 
 10608              	.LASF140:
 10609 8e24 5F5F4442 		.ascii	"__DBL_MIN_10_EXP__ (-307)\000"
 10609      4C5F4D49 
 10609      4E5F3130 
 10609      5F455850 
 10609      5F5F2028 
 10610              	.LASF360:
 10611 8e3e 5F57414E 		.ascii	"_WANT_IO_LONG_LONG 1\000"
 10611      545F494F 
 10611      5F4C4F4E 
 10611      475F4C4F 
 10611      4E472031 
 10612              	.LASF1141:
 10613 8e53 443A5C77 		.ascii	"D:\\work\\Embedded\\aoaa\000"
 10613      6F726B5C 
 10613      456D6265 
 10613      64646564 
 10613      5C616F61 
 10614              	.LASF478:
 10615 8e69 5F5F5359 		.ascii	"__SYS_LOCK_H__ \000"
 10615      535F4C4F 
 10615      434B5F48 
 10615      5F5F2000 
 10616              	.LASF883:
 10617 8e79 74726163 		.ascii	"traceQUEUE_SEND_FROM_ISR_FAILED(pxQueue) \000"
 10617      65515545 
 10617      55455F53 
 10617      454E445F 
 10617      46524F4D 
 10618              	.LASF510:
 10619 8ea3 5F524545 		.ascii	"_REENT_ASCTIME_SIZE 26\000"
 10619      4E545F41 
 10619      53435449 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 309


 10619      4D455F53 
 10619      495A4520 
 10620              	.LASF114:
 10621 8eba 5F5F5549 		.ascii	"__UINT_FAST32_MAX__ 4294967295U\000"
 10621      4E545F46 
 10621      41535433 
 10621      325F4D41 
 10621      585F5F20 
 10622              	.LASF100:
 10623 8eda 5F5F5549 		.ascii	"__UINT_LEAST8_MAX__ 255\000"
 10623      4E545F4C 
 10623      45415354 
 10623      385F4D41 
 10623      585F5F20 
 10624              	.LASF727:
 10625 8ef2 50545244 		.ascii	"PTRDIFF_MIN (-PTRDIFF_MAX - 1)\000"
 10625      4946465F 
 10625      4D494E20 
 10625      282D5054 
 10625      52444946 
 10626              	.LASF835:
 10627 8f11 494E434C 		.ascii	"INCLUDE_xTaskGetIdleTaskHandle 0\000"
 10627      5544455F 
 10627      78546173 
 10627      6B476574 
 10627      49646C65 
 10628              	.LASF1047:
 10629 8f32 78497465 		.ascii	"xItemValue\000"
 10629      6D56616C 
 10629      756500
 10630              	.LASF137:
 10631 8f3d 5F5F4442 		.ascii	"__DBL_MANT_DIG__ 53\000"
 10631      4C5F4D41 
 10631      4E545F44 
 10631      49475F5F 
 10631      20353300 
 10632              	.LASF212:
 10633 8f51 5F5F554C 		.ascii	"__ULFRACT_IBIT__ 0\000"
 10633      46524143 
 10633      545F4942 
 10633      49545F5F 
 10633      203000
 10634              	.LASF350:
 10635 8f64 5F5F4152 		.ascii	"__ARM_EABI__ 1\000"
 10635      4D5F4541 
 10635      42495F5F 
 10635      203100
 10636              	.LASF49:
 10637 8f73 5F5F494E 		.ascii	"__INT_LEAST64_TYPE__ long long int\000"
 10637      545F4C45 
 10637      41535436 
 10637      345F5459 
 10637      50455F5F 
 10638              	.LASF226:
 10639 8f96 5F5F5341 		.ascii	"__SACCUM_FBIT__ 7\000"
 10639      4343554D 
 10639      5F464249 
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 310


 10639      545F5F20 
 10639      3700
 10640              	.LASF672:
 10641 8fa8 5F5F696E 		.ascii	"__int_least16_t_defined 1\000"
 10641      745F6C65 
 10641      61737431 
 10641      365F745F 
 10641      64656669 
 10642              	.LASF845:
 10643 8fc2 494E434C 		.ascii	"INCLUDE_xEventGroupSetBitFromISR 0\000"
 10643      5544455F 
 10643      78457665 
 10643      6E744772 
 10643      6F757053 
 10644              	.LASF1125:
 10645 8fe5 75785175 		.ascii	"uxQueueGetQueueNumber\000"
 10645      65756547 
 10645      65745175 
 10645      6575654E 
 10645      756D6265 
 10646              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 311


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
                            *COM*:00000050 xQueueRegistry
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:54     .text.xQueueGenericReset:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:59     .text.xQueueGenericReset:00000000 xQueueGenericReset
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:178    .text.xQueueGenericCreate:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:183    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:282    .text.xQueueCreateMutex:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:287    .text.xQueueCreateMutex:00000000 xQueueCreateMutex
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:641    .text.xQueueGenericSend:00000000 xQueueGenericSend
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:391    .text.xQueueGiveMutexRecursive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:396    .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:472    .text.xQueueTakeMutexRecursive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:477    .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1077   .text.xQueueGenericReceive:00000000 xQueueGenericReceive
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:556    .text.xQueueCreateCountingSemaphore:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:561    .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:636    .text.xQueueGenericSend:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1926   .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2371   .text.prvIsQueueFull:00000000 prvIsQueueFull
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2145   .text.prvUnlockQueue:00000000 prvUnlockQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:890    .text.xQueueGenericSendFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:895    .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1072   .text.xQueueGenericReceive:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2078   .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2263   .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1344   .text.xQueueReceiveFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1349   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1485   .text.xQueuePeekFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1490   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1592   .text.uxQueueMessagesWaiting:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1597   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1643   .text.uxQueueSpacesAvailable:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1648   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1700   .text.uxQueueMessagesWaitingFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1705   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1747   .text.vQueueDelete:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1752   .text.vQueueDelete:00000000 vQueueDelete
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2559   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1807   .text.uxQueueGetQueueNumber:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1812   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1845   .text.vQueueSetQueueNumber:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1850   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1884   .text.ucQueueGetQueueType:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1889   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:1922   .text.prvCopyDataToQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2074   .text.prvCopyDataFromQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2141   .text.prvUnlockQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2259   .text.prvIsQueueEmpty:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2310   .text.xQueueIsQueueEmptyFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2315   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2367   .text.prvIsQueueFull:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2420   .text.xQueueIsQueueFullFromISR:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2425   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2479   .text.vQueueAddToRegistry:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2484   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2549   .text.vQueueAddToRegistry:0000004c $d
ARM GAS  C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s 			page 312


C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2554   .text.vQueueUnregisterQueue:00000000 $t
C:\Users\COSMIN~1.MAR\AppData\Local\Temp\cc5hxLYL.s:2619   .text.vQueueUnregisterQueue:00000040 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.1834ce015d70b8127b1e5f7bc96e3d8e
                           .group:00000000 wm4.newlib.h.8.f2807fe490bc07755df529420a1a6ce0
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.84af8eb8cd468d25cc5f45f5eb13ec51
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.aa65fb7281d578229bbad41b91862635
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.fbe724f4232069283dea9c3aea4135c7
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.string.h.8.c4b8571ce60dff2817f43fec8b86aecd
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4._intsup.h.10.ca9f32a61b410c270a48d1161ca2c217
                           .group:00000000 wm4.stdint.h.22.f4a337c398d8b6d821a97202448bc0d0
                           .group:00000000 wm4.FreeRTOSConfig.h.68.2ab20dd79e2b20d1533c58a8a3e000e8
                           .group:00000000 wm4.projdefs.h.67.bdf04e6773dab3e08b198cc871e66066
                           .group:00000000 wm4.portmacro.h.68.2830a42e60cbcb2a6127da4328fb0946
                           .group:00000000 wm4.portable.h.325.c86556faa756d80c2369d5d98b7175f5
                           .group:00000000 wm4.mpu_wrappers.h.67.4bcfd12ce15e5313ce3efd77400f8168
                           .group:00000000 wm4.FreeRTOS.h.171.22a53ffdca3c4c1eea7d67a70b887d5e
                           .group:00000000 wm4.list.h.96.fb0e76e4166703a5d0cad365514a3370
                           .group:00000000 wm4.task.h.84.e110bc08aaffa67ce542955b890201b4
                           .group:00000000 wm4.queue.h.68.f6d7ecde67b4b2521e545ceea1546f94

UNDEFINED SYMBOLS
ulPortSetInterruptMask
vPortEnterCritical
xTaskRemoveFromEventList
vPortYield
vListInitialise
vPortExitCritical
pvPortMalloc
vPortFree
xTaskGetCurrentTaskHandle
vTaskSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
vPortValidateInterruptPriority
vPortClearInterruptMask
pvTaskIncrementMutexHeldCount
vTaskPriorityInherit
xTaskPriorityDisinherit
memcpy
vTaskMissedYield
